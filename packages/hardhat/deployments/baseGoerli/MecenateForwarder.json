{
  "address": "0xefFa99E70E99DA970687Cb7e8B83bDCAAB12660A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_encryptedVaultId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9cd9f0ab1ea9461a67d93cdc10cabc387523572323186cb52eeffd9e97947a48",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0xefFa99E70E99DA970687Cb7e8B83bDCAAB12660A",
    "transactionIndex": 1,
    "gasUsed": "395206",
    "logsBloom": "0x
    "blockHash": "0xf98cf47b6cbd06d65e9ba6bc4d29f3b3a5a40ba84b0042783f74e4d702f669e9",
    "transactionHash": "0x9cd9f0ab1ea9461a67d93cdc10cabc387523572323186cb52eeffd9e97947a48",
    "logs": [],
    "blockNumber": 10577043,
    "cumulativeGasUsed": "442059",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000000000000000000000000000"
  ],
  "numDeployments": 3,
  "solcInputHash": "abe1b51c8b82362d524c8efc9e8c0e34",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateForwarder.sol\":\"MecenateForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IMecenateVault {\\r\\n    function depositToken(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bytes32 encryptedVaultId\\r\\n    ) external;\\r\\n\\r\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\r\\n}\\r\\n\\r\\ninterface IMecenateETHForwarderFactory {\\r\\n    function getVault() external view returns (address);\\r\\n}\\r\\n\\r\\ncontract MecenateForwarder {\\r\\n    bytes32 private encryptedVaultId;\\r\\n    address public factory;\\r\\n\\r\\n    constructor(bytes32 _encryptedVaultId) {\\r\\n        encryptedVaultId = _encryptedVaultId;\\r\\n        factory = msg.sender;\\r\\n    }\\r\\n\\r\\n    function depositToken(address token, uint256 amount) external {\\r\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\r\\n\\r\\n        // Approva il token\\r\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\r\\n\\r\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\r\\n\\r\\n        // Esegui il deposito in ETH\\r\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\r\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\r\\n        );\\r\\n        require(success, \\\"Deposit failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0327c5978787d958406a51119d1b9ccbc7c369bd067ff89363af68b99f4aac02\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461006357601f61064738819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b031916331790556040516105c8908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea2646970667358221220399f3291ae5e3d245f23567dc7cb246f73957c1781a1fa7b293a28fb9e3a5a1764736f6c63430008130033",
  "deployedBytecode": "0x608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea2646970667358221220399f3291ae5e3d245f23567dc7cb246f73957c1781a1fa7b293a28fb9e3a5a1764736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4840,
        "contract": "contracts/MecenateForwarder.sol:MecenateForwarder",
        "label": "encryptedVaultId",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 4842,
        "contract": "contracts/MecenateForwarder.sol:MecenateForwarder",
        "label": "factory",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      }
    }
  }
}