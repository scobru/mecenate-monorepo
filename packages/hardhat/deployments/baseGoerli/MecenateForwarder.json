{
  "address": "0x0027Ae655c49b5B3366dFDA94ea63Bb894411E1d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_encryptedVaultId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encryptedVaultId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb3d3ef0e0d255000f19592456f4f0681cbc64061bc07d34e392dbea16f58cb09",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0x0027Ae655c49b5B3366dFDA94ea63Bb894411E1d",
    "transactionIndex": 1,
    "gasUsed": "411626",
    "logsBloom": "0x
    "blockHash": "0xa5cd5d685c0ef3675662c58c765dd3aa8d350db64c5f05a9b759b8b9d2f94aca",
    "transactionHash": "0xb3d3ef0e0d255000f19592456f4f0681cbc64061bc07d34e392dbea16f58cb09",
    "logs": [],
    "blockNumber": 10677351,
    "cumulativeGasUsed": "458479",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x9A27306175abB6a0799ff7B7A0E02d1987C16046"
  ],
  "numDeployments": 8,
  "solcInputHash": "799b0715dda30dabba2dd8e81ef54a0a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encryptedVaultId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateForwarder.sol\":\"MecenateForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 public encryptedVaultId;\\n\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId, address _factory) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = _factory;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x7d7938321e2c02ceef6bd71120e7407497721bca9236b6bab419bbc1af3da1af\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461007e57601f6106aa38819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b031916919091179055604051610610908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610539565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b6102028183610539565b8101906105a9565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461050157508063338b5dea146102a35763c45a01550361001357823461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b5091346104fd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fd5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036104f95760243590806001541684519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104d05788936104da575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104d0578891610496575b501561043a5750908591825495813b156104365783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af1801561042c576103e8578380f35b67ffffffffffffffff83116104005750523880808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104c9575b6104ad8183610539565b810103126104c5575180151581036104c55738610388565b8780fd5b503d6104a3565b86513d8a823e3d90fd5b6104f2919350823d8411610211576102028183610539565b913861033d565b8480fd5b8280fd5b90503461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602091548152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b908160209103126105d5575173ffffffffffffffffffffffffffffffffffffffff811681036105d55790565b600080fdfea26469706673582212205395f781e6950dce3444b1fcd01bfbcfebb5090977d46cdb614f9b15cb963a7e64736f6c63430008130033",
  "deployedBytecode": "0x608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610539565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b6102028183610539565b8101906105a9565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461050157508063338b5dea146102a35763c45a01550361001357823461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b5091346104fd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fd5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036104f95760243590806001541684519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104d05788936104da575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104d0578891610496575b501561043a5750908591825495813b156104365783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af1801561042c576103e8578380f35b67ffffffffffffffff83116104005750523880808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104c9575b6104ad8183610539565b810103126104c5575180151581036104c55738610388565b8780fd5b503d6104a3565b86513d8a823e3d90fd5b6104f2919350823d8411610211576102028183610539565b913861033d565b8480fd5b8280fd5b90503461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602091548152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b908160209103126105d5575173ffffffffffffffffffffffffffffffffffffffff811681036105d55790565b600080fdfea26469706673582212205395f781e6950dce3444b1fcd01bfbcfebb5090977d46cdb614f9b15cb963a7e64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 633,
        "contract": "contracts/MecenateForwarder.sol:MecenateForwarder",
        "label": "encryptedVaultId",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 635,
        "contract": "contracts/MecenateForwarder.sol:MecenateForwarder",
        "label": "factory",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      }
    }
  }
}