{
  "address": "0x735AceD9781e2C259Cd04d7135F00AcC05dB088f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "externalContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        }
      ],
      "name": "proxyCallAndReturnAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "result",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8d6d724d936216f15345dc84c24e60819ed600b799198ddb1ba94d1f21687121",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0x735AceD9781e2C259Cd04d7135F00AcC05dB088f",
    "transactionIndex": 1,
    "gasUsed": "210700",
    "logsBloom": "0x
    "blockHash": "0x4782e2018d0e21bef4ad4e057cb27dccb7e53358d4f1c25f386da10f46d31e93",
    "transactionHash": "0x8d6d724d936216f15345dc84c24e60819ed600b799198ddb1ba94d1f21687121",
    "logs": [],
    "blockNumber": 11923957,
    "cumulativeGasUsed": "261141",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d626d7b77fafbd5854c421f751c5af18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"externalContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"proxyCallAndReturnAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used so that the from address of the calling contract does not have any special permissions (e.g. ERC-20 transfer). Other return types and call structures may be added in the future.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Forwards arbitrary calls to an external contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"DO NOT approve this contract to transfer any ERC-20 or ERC-721, or grant any other permissions for another contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/ExternalProxyCall.sol\":\"ExternalProxyCall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/helpers/ExternalProxyCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\n\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\\\";\\r\\nimport \\\"../interfaces/IProxyCall.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Forwards arbitrary calls to an external contract.\\r\\n * @notice DO NOT approve this contract to transfer any ERC-20 or ERC-721,\\r\\n * or grant any other permissions for another contract.\\r\\n * @dev This is used so that the from address of the calling contract does not have\\r\\n * any special permissions (e.g. ERC-20 transfer).\\r\\n * Other return types and call structures may be added in the future.\\r\\n */\\r\\ncontract ExternalProxyCall is IProxyCall {\\r\\n    using AddressUpgradeable for address;\\r\\n\\r\\n    function proxyCallAndReturnAddress(\\r\\n        address externalContract,\\r\\n        bytes memory callData\\r\\n    ) external override returns (address payable result) {\\r\\n        bytes memory returnData = externalContract.functionCall(callData);\\r\\n\\r\\n        // Skip the length at the start of the bytes array and return the data, casted to an address\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            result := mload(add(returnData, 32))\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1bfd700e1b4378bed58719885be82ea4479198c9f836b0b08392bf51d5760e9a\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/interfaces/IProxyCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface IProxyCall {\\r\\n    function proxyCallAndReturnAddress(\\r\\n        address externalContract,\\r\\n        bytes memory callData\\r\\n    ) external returns (address payable result);\\r\\n}\\r\\n\",\"keccak256\":\"0xb8d6e655bfbfae0148c0614530f2faf52a5401cd75b910fdc8f142f6c1cc853b\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60808060405234610016576102d9908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63a1453b0e1461002857600080fd5b346100db5760403660031901126100db576004356001600160a01b03811681036100d7576024359067ffffffffffffffff82116100d357366023830112156100d357816004013561008061007b8261011f565b6100f4565b9281845236602483830101116100cf57916100cb9460208381969460246100af9701838701378401015261013b565b01516040516001600160a01b0390911681529081906020820190565b0390f35b8480fd5b8280fd5b5080fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761011a57604052565b6100de565b67ffffffffffffffff811161011a57601f01601f191660200190565b60405190604082019282841067ffffffffffffffff85111761011a57600080916101ba95604052601e85527f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000602086015260208151910182855af13d156101bd573d916101aa61007b8461011f565b9283523d6000602085013e610211565b90565b606091610211565b156101cc57565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919290156102315750815115610225575090565b6101ba903b15156101c5565b8251909150156102445750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061028a575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061026756fea26469706673582212205166b4cf3ba78e656933ebd9a0d05f07b68447521405f99c896a591fb551a22464736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b6000803560e01c63a1453b0e1461002857600080fd5b346100db5760403660031901126100db576004356001600160a01b03811681036100d7576024359067ffffffffffffffff82116100d357366023830112156100d357816004013561008061007b8261011f565b6100f4565b9281845236602483830101116100cf57916100cb9460208381969460246100af9701838701378401015261013b565b01516040516001600160a01b0390911681529081906020820190565b0390f35b8480fd5b8280fd5b5080fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761011a57604052565b6100de565b67ffffffffffffffff811161011a57601f01601f191660200190565b60405190604082019282841067ffffffffffffffff85111761011a57600080916101ba95604052601e85527f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000602086015260208151910182855af13d156101bd573d916101aa61007b8461011f565b9283523d6000602085013e610211565b90565b606091610211565b156101cc57565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919290156102315750815115610225575090565b6101ba903b15156101c5565b8251909150156102445750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061028a575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061026756fea26469706673582212205166b4cf3ba78e656933ebd9a0d05f07b68447521405f99c896a591fb551a22464736f6c63430008130033",
  "devdoc": {
    "details": "This is used so that the from address of the calling contract does not have any special permissions (e.g. ERC-20 transfer). Other return types and call structures may be added in the future.",
    "kind": "dev",
    "methods": {},
    "title": "Forwards arbitrary calls to an external contract.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "DO NOT approve this contract to transfer any ERC-20 or ERC-721, or grant any other permissions for another contract.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}