{
  "address": "0x3C04d0efB13cEFA36cC8BeE04f2f00Ed8F66De58",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "encryptedVaultId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultContract",
          "type": "address"
        }
      ],
      "name": "ForwarderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "name": "changeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_encryptedVaultId",
          "type": "bytes32"
        }
      ],
      "name": "createforwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "forwardersMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_user",
          "type": "bytes32"
        }
      ],
      "name": "getforwarders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mecenateVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1e16bfda3665722ec990bfcaededdc64e9d85b3e2cbf1969e9ec0d4315a29ad1",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0x3C04d0efB13cEFA36cC8BeE04f2f00Ed8F66De58",
    "transactionIndex": 2,
    "gasUsed": "615476",
    "logsBloom": "0x
    "blockHash": "0x6e82ce762ee32a6c655ebb11af36902600f8c96a01dd0968297c543f5551a081",
    "transactionHash": "0x1e16bfda3665722ec990bfcaededdc64e9d85b3e2cbf1969e9ec0d4315a29ad1",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 10791878,
        "transactionHash": "0x1e16bfda3665722ec990bfcaededdc64e9d85b3e2cbf1969e9ec0d4315a29ad1",
        "address": "0x3C04d0efB13cEFA36cC8BeE04f2f00Ed8F66De58",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008aa5f726d9f868a21a8bd748e2f1e43ba31eb670"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x6e82ce762ee32a6c655ebb11af36902600f8c96a01dd0968297c543f5551a081"
      }
    ],
    "blockNumber": 10791878,
    "cumulativeGasUsed": "712235",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd5c945D42b76890A66B68ae220e5F07a9F1892EE"
  ],
  "numDeployments": 6,
  "solcInputHash": "f55bf99d73b66c19475e56e5f20b9a14",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultContract\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"createforwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"forwardersMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_user\",\"type\":\"bytes32\"}],\"name\":\"getforwarders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/MecenateForwarderFactory.sol\":\"MecenateForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 public encryptedVaultId;\\n\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId, address _factory) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = _factory;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x7d7938321e2c02ceef6bd71120e7407497721bca9236b6bab419bbc1af3da1af\",\"license\":\"MIT\"},\"contracts/factories/MecenateForwarderFactory.sol\":{\"content\":\"import \\\"../MecenateForwarder.sol\\\";\\n\\n// import Ownable\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract MecenateForwarderFactory is Ownable {\\n    mapping(bytes32 => address) public forwardersMapping;\\n\\n    address public mecenateVault;\\n\\n    constructor(address _mecenateVault) {\\n        mecenateVault = _mecenateVault;\\n    }\\n\\n    function getVault() public view returns (address) {\\n        return mecenateVault;\\n    }\\n\\n    function changeVault(address _mecenateVault) public onlyOwner {\\n        require(\\n            msg.sender == _mecenateVault,\\n            \\\"Only the factory can change the factory\\\"\\n        );\\n        mecenateVault = _mecenateVault;\\n    }\\n\\n    event ForwarderCreated(\\n        address indexed forwarder,\\n        bytes32 encryptedVaultId,\\n        address vaultContract\\n    );\\n\\n    function createforwarder(\\n        bytes32 _encryptedVaultId\\n    ) public returns (address) {\\n        require(\\n            forwardersMapping[_encryptedVaultId] == address(0),\\n            \\\"forwarder already created\\\"\\n        );\\n        MecenateForwarder forwarder = new MecenateForwarder(\\n            _encryptedVaultId,\\n            address(this)\\n        );\\n\\n        forwardersMapping[_encryptedVaultId] = address(forwarder);\\n\\n        return address(forwarder);\\n    }\\n\\n    function getforwarders(bytes32 _user) public view returns (address) {\\n        return forwardersMapping[_user];\\n    }\\n}\\n\",\"keccak256\":\"0x43fcec3d834c856e3ab26a5d2d5e65de798ab734693e1e2e10bab787d3d2af51\"}},\"version\":1}",
  "bytecode": "0x6080346100a757601f610a0b38819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600254161760025561094890816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816305d45fad146103d95750806307c0e602146103a6578063541886b21461017f57806360e232a9146102fb578063715018a6146102a15780637ef0db66146101a85780638d928af81461017f5780638da5cb5b146101535763f2fde38b1461008757600080fd5b3461014f57602036600319011261014f576001600160a01b0382358181169391929084900361014b576100b861040a565b83156100f957505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b83823461017b578160031936011261017b57905490516001600160a01b039091168152602090f35b5080fd5b83823461017b578160031936011261017b5760025490516001600160a01b039091168152602090f35b503461014f576020928360031936011261029e578235808252600185528282205490936001600160a01b0391821661025b578351906104b08083019183831067ffffffffffffffff8411176102485750859183916104638339878152308982015203019083f0801561023e5790839291169381526001855220826bffffffffffffffffffffffff60a01b82541617905551908152f35b83513d84823e3d90fd5b634e487b7160e01b865260419052602485fd5b835162461bcd60e51b8152908101869052601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152606490fd5b80fd5b833461029e578060031936011261029e576102ba61040a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461014f57602036600319011261014f5780356001600160a01b03811692908390036103a25761032b61040a565b82330361034f5750506bffffffffffffffffffffffff60a01b600254161760025580f35b906020608492519162461bcd60e51b8352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e67652074686520604482015266666163746f727960c81b6064820152fd5b8380fd5b50903461014f57602036600319011261014f5735825260016020908152918190205490516001600160a01b039091168152f35b918491503461017b57602036600319011261017b579235815260016020908152929020546001600160a01b03168152f35b6000546001600160a01b0316330361041e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461007e57601f6104b038819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b031916919091179055604051610416908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004908136101561016d575b50361561001f57600080fd5b60015482516311b2515f60e31b81526020916001600160a01b0390839083908690829085165afa91821561016257600092610133575b5060005485519284840191636b46cea760e11b8352602485015260248452606084019367ffffffffffffffff948181108682111761011e57885251600093849391923491165af1903d15610118573d908111610103578451906100c1601f8201601f1916850183610384565b81526000833d92013e5b156100d257005b606492519162461bcd60e51b8352820152600e60248201526d11195c1bdcda5d0819985a5b195960921b6044820152fd5b604184634e487b7160e01b6000525260246000fd5b506100cb565b604188634e487b7160e01b6000525260246000fd5b610154919250833d851161015b575b61014c8183610384565b8101906103bc565b9038610055565b503d610142565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461036a57508063338b5dea146101c35763c45a0155036100135782346101bf57816003193601126101bf5760015490516001600160a01b039091168152602090f35b5080fd5b50913461036657806003193601126103665781356001600160a01b0381811693918490036103625760243590806001541684519182916311b2515f60e31b8352828660209485935afa928315610339578893610343575b5085519263095ea7b360e01b84521691828582015283602482015281816044818b8b5af19081156103395788916102ff575b50156102cc5750908591825495813b156102c85783606492875198899586946384abac9560e01b865289860152602485015260448401525af180156102be57610293578380f35b67ffffffffffffffff83116102ab5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b8380fd5b8360649186519162461bcd60e51b8352820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152fd5b90508181813d8311610332575b6103168183610384565b8101031261032e5751801515810361032e573861024c565b8780fd5b503d61030c565b86513d8a823e3d90fd5b61035b919350823d841161015b5761014c8183610384565b913861021a565b8480fd5b8280fd5b9050346101bf57816003193601126101bf57602091548152f35b90601f8019910116810190811067ffffffffffffffff8211176103a657604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126103db57516001600160a01b03811681036103db5790565b600080fdfea26469706673582212208a6423907ad8c0858649fc881974c80991ac02f6db7c1d4ef6b10378d38764c864736f6c63430008130033a264697066735822122073c86fd4c1365f39b0dfb3959f76c4106dbc4620cc5f1d8a5486da049eff92e264736f6c63430008130033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c90816305d45fad146103d95750806307c0e602146103a6578063541886b21461017f57806360e232a9146102fb578063715018a6146102a15780637ef0db66146101a85780638d928af81461017f5780638da5cb5b146101535763f2fde38b1461008757600080fd5b3461014f57602036600319011261014f576001600160a01b0382358181169391929084900361014b576100b861040a565b83156100f957505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b83823461017b578160031936011261017b57905490516001600160a01b039091168152602090f35b5080fd5b83823461017b578160031936011261017b5760025490516001600160a01b039091168152602090f35b503461014f576020928360031936011261029e578235808252600185528282205490936001600160a01b0391821661025b578351906104b08083019183831067ffffffffffffffff8411176102485750859183916104638339878152308982015203019083f0801561023e5790839291169381526001855220826bffffffffffffffffffffffff60a01b82541617905551908152f35b83513d84823e3d90fd5b634e487b7160e01b865260419052602485fd5b835162461bcd60e51b8152908101869052601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152606490fd5b80fd5b833461029e578060031936011261029e576102ba61040a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461014f57602036600319011261014f5780356001600160a01b03811692908390036103a25761032b61040a565b82330361034f5750506bffffffffffffffffffffffff60a01b600254161760025580f35b906020608492519162461bcd60e51b8352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e67652074686520604482015266666163746f727960c81b6064820152fd5b8380fd5b50903461014f57602036600319011261014f5735825260016020908152918190205490516001600160a01b039091168152f35b918491503461017b57602036600319011261017b579235815260016020908152929020546001600160a01b03168152f35b6000546001600160a01b0316330361041e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461007e57601f6104b038819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b031916919091179055604051610416908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004908136101561016d575b50361561001f57600080fd5b60015482516311b2515f60e31b81526020916001600160a01b0390839083908690829085165afa91821561016257600092610133575b5060005485519284840191636b46cea760e11b8352602485015260248452606084019367ffffffffffffffff948181108682111761011e57885251600093849391923491165af1903d15610118573d908111610103578451906100c1601f8201601f1916850183610384565b81526000833d92013e5b156100d257005b606492519162461bcd60e51b8352820152600e60248201526d11195c1bdcda5d0819985a5b195960921b6044820152fd5b604184634e487b7160e01b6000525260246000fd5b506100cb565b604188634e487b7160e01b6000525260246000fd5b610154919250833d851161015b575b61014c8183610384565b8101906103bc565b9038610055565b503d610142565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461036a57508063338b5dea146101c35763c45a0155036100135782346101bf57816003193601126101bf5760015490516001600160a01b039091168152602090f35b5080fd5b50913461036657806003193601126103665781356001600160a01b0381811693918490036103625760243590806001541684519182916311b2515f60e31b8352828660209485935afa928315610339578893610343575b5085519263095ea7b360e01b84521691828582015283602482015281816044818b8b5af19081156103395788916102ff575b50156102cc5750908591825495813b156102c85783606492875198899586946384abac9560e01b865289860152602485015260448401525af180156102be57610293578380f35b67ffffffffffffffff83116102ab5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b8380fd5b8360649186519162461bcd60e51b8352820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152fd5b90508181813d8311610332575b6103168183610384565b8101031261032e5751801515810361032e573861024c565b8780fd5b503d61030c565b86513d8a823e3d90fd5b61035b919350823d841161015b5761014c8183610384565b913861021a565b8480fd5b8280fd5b9050346101bf57816003193601126101bf57602091548152f35b90601f8019910116810190811067ffffffffffffffff8211176103a657604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126103db57516001600160a01b03811681036103db5790565b600080fdfea26469706673582212208a6423907ad8c0858649fc881974c80991ac02f6db7c1d4ef6b10378d38764c864736f6c63430008130033a264697066735822122073c86fd4c1365f39b0dfb3959f76c4106dbc4620cc5f1d8a5486da049eff92e264736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 291,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12241,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "forwardersMapping",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 12243,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "mecenateVault",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}