{
  "address": "0xcEcBA5A5FC5b5C077c6bd9D8f4f2d25EC9A0EfbE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "encryptedVaultId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultContract",
          "type": "address"
        }
      ],
      "name": "ForwarderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "name": "changeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_encryptedVaultId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_vaultContract",
          "type": "address"
        }
      ],
      "name": "createforwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "forwardersMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_user",
          "type": "bytes32"
        }
      ],
      "name": "getforwarders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mecenateVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd4dae12f70410dc7455e503060cf0c0c2a0ddfe75d1eb372b6e99b3ce884f745",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0xcEcBA5A5FC5b5C077c6bd9D8f4f2d25EC9A0EfbE",
    "transactionIndex": 1,
    "gasUsed": "780743",
    "logsBloom": "0x
    "blockHash": "0x3cd7c0564e93a507d8bd3ee0e40662ec8a64ff7856510fa2ef656c488ab94adc",
    "transactionHash": "0xd4dae12f70410dc7455e503060cf0c0c2a0ddfe75d1eb372b6e99b3ce884f745",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 10544966,
        "transactionHash": "0xd4dae12f70410dc7455e503060cf0c0c2a0ddfe75d1eb372b6e99b3ce884f745",
        "address": "0xcEcBA5A5FC5b5C077c6bd9D8f4f2d25EC9A0EfbE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008aa5f726d9f868a21a8bd748e2f1e43ba31eb670"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x3cd7c0564e93a507d8bd3ee0e40662ec8a64ff7856510fa2ef656c488ab94adc"
      }
    ],
    "blockNumber": 10544966,
    "cumulativeGasUsed": "844696",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5ad2ad2981488ebbF58F23edA27bF520883530E1"
  ],
  "numDeployments": 2,
  "solcInputHash": "11ec77ac73880f17301462ca88124e91",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultContract\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_vaultContract\",\"type\":\"address\"}],\"name\":\"createforwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"forwardersMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_user\",\"type\":\"bytes32\"}],\"name\":\"getforwarders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/MecenateForwarderFactory.sol\":\"MecenateForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IMecenateETHForwarderFactory {\\r\\n    function getVault() external view returns (address);\\r\\n}\\r\\n\\r\\ncontract MecenateForwarder {\\r\\n    bytes32 private encryptedVaultId;\\r\\n    address public factory;\\r\\n\\r\\n    function depositToken(address token, uint256 amount) external {\\r\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\r\\n\\r\\n        // approve token\\r\\n        (bool success, ) = token.delegatecall(\\r\\n            abi.encodeWithSignature(\\\"approve(address,uint256)\\\", vault, amount)\\r\\n        );\\r\\n\\r\\n        require(success, \\\"Approve failed\\\");\\r\\n\\r\\n        (bool success2, ) = vault.delegatecall(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"depositToken(address,uint256,bytes32)\\\",\\r\\n                token,\\r\\n                amount,\\r\\n                encryptedVaultId\\r\\n            )\\r\\n        );\\r\\n\\r\\n        require(success2, \\\"Deposit failed\\\");\\r\\n    }\\r\\n\\r\\n    constructor(bytes32 _encryptedVaultId) {\\r\\n        encryptedVaultId = _encryptedVaultId;\\r\\n        factory = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\r\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\r\\n            abi.encode(encryptedVaultId)\\r\\n        );\\r\\n        require(success, \\\"Deposit failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6c57f43b0cc883e668cef3ab8fa417be041ac817fb0dc88fcb4ddbbfe154d1ec\",\"license\":\"MIT\"},\"contracts/factories/MecenateForwarderFactory.sol\":{\"content\":\"import \\\"../MecenateForwarder.sol\\\";\\r\\n\\r\\n// import Ownable\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract MecenateForwarderFactory is Ownable {\\r\\n    mapping(bytes32 => address) public forwardersMapping;\\r\\n\\r\\n    address public mecenateVault;\\r\\n\\r\\n    constructor(address _mecenateVault) {\\r\\n        mecenateVault = _mecenateVault;\\r\\n    }\\r\\n\\r\\n    function getVault() public view returns (address) {\\r\\n        return mecenateVault;\\r\\n    }\\r\\n\\r\\n    function changeVault(address _mecenateVault) public onlyOwner {\\r\\n        require(\\r\\n            msg.sender == _mecenateVault,\\r\\n            \\\"Only the factory can change the factory\\\"\\r\\n        );\\r\\n        mecenateVault = _mecenateVault;\\r\\n    }\\r\\n\\r\\n    event ForwarderCreated(\\r\\n        address indexed forwarder,\\r\\n        bytes32 encryptedVaultId,\\r\\n        address vaultContract\\r\\n    );\\r\\n\\r\\n    function createforwarder(\\r\\n        bytes32 _encryptedVaultId,\\r\\n        address _vaultContract\\r\\n    ) public returns (address) {\\r\\n        require(\\r\\n            forwardersMapping[_encryptedVaultId] == address(0),\\r\\n            \\\"forwarder already created\\\"\\r\\n        );\\r\\n        MecenateForwarder forwarder = new MecenateForwarder(_encryptedVaultId);\\r\\n\\r\\n        forwardersMapping[_encryptedVaultId] = address(forwarder);\\r\\n\\r\\n        emit ForwarderCreated(\\r\\n            address(forwarder),\\r\\n            _encryptedVaultId,\\r\\n            _vaultContract\\r\\n        );\\r\\n\\r\\n        return address(forwarder);\\r\\n    }\\r\\n\\r\\n    function getforwarders(bytes32 _user) public view returns (address) {\\r\\n        return forwardersMapping[_user];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x025b6dde948cf768b648b4b3db4cacd0e75c37adeca6e7e4a2f4dac5358f2f6e\"}},\"version\":1}",
  "bytecode": "0x6080346100a757601f610d2838819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36002541617600255610c6590816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816305d45fad1461053e5750806307c0e6021461050157806348a7c45b1461037f578063541886b2146101d857806360e232a91461028e578063715018a61461020d5780638d928af8146101d85780638da5cb5b146101a15763f2fde38b1461008657600080fd5b3461019d57602060031936011261019d5761009f61057a565b906100a86105a2565b73ffffffffffffffffffffffffffffffffffffffff80921692831561011a5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101d457816003193601126101d45773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b5050346101d457816003193601126101d45760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b833461028b578060031936011261028b576102266105a2565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461019d57602060031936011261019d5773ffffffffffffffffffffffffffffffffffffffff6102bd61057a565b6102c56105a2565b16918233036102fc5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b50913461028b578160031936011261028b57823560243573ffffffffffffffffffffffffffffffffffffffff8082168092036104fd57828452602095600187528186862054166104a15785519061060e8083019183831067ffffffffffffffff841117610475575088918391610622833986815203019085f0801561046b57927fd20b14a4eb13758b273b5380a229e4cbc58e9ccc277f94fc221c0578e0a7bcb9928695949286931696858389975260018a5220857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055825191825287820152a251908152f35b85513d86823e3d90fd5b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b8380fd5b503461019d57602060031936011261019d578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b92919050346104fd5760206003193601126104fd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361059d57565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036105c357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461006357601f61060e38819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b0319163317905560405161058f908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004908136101561012e575b50361561001f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff92602084600154168251938480927f8d928af80000000000000000000000000000000000000000000000000000000082525afa918215610123576000926100f3575b506000549281519160208301948552602083528083019183831067ffffffffffffffff8411176100c5576100c36000808989898989895251923491165af16100bd610496565b506104f4565b005b6041907f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61011591925060203d811161011c575b61010d81836103f5565b810190610465565b9038610077565b503d610103565b50513d6000823e3d90fd5b600090813560e01c908163338b5dea146101a3575063c45a01550361001357823461019f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b929390503461019f57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019f5773ffffffffffffffffffffffffffffffffffffffff843581811692908381036103f157859660249695969182359085600154167f8d928af8000000000000000000000000000000000000000000000000000000008952888460209c8d935afa9788156103e75789986103c8575b508451958a8701907f095ea7b300000000000000000000000000000000000000000000000000000000825289168588015282604488015260448752608087019667ffffffffffffffff978181108982111761039d578752518a928392905af46102a9610496565b5015610342578754908451998a01967f84abac95000000000000000000000000000000000000000000000000000000008852848b015260448a015260648901526064885260a0880193888510908511176103185786610315818089898d8a8a5251915af46100bd610496565b80f35b604187917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50600e606492898551937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b868c6041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6103e09198508a3d8c1161011c5761010d81836103f5565b9638610242565b85513d8b823e3d90fd5b8480fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761043657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90816020910312610491575173ffffffffffffffffffffffffffffffffffffffff811681036104915790565b600080fd5b3d156104ef573d9067ffffffffffffffff821161043657604051916104e360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846103f5565b82523d6000602084013e565b606090565b156104fb57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fdfea26469706673582212206a68e1c797f265d5f310f757536fa2e9a5237c8e60b8028d582d2427c2c17c5b64736f6c63430008130033a26469706673582212205b63634f1e66f192d1eda0556bc9d68de831b2a4b913d9a5ab584a778c90edb064736f6c63430008130033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816305d45fad1461053e5750806307c0e6021461050157806348a7c45b1461037f578063541886b2146101d857806360e232a91461028e578063715018a61461020d5780638d928af8146101d85780638da5cb5b146101a15763f2fde38b1461008657600080fd5b3461019d57602060031936011261019d5761009f61057a565b906100a86105a2565b73ffffffffffffffffffffffffffffffffffffffff80921692831561011a5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101d457816003193601126101d45773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b5050346101d457816003193601126101d45760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b833461028b578060031936011261028b576102266105a2565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461019d57602060031936011261019d5773ffffffffffffffffffffffffffffffffffffffff6102bd61057a565b6102c56105a2565b16918233036102fc5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b50913461028b578160031936011261028b57823560243573ffffffffffffffffffffffffffffffffffffffff8082168092036104fd57828452602095600187528186862054166104a15785519061060e8083019183831067ffffffffffffffff841117610475575088918391610622833986815203019085f0801561046b57927fd20b14a4eb13758b273b5380a229e4cbc58e9ccc277f94fc221c0578e0a7bcb9928695949286931696858389975260018a5220857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055825191825287820152a251908152f35b85513d86823e3d90fd5b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b8380fd5b503461019d57602060031936011261019d578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b92919050346104fd5760206003193601126104fd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361059d57565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036105c357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461006357601f61060e38819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b0319163317905560405161058f908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004908136101561012e575b50361561001f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff92602084600154168251938480927f8d928af80000000000000000000000000000000000000000000000000000000082525afa918215610123576000926100f3575b506000549281519160208301948552602083528083019183831067ffffffffffffffff8411176100c5576100c36000808989898989895251923491165af16100bd610496565b506104f4565b005b6041907f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61011591925060203d811161011c575b61010d81836103f5565b810190610465565b9038610077565b503d610103565b50513d6000823e3d90fd5b600090813560e01c908163338b5dea146101a3575063c45a01550361001357823461019f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b929390503461019f57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019f5773ffffffffffffffffffffffffffffffffffffffff843581811692908381036103f157859660249695969182359085600154167f8d928af8000000000000000000000000000000000000000000000000000000008952888460209c8d935afa9788156103e75789986103c8575b508451958a8701907f095ea7b300000000000000000000000000000000000000000000000000000000825289168588015282604488015260448752608087019667ffffffffffffffff978181108982111761039d578752518a928392905af46102a9610496565b5015610342578754908451998a01967f84abac95000000000000000000000000000000000000000000000000000000008852848b015260448a015260648901526064885260a0880193888510908511176103185786610315818089898d8a8a5251915af46100bd610496565b80f35b604187917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50600e606492898551937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b868c6041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6103e09198508a3d8c1161011c5761010d81836103f5565b9638610242565b85513d8b823e3d90fd5b8480fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761043657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90816020910312610491575173ffffffffffffffffffffffffffffffffffffffff811681036104915790565b600080fd5b3d156104ef573d9067ffffffffffffffff821161043657604051916104e360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846103f5565b82523d6000602084013e565b606090565b156104fb57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fdfea26469706673582212206a68e1c797f265d5f310f757536fa2e9a5237c8e60b8028d582d2427c2c17c5b64736f6c63430008130033a26469706673582212205b63634f1e66f192d1eda0556bc9d68de831b2a4b913d9a5ab584a778c90edb064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 291,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11719,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "forwardersMapping",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 11721,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "mecenateVault",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}