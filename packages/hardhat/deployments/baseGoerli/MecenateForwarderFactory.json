{
  "address": "0x9A27306175abB6a0799ff7B7A0E02d1987C16046",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "encryptedVaultId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultContract",
          "type": "address"
        }
      ],
      "name": "ForwarderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mecenateVault",
          "type": "address"
        }
      ],
      "name": "changeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_encryptedVaultId",
          "type": "bytes32"
        }
      ],
      "name": "createforwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "forwardersMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_user",
          "type": "bytes32"
        }
      ],
      "name": "getforwarders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mecenateVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6cbab3b6c6bb1e604107b92c0dfc77190e89256c3cf7fc7bc38af0e2faf0148f",
  "receipt": {
    "to": null,
    "from": "0x8aA5F726d9F868a21a8bd748E2f1E43bA31eb670",
    "contractAddress": "0x9A27306175abB6a0799ff7B7A0E02d1987C16046",
    "transactionIndex": 2,
    "gasUsed": "795144",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000100000000000000000000004000000000000000000000000000000000000000000000001000000000000002000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000008000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000040000000000",
    "blockHash": "0x9126e4ed3d811f6a972d87ec1b2807d42d99d32b47351d97dc8ce1e437befe6d",
    "transactionHash": "0x6cbab3b6c6bb1e604107b92c0dfc77190e89256c3cf7fc7bc38af0e2faf0148f",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 10677346,
        "transactionHash": "0x6cbab3b6c6bb1e604107b92c0dfc77190e89256c3cf7fc7bc38af0e2faf0148f",
        "address": "0x9A27306175abB6a0799ff7B7A0E02d1987C16046",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008aa5f726d9f868a21a8bd748e2f1e43ba31eb670"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x9126e4ed3d811f6a972d87ec1b2807d42d99d32b47351d97dc8ce1e437befe6d"
      }
    ],
    "blockNumber": 10677346,
    "cumulativeGasUsed": "942462",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb13351abaE0b4b0C7b9C7E909020Fba9dAb11b0d"
  ],
  "numDeployments": 8,
  "solcInputHash": "799b0715dda30dabba2dd8e81ef54a0a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultContract\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"createforwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"forwardersMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_user\",\"type\":\"bytes32\"}],\"name\":\"getforwarders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/MecenateForwarderFactory.sol\":\"MecenateForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 public encryptedVaultId;\\n\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId, address _factory) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = _factory;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x7d7938321e2c02ceef6bd71120e7407497721bca9236b6bab419bbc1af3da1af\",\"license\":\"MIT\"},\"contracts/factories/MecenateForwarderFactory.sol\":{\"content\":\"import \\\"../MecenateForwarder.sol\\\";\\n\\n// import Ownable\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract MecenateForwarderFactory is Ownable {\\n    mapping(bytes32 => address) public forwardersMapping;\\n\\n    address public mecenateVault;\\n\\n    constructor(address _mecenateVault) {\\n        mecenateVault = _mecenateVault;\\n    }\\n\\n    function getVault() public view returns (address) {\\n        return mecenateVault;\\n    }\\n\\n    function changeVault(address _mecenateVault) public onlyOwner {\\n        require(\\n            msg.sender == _mecenateVault,\\n            \\\"Only the factory can change the factory\\\"\\n        );\\n        mecenateVault = _mecenateVault;\\n    }\\n\\n    event ForwarderCreated(\\n        address indexed forwarder,\\n        bytes32 encryptedVaultId,\\n        address vaultContract\\n    );\\n\\n    function createforwarder(\\n        bytes32 _encryptedVaultId\\n    ) public returns (address) {\\n        require(\\n            forwardersMapping[_encryptedVaultId] == address(0),\\n            \\\"forwarder already created\\\"\\n        );\\n        MecenateForwarder forwarder = new MecenateForwarder(\\n            _encryptedVaultId,\\n            address(this)\\n        );\\n\\n        forwardersMapping[_encryptedVaultId] = address(forwarder);\\n\\n        return address(forwarder);\\n    }\\n\\n    function getforwarders(bytes32 _user) public view returns (address) {\\n        return forwardersMapping[_user];\\n    }\\n}\\n\",\"keccak256\":\"0x43fcec3d834c856e3ab26a5d2d5e65de798ab734693e1e2e10bab787d3d2af51\"}},\"version\":1}",
  "bytecode": "0x6080346100a757601f610d6c38819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36002541617600255610ca990816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816305d45fad1461050f5750806307c0e602146104d1578063541886b2146101de57806360e232a9146103d9578063715018a61461035b5780637ef0db66146102135780638d928af8146101de5780638da5cb5b146101a75763f2fde38b1461008757600080fd5b346101a35760206003193601126101a35781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361019f576100c361054a565b831561011c5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b8382346101da57816003193601126101da5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b8382346101da57816003193601126101da5760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b50346101a35760209283600319360112610358578235928382526001855273ffffffffffffffffffffffffffffffffffffffff908184842054166102fc578351906106aa8083019183831067ffffffffffffffff8411176102d05750859183916105ca8339878152308982015203019083f080156102c65790839291169381526001855220827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551908152f35b83513d84823e3d90fd5b8560416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b80fd5b833461035857806003193601126103585761037461054a565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101a35760206003193601126101a35780359173ffffffffffffffffffffffffffffffffffffffff83168093036104cd5761041561054a565b82330361044a5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b8380fd5b5090346101a35760206003193601126101a3578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b929050346104cd5760206003193601126104cd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b73ffffffffffffffffffffffffffffffffffffffff60005416330361056b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461007e57601f6106aa38819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b031916919091179055604051610610908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610539565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b6102028183610539565b8101906105a9565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461050157508063338b5dea146102a35763c45a01550361001357823461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b5091346104fd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fd5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036104f95760243590806001541684519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104d05788936104da575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104d0578891610496575b501561043a5750908591825495813b156104365783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af1801561042c576103e8578380f35b67ffffffffffffffff83116104005750523880808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104c9575b6104ad8183610539565b810103126104c5575180151581036104c55738610388565b8780fd5b503d6104a3565b86513d8a823e3d90fd5b6104f2919350823d8411610211576102028183610539565b913861033d565b8480fd5b8280fd5b90503461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602091548152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b908160209103126105d5575173ffffffffffffffffffffffffffffffffffffffff811681036105d55790565b600080fdfea26469706673582212205395f781e6950dce3444b1fcd01bfbcfebb5090977d46cdb614f9b15cb963a7e64736f6c63430008130033a26469706673582212200133ccc7ce58f6d9166eb6ec570fb5f4292270abddc745f8570d74c9b3fd9f1664736f6c63430008130033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c90816305d45fad1461050f5750806307c0e602146104d1578063541886b2146101de57806360e232a9146103d9578063715018a61461035b5780637ef0db66146102135780638d928af8146101de5780638da5cb5b146101a75763f2fde38b1461008757600080fd5b346101a35760206003193601126101a35781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361019f576100c361054a565b831561011c5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b8382346101da57816003193601126101da5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b8382346101da57816003193601126101da5760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b50346101a35760209283600319360112610358578235928382526001855273ffffffffffffffffffffffffffffffffffffffff908184842054166102fc578351906106aa8083019183831067ffffffffffffffff8411176102d05750859183916105ca8339878152308982015203019083f080156102c65790839291169381526001855220827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551908152f35b83513d84823e3d90fd5b8560416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b80fd5b833461035857806003193601126103585761037461054a565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101a35760206003193601126101a35780359173ffffffffffffffffffffffffffffffffffffffff83168093036104cd5761041561054a565b82330361044a5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b8380fd5b5090346101a35760206003193601126101a3578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b929050346104cd5760206003193601126104cd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b73ffffffffffffffffffffffffffffffffffffffff60005416330361056b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461007e57601f6106aa38819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b031916919091179055604051610610908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610539565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b6102028183610539565b8101906105a9565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c9081631a58a6a61461050157508063338b5dea146102a35763c45a01550361001357823461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b5091346104fd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fd5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036104f95760243590806001541684519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104d05788936104da575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104d0578891610496575b501561043a5750908591825495813b156104365783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af1801561042c576103e8578380f35b67ffffffffffffffff83116104005750523880808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104c9575b6104ad8183610539565b810103126104c5575180151581036104c55738610388565b8780fd5b503d6104a3565b86513d8a823e3d90fd5b6104f2919350823d8411610211576102028183610539565b913861033d565b8480fd5b8280fd5b90503461029f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602091548152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b908160209103126105d5575173ffffffffffffffffffffffffffffffffffffffff811681036105d55790565b600080fdfea26469706673582212205395f781e6950dce3444b1fcd01bfbcfebb5090977d46cdb614f9b15cb963a7e64736f6c63430008130033a26469706673582212200133ccc7ce58f6d9166eb6ec570fb5f4292270abddc745f8570d74c9b3fd9f1664736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1913,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "forwardersMapping",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 1915,
        "contract": "contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory",
        "label": "mecenateVault",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}