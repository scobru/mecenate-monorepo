/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={424:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>y});var a=n(81),i=n.n(a),s=n(645),p=n.n(s)()(i());p.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),p.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const y=p},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var p={};if(a)for(var y=0;y<this.length;y++){var r=this[y][0];null!=r&&(p[r]=!0)}for(var u=0;u<e.length;u++){var o=[].concat(e[u]);a&&p[o[0]]||(void 0!==s&&(void 0===o[5]||(o[1]="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {").concat(o[1],"}")),o[5]=s),n&&(o[2]?(o[1]="@media ".concat(o[2]," {").concat(o[1],"}"),o[2]=n):o[2]=n),i&&(o[4]?(o[1]="@supports (".concat(o[4],") {").concat(o[1],"}"),o[4]=i):o[4]="".concat(i)),t.push(o))}},t}},81:e=>{"use strict";e.exports=function(e){return e[1]}},838:(e,t,n)=>{var a=n(424);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(346).Z)("20211576",a,!1,{})},346:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var s=t[i],p=s[0],y={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[p]?a[p].parts.push(y):n.push(a[p]={id:p,parts:[y]})}return n}n.d(t,{Z:()=>d});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},p=i&&(document.head||document.getElementsByTagName("head")[0]),y=null,r=0,u=!1,o=function(){},l=null,m="data-vue-ssr-id",c="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function d(e,t,n,i){u=n,l=i||{};var p=a(e,t);return T(p),function(t){for(var n=[],i=0;i<p.length;i++){var y=p[i];(r=s[y.id]).refs--,n.push(r)}for(t?T(p=a(e,t)):p=[],i=0;i<n.length;i++){var r;if(0===(r=n[i]).refs){for(var u=0;u<r.parts.length;u++)r.parts[u]();delete s[r.id]}}}}function T(e){for(var t=0;t<e.length;t++){var n=e[t],a=s[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(f(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var p=[];for(i=0;i<n.parts.length;i++)p.push(f(n.parts[i]));s[n.id]={id:n.id,refs:1,parts:p}}}}function b(){var e=document.createElement("style");return e.type="text/css",p.appendChild(e),e}function f(e){var t,n,a=document.querySelector("style["+m+'~="'+e.id+'"]');if(a){if(u)return o;a.parentNode.removeChild(a)}if(c){var i=r++;a=y||(y=b()),t=v.bind(null,a,i,!1),n=v.bind(null,a,i,!0)}else a=b(),t=g.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var S,h=(S=[],function(e,t){return S[e]=t,S.filter(Boolean).join("\n")});function v(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=h(t,i);else{var s=document.createTextNode(i),p=e.childNodes;p[t]&&e.removeChild(p[t]),p.length?e.insertBefore(s,p[t]):e.appendChild(s)}}function g(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute(m,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={id:a,exports:{}};return e[a](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=Object.freeze({}),t=Array.isArray;function a(e){return null==e}function i(e){return null!=e}function s(e){return!0===e}function p(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function y(e){return"function"==typeof e}function r(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function o(e){return"[object Object]"===u.call(e)}function l(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function c(e){return null==e?"":Array.isArray(e)||o(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function d(e){var t=parseFloat(e);return isNaN(t)?e:t}function T(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var b=T("slot,component",!0),f=T("key,ref,slot,slot-scope,is");function S(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var a=e.indexOf(t);if(a>-1)return e.splice(a,1)}}var h=Object.prototype.hasOwnProperty;function v(e,t){return h.call(e,t)}function g(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var w=/-(\w)/g,k=g((function(e){return e.replace(w,(function(e,t){return t?t.toUpperCase():""}))})),I=g((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),D=/\B([A-Z])/g,M=g((function(e){return e.replace(D,"-$1").toLowerCase()})),P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function A(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function C(e,t){for(var n in t)e[n]=t[n];return e}function x(e){for(var t={},n=0;n<e.length;n++)e[n]&&C(t,e[n]);return t}function _(e,t,n){}var E=function(e,t,n){return!1},R=function(e){return e};function U(e,t){if(e===t)return!0;var n=r(e),a=r(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),s=Array.isArray(t);if(i&&s)return e.length===t.length&&e.every((function(e,n){return U(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||s)return!1;var p=Object.keys(e),y=Object.keys(t);return p.length===y.length&&p.every((function(n){return U(e[n],t[n])}))}catch(e){return!1}}function O(e,t){for(var n=0;n<e.length;n++)if(U(e[n],t))return n;return-1}function B(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var q="data-server-rendered",F=["component","directive","filter"],L=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],V={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:_,parsePlatformTagName:R,mustUseProp:E,async:!0,_lifecycleHooks:L},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function K(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var z=new RegExp("[^".concat($.source,".$_\\d]")),j="__proto__"in{},H="undefined"!=typeof window,Q=H&&window.navigator.userAgent.toLowerCase(),W=Q&&/msie|trident/.test(Q),G=Q&&Q.indexOf("msie 9.0")>0,Y=Q&&Q.indexOf("edge/")>0;Q&&Q.indexOf("android");var X=Q&&/iphone|ipad|ipod|ios/.test(Q);Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q);var J,Z=Q&&Q.match(/firefox\/(\d+)/),ee={}.watch,te=!1;if(H)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var ae=function(){return void 0===J&&(J=!H&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),J},ie=H&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var pe,ye="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);pe="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var re=null;function ue(e){void 0===e&&(e=null),e||re&&re._scope.off(),re=e,e&&e._scope.on()}var oe=function(){function e(e,t,n,a,i,s,p,y){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=p,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=y,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),le=function(e){void 0===e&&(e="");var t=new oe;return t.text=e,t.isComment=!0,t};function me(e){return new oe(void 0,void 0,void 0,String(e))}function ce(e){var t=new oe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var de=0,Te=[],be=function(){for(var e=0;e<Te.length;e++){var t=Te[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}Te.length=0},fe=function(){function e(){this._pending=!1,this.id=de++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,Te.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){for(var t=this.subs.filter((function(e){return e})),n=0,a=t.length;n<a;n++)t[n].update()},e}();fe.target=null;var Se=[];function he(e){Se.push(e),fe.target=e}function ve(){Se.pop(),fe.target=Se[Se.length-1]}var ge=Array.prototype,we=Object.create(ge);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ge[e];K(we,e,(function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var i,s=t.apply(this,n),p=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&p.observeArray(i),p.dep.notify(),s}))}));var ke=Object.getOwnPropertyNames(we),Ie={},De=!0;function Me(e){De=e}var Pe={notify:_,depend:_,addSub:_,removeSub:_},Ae=function(){function e(e,n,a){if(void 0===n&&(n=!1),void 0===a&&(a=!1),this.value=e,this.shallow=n,this.mock=a,this.dep=a?Pe:new fe,this.vmCount=0,K(e,"__ob__",this),t(e)){if(!a)if(j)e.__proto__=we;else for(var i=0,s=ke.length;i<s;i++)K(e,y=ke[i],we[y]);n||this.observeArray(e)}else{var p=Object.keys(e);for(i=0;i<p.length;i++){var y;xe(e,y=p[i],Ie,void 0,n,a)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ce(e[t],!1,this.mock)},e}();function Ce(e,n,a){return e&&v(e,"__ob__")&&e.__ob__ instanceof Ae?e.__ob__:!De||!a&&ae()||!t(e)&&!o(e)||!Object.isExtensible(e)||e.__v_skip||Be(e)||e instanceof oe?void 0:new Ae(e,n,a)}function xe(e,n,a,i,s,p){var y=new fe,r=Object.getOwnPropertyDescriptor(e,n);if(!r||!1!==r.configurable){var u=r&&r.get,o=r&&r.set;u&&!o||a!==Ie&&2!==arguments.length||(a=e[n]);var l=!s&&Ce(a,!1,p);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=u?u.call(e):a;return fe.target&&(y.depend(),l&&(l.dep.depend(),t(n)&&Re(n))),Be(n)&&!s?n.value:n},set:function(t){var n,i,r=u?u.call(e):a;if((n=r)===(i=t)?0===n&&1/n!=1/i:n==n||i==i){if(o)o.call(e,t);else{if(u)return;if(!s&&Be(r)&&!Be(t))return void(r.value=t);a=t}l=!s&&Ce(t,!1,p),y.notify()}}}),y}}function _e(e,n,a){if(!Oe(e)){var i=e.__ob__;return t(e)&&l(n)?(e.length=Math.max(e.length,n),e.splice(n,1,a),i&&!i.shallow&&i.mock&&Ce(a,!1,!0),a):n in e&&!(n in Object.prototype)?(e[n]=a,a):e._isVue||i&&i.vmCount?a:i?(xe(i.value,n,a,void 0,i.shallow,i.mock),i.dep.notify(),a):(e[n]=a,a)}}function Ee(e,n){if(t(e)&&l(n))e.splice(n,1);else{var a=e.__ob__;e._isVue||a&&a.vmCount||Oe(e)||v(e,n)&&(delete e[n],a&&a.dep.notify())}}function Re(e){for(var n=void 0,a=0,i=e.length;a<i;a++)(n=e[a])&&n.__ob__&&n.__ob__.dep.depend(),t(n)&&Re(n)}function Ue(e){return function(e,t){Oe(e)||Ce(e,t,ae())}(e,!0),K(e,"__v_isShallow",!0),e}function Oe(e){return!(!e||!e.__v_isReadonly)}function Be(e){return!(!e||!0!==e.__v_isRef)}function qe(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(Be(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=t[n];Be(a)&&!Be(e)?a.value=e:t[n]=e}})}var Fe=g((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function Le(e,n){function a(){var e=a.fns;if(!t(e))return Gt(e,null,arguments,n,"v-on handler");for(var i=e.slice(),s=0;s<i.length;s++)Gt(i[s],null,arguments,n,"v-on handler")}return a.fns=e,a}function Ve(e,t,n,i,p,y){var r,u,o,l;for(r in e)u=e[r],o=t[r],l=Fe(r),a(u)||(a(o)?(a(u.fns)&&(u=e[r]=Le(u,y)),s(l.once)&&(u=e[r]=p(l.name,u,l.capture)),n(l.name,u,l.capture,l.passive,l.params)):u!==o&&(o.fns=u,e[r]=o));for(r in t)a(e[r])&&i((l=Fe(r)).name,t[r],l.capture)}function $e(e,t,n){var p;e instanceof oe&&(e=e.data.hook||(e.data.hook={}));var y=e[t];function r(){n.apply(this,arguments),S(p.fns,r)}a(y)?p=Le([r]):i(y.fns)&&s(y.merged)?(p=y).fns.push(r):p=Le([y,r]),p.merged=!0,e[t]=p}function Ne(e,t,n,a,s){if(i(t)){if(v(t,n))return e[n]=t[n],s||delete t[n],!0;if(v(t,a))return e[n]=t[a],s||delete t[a],!0}return!1}function Ke(e){return p(e)?[me(e)]:t(e)?je(e):void 0}function ze(e){return i(e)&&i(e.text)&&!1===e.isComment}function je(e,n){var y,r,u,o,l=[];for(y=0;y<e.length;y++)a(r=e[y])||"boolean"==typeof r||(o=l[u=l.length-1],t(r)?r.length>0&&(ze((r=je(r,"".concat(n||"","_").concat(y)))[0])&&ze(o)&&(l[u]=me(o.text+r[0].text),r.shift()),l.push.apply(l,r)):p(r)?ze(o)?l[u]=me(o.text+r):""!==r&&l.push(me(r)):ze(r)&&ze(o)?l[u]=me(o.text+r.text):(s(e._isVList)&&i(r.tag)&&a(r.key)&&i(n)&&(r.key="__vlist".concat(n,"_").concat(y,"__")),l.push(r)));return l}var He=1,Qe=2;function We(e,n,a,u,o,l){return(t(a)||p(a))&&(o=u,u=a,a=void 0),s(l)&&(o=Qe),function(e,n,a,s,p){if(i(a)&&i(a.__ob__))return le();if(i(a)&&i(a.is)&&(n=a.is),!n)return le();var u,o;if(t(s)&&y(s[0])&&((a=a||{}).scopedSlots={default:s[0]},s.length=0),p===Qe?s=Ke(s):p===He&&(s=function(e){for(var n=0;n<e.length;n++)if(t(e[n]))return Array.prototype.concat.apply([],e);return e}(s)),"string"==typeof n){var l=void 0;o=e.$vnode&&e.$vnode.ns||V.getTagNamespace(n),u=V.isReservedTag(n)?new oe(V.parsePlatformTagName(n),a,s,void 0,void 0,e):a&&a.pre||!i(l=Nn(e.$options,"components",n))?new oe(n,a,s,void 0,void 0,e):En(l,a,e,s,n)}else u=En(n,a,e,s);return t(u)?u:i(u)?(i(o)&&Ge(u,o),i(a)&&function(e){r(e.style)&&ln(e.style),r(e.class)&&ln(e.class)}(a),u):le()}(e,n,a,u,o)}function Ge(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),i(e.children))for(var p=0,y=e.children.length;p<y;p++){var r=e.children[p];i(r.tag)&&(a(r.ns)||s(n)&&"svg"!==r.tag)&&Ge(r,t,n)}}function Ye(e,n){var a,s,p,y,u=null;if(t(e)||"string"==typeof e)for(u=new Array(e.length),a=0,s=e.length;a<s;a++)u[a]=n(e[a],a);else if("number"==typeof e)for(u=new Array(e),a=0;a<e;a++)u[a]=n(a+1,a);else if(r(e))if(ye&&e[Symbol.iterator]){u=[];for(var o=e[Symbol.iterator](),l=o.next();!l.done;)u.push(n(l.value,u.length)),l=o.next()}else for(p=Object.keys(e),u=new Array(p.length),a=0,s=p.length;a<s;a++)y=p[a],u[a]=n(e[y],y,a);return i(u)||(u=[]),u._isVList=!0,u}function Xe(e,t,n,a){var i,s=this.$scopedSlots[e];s?(n=n||{},a&&(n=C(C({},a),n)),i=s(n)||(y(t)?t():t)):i=this.$slots[e]||(y(t)?t():t);var p=n&&n.slot;return p?this.$createElement("template",{slot:p},i):i}function Je(e){return Nn(this.$options,"filters",e)||R}function Ze(e,n){return t(e)?-1===e.indexOf(n):e!==n}function et(e,t,n,a,i){var s=V.keyCodes[t]||n;return i&&a&&!V.keyCodes[t]?Ze(i,a):s?Ze(s,e):a?M(a)!==t:void 0===e}function tt(e,n,a,i,s){if(a&&r(a)){t(a)&&(a=x(a));var p=void 0,y=function(t){if("class"===t||"style"===t||f(t))p=e;else{var y=e.attrs&&e.attrs.type;p=i||V.mustUseProp(n,y,t)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var r=k(t),u=M(t);r in p||u in p||(p[t]=a[t],s&&((e.on||(e.on={}))["update:".concat(t)]=function(e){a[t]=e}))};for(var u in a)y(u)}return e}function nt(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||it(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function at(e,t,n){return it(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function it(e,n,a){if(t(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&st(e[i],"".concat(n,"_").concat(i),a);else st(e,n,a)}function st(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function pt(e,t){if(t&&o(t)){var n=e.on=e.on?C({},e.on):{};for(var a in t){var i=n[a],s=t[a];n[a]=i?[].concat(i,s):s}}return e}function yt(e,n,a,i){n=n||{$stable:!a};for(var s=0;s<e.length;s++){var p=e[s];t(p)?yt(p,n,a):p&&(p.proxy&&(p.fn.proxy=!0),n[p.key]=p.fn)}return i&&(n.$key=i),n}function rt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function ut(e,t){return"string"==typeof e?t+e:e}function ot(e){e._o=at,e._n=d,e._s=c,e._l=Ye,e._t=Xe,e._q=U,e._i=O,e._m=nt,e._f=Je,e._k=et,e._b=tt,e._v=me,e._e=le,e._u=yt,e._g=pt,e._d=rt,e._p=ut}function lt(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var s=e[a],p=s.data;if(p&&p.attrs&&p.attrs.slot&&delete p.attrs.slot,s.context!==t&&s.fnContext!==t||!p||null==p.slot)(n.default||(n.default=[])).push(s);else{var y=p.slot,r=n[y]||(n[y]=[]);"template"===s.tag?r.push.apply(r,s.children||[]):r.push(s)}}for(var u in n)n[u].every(mt)&&delete n[u];return n}function mt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ct(e){return e.isComment&&e.asyncFactory}function dt(t,n,a,i){var s,p=Object.keys(a).length>0,y=n?!!n.$stable:!p,r=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(y&&i&&i!==e&&r===i.$key&&!p&&!i.$hasNormal)return i;for(var u in s={},n)n[u]&&"$"!==u[0]&&(s[u]=Tt(t,a,u,n[u]))}else s={};for(var o in a)o in s||(s[o]=bt(a,o));return n&&Object.isExtensible(n)&&(n._normalized=s),K(s,"$stable",y),K(s,"$key",r),K(s,"$hasNormal",p),s}function Tt(e,n,a,i){var s=function(){var n=re;ue(e);var a=arguments.length?i.apply(null,arguments):i({}),s=(a=a&&"object"==typeof a&&!t(a)?[a]:Ke(a))&&a[0];return ue(n),a&&(!s||1===a.length&&s.isComment&&!ct(s))?void 0:a};return i.proxy&&Object.defineProperty(n,a,{get:s,enumerable:!0,configurable:!0}),s}function bt(e,t){return function(){return e[t]}}function ft(e,t,n,a,i){var s=!1;for(var p in t)p in e?t[p]!==n[p]&&(s=!0):(s=!0,St(e,p,a,i));for(var p in e)p in t||(s=!0,delete e[p]);return s}function St(e,t,n,a){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[a][t]}})}function ht(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var vt,gt=null;function wt(e,t){return(e.__esModule||ye&&"Module"===e[Symbol.toStringTag])&&(e=e.default),r(e)?t.extend(e):e}function kt(e){if(t(e))for(var n=0;n<e.length;n++){var a=e[n];if(i(a)&&(i(a.componentOptions)||ct(a)))return a}}function It(e,t){vt.$on(e,t)}function Dt(e,t){vt.$off(e,t)}function Mt(e,t){var n=vt;return function a(){null!==t.apply(null,arguments)&&n.$off(e,a)}}function Pt(e,t,n){vt=e,Ve(t,n||{},It,Dt,Mt,e),vt=void 0}var At=null;function Ct(e){var t=At;return At=e,function(){At=t}}function xt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function _t(e,t){if(t){if(e._directInactive=!1,xt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)_t(e.$children[n]);Rt(e,"activated")}}function Et(e,t){if(!(t&&(e._directInactive=!0,xt(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)Et(e.$children[n]);Rt(e,"deactivated")}}function Rt(e,t,n,a){void 0===a&&(a=!0),he();var i=re;a&&ue(e);var s=e.$options[t],p="".concat(t," hook");if(s)for(var y=0,r=s.length;y<r;y++)Gt(s[y],e,n||null,e,p);e._hasHookEvent&&e.$emit("hook:"+t),a&&ue(i),ve()}var Ut=[],Ot=[],Bt={},qt=!1,Ft=!1,Lt=0,Vt=0,$t=Date.now;if(H&&!W){var Nt=window.performance;Nt&&"function"==typeof Nt.now&&$t()>document.createEvent("Event").timeStamp&&($t=function(){return Nt.now()})}var Kt=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function zt(){var e,t;for(Vt=$t(),Ft=!0,Ut.sort(Kt),Lt=0;Lt<Ut.length;Lt++)(e=Ut[Lt]).before&&e.before(),t=e.id,Bt[t]=null,e.run();var n=Ot.slice(),a=Ut.slice();Lt=Ut.length=Ot.length=0,Bt={},qt=Ft=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,_t(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a&&a._watcher===n&&a._isMounted&&!a._isDestroyed&&Rt(a,"updated")}}(a),be(),ie&&V.devtools&&ie.emit("flush")}var jt,Ht="watcher";"".concat(Ht," callback"),"".concat(Ht," getter"),"".concat(Ht," cleanup");var Qt=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=jt,!e&&jt&&(this.index=(jt.scopes||(jt.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=jt;try{return jt=this,e()}finally{jt=t}}},e.prototype.on=function(){jt=this},e.prototype.off=function(){jt=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Wt(e,t,n){he();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{if(!1===i[s].call(a,e,t,n))return}catch(e){Yt(e,a,"errorCaptured hook")}}Yt(e,t,n)}finally{ve()}}function Gt(e,t,n,a,i){var s;try{(s=n?e.apply(t,n):e.call(t))&&!s._isVue&&m(s)&&!s._handled&&(s.catch((function(e){return Wt(e,a,i+" (Promise/async)")})),s._handled=!0)}catch(e){Wt(e,a,i)}return s}function Yt(e,t,n){if(V.errorHandler)try{return V.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Xt(t)}Xt(e)}function Xt(e,t,n){if(!H||"undefined"==typeof console)throw e;console.error(e)}var Jt,Zt=!1,en=[],tn=!1;function nn(){tn=!1;var e=en.slice(0);en.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&se(Promise)){var an=Promise.resolve();Jt=function(){an.then(nn),X&&setTimeout(_)},Zt=!0}else if(W||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Jt="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(nn)}:function(){setTimeout(nn,0)};else{var sn=1,pn=new MutationObserver(nn),yn=document.createTextNode(String(sn));pn.observe(yn,{characterData:!0}),Jt=function(){sn=(sn+1)%2,yn.data=String(sn)},Zt=!0}function rn(e,t){var n;if(en.push((function(){if(e)try{e.call(t)}catch(e){Wt(e,t,"nextTick")}else n&&n(t)})),tn||(tn=!0,Jt()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function un(e){return function(t,n){if(void 0===n&&(n=re),n)return function(e,t,n){var a=e.$options;a[t]=Fn(a[t],n)}(n,e,t)}}un("beforeMount"),un("mounted"),un("beforeUpdate"),un("updated"),un("beforeDestroy"),un("destroyed"),un("activated"),un("deactivated"),un("serverPrefetch"),un("renderTracked"),un("renderTriggered"),un("errorCaptured");var on=new pe;function ln(e){return mn(e,on),on.clear(),e}function mn(e,n){var a,i,s=t(e);if(!(!s&&!r(e)||e.__v_skip||Object.isFrozen(e)||e instanceof oe)){if(e.__ob__){var p=e.__ob__.dep.id;if(n.has(p))return;n.add(p)}if(s)for(a=e.length;a--;)mn(e[a],n);else if(Be(e))mn(e.value,n);else for(a=(i=Object.keys(e)).length;a--;)mn(e[i[a]],n)}}var cn=0,dn=function(){function e(e,t,n,a,i){var s;void 0===(s=jt&&!jt._vm?jt:e?e._scope:void 0)&&(s=jt),s&&s.active&&s.effects.push(this),(this.vm=e)&&i&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++cn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new pe,this.newDepIds=new pe,this.expression="",y(t)?this.getter=t:(this.getter=function(e){if(!z.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=_)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;he(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Wt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&ln(e),ve(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==Bt[t]&&(e!==fe.target||!e.noRecurse)){if(Bt[t]=!0,Ft){for(var n=Ut.length-1;n>Lt&&Ut[n].id>e.id;)n--;Ut.splice(n+1,0,e)}else Ut.push(e);qt||(qt=!0,rn(zt))}}(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||r(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');Gt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&S(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}(),Tn={enumerable:!0,configurable:!0,get:_,set:_};function bn(e,t,n){Tn.get=function(){return this[t][n]},Tn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Tn)}function fn(n){var a=n.$options;if(a.props&&function(e,t){var n=e.$options.propsData||{},a=e._props=Ue({}),i=e.$options._propKeys=[];!e.$parent||Me(!1);var s=function(s){i.push(s);var p=Kn(s,t,n,e);xe(a,s,p),s in e||bn(e,"_props",s)};for(var p in t)s(p);Me(!0)}(n,a.props),function(t){var n=t.$options,a=n.setup;if(a){var i=t._setupContext=function(t){return{get attrs(){if(!t._attrsProxy){var n=t._attrsProxy={};K(n,"_v_attr_proxy",!0),ft(n,t.$attrs,e,t,"$attrs")}return t._attrsProxy},get listeners(){return t._listenersProxy||ft(t._listenersProxy={},t.$listeners,e,t,"$listeners"),t._listenersProxy},get slots(){return function(e){return e._slotsProxy||ht(e._slotsProxy={},e.$scopedSlots),e._slotsProxy}(t)},emit:P(t.$emit,t),expose:function(e){e&&Object.keys(e).forEach((function(n){return qe(t,e,n)}))}}}(t);ue(t),he();var s=Gt(a,null,[t._props||Ue({}),i],t,"setup");if(ve(),ue(),y(s))n.render=s;else if(r(s))if(t._setupState=s,s.__sfc){var p=t._setupProxy={};for(var u in s)"__sfc"!==u&&qe(p,s,u)}else for(var u in s)N(u)||qe(t,s,u)}}(n),a.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?_:P(t[n],e)}(n,a.methods),a.data)!function(e){var t=e.$options.data;o(t=e._data=y(t)?function(e,t){he();try{return e.call(t,t)}catch(e){return Wt(e,t,"data()"),{}}finally{ve()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);i--;){var s=n[i];a&&v(a,s)||N(s)||bn(e,"_data",s)}var p=Ce(t);p&&p.vmCount++}(n);else{var i=Ce(n._data={});i&&i.vmCount++}a.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ae();for(var i in t){var s=t[i],p=y(s)?s:s.get;a||(n[i]=new dn(e,p||_,_,Sn)),i in e||hn(e,i,s)}}(n,a.computed),a.watch&&a.watch!==ee&&function(e,n){for(var a in n){var i=n[a];if(t(i))for(var s=0;s<i.length;s++)wn(e,a,i[s]);else wn(e,a,i)}}(n,a.watch)}var Sn={lazy:!0};function hn(e,t,n){var a=!ae();y(n)?(Tn.get=a?vn(t):gn(n),Tn.set=_):(Tn.get=n.get?a&&!1!==n.cache?vn(t):gn(n.get):_,Tn.set=n.set||_),Object.defineProperty(e,t,Tn)}function vn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function gn(e){return function(){return e.call(this,this)}}function wn(e,t,n,a){return o(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}function kn(e,t){if(e){for(var n=Object.create(null),a=ye?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var s=a[i];if("__ob__"!==s){var p=e[s].from;if(p in t._provided)n[s]=t._provided[p];else if("default"in e[s]){var r=e[s].default;n[s]=y(r)?r.call(t):r}}}return n}}var In=0;function Dn(e){var t=e.options;if(e.super){var n=Dn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&C(e.extendOptions,a),(t=e.options=$n(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Mn(n,a,i,p,y){var r,u=this,o=y.options;v(p,"_uid")?(r=Object.create(p))._original=p:(r=p,p=p._original);var l=s(o._compiled),m=!l;this.data=n,this.props=a,this.children=i,this.parent=p,this.listeners=n.on||e,this.injections=kn(o.inject,p),this.slots=function(){return u.$slots||dt(p,n.scopedSlots,u.$slots=lt(i,p)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return dt(p,n.scopedSlots,this.slots())}}),l&&(this.$options=o,this.$slots=this.slots(),this.$scopedSlots=dt(p,n.scopedSlots,this.$slots)),o._scopeId?this._c=function(e,n,a,i){var s=We(r,e,n,a,i,m);return s&&!t(s)&&(s.fnScopeId=o._scopeId,s.fnContext=p),s}:this._c=function(e,t,n,a){return We(r,e,t,n,a,m)}}function Pn(e,t,n,a,i){var s=ce(e);return s.fnContext=n,s.fnOptions=a,t.slot&&((s.data||(s.data={})).slot=t.slot),s}function An(e,t){for(var n in t)e[k(n)]=t[n]}function Cn(e){return e.name||e.__name||e._componentTag}ot(Mn.prototype);var xn={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;xn.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;return i(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(n)}(e,At)).$mount(t?e.elm:void 0,t)},prepatch:function(t,n){var a=n.componentOptions;!function(t,n,a,i,s){var p=i.data.scopedSlots,y=t.$scopedSlots,r=!!(p&&!p.$stable||y!==e&&!y.$stable||p&&t.$scopedSlots.$key!==p.$key||!p&&t.$scopedSlots.$key),u=!!(s||t.$options._renderChildren||r),o=t.$vnode;t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=s;var l=i.data.attrs||e;t._attrsProxy&&ft(t._attrsProxy,l,o.data&&o.data.attrs||e,t,"$attrs")&&(u=!0),t.$attrs=l,a=a||e;var m=t.$options._parentListeners;if(t._listenersProxy&&ft(t._listenersProxy,a,m||e,t,"$listeners"),t.$listeners=t.$options._parentListeners=a,Pt(t,a,m),n&&t.$options.props){Me(!1);for(var c=t._props,d=t.$options._propKeys||[],T=0;T<d.length;T++){var b=d[T],f=t.$options.props;c[b]=Kn(b,f,n,t)}Me(!0),t.$options.propsData=n}u&&(t.$slots=lt(s,i.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,a.propsData,a.listeners,n,a.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,Rt(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,Ot.push(t)):_t(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?Et(t,!0):t.$destroy())}},_n=Object.keys(xn);function En(n,p,y,u,o){if(!a(n)){var l=y.$options._base;if(r(n)&&(n=l.extend(n)),"function"==typeof n){var c;if(a(n.cid)&&(n=function(e,t){if(s(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=gt;if(n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var p=e.owners=[n],y=!0,u=null,o=null;n.$on("hook:destroyed",(function(){return S(p,n)}));var l=function(e){for(var t=0,n=p.length;t<n;t++)p[t].$forceUpdate();e&&(p.length=0,null!==u&&(clearTimeout(u),u=null),null!==o&&(clearTimeout(o),o=null))},c=B((function(n){e.resolved=wt(n,t),y?p.length=0:l(!0)})),d=B((function(t){i(e.errorComp)&&(e.error=!0,l(!0))})),T=e(c,d);return r(T)&&(m(T)?a(e.resolved)&&T.then(c,d):m(T.component)&&(T.component.then(c,d),i(T.error)&&(e.errorComp=wt(T.error,t)),i(T.loading)&&(e.loadingComp=wt(T.loading,t),0===T.delay?e.loading=!0:u=setTimeout((function(){u=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,l(!1))}),T.delay||200)),i(T.timeout)&&(o=setTimeout((function(){o=null,a(e.resolved)&&d(null)}),T.timeout)))),y=!1,e.loading?e.loadingComp:e.resolved}}(c=n,l),void 0===n))return function(e,t,n,a,i){var s=le();return s.asyncFactory=e,s.asyncMeta={data:t,context:n,children:a,tag:i},s}(c,p,y,u,o);p=p||{},Dn(n),i(p.model)&&function(e,n){var a=e.model&&e.model.prop||"value",s=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[a]=n.model.value;var p=n.on||(n.on={}),y=p[s],r=n.model.callback;i(y)?(t(y)?-1===y.indexOf(r):y!==r)&&(p[s]=[r].concat(y)):p[s]=r}(n.options,p);var d=function(e,t,n){var s=t.options.props;if(!a(s)){var p={},y=e.attrs,r=e.props;if(i(y)||i(r))for(var u in s){var o=M(u);Ne(p,r,u,o,!0)||Ne(p,y,u,o,!1)}return p}}(p,n);if(s(n.options.functional))return function(n,a,s,p,y){var r=n.options,u={},o=r.props;if(i(o))for(var l in o)u[l]=Kn(l,o,a||e);else i(s.attrs)&&An(u,s.attrs),i(s.props)&&An(u,s.props);var m=new Mn(s,u,y,p,n),c=r.render.call(null,m._c,m);if(c instanceof oe)return Pn(c,s,m.parent,r);if(t(c)){for(var d=Ke(c)||[],T=new Array(d.length),b=0;b<d.length;b++)T[b]=Pn(d[b],s,m.parent,r);return T}}(n,d,p,y,u);var T=p.on;if(p.on=p.nativeOn,s(n.options.abstract)){var b=p.slot;p={},b&&(p.slot=b)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<_n.length;n++){var a=_n[n],i=t[a],s=xn[a];i===s||i&&i._merged||(t[a]=i?Rn(s,i):s)}}(p);var f=Cn(n.options)||o;return new oe("vue-component-".concat(n.cid).concat(f?"-".concat(f):""),p,void 0,void 0,void 0,y,{Ctor:n,propsData:d,listeners:T,tag:o,children:u},c)}}}function Rn(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}var Un=_,On=V.optionMergeStrategies;function Bn(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var a,i,s,p=ye?Reflect.ownKeys(t):Object.keys(t),y=0;y<p.length;y++)"__ob__"!==(a=p[y])&&(i=e[a],s=t[a],n&&v(e,a)?i!==s&&o(i)&&o(s)&&Bn(i,s):_e(e,a,s));return e}function qn(e,t,n){return n?function(){var a=y(t)?t.call(n,n):t,i=y(e)?e.call(n,n):e;return a?Bn(a,i):i}:t?e?function(){return Bn(y(t)?t.call(this,this):t,y(e)?e.call(this,this):e)}:t:e}function Fn(e,n){var a=n?e?e.concat(n):t(n)?n:[n]:e;return a?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(a):a}function Ln(e,t,n,a){var i=Object.create(e||null);return t?C(i,t):i}On.data=function(e,t,n){return n?qn(e,t,n):t&&"function"!=typeof t?e:qn(e,t)},L.forEach((function(e){On[e]=Fn})),F.forEach((function(e){On[e+"s"]=Ln})),On.watch=function(e,n,a,i){if(e===ee&&(e=void 0),n===ee&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var s={};for(var p in C(s,e),n){var y=s[p],r=n[p];y&&!t(y)&&(y=[y]),s[p]=y?y.concat(r):t(r)?r:[r]}return s},On.props=On.methods=On.inject=On.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return C(i,e),t&&C(i,t),i},On.provide=function(e,t){return e?function(){var n=Object.create(null);return Bn(n,y(e)?e.call(this):e),t&&Bn(n,y(t)?t.call(this):t,!1),n}:t};var Vn=function(e,t){return void 0===t?e:t};function $n(e,n,a){if(y(n)&&(n=n.options),function(e,n){var a=e.props;if(a){var i,s,p={};if(t(a))for(i=a.length;i--;)"string"==typeof(s=a[i])&&(p[k(s)]={type:null});else if(o(a))for(var y in a)s=a[y],p[k(y)]=o(s)?s:{type:s};e.props=p}}(n),function(e,n){var a=e.inject;if(a){var i=e.inject={};if(t(a))for(var s=0;s<a.length;s++)i[a[s]]={from:a[s]};else if(o(a))for(var p in a){var y=a[p];i[p]=o(y)?C({from:p},y):{from:y}}}}(n),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];y(a)&&(t[n]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=$n(e,n.extends,a)),n.mixins))for(var i=0,s=n.mixins.length;i<s;i++)e=$n(e,n.mixins[i],a);var p,r={};for(p in e)u(p);for(p in n)v(e,p)||u(p);function u(t){var i=On[t]||Vn;r[t]=i(e[t],n[t],a,t)}return r}function Nn(e,t,n,a){if("string"==typeof n){var i=e[t];if(v(i,n))return i[n];var s=k(n);if(v(i,s))return i[s];var p=I(s);return v(i,p)?i[p]:i[n]||i[s]||i[p]}}function Kn(e,t,n,a){var i=t[e],s=!v(n,e),p=n[e],r=Qn(Boolean,i.type);if(r>-1)if(s&&!v(i,"default"))p=!1;else if(""===p||p===M(e)){var u=Qn(String,i.type);(u<0||r<u)&&(p=!0)}if(void 0===p){p=function(e,t,n){if(v(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:y(a)&&"Function"!==jn(t.type)?a.call(e):a}}(a,i,e);var o=De;Me(!0),Ce(p),Me(o)}return p}var zn=/^\s*function (\w+)/;function jn(e){var t=e&&e.toString().match(zn);return t?t[1]:""}function Hn(e,t){return jn(e)===jn(t)}function Qn(e,n){if(!t(n))return Hn(n,e)?0:-1;for(var a=0,i=n.length;a<i;a++)if(Hn(n[a],e))return a;return-1}function Wn(e){this._init(e)}function Gn(e){return e&&(Cn(e.Ctor.options)||e.tag)}function Yn(e,n){return t(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:(a=e,!("[object RegExp]"!==u.call(a))&&e.test(n));var a}function Xn(e,t){var n=e.cache,a=e.keys,i=e._vnode;for(var s in n){var p=n[s];if(p){var y=p.name;y&&!t(y)&&Jn(n,s,a,i)}}}function Jn(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,S(n,t)}!function(t){t.prototype._init=function(t){var n=this;n._uid=In++,n._isVue=!0,n.__v_skip=!0,n._scope=new Qt(!0),n._scope._vm=!0,t&&t._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(n,t):n.$options=$n(Dn(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Pt(e,t)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,a=t.$vnode=n._parentVnode,i=a&&a.context;t.$slots=lt(n._renderChildren,i),t.$scopedSlots=a?dt(t.$parent,a.data.scopedSlots,t.$slots):e,t._c=function(e,n,a,i){return We(t,e,n,a,i,!1)},t.$createElement=function(e,n,a,i){return We(t,e,n,a,i,!0)};var s=a&&a.data;xe(t,"$attrs",s&&s.attrs||e,null,!0),xe(t,"$listeners",n._parentListeners||e,null,!0)}(n),Rt(n,"beforeCreate",void 0,!1),function(e){var t=kn(e.$options.inject,e);t&&(Me(!1),Object.keys(t).forEach((function(n){xe(e,n,t[n])})),Me(!0))}(n),fn(n),function(e){var t=e.$options.provide;if(t){var n=y(t)?t.call(e):t;if(!r(n))return;for(var a=function(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}(e),i=ye?Reflect.ownKeys(n):Object.keys(n),s=0;s<i.length;s++){var p=i[s];Object.defineProperty(a,p,Object.getOwnPropertyDescriptor(n,p))}}}(n),Rt(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Wn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=_e,e.prototype.$delete=Ee,e.prototype.$watch=function(e,t,n){var a=this;if(o(t))return wn(a,e,t,n);(n=n||{}).user=!0;var i=new dn(a,e,t,n);if(n.immediate){var s='callback for immediate watcher "'.concat(i.expression,'"');he(),Gt(t,a,[i.value],a,s),ve()}return function(){i.teardown()}}}(Wn),function(e){var n=/^hook:/;e.prototype.$on=function(e,a){var i=this;if(t(e))for(var s=0,p=e.length;s<p;s++)i.$on(e[s],a);else(i._events[e]||(i._events[e]=[])).push(a),n.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,n){var a=this;if(!arguments.length)return a._events=Object.create(null),a;if(t(e)){for(var i=0,s=e.length;i<s;i++)a.$off(e[i],n);return a}var p,y=a._events[e];if(!y)return a;if(!n)return a._events[e]=null,a;for(var r=y.length;r--;)if((p=y[r])===n||p.fn===n){y.splice(r,1);break}return a},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?A(n):n;for(var a=A(arguments,1),i='event handler for "'.concat(e,'"'),s=0,p=n.length;s<p;s++)Gt(n[s],t,a,t,i)}return t}}(Wn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,s=Ct(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),s(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n);for(var p=n;p&&p.$vnode&&p.$parent&&p.$vnode===p.$parent._vnode;)p.$parent.$el=p.$el,p=p.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Rt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||S(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Rt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wn),function(e){ot(e.prototype),e.prototype.$nextTick=function(e){return rn(e,this)},e.prototype._render=function(){var e,n=this,a=n.$options,i=a.render,s=a._parentVnode;s&&n._isMounted&&(n.$scopedSlots=dt(n.$parent,s.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&ht(n._slotsProxy,n.$scopedSlots)),n.$vnode=s;try{ue(n),gt=n,e=i.call(n._renderProxy,n.$createElement)}catch(t){Wt(t,n,"render"),e=n._vnode}finally{gt=null,ue()}return t(e)&&1===e.length&&(e=e[0]),e instanceof oe||(e=le()),e.parent=s,e}}(Wn);var Zn=[String,RegExp,Array],ea={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Zn,exclude:Zn,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,i=e.keyToCache;if(a){var s=a.tag,p=a.componentInstance,y=a.componentOptions;t[i]={name:Gn(y),tag:s,componentInstance:p},n.push(i),this.max&&n.length>parseInt(this.max)&&Jn(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Jn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Xn(e,(function(e){return Yn(t,e)}))})),this.$watch("exclude",(function(t){Xn(e,(function(e){return!Yn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=kt(e),n=t&&t.componentOptions;if(n){var a=Gn(n),i=this.include,s=this.exclude;if(i&&(!a||!Yn(i,a))||s&&a&&Yn(s,a))return t;var p=this.cache,y=this.keys,r=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;p[r]?(t.componentInstance=p[r].componentInstance,S(y,r),y.push(r)):(this.vnodeToCache=t,this.keyToCache=r),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return V}};Object.defineProperty(e,"config",t),e.util={warn:Un,extend:C,mergeOptions:$n,defineReactive:xe},e.set=_e,e.delete=Ee,e.nextTick=rn,e.observable=function(e){return Ce(e),e},e.options=Object.create(null),F.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,ea),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=A(arguments,1);return n.unshift(this),y(e.install)?e.install.apply(e,n):y(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=$n(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var s=Cn(e)||Cn(n.options),p=function(e){this._init(e)};return(p.prototype=Object.create(n.prototype)).constructor=p,p.cid=t++,p.options=$n(n.options,e),p.super=n,p.options.props&&function(e){var t=e.options.props;for(var n in t)bn(e.prototype,"_props",n)}(p),p.options.computed&&function(e){var t=e.options.computed;for(var n in t)hn(e.prototype,n,t[n])}(p),p.extend=n.extend,p.mixin=n.mixin,p.use=n.use,F.forEach((function(e){p[e]=n[e]})),s&&(p.options.components[s]=p),p.superOptions=n.options,p.extendOptions=e,p.sealedOptions=C({},p.options),i[a]=p,p}}(e),function(e){F.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&o(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&y(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Wn),Object.defineProperty(Wn.prototype,"$isServer",{get:ae}),Object.defineProperty(Wn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wn,"FunctionalRenderContext",{value:Mn}),Wn.version="2.7.14";var ta=T("style,class"),na=T("input,textarea,option,select,progress"),aa=function(e,t,n){return"value"===n&&na(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},ia=T("contenteditable,draggable,spellcheck"),sa=T("events,caret,typing,plaintext-only"),pa=function(e,t){return la(t)||"false"===t?"false":"contenteditable"===e&&sa(t)?t:"true"},ya=T("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ra="http://www.w3.org/1999/xlink",ua=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},oa=function(e){return ua(e)?e.slice(6,e.length):""},la=function(e){return null==e||!1===e};function ma(e,t){return{staticClass:ca(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function ca(e,t){return e?t?e+" "+t:e:t||""}function da(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,s=e.length;a<s;a++)i(t=da(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):r(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Ta={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ba=T("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),fa=T("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Sa=function(e){return ba(e)||fa(e)};function ha(e){return fa(e)?"svg":"math"===e?"math":void 0}var va=Object.create(null),ga=T("text,number,password,search,email,tel,url");function wa(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var ka=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Ta[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Ia={create:function(e,t){Da(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Da(e,!0),Da(t))},destroy:function(e){Da(e,!0)}};function Da(e,n){var a=e.data.ref;if(i(a)){var s=e.context,p=e.componentInstance||e.elm,r=n?null:p,u=n?void 0:p;if(y(a))Gt(a,s,[r],s,"template ref function");else{var o=e.data.refInFor,l="string"==typeof a||"number"==typeof a,m=Be(a),c=s.$refs;if(l||m)if(o){var d=l?c[a]:a.value;n?t(d)&&S(d,p):t(d)?d.includes(p)||d.push(p):l?(c[a]=[p],Ma(s,a,c[a])):a.value=[p]}else if(l){if(n&&c[a]!==p)return;c[a]=u,Ma(s,a,r)}else if(m){if(n&&a.value!==p)return;a.value=r}}}}function Ma(e,t,n){var a=e._setupState;a&&v(a,t)&&(Be(a[t])?a[t].value=n:a[t]=n)}var Pa=new oe("",{},[]),Aa=["create","activate","update","remove","destroy"];function Ca(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=i(n=e.data)&&i(n=n.attrs)&&n.type,s=i(n=t.data)&&i(n=n.attrs)&&n.type;return a===s||ga(a)&&ga(s)}(e,t)||s(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function xa(e,t,n){var a,s,p={};for(a=t;a<=n;++a)i(s=e[a].key)&&(p[s]=a);return p}var _a={create:Ea,update:Ea,destroy:function(e){Ea(e,Pa)}};function Ea(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,s=e===Pa,p=t===Pa,y=Ua(e.data.directives,e.context),r=Ua(t.data.directives,t.context),u=[],o=[];for(n in r)a=y[n],i=r[n],a?(i.oldValue=a.value,i.oldArg=a.arg,Ba(i,"update",t,e),i.def&&i.def.componentUpdated&&o.push(i)):(Ba(i,"bind",t,e),i.def&&i.def.inserted&&u.push(i));if(u.length){var l=function(){for(var n=0;n<u.length;n++)Ba(u[n],"inserted",t,e)};s?$e(t,"insert",l):l()}if(o.length&&$e(t,"postpatch",(function(){for(var n=0;n<o.length;n++)Ba(o[n],"componentUpdated",t,e)})),!s)for(n in y)r[n]||Ba(y[n],"unbind",e,e,p)}(e,t)}var Ra=Object.create(null);function Ua(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++){if((a=e[n]).modifiers||(a.modifiers=Ra),i[Oa(a)]=a,t._setupState&&t._setupState.__sfc){var s=a.def||Nn(t,"_setupState","v-"+a.name);a.def="function"==typeof s?{bind:s,update:s}:s}a.def=a.def||Nn(t.$options,"directives",a.name)}return i}function Oa(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Ba(e,t,n,a,i){var s=e.def&&e.def[t];if(s)try{s(n.elm,e,n,a,i)}catch(a){Wt(a,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var qa=[Ia,_a];function Fa(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var p,y,r=t.elm,u=e.data.attrs||{},o=t.data.attrs||{};for(p in(i(o.__ob__)||s(o._v_attr_proxy))&&(o=t.data.attrs=C({},o)),o)y=o[p],u[p]!==y&&La(r,p,y,t.data.pre);for(p in(W||Y)&&o.value!==u.value&&La(r,"value",o.value),u)a(o[p])&&(ua(p)?r.removeAttributeNS(ra,oa(p)):ia(p)||r.removeAttribute(p))}}function La(e,t,n,a){a||e.tagName.indexOf("-")>-1?Va(e,t,n):ya(t)?la(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):ia(t)?e.setAttribute(t,pa(t,n)):ua(t)?la(n)?e.removeAttributeNS(ra,oa(t)):e.setAttributeNS(ra,t,n):Va(e,t,n)}function Va(e,t,n){if(la(n))e.removeAttribute(t);else{if(W&&!G&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var $a={create:Fa,update:Fa};function Na(e,t){var n=t.elm,s=t.data,p=e.data;if(!(a(s.staticClass)&&a(s.class)&&(a(p)||a(p.staticClass)&&a(p.class)))){var y=function(e){for(var t=e.data,n=e,a=e;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=ma(a.data,t));for(;i(n=n.parent);)n&&n.data&&(t=ma(t,n.data));return s=t.staticClass,p=t.class,i(s)||i(p)?ca(s,da(p)):"";var s,p}(t),r=n._transitionClasses;i(r)&&(y=ca(y,da(r))),y!==n._prevClass&&(n.setAttribute("class",y),n._prevClass=y)}}var Ka,za,ja,Ha,Qa,Wa,Ga={create:Na,update:Na},Ya=/[\w).+\-_$\]]/;function Xa(e){var t,n,a,i,s,p=!1,y=!1,r=!1,u=!1,o=0,l=0,m=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),p)39===t&&92!==n&&(p=!1);else if(y)34===t&&92!==n&&(y=!1);else if(r)96===t&&92!==n&&(r=!1);else if(u)47===t&&92!==n&&(u=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||o||l||m){switch(t){case 34:y=!0;break;case 39:p=!0;break;case 96:r=!0;break;case 40:m++;break;case 41:m--;break;case 91:l++;break;case 93:l--;break;case 123:o++;break;case 125:o--}if(47===t){for(var d=a-1,T=void 0;d>=0&&" "===(T=e.charAt(d));d--);T&&Ya.test(T)||(u=!0)}}else void 0===i?(c=a+1,i=e.slice(0,a).trim()):b();function b(){(s||(s=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==c&&b(),s)for(a=0;a<s.length;a++)i=Ja(i,s[a]);return i}function Ja(e,t){var n=t.indexOf("(");if(n<0)return'_f("'.concat(t,'")(').concat(e,")");var a=t.slice(0,n),i=t.slice(n+1);return'_f("'.concat(a,'")(').concat(e).concat(")"!==i?","+i:i)}function Za(e,t){console.error("[Vue compiler]: ".concat(e))}function ei(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function ti(e,t,n,a,i){(e.props||(e.props=[])).push(oi({name:t,value:n,dynamic:i},a)),e.plain=!1}function ni(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(oi({name:t,value:n,dynamic:i},a)),e.plain=!1}function ai(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(oi({name:t,value:n},a))}function ii(e,t,n,a,i,s,p,y){(e.directives||(e.directives=[])).push(oi({name:t,rawName:n,value:a,arg:i,isDynamicArg:s,modifiers:p},y)),e.plain=!1}function si(e,t,n){return n?"_p(".concat(t,',"').concat(e,'")'):e+t}function pi(t,n,a,i,s,p,y,r){var u;(i=i||e).right?r?n="(".concat(n,")==='click'?'contextmenu':(").concat(n,")"):"click"===n&&(n="contextmenu",delete i.right):i.middle&&(r?n="(".concat(n,")==='click'?'mouseup':(").concat(n,")"):"click"===n&&(n="mouseup")),i.capture&&(delete i.capture,n=si("!",n,r)),i.once&&(delete i.once,n=si("~",n,r)),i.passive&&(delete i.passive,n=si("&",n,r)),i.native?(delete i.native,u=t.nativeEvents||(t.nativeEvents={})):u=t.events||(t.events={});var o=oi({value:a.trim(),dynamic:r},y);i!==e&&(o.modifiers=i);var l=u[n];Array.isArray(l)?s?l.unshift(o):l.push(o):u[n]=l?s?[o,l]:[l,o]:o,t.plain=!1}function yi(e,t,n){var a=ri(e,":"+t)||ri(e,"v-bind:"+t);if(null!=a)return Xa(a);if(!1!==n){var i=ri(e,t);if(null!=i)return JSON.stringify(i)}}function ri(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,s=0,p=i.length;s<p;s++)if(i[s].name===t){i.splice(s,1);break}return n&&delete e.attrsMap[t],a}function ui(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var s=n[a];if(t.test(s.name))return n.splice(a,1),s}}function oi(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function li(e,t,n){var a=n||{},i=a.number,s="$$v",p=s;a.trim&&(p="(typeof ".concat(s," === 'string'")+"? ".concat(s,".trim()")+": ".concat(s,")")),i&&(p="_n(".concat(p,")"));var y=mi(t,p);e.model={value:"(".concat(t,")"),expression:JSON.stringify(t),callback:"function (".concat(s,") {").concat(y,"}")}}function mi(e,t){var n=function(e){if(e=e.trim(),Ka=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<Ka-1)return(Ha=e.lastIndexOf("."))>-1?{exp:e.slice(0,Ha),key:'"'+e.slice(Ha+1)+'"'}:{exp:e,key:null};for(za=e,Ha=Qa=Wa=0;!di();)Ti(ja=ci())?fi(ja):91===ja&&bi(ja);return{exp:e.slice(0,Qa),key:e.slice(Qa+1,Wa)}}(e);return null===n.key?"".concat(e,"=").concat(t):"$set(".concat(n.exp,", ").concat(n.key,", ").concat(t,")")}function ci(){return za.charCodeAt(++Ha)}function di(){return Ha>=Ka}function Ti(e){return 34===e||39===e}function bi(e){var t=1;for(Qa=Ha;!di();)if(Ti(e=ci()))fi(e);else if(91===e&&t++,93===e&&t--,0===t){Wa=Ha;break}}function fi(e){for(var t=e;!di()&&(e=ci())!==t;);}var Si,hi="__r",vi="__c";function gi(e,t,n){var a=Si;return function i(){null!==t.apply(null,arguments)&&Ii(e,i,n,a)}}var wi=Zt&&!(Z&&Number(Z[1])<=53);function ki(e,t,n,a){if(wi){var i=Vt,s=t;t=s._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return s.apply(this,arguments)}}Si.addEventListener(e,t,te?{capture:n,passive:a}:n)}function Ii(e,t,n,a){(a||Si).removeEventListener(e,t._wrapper||t,n)}function Di(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},s=e.data.on||{};Si=t.elm||e.elm,function(e){if(i(e[hi])){var t=W?"change":"input";e[t]=[].concat(e[hi],e[t]||[]),delete e[hi]}i(e[vi])&&(e.change=[].concat(e[vi],e.change||[]),delete e[vi])}(n),Ve(n,s,ki,Ii,gi,t.context),Si=void 0}}var Mi,Pi={create:Di,update:Di,destroy:function(e){return Di(e,Pa)}};function Ai(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,p,y=t.elm,r=e.data.domProps||{},u=t.data.domProps||{};for(n in(i(u.__ob__)||s(u._v_attr_proxy))&&(u=t.data.domProps=C({},u)),r)n in u||(y[n]="");for(n in u){if(p=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),p===r[n])continue;1===y.childNodes.length&&y.removeChild(y.childNodes[0])}if("value"===n&&"PROGRESS"!==y.tagName){y._value=p;var o=a(p)?"":String(p);Ci(y,o)&&(y.value=o)}else if("innerHTML"===n&&fa(y.tagName)&&a(y.innerHTML)){(Mi=Mi||document.createElement("div")).innerHTML="<svg>".concat(p,"</svg>");for(var l=Mi.firstChild;y.firstChild;)y.removeChild(y.firstChild);for(;l.firstChild;)y.appendChild(l.firstChild)}else if(p!==r[n])try{y[n]=p}catch(e){}}}}function Ci(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(i(a)){if(a.number)return d(n)!==d(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var xi={create:Ai,update:Ai},_i=g((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function Ei(e){var t=Ri(e.style);return e.staticStyle?C(e.staticStyle,t):t}function Ri(e){return Array.isArray(e)?x(e):"string"==typeof e?_i(e):e}var Ui,Oi=/^--/,Bi=/\s*!important$/,qi=function(e,t,n){if(Oi.test(t))e.style.setProperty(t,n);else if(Bi.test(n))e.style.setProperty(M(t),n.replace(Bi,""),"important");else{var a=Li(t);if(Array.isArray(n))for(var i=0,s=n.length;i<s;i++)e.style[a]=n[i];else e.style[a]=n}},Fi=["Webkit","Moz","ms"],Li=g((function(e){if(Ui=Ui||document.createElement("div").style,"filter"!==(e=k(e))&&e in Ui)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Fi.length;n++){var a=Fi[n]+t;if(a in Ui)return a}}));function Vi(e,t){var n=t.data,s=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(s.staticStyle)&&a(s.style))){var p,y,r=t.elm,u=s.staticStyle,o=s.normalizedStyle||s.style||{},l=u||o,m=Ri(t.data.style)||{};t.data.normalizedStyle=i(m.__ob__)?C({},m):m;var c=function(e,t){for(var n,a={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=Ei(i.data))&&C(a,n);(n=Ei(e.data))&&C(a,n);for(var s=e;s=s.parent;)s.data&&(n=Ei(s.data))&&C(a,n);return a}(t);for(y in l)a(c[y])&&qi(r,y,"");for(y in c)(p=c[y])!==l[y]&&qi(r,y,null==p?"":p)}}var $i={create:Vi,update:Vi},Ni=/\s+/;function Ki(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ni).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function zi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ni).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ji(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&C(t,Hi(e.name||"v")),C(t,e),t}return"string"==typeof e?Hi(e):void 0}}var Hi=g((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),Qi=H&&!G,Wi="transition",Gi="animation",Yi="transition",Xi="transitionend",Ji="animation",Zi="animationend";Qi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Yi="WebkitTransition",Xi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ji="WebkitAnimation",Zi="webkitAnimationEnd"));var es=H?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function ts(e){es((function(){es(e)}))}function ns(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Ki(e,t))}function as(e,t){e._transitionClasses&&S(e._transitionClasses,t),zi(e,t)}function is(e,t,n){var a=ps(e,t),i=a.type,s=a.timeout,p=a.propCount;if(!i)return n();var y=i===Wi?Xi:Zi,r=0,u=function(){e.removeEventListener(y,o),n()},o=function(t){t.target===e&&++r>=p&&u()};setTimeout((function(){r<p&&u()}),s+1),e.addEventListener(y,o)}var ss=/\b(transform|all)(,|$)/;function ps(e,t){var n,a=window.getComputedStyle(e),i=(a[Yi+"Delay"]||"").split(", "),s=(a[Yi+"Duration"]||"").split(", "),p=ys(i,s),y=(a[Ji+"Delay"]||"").split(", "),r=(a[Ji+"Duration"]||"").split(", "),u=ys(y,r),o=0,l=0;return t===Wi?p>0&&(n=Wi,o=p,l=s.length):t===Gi?u>0&&(n=Gi,o=u,l=r.length):l=(n=(o=Math.max(p,u))>0?p>u?Wi:Gi:null)?n===Wi?s.length:r.length:0,{type:n,timeout:o,propCount:l,hasTransform:n===Wi&&ss.test(a[Yi+"Property"])}}function ys(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return rs(t)+rs(e[n])})))}function rs(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function us(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var s=ji(e.data.transition);if(!a(s)&&!i(n._enterCb)&&1===n.nodeType){for(var p=s.css,u=s.type,o=s.enterClass,l=s.enterToClass,m=s.enterActiveClass,c=s.appearClass,T=s.appearToClass,b=s.appearActiveClass,f=s.beforeEnter,S=s.enter,h=s.afterEnter,v=s.enterCancelled,g=s.beforeAppear,w=s.appear,k=s.afterAppear,I=s.appearCancelled,D=s.duration,M=At,P=At.$vnode;P&&P.parent;)M=P.context,P=P.parent;var A=!M._isMounted||!e.isRootInsert;if(!A||w||""===w){var C=A&&c?c:o,x=A&&b?b:m,_=A&&T?T:l,E=A&&g||f,R=A&&y(w)?w:S,U=A&&k||h,O=A&&I||v,q=d(r(D)?D.enter:D),F=!1!==p&&!G,L=ms(R),V=n._enterCb=B((function(){F&&(as(n,_),as(n,x)),V.cancelled?(F&&as(n,C),O&&O(n)):U&&U(n),n._enterCb=null}));e.data.show||$e(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),R&&R(n,V)})),E&&E(n),F&&(ns(n,C),ns(n,x),ts((function(){as(n,C),V.cancelled||(ns(n,_),L||(ls(q)?setTimeout(V,q):is(n,u,V)))}))),e.data.show&&(t&&t(),R&&R(n,V)),F||L||V()}}}function os(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var s=ji(e.data.transition);if(a(s)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var p=s.css,y=s.type,u=s.leaveClass,o=s.leaveToClass,l=s.leaveActiveClass,m=s.beforeLeave,c=s.leave,T=s.afterLeave,b=s.leaveCancelled,f=s.delayLeave,S=s.duration,h=!1!==p&&!G,v=ms(c),g=d(r(S)?S.leave:S),w=n._leaveCb=B((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),h&&(as(n,o),as(n,l)),w.cancelled?(h&&as(n,u),b&&b(n)):(t(),T&&T(n)),n._leaveCb=null}));f?f(k):k()}function k(){w.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),m&&m(n),h&&(ns(n,u),ns(n,l),ts((function(){as(n,u),w.cancelled||(ns(n,o),v||(ls(g)?setTimeout(w,g):is(n,y,w)))}))),c&&c(n,w),h||v||w())}}function ls(e){return"number"==typeof e&&!isNaN(e)}function ms(e){if(a(e))return!1;var t=e.fns;return i(t)?ms(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function cs(e,t){!0!==t.data.show&&us(t)}var ds=function(e){var n,y,r={},u=e.modules,o=e.nodeOps;for(n=0;n<Aa.length;++n)for(r[Aa[n]]=[],y=0;y<u.length;++y)i(u[y][Aa[n]])&&r[Aa[n]].push(u[y][Aa[n]]);function l(e){var t=o.parentNode(e);i(t)&&o.removeChild(t,e)}function m(e,t,n,a,p,y,u){if(i(e.elm)&&i(y)&&(e=y[u]=ce(e)),e.isRootInsert=!p,!function(e,t,n,a){var p=e.data;if(i(p)){var y=i(e.componentInstance)&&p.keepAlive;if(i(p=p.hook)&&i(p=p.init)&&p(e,!1),i(e.componentInstance))return c(e,t),d(n,e.elm,a),s(y)&&function(e,t,n,a){for(var s,p=e;p.componentInstance;)if(i(s=(p=p.componentInstance._vnode).data)&&i(s=s.transition)){for(s=0;s<r.activate.length;++s)r.activate[s](Pa,p);t.push(p);break}d(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var l=e.data,m=e.children,T=e.tag;i(T)?(e.elm=e.ns?o.createElementNS(e.ns,T):o.createElement(T,e),h(e),b(e,m,t),i(l)&&S(e,t),d(n,e.elm,a)):s(e.isComment)?(e.elm=o.createComment(e.text),d(n,e.elm,a)):(e.elm=o.createTextNode(e.text),d(n,e.elm,a))}}function c(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(S(e,t),h(e)):(Da(e),t.push(e))}function d(e,t,n){i(e)&&(i(n)?o.parentNode(n)===e&&o.insertBefore(e,t,n):o.appendChild(e,t))}function b(e,n,a){if(t(n))for(var i=0;i<n.length;++i)m(n[i],a,e.elm,null,!0,n,i);else p(e.text)&&o.appendChild(e.elm,o.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function S(e,t){for(var a=0;a<r.create.length;++a)r.create[a](Pa,e);i(n=e.data.hook)&&(i(n.create)&&n.create(Pa,e),i(n.insert)&&t.push(e))}function h(e){var t;if(i(t=e.fnScopeId))o.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&o.setStyleScope(e.elm,t),n=n.parent;i(t=At)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&o.setStyleScope(e.elm,t)}function v(e,t,n,a,i,s){for(;a<=i;++a)m(n[a],s,e,t,!1,n,a)}function g(e){var t,n,a=e.data;if(i(a))for(i(t=a.hook)&&i(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)g(e.children[n])}function w(e,t,n){for(;t<=n;++t){var a=e[t];i(a)&&(i(a.tag)?(k(a),g(a)):l(a.elm))}}function k(e,t){if(i(t)||i(e.data)){var n,a=r.remove.length+1;for(i(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&l(e)}return n.listeners=t,n}(e.elm,a),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&k(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else l(e.elm)}function I(e,t,n,a){for(var s=n;s<a;s++){var p=t[s];if(i(p)&&Ca(e,p))return s}}function D(e,t,n,p,y,u){if(e!==t){i(t.elm)&&i(p)&&(t=p[y]=ce(t));var l=t.elm=e.elm;if(s(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?A(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,d=t.data;i(d)&&i(c=d.hook)&&i(c=c.prepatch)&&c(e,t);var T=e.children,b=t.children;if(i(d)&&f(t)){for(c=0;c<r.update.length;++c)r.update[c](e,t);i(c=d.hook)&&i(c=c.update)&&c(e,t)}a(t.text)?i(T)&&i(b)?T!==b&&function(e,t,n,s,p){for(var y,r,u,l=0,c=0,d=t.length-1,T=t[0],b=t[d],f=n.length-1,S=n[0],h=n[f],g=!p;l<=d&&c<=f;)a(T)?T=t[++l]:a(b)?b=t[--d]:Ca(T,S)?(D(T,S,s,n,c),T=t[++l],S=n[++c]):Ca(b,h)?(D(b,h,s,n,f),b=t[--d],h=n[--f]):Ca(T,h)?(D(T,h,s,n,f),g&&o.insertBefore(e,T.elm,o.nextSibling(b.elm)),T=t[++l],h=n[--f]):Ca(b,S)?(D(b,S,s,n,c),g&&o.insertBefore(e,b.elm,T.elm),b=t[--d],S=n[++c]):(a(y)&&(y=xa(t,l,d)),a(r=i(S.key)?y[S.key]:I(S,t,l,d))?m(S,s,e,T.elm,!1,n,c):Ca(u=t[r],S)?(D(u,S,s,n,c),t[r]=void 0,g&&o.insertBefore(e,u.elm,T.elm)):m(S,s,e,T.elm,!1,n,c),S=n[++c]);l>d?v(e,a(n[f+1])?null:n[f+1].elm,n,c,f,s):c>f&&w(t,l,d)}(l,T,b,n,u):i(b)?(i(e.text)&&o.setTextContent(l,""),v(l,null,b,0,b.length-1,n)):i(T)?w(T,0,T.length-1):i(e.text)&&o.setTextContent(l,""):e.text!==t.text&&o.setTextContent(l,t.text),i(d)&&i(c=d.hook)&&i(c=c.postpatch)&&c(e,t)}}}function M(e,t,n){if(s(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var P=T("attrs,class,staticClass,staticStyle,key");function A(e,t,n,a){var p,y=t.tag,r=t.data,u=t.children;if(a=a||r&&r.pre,t.elm=e,s(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(r)&&(i(p=r.hook)&&i(p=p.init)&&p(t,!0),i(p=t.componentInstance)))return c(t,n),!0;if(i(y)){if(i(u))if(e.hasChildNodes())if(i(p=r)&&i(p=p.domProps)&&i(p=p.innerHTML)){if(p!==e.innerHTML)return!1}else{for(var o=!0,l=e.firstChild,m=0;m<u.length;m++){if(!l||!A(l,u[m],n,a)){o=!1;break}l=l.nextSibling}if(!o||l)return!1}else b(t,u,n);if(i(r)){var d=!1;for(var T in r)if(!P(T)){d=!0,S(t,n);break}!d&&r.class&&ln(r.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,p){if(!a(t)){var y,u=!1,l=[];if(a(e))u=!0,m(t,l);else{var c=i(e.nodeType);if(!c&&Ca(e,t))D(e,t,l,null,null,p);else{if(c){if(1===e.nodeType&&e.hasAttribute(q)&&(e.removeAttribute(q),n=!0),s(n)&&A(e,t,l))return M(t,l,!0),e;y=e,e=new oe(o.tagName(y).toLowerCase(),{},[],void 0,y)}var d=e.elm,T=o.parentNode(d);if(m(t,l,d._leaveCb?null:T,o.nextSibling(d)),i(t.parent))for(var b=t.parent,S=f(t);b;){for(var h=0;h<r.destroy.length;++h)r.destroy[h](b);if(b.elm=t.elm,S){for(var v=0;v<r.create.length;++v)r.create[v](Pa,b);var k=b.data.hook.insert;if(k.merged)for(var I=1;I<k.fns.length;I++)k.fns[I]()}else Da(b);b=b.parent}i(T)?w([e],0,0):i(e.tag)&&g(e)}}return M(t,l,u),t.elm}i(e)&&g(e)}}({nodeOps:ka,modules:[$a,Ga,Pi,xi,$i,H?{create:cs,activate:cs,remove:function(e,t){!0!==e.data.show?os(e,t):t()}}:{}].concat(qa)});G&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&ws(e,"input")}));var Ts={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?$e(n,"postpatch",(function(){Ts.componentUpdated(e,t,n)})):bs(e,t,n.context),e._vOptions=[].map.call(e.options,hs)):("textarea"===n.tag||ga(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",vs),e.addEventListener("compositionend",gs),e.addEventListener("change",gs),G&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){bs(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,hs);i.some((function(e,t){return!U(e,a[t])}))&&(e.multiple?t.value.some((function(e){return Ss(e,i)})):t.value!==t.oldValue&&Ss(t.value,i))&&ws(e,"change")}}};function bs(e,t,n){fs(e,t),(W||Y)&&setTimeout((function(){fs(e,t)}),0)}function fs(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var s,p,y=0,r=e.options.length;y<r;y++)if(p=e.options[y],i)s=O(a,hs(p))>-1,p.selected!==s&&(p.selected=s);else if(U(hs(p),a))return void(e.selectedIndex!==y&&(e.selectedIndex=y));i||(e.selectedIndex=-1)}}function Ss(e,t){return t.every((function(t){return!U(t,e)}))}function hs(e){return"_value"in e?e._value:e.value}function vs(e){e.target.composing=!0}function gs(e){e.target.composing&&(e.target.composing=!1,ws(e.target,"input"))}function ws(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function ks(e){return!e.componentInstance||e.data&&e.data.transition?e:ks(e.componentInstance._vnode)}var Is={model:Ts,show:{bind:function(e,t,n){var a=t.value,i=(n=ks(n)).data&&n.data.transition,s=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,us(n,(function(){e.style.display=s}))):e.style.display=a?s:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=ks(n)).data&&n.data.transition?(n.data.show=!0,a?us(n,(function(){e.style.display=e.__vOriginalDisplay})):os(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}}},Ds={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ms(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Ms(kt(t.children)):e}function Ps(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var a in i)t[k(a)]=i[a];return t}function As(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Cs=function(e){return e.tag||ct(e)},xs=function(e){return"show"===e.name},_s={name:"transition",props:Ds,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Cs)).length){var a=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var s=Ms(i);if(!s)return i;if(this._leaving)return As(e,i);var y="__transition-".concat(this._uid,"-");s.key=null==s.key?s.isComment?y+"comment":y+s.tag:p(s.key)?0===String(s.key).indexOf(y)?s.key:y+s.key:s.key;var r=(s.data||(s.data={})).transition=Ps(this),u=this._vnode,o=Ms(u);if(s.data.directives&&s.data.directives.some(xs)&&(s.data.show=!0),o&&o.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(s,o)&&!ct(o)&&(!o.componentInstance||!o.componentInstance._vnode.isComment)){var l=o.data.transition=C({},r);if("out-in"===a)return this._leaving=!0,$e(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),As(e,i);if("in-out"===a){if(ct(s))return u;var m,c=function(){m()};$e(r,"afterEnter",c),$e(r,"enterCancelled",c),$e(l,"delayLeave",(function(e){m=e}))}}return i}}},Es=C({tag:String,moveClass:String},Ds);delete Es.mode;var Rs={props:Es,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=Ct(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],p=Ps(this),y=0;y<i.length;y++)(o=i[y]).tag&&null!=o.key&&0!==String(o.key).indexOf("__vlist")&&(s.push(o),n[o.key]=o,(o.data||(o.data={})).transition=p);if(a){var r=[],u=[];for(y=0;y<a.length;y++){var o;(o=a[y]).data.transition=p,o.data.pos=o.elm.getBoundingClientRect(),n[o.key]?r.push(o):u.push(o)}this.kept=e(t,null,r),this.removed=u}return e(t,null,s)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Us),e.forEach(Os),e.forEach(Bs),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;ns(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Xi,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Xi,e),n._moveCb=null,as(n,t))})}})))},methods:{hasMove:function(e,t){if(!Qi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){zi(n,e)})),Ki(n,t),n.style.display="none",this.$el.appendChild(n);var a=ps(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function Us(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Os(e){e.data.newPos=e.elm.getBoundingClientRect()}function Bs(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var s=e.elm.style;s.transform=s.WebkitTransform="translate(".concat(a,"px,").concat(i,"px)"),s.transitionDuration="0s"}}var qs={Transition:_s,TransitionGroup:Rs};Wn.config.mustUseProp=aa,Wn.config.isReservedTag=Sa,Wn.config.isReservedAttr=ta,Wn.config.getTagNamespace=ha,Wn.config.isUnknownElement=function(e){if(!H)return!0;if(Sa(e))return!1;if(e=e.toLowerCase(),null!=va[e])return va[e];var t=document.createElement(e);return e.indexOf("-")>-1?va[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:va[e]=/HTMLUnknownElement/.test(t.toString())},C(Wn.options.directives,Is),C(Wn.options.components,qs),Wn.prototype.__patch__=H?ds:_,Wn.prototype.$mount=function(e,t){return function(e,t,n){var a;e.$el=t,e.$options.render||(e.$options.render=le),Rt(e,"beforeMount"),a=function(){e._update(e._render(),n)},new dn(e,a,_,{before:function(){e._isMounted&&!e._isDestroyed&&Rt(e,"beforeUpdate")}},!0),n=!1;var i=e._preWatchers;if(i)for(var s=0;s<i.length;s++)i[s].run();return null==e.$vnode&&(e._isMounted=!0,Rt(e,"mounted")),e}(this,e=e&&H?wa(e):void 0,t)},H&&setTimeout((function(){V.devtools&&ie&&ie.emit("init",Wn)}),0);var Fs,Ls=/\{\{((?:.|\r?\n)+?)\}\}/g,Vs=/[-.*+?^${}()|[\]\/\\]/g,$s=g((function(e){var t=e[0].replace(Vs,"\\$&"),n=e[1].replace(Vs,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),Ns={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=ri(e,"class");n&&(e.staticClass=JSON.stringify(n.replace(/\s+/g," ").trim()));var a=yi(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:".concat(e.staticClass,",")),e.classBinding&&(t+="class:".concat(e.classBinding,",")),t}},Ks={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=ri(e,"style");n&&(e.staticStyle=JSON.stringify(_i(n)));var a=yi(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:".concat(e.staticStyle,",")),e.styleBinding&&(t+="style:(".concat(e.styleBinding,"),")),t}},zs=T("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),js=T("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Hs=T("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Qs=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Ws=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Gs="[a-zA-Z_][\\-\\.0-9_a-zA-Z".concat($.source,"]*"),Ys="((?:".concat(Gs,"\\:)?").concat(Gs,")"),Xs=new RegExp("^<".concat(Ys)),Js=/^\s*(\/?)>/,Zs=new RegExp("^<\\/".concat(Ys,"[^>]*>")),ep=/^<!DOCTYPE [^>]+>/i,tp=/^<!\--/,np=/^<!\[/,ap=T("script,style,textarea",!0),ip={},sp={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},pp=/&(?:lt|gt|quot|amp|#39);/g,yp=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,rp=T("pre,textarea",!0),up=function(e,t){return e&&rp(e)&&"\n"===t[0]};function op(e,t){var n=t?yp:pp;return e.replace(n,(function(e){return sp[e]}))}var lp,mp,cp,dp,Tp,bp,fp,Sp,hp=/^@|^v-on:/,vp=/^v-|^@|^:|^#/,gp=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,wp=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,kp=/^\(|\)$/g,Ip=/^\[.*\]$/,Dp=/:(.*)$/,Mp=/^:|^\.|^v-bind:/,Pp=/\.[^.\]]+(?=[^\]]*$)/g,Ap=/^v-slot(:|$)|^#/,Cp=/[\r\n]/,xp=/[ \f\t\r\n]+/g,_p=g((function(e){return(Fs=Fs||document.createElement("div")).innerHTML=e,Fs.textContent})),Ep="_empty_";function Rp(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:Vp(t),rawAttrsMap:{},parent:n,children:[]}}function Up(e,t){lp=t.warn||Za,bp=t.isPreTag||E,fp=t.mustUseProp||E,Sp=t.getTagNamespace||E;t.isReservedTag;cp=ei(t.modules,"transformNode"),dp=ei(t.modules,"preTransformNode"),Tp=ei(t.modules,"postTransformNode"),mp=t.delimiters;var n,a,i=[],s=!1!==t.preserveWhitespace,p=t.whitespace,y=!1,r=!1;function u(e){if(o(e),y||e.processed||(e=Op(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&qp(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)p=e,u=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),u&&u.if&&qp(u,{exp:p.elseif,block:p});else{if(e.slotScope){var s=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[s]=e}a.children.push(e),e.parent=a}var p,u;e.children=e.children.filter((function(e){return!e.slotScope})),o(e),e.pre&&(y=!1),bp(e.tag)&&(r=!1);for(var l=0;l<Tp.length;l++)Tp[l](e,t)}function o(e){if(!r)for(var t=void 0;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],s=t.expectHTML,p=t.isUnaryTag||E,y=t.canBeLeftOpenTag||E,r=0,u=function(){if(n=e,a&&ap(a)){var u=0,m=a.toLowerCase(),c=ip[m]||(ip[m]=new RegExp("([\\s\\S]*?)(</"+m+"[^>]*>)","i"));w=e.replace(c,(function(e,n,a){return u=a.length,ap(m)||"noscript"===m||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),up(m,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""})),r+=e.length-w.length,e=w,l(m,r-u,r)}else{var d=e.indexOf("<");if(0===d){if(tp.test(e)){var T=e.indexOf("--\x3e");if(T>=0)return t.shouldKeepComment&&t.comment&&t.comment(e.substring(4,T),r,r+T+3),o(T+3),"continue"}if(np.test(e)){var b=e.indexOf("]>");if(b>=0)return o(b+2),"continue"}var f=e.match(ep);if(f)return o(f[0].length),"continue";var S=e.match(Zs);if(S){var h=r;return o(S[0].length),l(S[1],h,r),"continue"}var v=function(){var t=e.match(Xs);if(t){var n={tagName:t[1],attrs:[],start:r};o(t[0].length);for(var a=void 0,i=void 0;!(a=e.match(Js))&&(i=e.match(Ws)||e.match(Qs));)i.start=r,o(i[0].length),i.end=r,n.attrs.push(i);if(a)return n.unarySlash=a[1],o(a[0].length),n.end=r,n}}();if(v)return function(e){var n=e.tagName,r=e.unarySlash;s&&("p"===a&&Hs(n)&&l(a),y(n)&&a===n&&l(n));for(var u=p(n)||!!r,o=e.attrs.length,m=new Array(o),c=0;c<o;c++){var d=e.attrs[c],T=d[3]||d[4]||d[5]||"",b="a"===n&&"href"===d[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;m[c]={name:d[1],value:op(T,b)}}u||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:m,start:e.start,end:e.end}),a=n),t.start&&t.start(n,m,u,e.start,e.end)}(v),up(v.tagName,e)&&o(1),"continue"}var g=void 0,w=void 0,k=void 0;if(d>=0){for(w=e.slice(d);!(Zs.test(w)||Xs.test(w)||tp.test(w)||np.test(w)||(k=w.indexOf("<",1))<0);)d+=k,w=e.slice(d);g=e.substring(0,d)}d<0&&(g=e),g&&o(g.length),t.chars&&g&&t.chars(g,r-g.length,r)}if(e===n)return t.chars&&t.chars(e),"break"};e&&"break"!==u(););function o(t){r+=t,e=e.substring(t)}function l(e,n,s){var p,y;if(null==n&&(n=r),null==s&&(s=r),e)for(y=e.toLowerCase(),p=i.length-1;p>=0&&i[p].lowerCasedTag!==y;p--);else p=0;if(p>=0){for(var u=i.length-1;u>=p;u--)t.end&&t.end(i[u].tag,n,s);i.length=p,a=p&&i[p-1].tag}else"br"===y?t.start&&t.start(e,[],!0,n,s):"p"===y&&(t.start&&t.start(e,[],!1,n,s),t.end&&t.end(e,n,s))}l()}(e,{warn:lp,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,s,p,o,l){var m=a&&a.ns||Sp(e);W&&"svg"===m&&(s=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];$p.test(a.name)||(a.name=a.name.replace(Np,""),t.push(a))}return t}(s));var c,d=Rp(e,s,a);m&&(d.ns=m),"style"!==(c=d).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||ae()||(d.forbidden=!0);for(var T=0;T<dp.length;T++)d=dp[T](d,t)||d;y||(function(e){null!=ri(e,"v-pre")&&(e.pre=!0)}(d),d.pre&&(y=!0)),bp(d.tag)&&(r=!0),y?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(d):d.processed||(Bp(d),function(e){var t=ri(e,"v-if");if(t)e.if=t,qp(e,{exp:t,block:e});else{null!=ri(e,"v-else")&&(e.else=!0);var n=ri(e,"v-else-if");n&&(e.elseif=n)}}(d),function(e){null!=ri(e,"v-once")&&(e.once=!0)}(d)),n||(n=d),p?u(d):(a=d,i.push(d))},end:function(e,t,n){var s=i[i.length-1];i.length-=1,a=i[i.length-1],u(s)},chars:function(e,t,n){if(a&&(!W||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,u=a.children;if(e=r||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:_p(e):u.length?p?"condense"===p&&Cp.test(e)?"":" ":s?" ":"":""){r||"condense"!==p||(e=e.replace(xp," "));var o=void 0,l=void 0;!y&&" "!==e&&(o=function(e,t){var n=t?$s(t):Ls;if(n.test(e)){for(var a,i,s,p=[],y=[],r=n.lastIndex=0;a=n.exec(e);){(i=a.index)>r&&(y.push(s=e.slice(r,i)),p.push(JSON.stringify(s)));var u=Xa(a[1].trim());p.push("_s(".concat(u,")")),y.push({"@binding":u}),r=i+a[0].length}return r<e.length&&(y.push(s=e.slice(r)),p.push(JSON.stringify(s))),{expression:p.join("+"),tokens:y}}}(e,mp))?l={type:2,expression:o.expression,tokens:o.tokens,text:e}:" "===e&&u.length&&" "===u[u.length-1].text||(l={type:3,text:e}),l&&u.push(l)}}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};a.children.push(i)}}}),n}function Op(e,t){var n;!function(e){var t=yi(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=yi(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=ri(e,"scope"),e.slotScope=t||ri(e,"slot-scope")):(t=ri(e,"slot-scope"))&&(e.slotScope=t);var n,a=yi(e,"slot");if(a&&(e.slotTarget='""'===a?'"default"':a,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||ni(e,"slot",a,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot"))),"template"===e.tag){if(n=ui(e,Ap)){var i=Fp(n),s=i.name,p=i.dynamic;e.slotTarget=s,e.slotTargetDynamic=p,e.slotScope=n.value||Ep}}else if(n=ui(e,Ap)){var y=e.scopedSlots||(e.scopedSlots={}),r=Fp(n),u=r.name,o=(p=r.dynamic,y[u]=Rp("template",[],e));o.slotTarget=u,o.slotTargetDynamic=p,o.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=o,!0})),o.slotScope=n.value||Ep,e.children=[],e.plain=!1}}(e),"slot"===(n=e).tag&&(n.slotName=yi(n,"name")),function(e){var t;(t=yi(e,"is"))&&(e.component=t),null!=ri(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<cp.length;a++)e=cp[a](e,t)||e;return function(e){var t,n,a,i,s,p,y,r,u=e.attrsList;for(t=0,n=u.length;t<n;t++)if(a=i=u[t].name,s=u[t].value,vp.test(a))if(e.hasBindings=!0,(p=Lp(a.replace(vp,"")))&&(a=a.replace(Pp,"")),Mp.test(a))a=a.replace(Mp,""),s=Xa(s),(r=Ip.test(a))&&(a=a.slice(1,-1)),p&&(p.prop&&!r&&"innerHtml"===(a=k(a))&&(a="innerHTML"),p.camel&&!r&&(a=k(a)),p.sync&&(y=mi(s,"$event"),r?pi(e,'"update:"+('.concat(a,")"),y,null,!1,0,u[t],!0):(pi(e,"update:".concat(k(a)),y,null,!1,0,u[t]),M(a)!==k(a)&&pi(e,"update:".concat(M(a)),y,null,!1,0,u[t])))),p&&p.prop||!e.component&&fp(e.tag,e.attrsMap.type,a)?ti(e,a,s,u[t],r):ni(e,a,s,u[t],r);else if(hp.test(a))a=a.replace(hp,""),(r=Ip.test(a))&&(a=a.slice(1,-1)),pi(e,a,s,p,!1,0,u[t],r);else{var o=(a=a.replace(vp,"")).match(Dp),l=o&&o[1];r=!1,l&&(a=a.slice(0,-(l.length+1)),Ip.test(l)&&(l=l.slice(1,-1),r=!0)),ii(e,a,i,s,l,r,p,u[t])}else ni(e,a,JSON.stringify(s),u[t]),!e.component&&"muted"===a&&fp(e.tag,e.attrsMap.type,a)&&ti(e,a,"true",u[t])}(e),e}function Bp(e){var t;if(t=ri(e,"v-for")){var n=function(e){var t=e.match(gp);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(kp,""),i=a.match(wp);return i?(n.alias=a.replace(wp,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a,n}}(t);n&&C(e,n)}}function qp(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function Fp(e){var t=e.name.replace(Ap,"");return t||"#"!==e.name[0]&&(t="default"),Ip.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'.concat(t,'"'),dynamic:!1}}function Lp(e){var t=e.match(Pp);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function Vp(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var $p=/^xmlns:NS\d+/,Np=/^NS\d+:/;function Kp(e){return Rp(e.tag,e.attrsList.slice(),e.parent)}var zp,jp,Hp=[Ns,Ks,{preTransformNode:function(e,t){if("input"===e.tag){var n=e.attrsMap;if(!n["v-model"])return;var a=void 0;if((n[":type"]||n["v-bind:type"])&&(a=yi(e,"type")),n.type||a||!n["v-bind"]||(a="(".concat(n["v-bind"],").type")),a){var i=ri(e,"v-if",!0),s=i?"&&(".concat(i,")"):"",p=null!=ri(e,"v-else",!0),y=ri(e,"v-else-if",!0),r=Kp(e);Bp(r),ai(r,"type","checkbox"),Op(r,t),r.processed=!0,r.if="(".concat(a,")==='checkbox'")+s,qp(r,{exp:r.if,block:r});var u=Kp(e);ri(u,"v-for",!0),ai(u,"type","radio"),Op(u,t),qp(r,{exp:"(".concat(a,")==='radio'")+s,block:u});var o=Kp(e);return ri(o,"v-for",!0),ai(o,":type",a),Op(o,t),qp(r,{exp:i,block:o}),p?r.else=!0:y&&(r.elseif=y),r}}}}],Qp={expectHTML:!0,modules:Hp,directives:{model:function(e,t,n){var a=t.value,i=t.modifiers,s=e.tag,p=e.attrsMap.type;if(e.component)return li(e,a,i),!1;if("select"===s)!function(e,t,n){var a=n&&n.number,i='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;'+"return ".concat(a?"_n(val)":"val","})"),s="var $$selectedVal = ".concat(i,";");pi(e,"change",s="".concat(s," ").concat(mi(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]")),null,!0)}(e,a,i);else if("input"===s&&"checkbox"===p)!function(e,t,n){var a=n&&n.number,i=yi(e,"value")||"null",s=yi(e,"true-value")||"true",p=yi(e,"false-value")||"false";ti(e,"checked","Array.isArray(".concat(t,")")+"?_i(".concat(t,",").concat(i,")>-1")+("true"===s?":(".concat(t,")"):":_q(".concat(t,",").concat(s,")"))),pi(e,"change","var $$a=".concat(t,",")+"$$el=$event.target,"+"$$c=$$el.checked?(".concat(s,"):(").concat(p,");")+"if(Array.isArray($$a)){"+"var $$v=".concat(a?"_n("+i+")":i,",")+"$$i=_i($$a,$$v);"+"if($$el.checked){$$i<0&&(".concat(mi(t,"$$a.concat([$$v])"),")}")+"else{$$i>-1&&(".concat(mi(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))"),")}")+"}else{".concat(mi(t,"$$c"),"}"),null,!0)}(e,a,i);else if("input"===s&&"radio"===p)!function(e,t,n){var a=n&&n.number,i=yi(e,"value")||"null";i=a?"_n(".concat(i,")"):i,ti(e,"checked","_q(".concat(t,",").concat(i,")")),pi(e,"change",mi(t,i),null,!0)}(e,a,i);else if("input"===s||"textarea"===s)!function(e,t,n){var a=e.attrsMap.type,i=n||{},s=i.lazy,p=i.number,y=i.trim,r=!s&&"range"!==a,u=s?"change":"range"===a?hi:"input",o="$event.target.value";y&&(o="$event.target.value.trim()"),p&&(o="_n(".concat(o,")"));var l=mi(t,o);r&&(l="if($event.target.composing)return;".concat(l)),ti(e,"value","(".concat(t,")")),pi(e,u,l,null,!0),(y||p)&&pi(e,"blur","$forceUpdate()")}(e,a,i);else if(!V.isReservedTag(s))return li(e,a,i),!1;return!0},text:function(e,t){t.value&&ti(e,"textContent","_s(".concat(t.value,")"),t)},html:function(e,t){t.value&&ti(e,"innerHTML","_s(".concat(t.value,")"),t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:zs,mustUseProp:aa,canBeLeftOpenTag:js,isReservedTag:Sa,getTagNamespace:ha,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(Hp)},Wp=g((function(e){return T("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function Gp(e,t){e&&(zp=Wp(t.staticKeys||""),jp=t.isReservedTag||E,Yp(e),Xp(e,!1))}function Yp(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||b(e.tag)||!jp(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(zp))))}(e),1===e.type){if(!jp(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Yp(a),a.static||(e.static=!1)}if(e.ifConditions)for(t=1,n=e.ifConditions.length;t<n;t++){var i=e.ifConditions[t].block;Yp(i),i.static||(e.static=!1)}}}function Xp(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Xp(e.children[n],t||!!e.for);if(e.ifConditions)for(n=1,a=e.ifConditions.length;n<a;n++)Xp(e.ifConditions[n].block,t)}}var Jp=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Zp=/\([^)]*?\);*$/,ey=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,ty={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},ny={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},ay=function(e){return"if(".concat(e,")return null;")},iy={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:ay("$event.target !== $event.currentTarget"),ctrl:ay("!$event.ctrlKey"),shift:ay("!$event.shiftKey"),alt:ay("!$event.altKey"),meta:ay("!$event.metaKey"),left:ay("'button' in $event && $event.button !== 0"),middle:ay("'button' in $event && $event.button !== 1"),right:ay("'button' in $event && $event.button !== 2")};function sy(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var s in e){var p=py(e[s]);e[s]&&e[s].dynamic?i+="".concat(s,",").concat(p,","):a+='"'.concat(s,'":').concat(p,",")}return a="{".concat(a.slice(0,-1),"}"),i?n+"_d(".concat(a,",[").concat(i.slice(0,-1),"])"):n+a}function py(e){if(!e)return"function(){}";if(Array.isArray(e))return"[".concat(e.map((function(e){return py(e)})).join(","),"]");var t=ey.test(e.value),n=Jp.test(e.value),a=ey.test(e.value.replace(Zp,""));if(e.modifiers){var i="",s="",p=[],y=function(t){if(iy[t])s+=iy[t],ty[t]&&p.push(t);else if("exact"===t){var n=e.modifiers;s+=ay(["ctrl","shift","alt","meta"].filter((function(e){return!n[e]})).map((function(e){return"$event.".concat(e,"Key")})).join("||"))}else p.push(t)};for(var r in e.modifiers)y(r);p.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+"".concat(e.map(yy).join("&&"),")return null;")}(p)),s&&(i+=s);var u=t?"return ".concat(e.value,".apply(null, arguments)"):n?"return (".concat(e.value,").apply(null, arguments)"):a?"return ".concat(e.value):e.value;return"function($event){".concat(i).concat(u,"}")}return t||n?e.value:"function($event){".concat(a?"return ".concat(e.value):e.value,"}")}function yy(e){var t=parseInt(e,10);if(t)return"$event.keyCode!==".concat(t);var n=ty[e],a=ny[e];return"_k($event.keyCode,"+"".concat(JSON.stringify(e),",")+"".concat(JSON.stringify(n),",")+"$event.key,"+"".concat(JSON.stringify(a))+")"}var ry={on:function(e,t){e.wrapListeners=function(e){return"_g(".concat(e,",").concat(t.value,")")}},bind:function(e,t){e.wrapData=function(n){return"_b(".concat(n,",'").concat(e.tag,"',").concat(t.value,",").concat(t.modifiers&&t.modifiers.prop?"true":"false").concat(t.modifiers&&t.modifiers.sync?",true":"",")")}},cloak:_},uy=function(e){this.options=e,this.warn=e.warn||Za,this.transforms=ei(e.modules,"transformCode"),this.dataGenFns=ei(e.modules,"genData"),this.directives=C(C({},ry),e.directives);var t=e.isReservedTag||E;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function oy(e,t){var n=new uy(t),a=e?"script"===e.tag?"null":ly(e,n):'_c("div")';return{render:"with(this){return ".concat(a,"}"),staticRenderFns:n.staticRenderFns}}function ly(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return my(e,t);if(e.once&&!e.onceProcessed)return cy(e,t);if(e.for&&!e.forProcessed)return by(e,t);if(e.if&&!e.ifProcessed)return dy(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=vy(e,t),i="_t(".concat(n).concat(a?",function(){return ".concat(a,"}"):""),s=e.attrs||e.dynamicAttrs?ky((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:k(e.name),value:e.value,dynamic:e.dynamic}}))):null,p=e.attrsMap["v-bind"];return!s&&!p||a||(i+=",null"),s&&(i+=",".concat(s)),p&&(i+="".concat(s?"":",null",",").concat(p)),i+")"}(e,t);var n=void 0;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:vy(t,n,!0);return"_c(".concat(e,",").concat(fy(t,n)).concat(a?",".concat(a):"",")")}(e.component,e,t);else{var a=void 0,i=t.maybeComponent(e);(!e.plain||e.pre&&i)&&(a=fy(e,t));var s=void 0,p=t.options.bindings;i&&p&&!1!==p.__isScriptSetup&&(s=function(e,t){var n=k(t),a=I(n),i=function(i){return e[t]===i?t:e[n]===i?n:e[a]===i?a:void 0},s=i("setup-const")||i("setup-reactive-const");if(s)return s;var p=i("setup-let")||i("setup-ref")||i("setup-maybe-ref");return p||void 0}(p,e.tag)),s||(s="'".concat(e.tag,"'"));var y=e.inlineTemplate?null:vy(e,t,!0);n="_c(".concat(s).concat(a?",".concat(a):"").concat(y?",".concat(y):"",")")}for(var r=0;r<t.transforms.length;r++)n=t.transforms[r](e,n);return n}return vy(e,t)||"void 0"}function my(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return ".concat(ly(e,t),"}")),t.pre=n,"_m(".concat(t.staticRenderFns.length-1).concat(e.staticInFor?",true":"",")")}function cy(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return dy(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o(".concat(ly(e,t),",").concat(t.onceId++,",").concat(n,")"):ly(e,t)}return my(e,t)}function dy(e,t,n,a){return e.ifProcessed=!0,Ty(e.ifConditions.slice(),t,n,a)}function Ty(e,t,n,a){if(!e.length)return a||"_e()";var i=e.shift();return i.exp?"(".concat(i.exp,")?").concat(s(i.block),":").concat(Ty(e,t,n,a)):"".concat(s(i.block));function s(e){return n?n(e,t):e.once?cy(e,t):ly(e,t)}}function by(e,t,n,a){var i=e.for,s=e.alias,p=e.iterator1?",".concat(e.iterator1):"",y=e.iterator2?",".concat(e.iterator2):"";return e.forProcessed=!0,"".concat(a||"_l","((").concat(i,"),")+"function(".concat(s).concat(p).concat(y,"){")+"return ".concat((n||ly)(e,t))+"})"}function fy(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,i,s,p,y="directives:[",r=!1;for(a=0,i=n.length;a<i;a++){s=n[a],p=!0;var u=t.directives[s.name];u&&(p=!!u(e,s,t.warn)),p&&(r=!0,y+='{name:"'.concat(s.name,'",rawName:"').concat(s.rawName,'"').concat(s.value?",value:(".concat(s.value,"),expression:").concat(JSON.stringify(s.value)):"").concat(s.arg?",arg:".concat(s.isDynamicArg?s.arg:'"'.concat(s.arg,'"')):"").concat(s.modifiers?",modifiers:".concat(JSON.stringify(s.modifiers)):"","},"))}return r?y.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:".concat(e.key,",")),e.ref&&(n+="ref:".concat(e.ref,",")),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'.concat(e.tag,'",'));for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:".concat(ky(e.attrs),",")),e.props&&(n+="domProps:".concat(ky(e.props),",")),e.events&&(n+="".concat(sy(e.events,!1),",")),e.nativeEvents&&(n+="".concat(sy(e.nativeEvents,!0),",")),e.slotTarget&&!e.slotScope&&(n+="slot:".concat(e.slotTarget,",")),e.scopedSlots&&(n+="".concat(function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Sy(n)})),i=!!e.if;if(!a)for(var s=e.parent;s;){if(s.slotScope&&s.slotScope!==Ep||s.for){a=!0;break}s.if&&(i=!0),s=s.parent}var p=Object.keys(t).map((function(e){return hy(t[e],n)})).join(",");return"scopedSlots:_u([".concat(p,"]").concat(a?",null,true":"").concat(!a&&i?",null,false,".concat(function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(p)):"",")")}(e,e.scopedSlots,t),",")),e.model&&(n+="model:{value:".concat(e.model.value,",callback:").concat(e.model.callback,",expression:").concat(e.model.expression,"},")),e.inlineTemplate){var s=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=oy(n,t.options);return"inlineTemplate:{render:function(){".concat(a.render,"},staticRenderFns:[").concat(a.staticRenderFns.map((function(e){return"function(){".concat(e,"}")})).join(","),"]}")}}(e,t);s&&(n+="".concat(s,","))}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b(".concat(n,',"').concat(e.tag,'",').concat(ky(e.dynamicAttrs),")")),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Sy(e){return 1===e.type&&("slot"===e.tag||e.children.some(Sy))}function hy(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return dy(e,t,hy,"null");if(e.for&&!e.forProcessed)return by(e,t,hy);var a=e.slotScope===Ep?"":String(e.slotScope),i="function(".concat(a,"){")+"return ".concat("template"===e.tag?e.if&&n?"(".concat(e.if,")?").concat(vy(e,t)||"undefined",":undefined"):vy(e,t)||"undefined":ly(e,t),"}"),s=a?"":",proxy:true";return"{key:".concat(e.slotTarget||'"default"',",fn:").concat(i).concat(s,"}")}function vy(e,t,n,a,i){var s=e.children;if(s.length){var p=s[0];if(1===s.length&&p.for&&"template"!==p.tag&&"slot"!==p.tag){var y=n?t.maybeComponent(p)?",1":",0":"";return"".concat((a||ly)(p,t)).concat(y)}var r=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(gy(i)||i.ifConditions&&i.ifConditions.some((function(e){return gy(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(s,t.maybeComponent):0,u=i||wy;return"[".concat(s.map((function(e){return u(e,t)})).join(","),"]").concat(r?",".concat(r):"")}}function gy(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function wy(e,t){return 1===e.type?ly(e,t):3===e.type&&e.isComment?function(e){return"_e(".concat(JSON.stringify(e.text),")")}(e):"_v(".concat(2===(n=e).type?n.expression:Iy(JSON.stringify(n.text)),")");var n}function ky(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],s=Iy(i.value);i.dynamic?n+="".concat(i.name,",").concat(s,","):t+='"'.concat(i.name,'":').concat(s,",")}return t="{".concat(t.slice(0,-1),"}"),n?"_d(".concat(t,",[").concat(n.slice(0,-1),"])"):t}function Iy(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function Dy(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),_}}function My(e){var t=Object.create(null);return function(n,a,i){(a=C({},a)).warn,delete a.warn;var s=a.delimiters?String(a.delimiters)+n:n;if(t[s])return t[s];var p=e(n,a),y={},r=[];return y.render=Dy(p.render,r),y.staticRenderFns=p.staticRenderFns.map((function(e){return Dy(e,r)})),t[s]=y}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var Py,Ay,Cy=(Py=function(e,t){var n=Up(e.trim(),t);!1!==t.optimize&&Gp(n,t);var a=oy(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],s=[];if(n)for(var p in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=C(Object.create(e.directives||null),n.directives)),n)"modules"!==p&&"directives"!==p&&(a[p]=n[p]);a.warn=function(e,t,n){(n?s:i).push(e)};var y=Py(t.trim(),a);return y.errors=i,y.tips=s,y}return{compile:t,compileToFunctions:My(t)}}),xy=Cy(Qp).compileToFunctions;function _y(e){return(Ay=Ay||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Ay.innerHTML.indexOf("&#10;")>0}var Ey=!!H&&_y(!1),Ry=!!H&&_y(!0),Uy=g((function(e){var t=wa(e);return t&&t.innerHTML})),Oy=Wn.prototype.$mount;function By(e,t){for(var n in t)e[n]=t[n];return e}Wn.prototype.$mount=function(e,t){if((e=e&&wa(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=Uy(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var i=xy(a,{outputSourceRange:!1,shouldDecodeNewlines:Ey,shouldDecodeNewlinesForHref:Ry,delimiters:n.delimiters,comments:n.comments},this),s=i.render,p=i.staticRenderFns;n.render=s,n.staticRenderFns=p}}return Oy.call(this,e,t)},Wn.compile=xy;var qy=/[!'()*]/g,Fy=function(e){return"%"+e.charCodeAt(0).toString(16)},Ly=/%2C/g,Vy=function(e){return encodeURIComponent(e).replace(qy,Fy).replace(Ly,",")};function $y(e){try{return decodeURIComponent(e)}catch(e){}return e}var Ny=function(e){return null==e||"object"==typeof e?e:String(e)};function Ky(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=$y(n.shift()),i=n.length>0?$y(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function zy(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Vy(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(Vy(t)):a.push(Vy(t)+"="+Vy(e)))})),a.join("&")}return Vy(t)+"="+Vy(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var jy=/\/?$/;function Hy(e,t,n,a){var i=a&&a.options.stringifyQuery,s=t.query||{};try{s=Qy(s)}catch(e){}var p={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:s,params:t.params||{},fullPath:Yy(t,i),matched:e?Gy(e):[]};return n&&(p.redirectedFrom=Yy(n,i)),Object.freeze(p)}function Qy(e){if(Array.isArray(e))return e.map(Qy);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Qy(e[n]);return t}return e}var Wy=Hy(null,{path:"/"});function Gy(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Yy(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||zy)(a)+i}function Xy(e,t,n){return t===Wy?e===t:!!t&&(e.path&&t.path?e.path.replace(jy,"")===t.path.replace(jy,"")&&(n||e.hash===t.hash&&Jy(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&Jy(e.query,t.query)&&Jy(e.params,t.params)))}function Jy(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var s=e[n];if(a[i]!==n)return!1;var p=t[n];return null==s||null==p?s===p:"object"==typeof s&&"object"==typeof p?Jy(s,p):String(s)===String(p)}))}function Zy(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],s=n.enteredCbs[a];if(i&&s){delete n.enteredCbs[a];for(var p=0;p<s.length;p++)i._isBeingDestroyed||s[p](i)}}}}var er={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,s=t.data;s.routerView=!0;for(var p=i.$createElement,y=n.name,r=i.$route,u=i._routerViewCache||(i._routerViewCache={}),o=0,l=!1;i&&i._routerRoot!==i;){var m=i.$vnode?i.$vnode.data:{};m.routerView&&o++,m.keepAlive&&i._directInactive&&i._inactive&&(l=!0),i=i.$parent}if(s.routerViewDepth=o,l){var c=u[y],d=c&&c.component;return d?(c.configProps&&tr(d,s,c.route,c.configProps),p(d,s,a)):p()}var T=r.matched[o],b=T&&T.components[y];if(!T||!b)return u[y]=null,p();u[y]={component:b},s.registerRouteInstance=function(e,t){var n=T.instances[y];(t&&n!==e||!t&&n===e)&&(T.instances[y]=t)},(s.hook||(s.hook={})).prepatch=function(e,t){T.instances[y]=t.componentInstance},s.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==T.instances[y]&&(T.instances[y]=e.componentInstance),Zy(r)};var f=T.props&&T.props[y];return f&&(By(u[y],{route:r,configProps:f}),tr(b,s,r,f)),p(b,s,a)}};function tr(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(i){i=t.props=By({},i);var s=t.attrs=t.attrs||{};for(var p in i)e.props&&p in e.props||(s[p]=i[p],delete i[p])}}function nr(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var s=e.replace(/^\//,"").split("/"),p=0;p<s.length;p++){var y=s[p];".."===y?i.pop():"."!==y&&i.push(y)}return""!==i[0]&&i.unshift(""),i.join("/")}function ar(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var ir=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},sr=function e(t,n,a){return ir(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return br(e,t)}(t,n):ir(t)?function(t,n,a){for(var i=[],s=0;s<t.length;s++)i.push(e(t[s],n,a).source);return br(new RegExp("(?:"+i.join("|")+")",fr(a)),n)}(t,n,a):function(e,t,n){return Sr(or(e,n),t,n)}(t,n,a)},pr=or,yr=cr,rr=Sr,ur=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function or(e,t){for(var n,a=[],i=0,s=0,p="",y=t&&t.delimiter||"/";null!=(n=ur.exec(e));){var r=n[0],u=n[1],o=n.index;if(p+=e.slice(s,o),s=o+r.length,u)p+=u[1];else{var l=e[s],m=n[2],c=n[3],d=n[4],T=n[5],b=n[6],f=n[7];p&&(a.push(p),p="");var S=null!=m&&null!=l&&l!==m,h="+"===b||"*"===b,v="?"===b||"*"===b,g=n[2]||y,w=d||T;a.push({name:c||i++,prefix:m||"",delimiter:g,optional:v,repeat:h,partial:S,asterisk:!!f,pattern:w?Tr(w):f?".*":"[^"+dr(g)+"]+?"})}}return s<e.length&&(p+=e.substr(s)),p&&a.push(p),a}function lr(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function mr(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function cr(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",fr(t)));return function(t,a){for(var i="",s=t||{},p=(a||{}).pretty?lr:encodeURIComponent,y=0;y<e.length;y++){var r=e[y];if("string"!=typeof r){var u,o=s[r.name];if(null==o){if(r.optional){r.partial&&(i+=r.prefix);continue}throw new TypeError('Expected "'+r.name+'" to be defined')}if(ir(o)){if(!r.repeat)throw new TypeError('Expected "'+r.name+'" to not repeat, but received `'+JSON.stringify(o)+"`");if(0===o.length){if(r.optional)continue;throw new TypeError('Expected "'+r.name+'" to not be empty')}for(var l=0;l<o.length;l++){if(u=p(o[l]),!n[y].test(u))throw new TypeError('Expected all "'+r.name+'" to match "'+r.pattern+'", but received `'+JSON.stringify(u)+"`");i+=(0===l?r.prefix:r.delimiter)+u}}else{if(u=r.asterisk?mr(o):p(o),!n[y].test(u))throw new TypeError('Expected "'+r.name+'" to match "'+r.pattern+'", but received "'+u+'"');i+=r.prefix+u}}else i+=r}return i}}function dr(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Tr(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function br(e,t){return e.keys=t,e}function fr(e){return e&&e.sensitive?"":"i"}function Sr(e,t,n){ir(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,s="",p=0;p<e.length;p++){var y=e[p];if("string"==typeof y)s+=dr(y);else{var r=dr(y.prefix),u="(?:"+y.pattern+")";t.push(y),y.repeat&&(u+="(?:"+r+u+")*"),s+=u=y.optional?y.partial?r+"("+u+")?":"(?:"+r+"("+u+"))?":r+"("+u+")"}}var o=dr(n.delimiter||"/"),l=s.slice(-o.length)===o;return a||(s=(l?s.slice(0,-o.length):s)+"(?:"+o+"(?=$))?"),s+=i?"$":a&&l?"":"(?="+o+"|$)",br(new RegExp("^"+s,fr(n)),t)}sr.parse=pr,sr.compile=function(e,t){return cr(or(e,t),t)},sr.tokensToFunction=yr,sr.tokensToRegExp=rr;var hr=Object.create(null);function vr(e,t,n){t=t||{};try{var a=hr[e]||(hr[e]=sr.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function gr(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var s=(i=By({},e)).params;return s&&"object"==typeof s&&(i.params=By({},s)),i}if(!i.path&&i.params&&t){(i=By({},i))._normalized=!0;var p=By(By({},t.params),i.params);if(t.name)i.name=t.name,i.params=p;else if(t.matched.length){var y=t.matched[t.matched.length-1].path;i.path=vr(y,p,t.path)}return i}var r=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),u=t&&t.path||"/",o=r.path?nr(r.path,u,n||i.append):u,l=function(e,t,n){void 0===t&&(t={});var a,i=n||Ky;try{a=i(e||"")}catch(e){a={}}for(var s in t){var p=t[s];a[s]=Array.isArray(p)?p.map(Ny):Ny(p)}return a}(r.query,i.query,a&&a.options.parseQuery),m=i.hash||r.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:o,query:l,hash:m}}var wr,kr=function(){},Ir={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),s=i.location,p=i.route,y=i.href,r={},u=n.options.linkActiveClass,o=n.options.linkExactActiveClass,l=null==u?"router-link-active":u,m=null==o?"router-link-exact-active":o,c=null==this.activeClass?l:this.activeClass,d=null==this.exactActiveClass?m:this.exactActiveClass,T=p.redirectedFrom?Hy(null,gr(p.redirectedFrom),null,n):p;r[d]=Xy(a,T,this.exactPath),r[c]=this.exact||this.exactPath?r[d]:function(e,t){return 0===e.path.replace(jy,"/").indexOf(t.path.replace(jy,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,T);var b=r[d]?this.ariaCurrentValue:null,f=function(e){Dr(e)&&(t.replace?n.replace(s,kr):n.push(s,kr))},S={click:Dr};Array.isArray(this.event)?this.event.forEach((function(e){S[e]=f})):S[this.event]=f;var h={class:r},v=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:y,route:p,navigate:f,isActive:r[c],isExactActive:r[d]});if(v){if(1===v.length)return v[0];if(v.length>1||!v.length)return 0===v.length?e():e("span",{},v)}if("a"===this.tag)h.on=S,h.attrs={href:y,"aria-current":b};else{var g=Mr(this.$slots.default);if(g){g.isStatic=!1;var w=g.data=By({},g.data);for(var k in w.on=w.on||{},w.on){var I=w.on[k];k in S&&(w.on[k]=Array.isArray(I)?I:[I])}for(var D in S)D in w.on?w.on[D].push(S[D]):w.on[D]=f;var M=g.data.attrs=By({},g.data.attrs);M.href=y,M["aria-current"]=b}else h.on=S}return e(this.tag,h,this.$slots.default)}};function Dr(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Mr(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=Mr(t.children)))return t}}var Pr="undefined"!=typeof window;function Ar(e,t,n,a,i){var s=t||[],p=n||Object.create(null),y=a||Object.create(null);e.forEach((function(e){Cr(s,p,y,e,i)}));for(var r=0,u=s.length;r<u;r++)"*"===s[r]&&(s.push(s.splice(r,1)[0]),u--,r--);return{pathList:s,pathMap:p,nameMap:y}}function Cr(e,t,n,a,i,s){var p=a.path,y=a.name,r=a.pathToRegexpOptions||{},u=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:ar(t.path+"/"+e)}(p,i,r.strict);"boolean"==typeof a.caseSensitive&&(r.sensitive=a.caseSensitive);var o={path:u,regex:xr(u,r),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:y,parent:i,matchAs:s,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var i=s?ar(s+"/"+a.path):void 0;Cr(e,t,n,a,o,i)})),t[o.path]||(e.push(o.path),t[o.path]=o),void 0!==a.alias)for(var l=Array.isArray(a.alias)?a.alias:[a.alias],m=0;m<l.length;++m){var c={path:l[m],children:a.children};Cr(e,t,n,c,i,o.path||"/")}y&&(n[y]||(n[y]=o))}function xr(e,t){return sr(e,[],t)}function _r(e,t){var n=Ar(e),a=n.pathList,i=n.pathMap,s=n.nameMap;function p(e,n,p){var r=gr(e,n,!1,t),u=r.name;if(u){var o=s[u];if(!o)return y(null,r);var l=o.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof r.params&&(r.params={}),n&&"object"==typeof n.params)for(var m in n.params)!(m in r.params)&&l.indexOf(m)>-1&&(r.params[m]=n.params[m]);return r.path=vr(o.path,r.params),y(o,r,p)}if(r.path){r.params={};for(var c=0;c<a.length;c++){var d=a[c],T=i[d];if(Er(T.regex,r.path,r.params))return y(T,r,p)}}return y(null,r)}function y(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,i="function"==typeof a?a(Hy(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return y(null,n);var r=i,u=r.name,o=r.path,l=n.query,m=n.hash,c=n.params;if(l=r.hasOwnProperty("query")?r.query:l,m=r.hasOwnProperty("hash")?r.hash:m,c=r.hasOwnProperty("params")?r.params:c,u)return s[u],p({_normalized:!0,name:u,query:l,hash:m,params:c},void 0,n);if(o){var d=function(e,t){return nr(e,t.parent?t.parent.path:"/",!0)}(o,e);return p({_normalized:!0,path:vr(d,c),query:l,hash:m},void 0,n)}return y(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=p({_normalized:!0,path:vr(n,t.params)});if(a){var i=a.matched,s=i[i.length-1];return t.params=a.params,y(s,t)}return y(null,t)}(0,n,e.matchAs):Hy(e,n,a,t)}return{match:p,addRoute:function(e,t){var n="object"!=typeof e?s[e]:void 0;Ar([t||e],a,i,s,n),n&&n.alias.length&&Ar(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,s,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){Ar(e,a,i,s)}}}function Er(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,s=a.length;i<s;++i){var p=e.keys[i-1];p&&(n[p.name||"pathMatch"]="string"==typeof a[i]?$y(a[i]):a[i])}return!0}var Rr=Pr&&window.performance&&window.performance.now?window.performance:Date;function Ur(){return Rr.now().toFixed(3)}var Or=Ur();function Br(){return Or}function qr(e){return Or=e}var Fr=Object.create(null);function Lr(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=By({},window.history.state);return n.key=Br(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Nr),function(){window.removeEventListener("popstate",Nr)}}function Vr(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var s=function(){var e=Br();if(e)return Fr[e]}(),p=i.call(e,t,n,a?s:null);p&&("function"==typeof p.then?p.then((function(e){Qr(e,s)})).catch((function(e){})):Qr(p,s))}))}}function $r(){var e=Br();e&&(Fr[e]={x:window.pageXOffset,y:window.pageYOffset})}function Nr(e){$r(),e.state&&e.state.key&&qr(e.state.key)}function Kr(e){return jr(e.x)||jr(e.y)}function zr(e){return{x:jr(e.x)?e.x:window.pageXOffset,y:jr(e.y)?e.y:window.pageYOffset}}function jr(e){return"number"==typeof e}var Hr=/^#\d/;function Qr(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=Hr.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var s=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,s={x:jr((n=s).x)?n.x:0,y:jr(n.y)?n.y:0})}else Kr(e)&&(t=zr(e))}else a&&Kr(e)&&(t=zr(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Wr,Gr=Pr&&(-1===(Wr=window.navigator.userAgent).indexOf("Android 2.")&&-1===Wr.indexOf("Android 4.0")||-1===Wr.indexOf("Mobile Safari")||-1!==Wr.indexOf("Chrome")||-1!==Wr.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Yr(e,t){$r();var n=window.history;try{if(t){var a=By({},n.state);a.key=Br(),n.replaceState(a,"",e)}else n.pushState({key:qr(Ur())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Xr(e){Yr(e,!0)}var Jr={redirected:2,aborted:4,cancelled:8,duplicated:16};function Zr(e,t){return eu(e,t,Jr.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function eu(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var tu=["params","query","hash"];function nu(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function au(e,t){return nu(e)&&e._isRouter&&(null==t||e.type===t)}function iu(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}function su(e,t){return pu(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function pu(e){return Array.prototype.concat.apply([],e)}var yu="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ru(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var uu=function(e,t){this.router=e,this.base=function(e){if(!e)if(Pr){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=Wy,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ou(e,t,n,a){var i=su(e,(function(e,a,i,s){var p=function(e,t){return"function"!=typeof e&&(e=wr.extend(e)),e.options[t]}(e,t);if(p)return Array.isArray(p)?p.map((function(e){return n(e,a,i,s)})):n(p,a,i,s)}));return pu(a?i.reverse():i)}function lu(e,t){if(t)return function(){return e.apply(t,arguments)}}uu.prototype.listen=function(e){this.cb=e},uu.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},uu.prototype.onError=function(e){this.errorCbs.push(e)},uu.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var s=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,s)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(au(e,Jr.redirected)&&s===Wy||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},uu.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var s,p,y=function(e){!au(e)&&nu(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},r=e.matched.length-1,u=i.matched.length-1;if(Xy(e,i)&&r===u&&e.matched[r]===i.matched[u])return this.ensureURL(),e.hash&&Vr(this.router,i,e,!1),y(((p=eu(s=i,e,Jr.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",p));var o,l=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),m=l.updated,c=l.deactivated,d=l.activated,T=[].concat(function(e){return ou(e,"beforeRouteLeave",lu,!0)}(c),this.router.beforeHooks,function(e){return ou(e,"beforeRouteUpdate",lu)}(m),d.map((function(e){return e.beforeEnter})),(o=d,function(e,t,n){var a=!1,i=0,s=null;su(o,(function(e,t,p,y){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var r,u=ru((function(t){var a;((a=t).__esModule||yu&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:wr.extend(t),p.components[y]=t,--i<=0&&n()})),o=ru((function(e){var t="Failed to resolve async component "+y+": "+e;s||(s=nu(e)?e:new Error(t),n(s))}));try{r=e(u,o)}catch(e){o(e)}if(r)if("function"==typeof r.then)r.then(u,o);else{var l=r.component;l&&"function"==typeof l.then&&l.then(u,o)}}})),a||n()})),b=function(t,n){if(a.pending!==e)return y(Zr(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),y(function(e,t){return eu(e,t,Jr.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):nu(t)?(a.ensureURL(!0),y(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(y(function(e,t){return eu(e,t,Jr.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return tu.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){y(e)}};iu(T,b,(function(){var n=function(e){return ou(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,s){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),s(e)}))}}(e,n,a)}))}(d);iu(n.concat(a.router.resolveHooks),b,(function(){if(a.pending!==e)return y(Zr(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){Zy(e)}))}))}))},uu.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},uu.prototype.setupListeners=function(){},uu.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Wy,this.pending=null};var mu=function(e){function t(t,n){e.call(this,t,n),this._startLocation=cu(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Gr&&n;a&&this.listeners.push(Lr());var i=function(){var n=e.current,i=cu(e.base);e.current===Wy&&i===e._startLocation||e.transitionTo(i,(function(e){a&&Vr(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Yr(ar(a.base+e.fullPath)),Vr(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Xr(ar(a.base+e.fullPath)),Vr(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(cu(this.base)!==this.current.fullPath){var t=ar(this.base+this.current.fullPath);e?Yr(t):Xr(t)}},t.prototype.getCurrentLocation=function(){return cu(this.base)},t}(uu);function cu(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(ar(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var du=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=cu(e);if(!/^\/#/.test(t))return window.location.replace(ar(e+"/#"+t)),!0}(this.base)||Tu()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Gr&&t;n&&this.listeners.push(Lr());var a=function(){var t=e.current;Tu()&&e.transitionTo(bu(),(function(a){n&&Vr(e.router,a,t,!0),Gr||hu(a.fullPath)}))},i=Gr?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Su(e.fullPath),Vr(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){hu(e.fullPath),Vr(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;bu()!==t&&(e?Su(t):hu(t))},t.prototype.getCurrentLocation=function(){return bu()},t}(uu);function Tu(){var e=bu();return"/"===e.charAt(0)||(hu("/"+e),!1)}function bu(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function fu(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Su(e){Gr?Yr(fu(e)):window.location.hash=e}function hu(e){Gr?Xr(fu(e)):window.location.replace(fu(e))}var vu=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){au(e,Jr.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(uu),gu=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=_r(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Gr&&!1!==e.fallback,this.fallback&&(t="hash"),Pr||(t="abstract"),this.mode=t,t){case"history":this.history=new mu(this,e.base);break;case"hash":this.history=new du(this,e.base,this.fallback);break;case"abstract":this.history=new vu(this,e.base)}},wu={currentRoute:{configurable:!0}};gu.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},wu.currentRoute.get=function(){return this.history&&this.history.current},gu.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof mu||n instanceof du){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;Gr&&i&&"fullPath"in e&&Vr(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},gu.prototype.beforeEach=function(e){return Iu(this.beforeHooks,e)},gu.prototype.beforeResolve=function(e){return Iu(this.resolveHooks,e)},gu.prototype.afterEach=function(e){return Iu(this.afterHooks,e)},gu.prototype.onReady=function(e,t){this.history.onReady(e,t)},gu.prototype.onError=function(e){this.history.onError(e)},gu.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},gu.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},gu.prototype.go=function(e){this.history.go(e)},gu.prototype.back=function(){this.go(-1)},gu.prototype.forward=function(){this.go(1)},gu.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},gu.prototype.resolve=function(e,t,n){var a=gr(e,t=t||this.history.current,n,this),i=this.match(a,t),s=i.redirectedFrom||i.fullPath,p=function(e,t,n){var a="hash"===n?"#"+t:t;return e?ar(e+"/"+a):a}(this.history.base,s,this.mode);return{location:a,route:i,href:p,normalizedTo:a,resolved:i}},gu.prototype.getRoutes=function(){return this.matcher.getRoutes()},gu.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Wy&&this.history.transitionTo(this.history.getCurrentLocation())},gu.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Wy&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(gu.prototype,wu);var ku=gu;function Iu(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}gu.install=function e(t){if(!e.installed||wr!==t){e.installed=!0,wr=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",er),t.component("RouterLink",Ir);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},gu.version="3.6.5",gu.isNavigationFailure=au,gu.NavigationFailureType=Jr,gu.START_LOCATION=Wy,Pr&&window.Vue&&window.Vue.use(gu);var Du=function(){var e=this._self._c;return e("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[e("router-view")],1)};function Mu(e,t,n,a,i,s,p,y){var r,u="function"==typeof e?e.options:e;if(t&&(u.render=t,u.staticRenderFns=n,u._compiled=!0),a&&(u.functional=!0),s&&(u._scopeId="data-v-"+s),p?(r=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(p)},u._ssrRegister=r):i&&(r=y?function(){i.call(this,(u.functional?this.parent:this).$root.$options.shadowRoot)}:i),r)if(u.functional){u._injectStyles=r;var o=u.render;u.render=function(e,t){return r.call(t),o(e,t)}}else{var l=u.beforeCreate;u.beforeCreate=l?[].concat(l,r):[r]}return{exports:e,options:u}}Du._withStripped=!0,n(838);const Pu=Mu({},Du,[],!1,null,null,null).exports;var Au=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("HeaderBar"),e._v(" "),t("div",{staticClass:"pb-32"},[t("div",{staticClass:"space-y-4"},[t("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),t("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))])]),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?t("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.receive?t("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.fallback?t("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?t("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?t("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?t("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),t("FooterBar")],1)};Au._withStripped=!0;var Cu=function(){var e=this,t=e._self._c;return t("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[t("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Cu._withStripped=!0;const xu=JSON.parse('{"u2":"hardhat-docgen","cj":"https://github.com/ItsNickBarry/hardhat-docgen"}'),_u=Mu({data:function(){return{repository:xu.cj,name:xu.u2}},methods:{openLink(e){window.open(e,"_blank")}}},Cu,[],!1,null,null,null).exports;var Eu=function(){var e=this._self._c;return e("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[e("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};Eu._withStripped=!0;const Ru=Mu({},Eu,[],!1,null,null,null).exports;var Uu=function(){var e=this,t=e._self._c;return t("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[t("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),t("div",{staticClass:"space-y-3"},[t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))]),e._v(" "),t("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),t("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};Uu._withStripped=!0;var Ou=function(){var e=this,t=e._self._c;return e.items.length>0?t("ul",[t("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(n,a){return t("li",{key:a},[t("span",{staticClass:"bg-gray-300"},[e._v(e._s(n.type))]),e._v(" "),t("b",[e._v(e._s(n.name||`_${a}`))]),n.desc?t("span",[e._v(": "),t("i",[e._v(e._s(n.desc))])]):e._e()])}))],2):e._e()};Ou._withStripped=!0;const Bu={components:{MemberSection:Mu({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},Ou,[],!1,null,null,null).exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}},qu=Mu(Bu,Uu,[],!1,null,null,null).exports;var Fu=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full mt-8"},[t("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(n){return t("Member",{key:n,staticClass:"mt-3",attrs:{json:e.json[n]}})}))],2)};Fu._withStripped=!0;var Lu=Mu({components:{Member:qu},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},Fu,[],!1,null,null,null);const Vu=Mu({components:{Member:qu,MemberSet:Lu.exports,HeaderBar:Ru,FooterBar:_u},props:{json:{type:Object,default:()=>new Object}}},Au,[],!1,null,null,null).exports;var $u=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};$u._withStripped=!0;var Nu=function(){var e=this,t=e._self._c;return t("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?t("div",{staticClass:"pl-5"},e._l(e.json,(function(n,a){return t("div",{key:a},[t("router-link",{attrs:{to:`${n.source}:${n.name}`}},[e._v("\n        "+e._s(n.name)+"\n      ")])],1)})),0):t("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(n){return t("div",{key:n},[t("Branch",{attrs:{json:e.json[n],name:n}})],1)})),0)])};Nu._withStripped=!0;var Ku=Mu({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},Nu,[],!1,null,null,null);const zu=Mu({components:{Branch:Ku.exports,FooterBar:_u},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},$u,[],!1,null,null,null).exports;Wn.use(ku);const ju={"contracts/evm/MecenateStats.sol:MecenateStats":{source:"contracts/evm/MecenateStats.sol",name:"MecenateStats",constructor:{inputs:[{internalType:"address",name:"_mecenateUsers",type:"address"},{internalType:"address",name:"_mecenateFeedFactory",type:"address"},{internalType:"address",name:"_mecenateBay",type:"address"},{internalType:"address",name:"_mecenateTreasury",type:"address"}],stateMutability:"nonpayable",type:"constructor"},methods:{"getStats()":{inputs:[],name:"getStats",outputs:[{components:[{internalType:"uint256",name:"totalUsers",type:"uint256"},{internalType:"uint256",name:"totalBayRequests",type:"uint256"},{internalType:"uint256",name:"totalFeeds",type:"uint256"},{internalType:"uint256",name:"globalFee",type:"uint256"},{internalType:"uint256",name:"fixedFee",type:"uint256"},{internalType:"uint256",name:"treasuryBalance",type:"uint256"}],internalType:"struct MecenateStats.Stats",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"mecenateBay()":{inputs:[],name:"mecenateBay",outputs:[{internalType:"contract IMecenateBay",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateFeedFactory()":{inputs:[],name:"mecenateFeedFactory",outputs:[{internalType:"contract IMecenateFeedFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateTreasury()":{inputs:[],name:"mecenateTreasury",outputs:[{internalType:"contract IMecenateTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateUsers()":{inputs:[],name:"mecenateUsers",outputs:[{internalType:"contract IMecenateUsers",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/evm/MecenateTreasury.sol:MecenateTreasury":{source:"contracts/evm/MecenateTreasury.sol",name:"MecenateTreasury",receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addERC20Funds(address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"addERC20Funds",outputs:[],stateMutability:"nonpayable",type:"function"},"addFunds()":{inputs:[],name:"addFunds",outputs:[],stateMutability:"payable",type:"function"},"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},"configLiquidityProvider(address,address)":{inputs:[{internalType:"address",name:"_native",type:"address"},{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"configLiquidityProvider",outputs:[],stateMutability:"nonpayable",type:"function"},"customApprove(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"customApprove",outputs:[],stateMutability:"nonpayable",type:"function"},"distributableBalance()":{inputs:[],name:"distributableBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distributableERC20Balance(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"distributableERC20Balance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distribute(address)":{inputs:[{internalType:"address",name:"_usersContract",type:"address"}],name:"distribute",outputs:[],stateMutability:"nonpayable",type:"function"},"distributeERC20(address,address)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"_usersContract",type:"address"}],name:"distributeERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"fixedFee()":{inputs:[],name:"fixedFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getDistributionBalance()":{inputs:[],name:"getDistributionBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getDistributionERC20Balance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getDistributionERC20Balance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReward(address,address)":{inputs:[{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"encryptedVaultId",type:"address"}],name:"getReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRewardERC20(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"encryptedVaultId",type:"address"}],name:"getRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalFee()":{inputs:[],name:"globalFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastDistributed()":{inputs:[],name:"lastDistributed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"native()":{inputs:[],name:"native",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"ownerFee()":{inputs:[],name:"ownerFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"positionManager()":{inputs:[],name:"positionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setFixedFee(uint256)":{inputs:[{internalType:"uint256",name:"_fixedFee",type:"uint256"}],name:"setFixedFee",outputs:[],stateMutability:"nonpayable",type:"function"},"setGlobalFee(uint256)":{inputs:[{internalType:"uint256",name:"_globalFee",type:"uint256"}],name:"setGlobalFee",outputs:[],stateMutability:"nonpayable",type:"function"},"setSplitLiqudity(bool)":{inputs:[{internalType:"bool",name:"_splitLiquidity",type:"bool"}],name:"setSplitLiqudity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"setSwapRouter(address)":{inputs:[{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"setSwapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},"splitLiquidity()":{inputs:[],name:"splitLiquidity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"swapAndBurn(address,address,address,uint24,uint24)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"address",name:"_token2",type:"address"},{internalType:"uint24",name:"_fee",type:"uint24"},{internalType:"uint24",name:"_fee2",type:"uint24"}],name:"swapAndBurn",outputs:[],stateMutability:"nonpayable",type:"function"},"swapRouter()":{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},"swapTokensForTokens(address,address,uint256,uint24)":{inputs:[{internalType:"address",name:"token1",type:"address"},{internalType:"address",name:"token2",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"swapTokensForTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeReward(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"takeReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeRewardERC20(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"}],name:"takeRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userReward(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userRewardERC20(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"userRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/evm/MecenateVault.sol:MecenateVault":{source:"contracts/evm/MecenateVault.sol",name:"MecenateVault",constructor:{inputs:[{internalType:"address",name:"_verifierContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdrawn(bytes32,uint256,string,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"string",name:"secret",type:"string"},{indexed:!1,internalType:"address",name:"token",type:"address"}],name:"Withdrawn",type:"event"}},methods:{"depositFunds(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositFunds",outputs:[],stateMutability:"payable",type:"function"},"depositWithSecret(bytes32,address,uint256)":{inputs:[{internalType:"bytes32",name:"_hash",type:"bytes32"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositWithSecret",outputs:[],stateMutability:"payable",type:"function"},"getEthDeposit(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getEthDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenDeposit(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_user",type:"address"}],name:"getTokenDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setVerifierContract(address)":{inputs:[{internalType:"address",name:"_verifierContract",type:"address"}],name:"setVerifierContract",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdrawFunds(address,uint256,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"withdrawFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawWithSecret(string,address,address)":{inputs:[{internalType:"string",name:"_secret",type:"string"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"}],name:"withdrawWithSecret",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/evm/MecenateVerifier.sol:MecenateVerifier":{source:"contracts/evm/MecenateVerifier.sol",name:"MecenateVerifier",constructor:{inputs:[{internalType:"bytes16",name:"_appId",type:"bytes16"}],stateMutability:"nonpayable",type:"constructor"},methods:{"ADDRESSES_PROVIDER_V2()":{inputs:[],name:"ADDRESSES_PROVIDER_V2",outputs:[{internalType:"contract IAddressesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},"APP_ID()":{inputs:[],name:"APP_ID",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"IS_IMPERSONATION_MODE()":{inputs:[],name:"IS_IMPERSONATION_MODE",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"SISMO_CONNECT_LIB_VERSION()":{inputs:[],name:"SISMO_CONNECT_LIB_VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"appId()":{inputs:[],name:"appId",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"config()":{inputs:[],name:"config",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"sismoVerify(bytes)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"}],name:"sismoVerify",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"}}},"contracts/evm/factories/MecenateFeedFactory.sol:MecenateFeedFactory":{source:"contracts/evm/factories/MecenateFeedFactory.sol",name:"MecenateFeedFactory",constructor:{inputs:[{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_treasuryContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"FeedCreated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"addr",type:"address"}],name:"FeedCreated",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"buildFeed()":{inputs:[],name:"buildFeed",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},"burnEnabled()":{inputs:[],name:"burnEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"changeMultipleSettings(address,address,address,address,address,address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"},{internalType:"address",name:"_usersModule",type:"address"},{internalType:"address",name:"_wethToken",type:"address"},{internalType:"address",name:"_museToken",type:"address"},{internalType:"address",name:"_daiToken",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"changeMultipleSettings",outputs:[],stateMutability:"nonpayable",type:"function"},"changeVersion(string)":{inputs:[{internalType:"string",name:"_version",type:"string"}],name:"changeVersion",outputs:[],stateMutability:"nonpayable",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getFeedInfo(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"getFeedInfo",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"getFeeds()":{inputs:[],name:"getFeeds",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getFeedsInfo()":{inputs:[],name:"getFeedsInfo",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getFeedsInfoOwned(address)":{inputs:[{internalType:"address",name:"vaultId",type:"address"}],name:"getFeedsInfoOwned",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getFeedsOwned(address)":{inputs:[{internalType:"address",name:"vaultId",type:"address"}],name:"getFeedsOwned",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getRouterFee(uint8)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"}],name:"getRouterFee",outputs:[{internalType:"uint24",name:"",type:"uint24"}],stateMutability:"view",type:"function"},"isContractCreated(address)":{inputs:[{internalType:"address",name:"contractAddress",type:"address"}],name:"isContractCreated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isFeed(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"isFeed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setBurnEnabled(bool)":{inputs:[{internalType:"bool",name:"_burnEnabled",type:"bool"}],name:"setBurnEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setFeedByteCode(bytes)":{inputs:[{internalType:"bytes",name:"_byteCode",type:"bytes"}],name:"setFeedByteCode",outputs:[],stateMutability:"nonpayable",type:"function"},"setRouterFee(uint8,uint24)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"setRouterFee",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasuryContract()":{inputs:[],name:"treasuryContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"wethToken()":{inputs:[],name:"wethToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/evm/features/MecenateFeed.sol:MecenateFeed":{source:"contracts/evm/features/MecenateFeed.sol",name:"MecenateFeed",constructor:{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_factoryContract",type:"address"},{internalType:"string",name:"_version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"acceptPost(uint8,uint256,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"paymentAmount",type:"uint256"},{internalType:"address",name:"funder",type:"address"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"createPost(bytes,uint8,uint8,uint256,uint256,uint8,address)":{inputs:[{internalType:"bytes",name:"encryptedHash",type:"bytes"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"enum Structures.PostDuration",name:"postDuration",type:"uint8"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stakeAmount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"funder",type:"address"}],name:"createPost",outputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],internalType:"struct Structures.Post",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"finalizePost(bool,uint256)":{inputs:[{internalType:"bool",name:"valid",type:"bool"},{internalType:"uint256",name:"punishment",type:"uint256"}],name:"finalizePost",outputs:[],stateMutability:"nonpayable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renouncePost()":{inputs:[],name:"renouncePost",outputs:[],stateMutability:"nonpayable",type:"function"},"revealData(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"decryptedData",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"revealData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"submitHash(bytes)":{inputs:[{internalType:"bytes",name:"encryptedKey",type:"bytes"}],name:"submitHash",outputs:[],stateMutability:"nonpayable",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/helpers/SismoConnectLib.sol:SismoConnect":{source:"contracts/evm/helpers/SismoConnectLib.sol",name:"SismoConnect",constructor:{inputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"_config",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},methods:{"ADDRESSES_PROVIDER_V2()":{inputs:[],name:"ADDRESSES_PROVIDER_V2",outputs:[{internalType:"contract IAddressesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},"APP_ID()":{inputs:[],name:"APP_ID",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"IS_IMPERSONATION_MODE()":{inputs:[],name:"IS_IMPERSONATION_MODE",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"SISMO_CONNECT_LIB_VERSION()":{inputs:[],name:"SISMO_CONNECT_LIB_VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"config()":{inputs:[],name:"config",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"",type:"tuple"}],stateMutability:"view",type:"function"}}},"contracts/evm/helpers/interfaces/IAddressesProvider.sol:IAddressesProvider":{source:"contracts/evm/helpers/interfaces/IAddressesProvider.sol",name:"IAddressesProvider",methods:{"get(string)":{inputs:[{internalType:"string",name:"contractName",type:"string"}],name:"get",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of a contract.",params:{contractName:"Name of the contract (string)."},returns:{_0:"Address of the contract."}},"get(bytes32)":{inputs:[{internalType:"bytes32",name:"contractNameHash",type:"bytes32"}],name:"get",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of a contract.",params:{contractNameHash:"Hash of the name of the contract (bytes32)."},returns:{_0:"Address of the contract."}},"getAll()":{inputs:[],name:"getAll",outputs:[{internalType:"string[]",name:"",type:"string[]"},{internalType:"bytes32[]",name:"",type:"bytes32[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts in `_contractNames`",returns:{_0:"Names, Hashed Names and Addresses of all contracts."}},"getBatch(bytes32[])":{inputs:[{internalType:"bytes32[]",name:"contractNamesHash",type:"bytes32[]"}],name:"getBatch",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts inputed.",params:{contractNamesHash:"Names of the contracts as strings."}},"getBatch(string[])":{inputs:[{internalType:"string[]",name:"contractNames",type:"string[]"}],name:"getBatch",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts inputed.",params:{contractNames:"Names of the contracts as strings."}},"set(address,string)":{inputs:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"string",name:"contractName",type:"string"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets the address of a contract.",params:{contractAddress:"Address of the contract.",contractName:"Name of the contract."}},"setBatch(address[],string[])":{inputs:[{internalType:"address[]",name:"contractAddresses",type:"address[]"},{internalType:"string[]",name:"contractNames",type:"string[]"}],name:"setBatch",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets the address of multiple contracts.",params:{contractAddresses:"Addresses of the contracts.",contractNames:"Names of the contracts."}}}},"contracts/evm/helpers/interfaces/IBaseVerifier.sol:IBaseVerifier":{source:"contracts/evm/helpers/interfaces/IBaseVerifier.sol",name:"IBaseVerifier",methods:{"verify(bytes16,bytes16,bool,bytes,((uint8,bool,bool,uint256,bytes)[],(uint8,bytes16,bytes16,bool,uint256,bytes)[],bytes32,bytes,bytes))":{inputs:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bool",name:"isImpersonationMode",type:"bool"},{internalType:"bytes",name:"signedMessage",type:"bytes"},{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"sismoConnectProof",type:"tuple"}],name:"verify",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedAuth",name:"",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"uint256",name:"proofId",type:"uint256"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedClaim",name:"",type:"tuple"}],stateMutability:"nonpayable",type:"function"}}},"contracts/evm/helpers/interfaces/ISismoConnectVerifier.sol:ISismoConnectVerifier":{source:"contracts/evm/helpers/interfaces/ISismoConnectVerifier.sol",name:"ISismoConnectVerifier",events:{"VerifierSet(bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"",type:"bytes32"},{indexed:!1,internalType:"address",name:"",type:"address"}],name:"VerifierSet",type:"event"}},methods:{"SISMO_CONNECT_VERSION()":{inputs:[],name:"SISMO_CONNECT_VERSION",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"verify((bytes16,bytes16,bytes32,bytes,((uint8,bool,bool,uint256,bytes)[],(uint8,bytes16,bytes16,bool,uint256,bytes)[],bytes32,bytes,bytes)[]),(bytes16,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes)),(bytes16,(bool)))":{inputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bytes32",name:"version",type:"bytes32"},{internalType:"bytes",name:"signedMessage",type:"bytes"},{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof[]",name:"proofs",type:"tuple[]"}],internalType:"struct SismoConnectResponse",name:"response",type:"tuple"},{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"request",type:"tuple"},{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"config",type:"tuple"}],name:"verify",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bytes32",name:"version",type:"bytes32"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedAuth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"uint256",name:"proofId",type:"uint256"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedClaim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"signedMessage",type:"bytes"}],internalType:"struct SismoConnectVerifiedResult",name:"",type:"tuple"}],stateMutability:"view",type:"function"}}},"contracts/evm/helpers/utils/AuthBuilder.sol:AuthBuilder":{source:"contracts/evm/helpers/utils/AuthBuilder.sol",name:"AuthBuilder",methods:{"DEFAULT_AUTH_EXTRA_DATA()":{inputs:[],name:"DEFAULT_AUTH_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_IS_ANON()":{inputs:[],name:"DEFAULT_AUTH_IS_ANON",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_AUTH_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_TYPE()":{inputs:[],name:"DEFAULT_AUTH_TYPE",outputs:[{internalType:"enum AuthType",name:"",type:"AuthType"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_USER_ID()":{inputs:[],name:"DEFAULT_AUTH_USER_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(AuthType,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/AuthMatchingLib.sol:AuthMatchingLib":{source:"contracts/evm/helpers/utils/AuthMatchingLib.sol",name:"AuthMatchingLib",methods:{"handleAuthErrors(uint8,(AuthType,uint256,bool,bool,bool,bytes))":{inputs:[{internalType:"uint8",name:"maxMatchingProperties",type:"uint8"},{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"}],name:"handleAuthErrors",outputs:[],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/AuthRequestBuilder.sol:AuthRequestBuilder":{source:"contracts/evm/helpers/utils/AuthRequestBuilder.sol",name:"AuthRequestBuilder",methods:{"DEFAULT_AUTH_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_IS_ANON()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_IS_ANON",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_IS_OPTIONAL()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_IS_OPTIONAL",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_USER_ID()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_USER_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(uint8,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bool,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/ClaimBuilder.sol:ClaimBuilder":{source:"contracts/evm/helpers/utils/ClaimBuilder.sol",name:"ClaimBuilder",methods:{"DEFAULT_CLAIM_EXTRA_DATA()":{inputs:[],name:"DEFAULT_CLAIM_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_GROUP_TIMESTAMP()":{inputs:[],name:"DEFAULT_CLAIM_GROUP_TIMESTAMP",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_CLAIM_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_TYPE()":{inputs:[],name:"DEFAULT_CLAIM_TYPE",outputs:[{internalType:"enum ClaimType",name:"",type:"ClaimType"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_VALUE()":{inputs:[],name:"DEFAULT_CLAIM_VALUE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(bytes16,bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType,bool,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/ClaimMatchingLib.sol:ClaimMatchingLib":{source:"contracts/evm/helpers/utils/ClaimMatchingLib.sol",name:"ClaimMatchingLib",methods:{"handleClaimErrors(uint8,(ClaimType,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{internalType:"uint8",name:"maxMatchingProperties",type:"uint8"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"handleClaimErrors",outputs:[],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/ClaimRequestBuilder.sol:ClaimRequestBuilder":{source:"contracts/evm/helpers/utils/ClaimRequestBuilder.sol",name:"ClaimRequestBuilder",methods:{"DEFAULT_CLAIM_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_GROUP_TIMESTAMP()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_GROUP_TIMESTAMP",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_IS_OPTIONAL()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_IS_OPTIONAL",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_TYPE()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_TYPE",outputs:[{internalType:"enum ClaimType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_VALUE()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_VALUE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(bytes16,bytes16,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bool,bool,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/Fmt.sol:fmt":{source:"contracts/evm/helpers/utils/Fmt.sol",name:"fmt",methods:{"printAuth((AuthType,bool,bool,uint256,bytes),string)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"string",name:"indication",type:"string"}],name:"printAuth",outputs:[],stateMutability:"view",type:"function"},"printAuthRequest((AuthType,uint256,bool,bool,bool,bytes),string)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{internalType:"string",name:"indication",type:"string"}],name:"printAuthRequest",outputs:[],stateMutability:"view",type:"function"}}},"contracts/evm/helpers/utils/RequestBuilder.sol:RequestBuilder":{source:"contracts/evm/helpers/utils/RequestBuilder.sol",name:"RequestBuilder",methods:{"DEFAULT_NAMESPACE()":{inputs:[],name:"DEFAULT_NAMESPACE",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/SignatureBuilder.sol:SignatureBuilder":{source:"contracts/evm/helpers/utils/SignatureBuilder.sol",name:"SignatureBuilder",methods:{"DEFAULT_SIGNATURE_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_SIGNATURE_REQUEST_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_SIGNATURE_REQUEST_MESSAGE()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_MESSAGE",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"build(bytes,bool,bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bool)":{inputs:[{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes,bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes,bool)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bool,bytes)":{inputs:[{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"buildEmpty()":{inputs:[],name:"buildEmpty",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/helpers/utils/SismoConnectHelper.sol:SismoConnectHelper":{source:"contracts/evm/helpers/utils/SismoConnectHelper.sol",name:"SismoConnectHelper"},"contracts/evm/helpers/utils/SismoConnectProofBuilder.sol:ProofBuilder":{source:"contracts/evm/helpers/utils/SismoConnectProofBuilder.sol",name:"ProofBuilder",methods:{"DEFAULT_PROOF_EXTRA_DATA()":{inputs:[],name:"DEFAULT_PROOF_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_PROOF_PROVING_SCHEME()":{inputs:[],name:"DEFAULT_PROOF_PROVING_SCHEME",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"build((AuthType,bool,bool,uint256,bytes)[],(ClaimType,bytes16,bytes16,bool,uint256,bytes)[],bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),(ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),(ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes)[],(ClaimType,bytes16,bytes16,bool,uint256,bytes)[],bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/evm/interfaces/IFeedInitializer.sol:IFeedInitializer":{source:"contracts/evm/interfaces/IFeedInitializer.sol",name:"IFeedInitializer",methods:{"initialize(address,address,address,address,address)":{inputs:[{internalType:"address",name:"_factoryContract",type:"address"},{internalType:"address",name:"_treasuryContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_proxyCallContract",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/evm/interfaces/IMUSE.sol:IMUSE":{source:"contracts/evm/interfaces/IMUSE.sol",name:"IMUSE",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"mint(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/evm/interfaces/IMecenateBay.sol:IMecenateBay":{source:"contracts/evm/interfaces/IMecenateBay.sol",name:"IMecenateBay",methods:{"allRequests()":{inputs:[],name:"allRequests",outputs:[{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/evm/interfaces/IMecenateFeed.sol:IMecenateFeed":{source:"contracts/evm/interfaces/IMecenateFeed.sol",name:"IMecenateFeed",methods:{"acceptPost(uint8,uint256,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_from",type:"address"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/interfaces/IMecenateFeedFactory.sol:IMecenateFeedFactory":{source:"contracts/evm/interfaces/IMecenateFeedFactory.sol",name:"IMecenateFeedFactory",methods:{"burnEnabled()":{inputs:[],name:"burnEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeds()":{inputs:[],name:"feeds",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getRouterFee(uint8)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"}],name:"getRouterFee",outputs:[{internalType:"uint24",name:"",type:"uint24"}],stateMutability:"view",type:"function"},"identityContract()":{inputs:[],name:"identityContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"isFeed(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"isFeed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryContract()":{inputs:[],name:"treasuryContract",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"wethToken()":{inputs:[],name:"wethToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/evm/interfaces/IMecenateTreasury.sol:IMecenateTreasury":{source:"contracts/evm/interfaces/IMecenateTreasury.sol",name:"IMecenateTreasury",methods:{"fixedFee()":{inputs:[],name:"fixedFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalFee()":{inputs:[],name:"globalFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/evm/interfaces/IMecenateUsers.sol:IMecenateUsers":{source:"contracts/evm/interfaces/IMecenateUsers.sol",name:"IMecenateUsers",methods:{"checkifUserExist(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"checkifUserExist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getPaginatedUsers(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"getPaginatedUsers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getUserAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getUserCount()":{inputs:[],name:"getUserCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserMetadata(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"getUserMetadata",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"getUserPublicKey(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"getUserPublicKey",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"getUsers()":{inputs:[],name:"getUsers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"registerUser(bytes)":{inputs:[{internalType:"bytes",name:"metadata",type:"bytes"}],name:"registerUser",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/evm/interfaces/IMecenateVerifier.sol:IMecenateVerifier":{source:"contracts/evm/interfaces/IMecenateVerifier.sol",name:"IMecenateVerifier",methods:{"sismoVerify(bytes)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"}],name:"sismoVerify",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"}}},"contracts/evm/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory":{source:"contracts/evm/interfaces/IUniswapV3Factory.sol",name:"IUniswapV3Factory",title:"The interface for the Uniswap V3 Factory",notice:"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",events:{"FeeAmountEnabled(uint24,int24)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint24",name:"fee",type:"uint24"},{indexed:!0,internalType:"int24",name:"tickSpacing",type:"int24"}],name:"FeeAmountEnabled",type:"event",params:{fee:"The enabled fee, denominated in hundredths of a bip",tickSpacing:"The minimum number of ticks between initialized ticks for pools created with the given fee"},notice:"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event",params:{newOwner:"The owner after the owner was changed",oldOwner:"The owner before the owner was changed"},notice:"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token0",type:"address"},{indexed:!0,internalType:"address",name:"token1",type:"address"},{indexed:!0,internalType:"uint24",name:"fee",type:"uint24"},{indexed:!1,internalType:"int24",name:"tickSpacing",type:"int24"},{indexed:!1,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event",params:{fee:"The fee collected upon every swap in the pool, denominated in hundredths of a bip",pool:"The address of the created pool",tickSpacing:"The minimum number of ticks between initialized ticks",token0:"The first token of the pool by address sort order",token1:"The second token of the pool by address sort order"},notice:"Emitted when a pool is created"}},methods:{"createPool(address,address,uint24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"createPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"nonpayable",type:"function",details:"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",params:{fee:"The desired fee for the pool",tokenA:"One of the two tokens in the desired pool",tokenB:"The other of the two tokens in the desired pool"},returns:{pool:"The address of the newly created pool"},notice:"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{inputs:[{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickSpacing",type:"int24"}],name:"enableFeeAmount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Fee amounts may never be removed once enabled",params:{fee:"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",tickSpacing:"The spacing between ticks to be enforced for all pools created with the given fee amount"},notice:"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{inputs:[{internalType:"uint24",name:"fee",type:"uint24"}],name:"feeAmountTickSpacing",outputs:[{internalType:"int24",name:"",type:"int24"}],stateMutability:"view",type:"function",details:"A fee amount can never be removed, so this value should be hard coded or cached in the calling context",params:{fee:"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},returns:{_0:"The tick spacing"},notice:"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"getPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"view",type:"function",details:"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",params:{fee:"The fee collected upon every swap in the pool, denominated in hundredths of a bip",tokenA:"The contract address of either token0 or token1",tokenB:"The contract address of the other token"},returns:{pool:"The pool address"},notice:"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Can be changed by the current owner via setOwner",returns:{_0:"The address of the factory owner"},notice:"Returns the current owner of the factory"},"setOwner(address)":{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"Must be called by the current owner",params:{_owner:"The new owner of the factory"},notice:"Updates the owner of the factory"}}},"contracts/evm/interfaces/IWETH.sol:IWETH":{source:"contracts/evm/interfaces/IWETH.sol",name:"IWETH",methods:{"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/evm/layer/MecenateBay.sol:MecenateBay":{source:"contracts/evm/layer/MecenateBay.sol",name:"MecenateBay",constructor:{inputs:[{internalType:"address",name:"_usersMouduleContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RequestAccepted(address,(bytes,uint256,uint256,address,bool,uint256,uint8,address),uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],indexed:!1,internalType:"struct Structures.BayRequest",name:"",type:"tuple"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"RequestAccepted",type:"event"},"RequestCreated(address,(bytes,uint256,uint256,address,bool,uint256,uint8,address),uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],indexed:!1,internalType:"struct Structures.BayRequest",name:"",type:"tuple"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"RequestCreated",type:"event"}},methods:{"acceptRequest(uint256,address)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"_feed",type:"address"}],name:"acceptRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"allRequests(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allRequests",outputs:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],stateMutability:"view",type:"function"},"changeDaiToken(address)":{inputs:[{internalType:"address",name:"_daiToken",type:"address"}],name:"changeDaiToken",outputs:[],stateMutability:"nonpayable",type:"function"},"changeMuseToken(address)":{inputs:[{internalType:"address",name:"_museToken",type:"address"}],name:"changeMuseToken",outputs:[],stateMutability:"nonpayable",type:"function"},"changeUsersModule(address)":{inputs:[{internalType:"address",name:"_usersModule",type:"address"}],name:"changeUsersModule",outputs:[],stateMutability:"nonpayable",type:"function"},"changeVerifier(address)":{inputs:[{internalType:"address",name:"_verifier",type:"address"}],name:"changeVerifier",outputs:[],stateMutability:"nonpayable",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"createRequest((bytes,uint256,uint256,address,bool,uint256,uint8,address),bytes,address,address)":{inputs:[{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],internalType:"struct Structures.BayRequest",name:"request",type:"tuple"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"createRequest",outputs:[{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],internalType:"struct Structures.BayRequest",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getRequestForAddress(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getRequestForAddress",outputs:[{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getRequests()":{inputs:[],name:"getRequests",outputs:[{components:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeRequest(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"removeRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"requests(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"requests",outputs:[{internalType:"bytes",name:"request",type:"bytes"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"buyerAddress",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"usersMouduleContract()":{inputs:[],name:"usersMouduleContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/evm/library/Structures.sol:Structures":{source:"contracts/evm/library/Structures.sol",name:"Structures"},"contracts/evm/mocks/MockDai.sol:MockDai":{source:"contracts/evm/mocks/MockDai.sol",name:"MockDai",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/evm/mocks/MockERC20.sol:MockERC20":{source:"contracts/evm/mocks/MockERC20.sol",name:"MockERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/evm/mocks/MockWeth.sol:MockWeth":{source:"contracts/evm/mocks/MockWeth.sol",name:"MockWeth",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/evm/modules/Acceptance.sol:Acceptance":{source:"contracts/evm/modules/Acceptance.sol",name:"Acceptance",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"acceptPost(uint8,uint256,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"paymentAmount",type:"uint256"},{internalType:"address",name:"funder",type:"address"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/BurnDAI.sol:BurnDAI":{source:"contracts/evm/modules/BurnDAI.sol",name:"BurnDAI",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/BurnMUSE.sol:BurnMUSE":{source:"contracts/evm/modules/BurnMUSE.sol",name:"BurnMUSE",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Creation.sol:Creation":{source:"contracts/evm/modules/Creation.sol",name:"Creation",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"createPost(bytes,uint8,uint8,uint256,uint256,uint8,address)":{inputs:[{internalType:"bytes",name:"encryptedHash",type:"bytes"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"enum Structures.PostDuration",name:"postDuration",type:"uint8"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stakeAmount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"funder",type:"address"}],name:"createPost",outputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],internalType:"struct Structures.Post",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Data.sol:Data":{source:"contracts/evm/modules/Data.sol",name:"Data",title:"Data",details:"This contract stores data related to Mecenate posts and provides functions to interact with it.",constructor:{inputs:[{internalType:"address",name:"usersModuleContract",type:"address"},{internalType:"address",name:"factoryContract",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Deposit.sol:Deposit":{source:"contracts/evm/modules/Deposit.sol",name:"Deposit",events:{"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"}}},"contracts/evm/modules/Events.sol:Events":{source:"contracts/evm/modules/Events.sol",name:"Events",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/FeedViewer.sol:FeedViewer":{source:"contracts/evm/modules/FeedViewer.sol",name:"FeedViewer"},"contracts/evm/modules/Finalization.sol:Finalization":{source:"contracts/evm/modules/Finalization.sol",name:"Finalization",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"finalizePost(bool,uint256)":{inputs:[{internalType:"bool",name:"valid",type:"bool"},{internalType:"uint256",name:"punishment",type:"uint256"}],name:"finalizePost",outputs:[],stateMutability:"nonpayable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Renounce.sol:Renounce":{source:"contracts/evm/modules/Renounce.sol",name:"Renounce",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renouncePost()":{inputs:[],name:"renouncePost",outputs:[],stateMutability:"nonpayable",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Staking.sol:Staking":{source:"contracts/evm/modules/Staking.sol",name:"Staking",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"_funder",type:"address"},{internalType:"uint256",name:"amountToAdd",type:"uint256"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"staker",type:"address"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"receiver",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,address,uint256)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amountToTake",type:"uint256"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Submission.sol:Submission":{source:"contracts/evm/modules/Submission.sol",name:"Submission",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"revealData(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"decryptedData",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"revealData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"submitHash(bytes)":{inputs:[{internalType:"bytes",name:"encryptedKey",type:"bytes"}],name:"submitHash",outputs:[],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/modules/Swapper.sol:Swapper":{source:"contracts/evm/modules/Swapper.sol",name:"Swapper",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},"configLiquidityProvider(address,address)":{inputs:[{internalType:"address",name:"_native",type:"address"},{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"configLiquidityProvider",outputs:[],stateMutability:"nonpayable",type:"function"},"customApprove(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"customApprove",outputs:[],stateMutability:"nonpayable",type:"function"},"native()":{inputs:[],name:"native",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"positionManager()":{inputs:[],name:"positionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setSplitLiqudity(bool)":{inputs:[{internalType:"bool",name:"_splitLiquidity",type:"bool"}],name:"setSplitLiqudity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"splitLiquidity()":{inputs:[],name:"splitLiquidity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"swapRouter()":{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},"swapTokensForTokens(address,address,uint256,uint24)":{inputs:[{internalType:"address",name:"token1",type:"address"},{internalType:"address",name:"token2",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"swapTokensForTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/evm/modules/TokenManager.sol:TokenManager":{source:"contracts/evm/modules/TokenManager.sol",name:"TokenManager",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((address,bytes,bytes),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/evm/registry/MecenateUsers.sol:MecenateUsers":{source:"contracts/evm/registry/MecenateUsers.sol",name:"MecenateUsers",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"UserRegistered(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"}],name:"UserRegistered",type:"event"}},methods:{"checkifUserExist(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"checkifUserExist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getPaginatedUsers(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"getPaginatedUsers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getUserAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getUserCount()":{inputs:[],name:"getUserCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserMetadata(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"getUserMetadata",outputs:[{components:[{internalType:"address",name:"evmAddress",type:"address"},{internalType:"bytes",name:"sismoVaultId",type:"bytes"},{internalType:"bytes",name:"publicKey",type:"bytes"}],internalType:"struct Structures.User",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"getUserPublicKey(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"getUserPublicKey",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"getUsers()":{inputs:[],name:"getUsers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"registerUser(bytes)":{inputs:[{internalType:"bytes",name:"metadata",type:"bytes"}],name:"registerUser",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/evm/tokens/Muse.sol:MUSE":{source:"contracts/evm/tokens/Muse.sol",name:"MUSE",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",details:"Emitted when an account changes their delegate."},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",details:"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"EIP712DomainChanged()":{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event",details:"MAY be emitted to signal that the domain could have changed."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event",details:"Emitted when the pause is triggered by `account`."},"Snapshot(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"Snapshot",type:"event",details:"Emitted by {_snapshot} when a snapshot identified by `id` is created."},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event",details:"Emitted when the pause is lifted by `account`."}},methods:{"CLOCK_MODE()":{inputs:[],name:"CLOCK_MODE",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Description of the clock"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"balanceOfAt(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"snapshotId",type:"uint256"}],name:"balanceOfAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieves the balance of `account` at the time `snapshotId` was created."},"burn(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20Votes.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function",details:"Get the `pos`-th checkpoint for `account`."},"clock()":{inputs:[],name:"clock",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function",details:"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",details:"Delegate votes from the sender to `delegatee`."},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",details:"Delegates votes from signer to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Get the address `account` is currently delegating to."},"eip712Domain()":{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function",details:"See {EIP-5267}. _Available since v4.9._"},"getPastTotalSupply(uint256)":{inputs:[{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past"},"getPastVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past"},"getVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Gets the current votes balance for `account`"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",details:"Get number of checkpoints for `account`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"snapshot()":{inputs:[],name:"snapshot",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{inputs:[{internalType:"uint256",name:"snapshotId",type:"uint256"}],name:"totalSupplyAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieves the total supply at the time `snapshotId` was created."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/MecenateStats.sol:MecenateStats":{source:"contracts/sismo-zkp/MecenateStats.sol",name:"MecenateStats",constructor:{inputs:[{internalType:"address",name:"_mecenateUsers",type:"address"},{internalType:"address",name:"_mecenateFeedFactory",type:"address"},{internalType:"address",name:"_mecenateBay",type:"address"},{internalType:"address",name:"_mecenateTreasury",type:"address"}],stateMutability:"nonpayable",type:"constructor"},methods:{"getStats()":{inputs:[],name:"getStats",outputs:[{components:[{internalType:"uint256",name:"totalUsers",type:"uint256"},{internalType:"uint256",name:"totalBayRequests",type:"uint256"},{internalType:"uint256",name:"totalFeeds",type:"uint256"},{internalType:"uint256",name:"globalFee",type:"uint256"},{internalType:"uint256",name:"fixedFee",type:"uint256"},{internalType:"uint256",name:"treasuryBalance",type:"uint256"}],internalType:"struct MecenateStats.Stats",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"mecenateBay()":{inputs:[],name:"mecenateBay",outputs:[{internalType:"contract IMecenateBay",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateFeedFactory()":{inputs:[],name:"mecenateFeedFactory",outputs:[{internalType:"contract IMecenateFeedFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateTreasury()":{inputs:[],name:"mecenateTreasury",outputs:[{internalType:"contract IMecenateTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"mecenateUsers()":{inputs:[],name:"mecenateUsers",outputs:[{internalType:"contract IMecenateUsers",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/MecenateTreasury.sol:MecenateTreasury":{source:"contracts/sismo-zkp/MecenateTreasury.sol",name:"MecenateTreasury",receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addERC20Funds(address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"addERC20Funds",outputs:[],stateMutability:"nonpayable",type:"function"},"addFunds()":{inputs:[],name:"addFunds",outputs:[],stateMutability:"payable",type:"function"},"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},"configLiquidityProvider(address,address)":{inputs:[{internalType:"address",name:"_native",type:"address"},{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"configLiquidityProvider",outputs:[],stateMutability:"nonpayable",type:"function"},"customApprove(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"customApprove",outputs:[],stateMutability:"nonpayable",type:"function"},"distributableBalance()":{inputs:[],name:"distributableBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distributableERC20Balance(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"distributableERC20Balance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distribute(address)":{inputs:[{internalType:"address",name:"_usersContract",type:"address"}],name:"distribute",outputs:[],stateMutability:"nonpayable",type:"function"},"distributeERC20(address,address)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"_usersContract",type:"address"}],name:"distributeERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"fixedFee()":{inputs:[],name:"fixedFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getDistributionBalance()":{inputs:[],name:"getDistributionBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getDistributionERC20Balance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getDistributionERC20Balance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReward(address,bytes32)":{inputs:[{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRewardERC20(address,address,bytes32)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalFee()":{inputs:[],name:"globalFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastDistributed()":{inputs:[],name:"lastDistributed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"native()":{inputs:[],name:"native",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"ownerFee()":{inputs:[],name:"ownerFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"positionManager()":{inputs:[],name:"positionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setFixedFee(uint256)":{inputs:[{internalType:"uint256",name:"_fixedFee",type:"uint256"}],name:"setFixedFee",outputs:[],stateMutability:"nonpayable",type:"function"},"setGlobalFee(uint256)":{inputs:[{internalType:"uint256",name:"_globalFee",type:"uint256"}],name:"setGlobalFee",outputs:[],stateMutability:"nonpayable",type:"function"},"setSplitLiqudity(bool)":{inputs:[{internalType:"bool",name:"_splitLiquidity",type:"bool"}],name:"setSplitLiqudity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"setSwapRouter(address)":{inputs:[{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"setSwapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},"splitLiquidity()":{inputs:[],name:"splitLiquidity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"swapAndBurn(address,address,address,uint24,uint24)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"address",name:"_token2",type:"address"},{internalType:"uint24",name:"_fee",type:"uint24"},{internalType:"uint24",name:"_fee2",type:"uint24"}],name:"swapAndBurn",outputs:[],stateMutability:"nonpayable",type:"function"},"swapRouter()":{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},"swapTokensForTokens(address,address,uint256,uint24)":{inputs:[{internalType:"address",name:"token1",type:"address"},{internalType:"address",name:"token2",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"swapTokensForTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeReward(address,address,bytes,address,address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeRewardERC20(address,address,address,bytes,address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userReward(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"userReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userRewardERC20(bytes32,address)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"userRewardERC20",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/MecenateVault.sol:MecenateVault":{source:"contracts/sismo-zkp/MecenateVault.sol",name:"MecenateVault",constructor:{inputs:[{internalType:"address",name:"_verifierContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdrawn(bytes32,uint256,string,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"string",name:"secret",type:"string"},{indexed:!1,internalType:"address",name:"token",type:"address"}],name:"Withdrawn",type:"event"}},methods:{"depositETH(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"depositETH",outputs:[],stateMutability:"payable",type:"function"},"depositToken(address,uint256,bytes32)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"depositToken",outputs:[],stateMutability:"nonpayable",type:"function"},"getEthDeposit(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getEthDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenDeposit(address,bytes32)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getTokenDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setVerifierContract(address)":{inputs:[{internalType:"address",name:"_verifierContract",type:"address"}],name:"setVerifierContract",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdrawETH(uint256,bytes,address,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"withdrawETH",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawToken(address,uint256,bytes,address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawWithSecret(string,address,address)":{inputs:[{internalType:"string",name:"_secret",type:"string"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"}],name:"withdrawWithSecret",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/MecenateVerifier.sol:MecenateVerifier":{source:"contracts/sismo-zkp/MecenateVerifier.sol",name:"MecenateVerifier",constructor:{inputs:[{internalType:"bytes16",name:"_appId",type:"bytes16"}],stateMutability:"nonpayable",type:"constructor"},methods:{"ADDRESSES_PROVIDER_V2()":{inputs:[],name:"ADDRESSES_PROVIDER_V2",outputs:[{internalType:"contract IAddressesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},"APP_ID()":{inputs:[],name:"APP_ID",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"IS_IMPERSONATION_MODE()":{inputs:[],name:"IS_IMPERSONATION_MODE",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"SISMO_CONNECT_LIB_VERSION()":{inputs:[],name:"SISMO_CONNECT_LIB_VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"appId()":{inputs:[],name:"appId",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"config()":{inputs:[],name:"config",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"sismoVerify(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"sismoVerify",outputs:[{internalType:"bytes",name:"",type:"bytes"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/factories/MecenateFeedFactory.sol:MecenateFeedFactory":{source:"contracts/sismo-zkp/factories/MecenateFeedFactory.sol",name:"MecenateFeedFactory",constructor:{inputs:[{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_treasuryContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"FeedCreated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"addr",type:"address"}],name:"FeedCreated",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"buildFeed(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"buildFeed",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},"burnEnabled()":{inputs:[],name:"burnEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"changeMultipleSettings(address,address,address,address,address,address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"},{internalType:"address",name:"_usersModule",type:"address"},{internalType:"address",name:"_wethToken",type:"address"},{internalType:"address",name:"_museToken",type:"address"},{internalType:"address",name:"_daiToken",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"changeMultipleSettings",outputs:[],stateMutability:"nonpayable",type:"function"},"changeVersion(string)":{inputs:[{internalType:"string",name:"_version",type:"string"}],name:"changeVersion",outputs:[],stateMutability:"nonpayable",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getFeedInfo(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"getFeedInfo",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"bytes32",name:"operator",type:"bytes32"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"getFeeds()":{inputs:[],name:"getFeeds",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getFeedsInfo()":{inputs:[],name:"getFeedsInfo",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"bytes32",name:"operator",type:"bytes32"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getFeedsInfoOwned(bytes32)":{inputs:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"getFeedsInfoOwned",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"bytes32",name:"operator",type:"bytes32"},{internalType:"uint256",name:"sellerStake",type:"uint256"},{internalType:"uint256",name:"buyerStake",type:"uint256"},{internalType:"uint256",name:"totalStake",type:"uint256"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"uint256",name:"paymentRequested",type:"uint256"},{internalType:"uint256",name:"stakeRequested",type:"uint256"},{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"string",name:"version",type:"string"}],internalType:"struct Structures.Feed[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getFeedsOwned(bytes32)":{inputs:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"getFeedsOwned",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getRouterFee(uint8)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"}],name:"getRouterFee",outputs:[{internalType:"uint24",name:"",type:"uint24"}],stateMutability:"view",type:"function"},"identityContract()":{inputs:[],name:"identityContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"isContractCreated(address)":{inputs:[{internalType:"address",name:"contractAddress",type:"address"}],name:"isContractCreated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isFeed(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"isFeed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setBurnEnabled(bool)":{inputs:[{internalType:"bool",name:"_burnEnabled",type:"bool"}],name:"setBurnEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},"setFeedByteCode(bytes)":{inputs:[{internalType:"bytes",name:"_byteCode",type:"bytes"}],name:"setFeedByteCode",outputs:[],stateMutability:"nonpayable",type:"function"},"setRouterFee(uint8,uint24)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"setRouterFee",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasuryContract()":{inputs:[],name:"treasuryContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"wethToken()":{inputs:[],name:"wethToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/features/MecenateFeed.sol:MecenateFeed":{source:"contracts/sismo-zkp/features/MecenateFeed.sol",name:"MecenateFeed",constructor:{inputs:[{internalType:"bytes32",name:"_owner",type:"bytes32"},{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"_factoryContract",type:"address"},{internalType:"string",name:"_version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"acceptPost(bytes,address,address,uint8,uint256)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"_paymentAmount",type:"uint256"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"createPost(bytes,uint8,uint8,uint256,uint256,uint8,bytes,address,address)":{inputs:[{internalType:"bytes",name:"encryptedHash",type:"bytes"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"enum Structures.PostDuration",name:"postDuration",type:"uint8"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stakeAmount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"createPost",outputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],internalType:"struct Structures.Post",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"finalizePost(bytes,address,address,bool,uint256)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"bool",name:"valid",type:"bool"},{internalType:"uint256",name:"punishment",type:"uint256"}],name:"finalizePost",outputs:[],stateMutability:"nonpayable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getHashedVaultId(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"getHashedVaultId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},"getMessage(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"getMessage",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTelegramIds(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getTelegramIds",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVaultIdSecret(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getVaultIdSecret",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renouncePost(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"renouncePost",outputs:[],stateMutability:"nonpayable",type:"function"},"revealData(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"decryptedData",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"revealData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"submitHash(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"submitHash",outputs:[],stateMutability:"nonpayable",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"write(bytes,bytes32)":{inputs:[{internalType:"bytes",name:"encodeMessage",type:"bytes"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"write",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/helpers/ExternalProxyCall.sol:ExternalProxyCall":{source:"contracts/sismo-zkp/helpers/ExternalProxyCall.sol",name:"ExternalProxyCall",title:"Forwards arbitrary calls to an external contract.",details:"This is used so that the from address of the calling contract does not have any special permissions (e.g. ERC-20 transfer). Other return types and call structures may be added in the future.",notice:"DO NOT approve this contract to transfer any ERC-20 or ERC-721, or grant any other permissions for another contract.",methods:{"proxyCallAndReturnAddress(address,bytes)":{inputs:[{internalType:"address",name:"externalContract",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],name:"proxyCallAndReturnAddress",outputs:[{internalType:"address payable",name:"result",type:"address"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/helpers/SismoConnectLib.sol:SismoConnect":{source:"contracts/sismo-zkp/helpers/SismoConnectLib.sol",name:"SismoConnect",constructor:{inputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"_config",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},methods:{"ADDRESSES_PROVIDER_V2()":{inputs:[],name:"ADDRESSES_PROVIDER_V2",outputs:[{internalType:"contract IAddressesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},"APP_ID()":{inputs:[],name:"APP_ID",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"IS_IMPERSONATION_MODE()":{inputs:[],name:"IS_IMPERSONATION_MODE",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"SISMO_CONNECT_LIB_VERSION()":{inputs:[],name:"SISMO_CONNECT_LIB_VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"config()":{inputs:[],name:"config",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"",type:"tuple"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/helpers/interfaces/IAddressesProvider.sol:IAddressesProvider":{source:"contracts/sismo-zkp/helpers/interfaces/IAddressesProvider.sol",name:"IAddressesProvider",methods:{"get(string)":{inputs:[{internalType:"string",name:"contractName",type:"string"}],name:"get",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of a contract.",params:{contractName:"Name of the contract (string)."},returns:{_0:"Address of the contract."}},"get(bytes32)":{inputs:[{internalType:"bytes32",name:"contractNameHash",type:"bytes32"}],name:"get",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of a contract.",params:{contractNameHash:"Hash of the name of the contract (bytes32)."},returns:{_0:"Address of the contract."}},"getAll()":{inputs:[],name:"getAll",outputs:[{internalType:"string[]",name:"",type:"string[]"},{internalType:"bytes32[]",name:"",type:"bytes32[]"},{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts in `_contractNames`",returns:{_0:"Names, Hashed Names and Addresses of all contracts."}},"getBatch(bytes32[])":{inputs:[{internalType:"bytes32[]",name:"contractNamesHash",type:"bytes32[]"}],name:"getBatch",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts inputed.",params:{contractNamesHash:"Names of the contracts as strings."}},"getBatch(string[])":{inputs:[{internalType:"string[]",name:"contractNames",type:"string[]"}],name:"getBatch",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",details:"Returns the addresses of all contracts inputed.",params:{contractNames:"Names of the contracts as strings."}},"set(address,string)":{inputs:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"string",name:"contractName",type:"string"}],name:"set",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets the address of a contract.",params:{contractAddress:"Address of the contract.",contractName:"Name of the contract."}},"setBatch(address[],string[])":{inputs:[{internalType:"address[]",name:"contractAddresses",type:"address[]"},{internalType:"string[]",name:"contractNames",type:"string[]"}],name:"setBatch",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets the address of multiple contracts.",params:{contractAddresses:"Addresses of the contracts.",contractNames:"Names of the contracts."}}}},"contracts/sismo-zkp/helpers/interfaces/IBaseVerifier.sol:IBaseVerifier":{source:"contracts/sismo-zkp/helpers/interfaces/IBaseVerifier.sol",name:"IBaseVerifier",methods:{"verify(bytes16,bytes16,bool,bytes,((uint8,bool,bool,uint256,bytes)[],(uint8,bytes16,bytes16,bool,uint256,bytes)[],bytes32,bytes,bytes))":{inputs:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bool",name:"isImpersonationMode",type:"bool"},{internalType:"bytes",name:"signedMessage",type:"bytes"},{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"sismoConnectProof",type:"tuple"}],name:"verify",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedAuth",name:"",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"uint256",name:"proofId",type:"uint256"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedClaim",name:"",type:"tuple"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/helpers/interfaces/ISismoConnectVerifier.sol:ISismoConnectVerifier":{source:"contracts/sismo-zkp/helpers/interfaces/ISismoConnectVerifier.sol",name:"ISismoConnectVerifier",events:{"VerifierSet(bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"",type:"bytes32"},{indexed:!1,internalType:"address",name:"",type:"address"}],name:"VerifierSet",type:"event"}},methods:{"SISMO_CONNECT_VERSION()":{inputs:[],name:"SISMO_CONNECT_VERSION",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"verify((bytes16,bytes16,bytes32,bytes,((uint8,bool,bool,uint256,bytes)[],(uint8,bytes16,bytes16,bool,uint256,bytes)[],bytes32,bytes,bytes)[]),(bytes16,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes)),(bytes16,(bool)))":{inputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bytes32",name:"version",type:"bytes32"},{internalType:"bytes",name:"signedMessage",type:"bytes"},{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof[]",name:"proofs",type:"tuple[]"}],internalType:"struct SismoConnectResponse",name:"response",type:"tuple"},{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"request",type:"tuple"},{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{components:[{internalType:"bool",name:"isImpersonationMode",type:"bool"}],internalType:"struct VaultConfig",name:"vault",type:"tuple"}],internalType:"struct SismoConnectConfig",name:"config",type:"tuple"}],name:"verify",outputs:[{components:[{internalType:"bytes16",name:"appId",type:"bytes16"},{internalType:"bytes16",name:"namespace",type:"bytes16"},{internalType:"bytes32",name:"version",type:"bytes32"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedAuth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"},{internalType:"uint256",name:"proofId",type:"uint256"},{internalType:"bytes",name:"proofData",type:"bytes"}],internalType:"struct VerifiedClaim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"signedMessage",type:"bytes"}],internalType:"struct SismoConnectVerifiedResult",name:"",type:"tuple"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/helpers/utils/AuthBuilder.sol:AuthBuilder":{source:"contracts/sismo-zkp/helpers/utils/AuthBuilder.sol",name:"AuthBuilder",methods:{"DEFAULT_AUTH_EXTRA_DATA()":{inputs:[],name:"DEFAULT_AUTH_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_IS_ANON()":{inputs:[],name:"DEFAULT_AUTH_IS_ANON",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_AUTH_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_TYPE()":{inputs:[],name:"DEFAULT_AUTH_TYPE",outputs:[{internalType:"enum AuthType",name:"",type:"AuthType"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_USER_ID()":{inputs:[],name:"DEFAULT_AUTH_USER_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(AuthType,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,bool,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(AuthType,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/AuthMatchingLib.sol:AuthMatchingLib":{source:"contracts/sismo-zkp/helpers/utils/AuthMatchingLib.sol",name:"AuthMatchingLib",methods:{"handleAuthErrors(uint8,(AuthType,uint256,bool,bool,bool,bytes))":{inputs:[{internalType:"uint8",name:"maxMatchingProperties",type:"uint8"},{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"}],name:"handleAuthErrors",outputs:[],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/AuthRequestBuilder.sol:AuthRequestBuilder":{source:"contracts/sismo-zkp/helpers/utils/AuthRequestBuilder.sol",name:"AuthRequestBuilder",methods:{"DEFAULT_AUTH_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_IS_ANON()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_IS_ANON",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_IS_OPTIONAL()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_IS_OPTIONAL",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_AUTH_REQUEST_USER_ID()":{inputs:[],name:"DEFAULT_AUTH_REQUEST_USER_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(uint8,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bool,bool,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,uint256,bytes)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(uint8,bool,bool)":{inputs:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/ClaimBuilder.sol:ClaimBuilder":{source:"contracts/sismo-zkp/helpers/utils/ClaimBuilder.sol",name:"ClaimBuilder",methods:{"DEFAULT_CLAIM_EXTRA_DATA()":{inputs:[],name:"DEFAULT_CLAIM_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_GROUP_TIMESTAMP()":{inputs:[],name:"DEFAULT_CLAIM_GROUP_TIMESTAMP",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_CLAIM_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_TYPE()":{inputs:[],name:"DEFAULT_CLAIM_TYPE",outputs:[{internalType:"enum ClaimType",name:"",type:"ClaimType"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_VALUE()":{inputs:[],name:"DEFAULT_CLAIM_VALUE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(bytes16,bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,ClaimType,bool,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,ClaimType,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,ClaimType)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/ClaimMatchingLib.sol:ClaimMatchingLib":{source:"contracts/sismo-zkp/helpers/utils/ClaimMatchingLib.sol",name:"ClaimMatchingLib",methods:{"handleClaimErrors(uint8,(ClaimType,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{internalType:"uint8",name:"maxMatchingProperties",type:"uint8"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"handleClaimErrors",outputs:[],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/ClaimRequestBuilder.sol:ClaimRequestBuilder":{source:"contracts/sismo-zkp/helpers/utils/ClaimRequestBuilder.sol",name:"ClaimRequestBuilder",methods:{"DEFAULT_CLAIM_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_GROUP_TIMESTAMP()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_GROUP_TIMESTAMP",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_IS_OPTIONAL()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_IS_OPTIONAL",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_TYPE()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_TYPE",outputs:[{internalType:"enum ClaimType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"DEFAULT_CLAIM_REQUEST_VALUE()":{inputs:[],name:"DEFAULT_CLAIM_REQUEST_VALUE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"build(bytes16,bytes16,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint8,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,uint8,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,uint256,uint8,bool,bool,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,uint256,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bool,bool)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes16,bytes16,bytes)":{inputs:[{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/Fmt.sol:fmt":{source:"contracts/sismo-zkp/helpers/utils/Fmt.sol",name:"fmt",methods:{"printAuth((AuthType,bool,bool,uint256,bytes),string)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"string",name:"indication",type:"string"}],name:"printAuth",outputs:[],stateMutability:"view",type:"function"},"printAuthRequest((AuthType,uint256,bool,bool,bool,bytes),string)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{internalType:"string",name:"indication",type:"string"}],name:"printAuthRequest",outputs:[],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/helpers/utils/RequestBuilder.sol:RequestBuilder":{source:"contracts/sismo-zkp/helpers/utils/RequestBuilder.sol",name:"RequestBuilder",methods:{"DEFAULT_NAMESPACE()":{inputs:[],name:"DEFAULT_NAMESPACE",outputs:[{internalType:"bytes16",name:"",type:"bytes16"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[])":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes),bytes16)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],bytes16)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{internalType:"bytes16",name:"namespace",type:"bytes16"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"build((uint8,uint256,bool,bool,bool,bytes),(uint8,bytes16,bytes16,uint256,bool,bool,bytes),(bytes,bool,bytes))":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest",name:"claim",type:"tuple"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],name:"build",outputs:[{components:[{internalType:"bytes16",name:"namespace",type:"bytes16"},{components:[{internalType:"enum AuthType",name:"authType",type:"uint8"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct AuthRequest[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"uint8"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isOptional",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct ClaimRequest[]",name:"claims",type:"tuple[]"},{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"signature",type:"tuple"}],internalType:"struct SismoConnectRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/SignatureBuilder.sol:SignatureBuilder":{source:"contracts/sismo-zkp/helpers/utils/SignatureBuilder.sol",name:"SignatureBuilder",methods:{"DEFAULT_SIGNATURE_REQUEST_EXTRA_DATA()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_SIGNATURE_REQUEST_IS_SELECTABLE_BY_USER()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_IS_SELECTABLE_BY_USER",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"DEFAULT_SIGNATURE_REQUEST_MESSAGE()":{inputs:[],name:"DEFAULT_SIGNATURE_REQUEST_MESSAGE",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"build(bytes,bool,bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bool)":{inputs:[{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes,bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes,bool)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bytes)":{inputs:[{internalType:"bytes",name:"message",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build(bool,bytes)":{inputs:[{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"build",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"buildEmpty()":{inputs:[],name:"buildEmpty",outputs:[{components:[{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SignatureRequest",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/helpers/utils/SismoConnectHelper.sol:SismoConnectHelper":{source:"contracts/sismo-zkp/helpers/utils/SismoConnectHelper.sol",name:"SismoConnectHelper"},"contracts/sismo-zkp/helpers/utils/SismoConnectProofBuilder.sol:ProofBuilder":{source:"contracts/sismo-zkp/helpers/utils/SismoConnectProofBuilder.sol",name:"ProofBuilder",methods:{"DEFAULT_PROOF_EXTRA_DATA()":{inputs:[],name:"DEFAULT_PROOF_EXTRA_DATA",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"DEFAULT_PROOF_PROVING_SCHEME()":{inputs:[],name:"DEFAULT_PROOF_PROVING_SCHEME",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"build((AuthType,bool,bool,uint256,bytes)[],(ClaimType,bytes16,bytes16,bool,uint256,bytes)[],bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),(ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes),(ClaimType,bytes16,bytes16,bool,uint256,bytes),bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth",name:"auth",type:"tuple"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim",name:"claim",type:"tuple"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"build((AuthType,bool,bool,uint256,bytes)[],(ClaimType,bytes16,bytes16,bool,uint256,bytes)[],bytes,bytes32)":{inputs:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"}],name:"build",outputs:[{components:[{components:[{internalType:"enum AuthType",name:"authType",type:"AuthType"},{internalType:"bool",name:"isAnon",type:"bool"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Auth[]",name:"auths",type:"tuple[]"},{components:[{internalType:"enum ClaimType",name:"claimType",type:"ClaimType"},{internalType:"bytes16",name:"groupId",type:"bytes16"},{internalType:"bytes16",name:"groupTimestamp",type:"bytes16"},{internalType:"bool",name:"isSelectableByUser",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct Claim[]",name:"claims",type:"tuple[]"},{internalType:"bytes32",name:"provingScheme",type:"bytes32"},{internalType:"bytes",name:"proofData",type:"bytes"},{internalType:"bytes",name:"extraData",type:"bytes"}],internalType:"struct SismoConnectProof",name:"",type:"tuple"}],stateMutability:"pure",type:"function"}}},"contracts/sismo-zkp/interfaces/IFeedInitializer.sol:IFeedInitializer":{source:"contracts/sismo-zkp/interfaces/IFeedInitializer.sol",name:"IFeedInitializer",methods:{"initialize(address,address,address,address,address)":{inputs:[{internalType:"address",name:"_factoryContract",type:"address"},{internalType:"address",name:"_treasuryContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_proxyCallContract",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/interfaces/IMUSE.sol:IMUSE":{source:"contracts/sismo-zkp/interfaces/IMUSE.sol",name:"IMUSE",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"mint(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/sismo-zkp/interfaces/IMecenateBay.sol:IMecenateBay":{source:"contracts/sismo-zkp/interfaces/IMecenateBay.sol",name:"IMecenateBay",methods:{"allRequests()":{inputs:[],name:"allRequests",outputs:[{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateFeed.sol:IMecenateFeed":{source:"contracts/sismo-zkp/interfaces/IMecenateFeed.sol",name:"IMecenateFeed",methods:{"acceptPost(bytes,address,address,uint8,uint256)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"enum Structures.Tokens",name:"",type:"uint8"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateFeedFactory.sol:IMecenateFeedFactory":{source:"contracts/sismo-zkp/interfaces/IMecenateFeedFactory.sol",name:"IMecenateFeedFactory",methods:{"burnEnabled()":{inputs:[],name:"burnEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeds()":{inputs:[],name:"feeds",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getRouterFee(uint8)":{inputs:[{internalType:"uint8",name:"tokenId",type:"uint8"}],name:"getRouterFee",outputs:[{internalType:"uint24",name:"",type:"uint24"}],stateMutability:"view",type:"function"},"identityContract()":{inputs:[],name:"identityContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"isFeed(address)":{inputs:[{internalType:"address",name:"_feed",type:"address"}],name:"isFeed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryContract()":{inputs:[],name:"treasuryContract",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"wethToken()":{inputs:[],name:"wethToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateTreasury.sol:IMecenateTreasury":{source:"contracts/sismo-zkp/interfaces/IMecenateTreasury.sol",name:"IMecenateTreasury",methods:{"fixedFee()":{inputs:[],name:"fixedFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"globalFee()":{inputs:[],name:"globalFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateUsers.sol:IMecenateUsers":{source:"contracts/sismo-zkp/interfaces/IMecenateUsers.sol",name:"IMecenateUsers",methods:{"checkifUserExist(bytes32)":{inputs:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"checkifUserExist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getUserAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getUserCount()":{inputs:[],name:"getUserCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserData(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserData",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"getUserVaultIdAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserVaultIdAt",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateVault.sol:IMecenateVault":{source:"contracts/sismo-zkp/interfaces/IMecenateVault.sol",name:"IMecenateVault",methods:{"pay(address,uint256,bytes)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_sismoConnectResponse",type:"bytes"}],name:"pay",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/interfaces/IMecenateVerifier.sol:IMecenateVerifier":{source:"contracts/sismo-zkp/interfaces/IMecenateVerifier.sol",name:"IMecenateVerifier",methods:{"sismoVerify(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"sismoVerify",outputs:[{internalType:"bytes",name:"",type:"bytes"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/interfaces/IPancakePair.sol:IPancakePair":{source:"contracts/sismo-zkp/interfaces/IPancakePair.sol",name:"IPancakePair",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},"Swap(address,uint256,uint256,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},"Sync(uint112,uint112)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:!1,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"MINIMUM_LIQUIDITY()":{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"kLast()":{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},"price0CumulativeLast()":{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"price1CumulativeLast()":{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"skim(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},"swap(uint256,uint256,address,bytes)":{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/interfaces/IPancakeRouter.sol:IPancakeRouter":{source:"contracts/sismo-zkp/interfaces/IPancakeRouter.sol",name:"IPancakeRouter",methods:{"WETH()":{inputs:[],name:"WETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"amountADesired",type:"uint256"},{internalType:"uint256",name:"amountBDesired",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountTokenDesired",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"payable",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"getAmountIn(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountIn",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountOut(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountOut",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountsIn(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsIn",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"getAmountsOut(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsOut",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"quote(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"reserveA",type:"uint256"},{internalType:"uint256",name:"reserveB",type:"uint256"}],name:"quote",outputs:[{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"pure",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidityETH",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidityETHSupportingFeeOnTransferTokens",outputs:[{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityETHWithPermit",outputs:[{internalType:"uint256",name:"amountToken",type:"uint256"},{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountTokenMin",type:"uint256"},{internalType:"uint256",name:"amountETHMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",outputs:[{internalType:"uint256",name:"amountETH",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityWithPermit",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapETHForExactTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapETHForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactETHForTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactETHForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"},"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactETHForTokensSupportingFeeOnTransferTokens",outputs:[],stateMutability:"payable",type:"function"},"swapExactTokensForETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETHSupportingFeeOnTransferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokensSupportingFeeOnTransferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},"swapTokensForExactETH(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/interfaces/IProxyCall.sol:IProxyCall":{source:"contracts/sismo-zkp/interfaces/IProxyCall.sol",name:"IProxyCall",methods:{"proxyCallAndReturnAddress(address,bytes)":{inputs:[{internalType:"address",name:"externalContract",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],name:"proxyCallAndReturnAddress",outputs:[{internalType:"address payable",name:"result",type:"address"}],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory":{source:"contracts/sismo-zkp/interfaces/IUniswapV3Factory.sol",name:"IUniswapV3Factory",title:"The interface for the Uniswap V3 Factory",notice:"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",events:{"FeeAmountEnabled(uint24,int24)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint24",name:"fee",type:"uint24"},{indexed:!0,internalType:"int24",name:"tickSpacing",type:"int24"}],name:"FeeAmountEnabled",type:"event",params:{fee:"The enabled fee, denominated in hundredths of a bip",tickSpacing:"The minimum number of ticks between initialized ticks for pools created with the given fee"},notice:"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerChanged",type:"event",params:{newOwner:"The owner after the owner was changed",oldOwner:"The owner before the owner was changed"},notice:"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token0",type:"address"},{indexed:!0,internalType:"address",name:"token1",type:"address"},{indexed:!0,internalType:"uint24",name:"fee",type:"uint24"},{indexed:!1,internalType:"int24",name:"tickSpacing",type:"int24"},{indexed:!1,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event",params:{fee:"The fee collected upon every swap in the pool, denominated in hundredths of a bip",pool:"The address of the created pool",tickSpacing:"The minimum number of ticks between initialized ticks",token0:"The first token of the pool by address sort order",token1:"The second token of the pool by address sort order"},notice:"Emitted when a pool is created"}},methods:{"createPool(address,address,uint24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"createPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"nonpayable",type:"function",details:"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",params:{fee:"The desired fee for the pool",tokenA:"One of the two tokens in the desired pool",tokenB:"The other of the two tokens in the desired pool"},returns:{pool:"The address of the newly created pool"},notice:"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{inputs:[{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickSpacing",type:"int24"}],name:"enableFeeAmount",outputs:[],stateMutability:"nonpayable",type:"function",details:"Fee amounts may never be removed once enabled",params:{fee:"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",tickSpacing:"The spacing between ticks to be enforced for all pools created with the given fee amount"},notice:"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{inputs:[{internalType:"uint24",name:"fee",type:"uint24"}],name:"feeAmountTickSpacing",outputs:[{internalType:"int24",name:"",type:"int24"}],stateMutability:"view",type:"function",details:"A fee amount can never be removed, so this value should be hard coded or cached in the calling context",params:{fee:"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},returns:{_0:"The tick spacing"},notice:"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"getPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"view",type:"function",details:"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",params:{fee:"The fee collected upon every swap in the pool, denominated in hundredths of a bip",tokenA:"The contract address of either token0 or token1",tokenB:"The contract address of the other token"},returns:{pool:"The pool address"},notice:"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Can be changed by the current owner via setOwner",returns:{_0:"The address of the factory owner"},notice:"Returns the current owner of the factory"},"setOwner(address)":{inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"Must be called by the current owner",params:{_owner:"The new owner of the factory"},notice:"Updates the owner of the factory"}}},"contracts/sismo-zkp/interfaces/IWETH.sol:IWETH":{source:"contracts/sismo-zkp/interfaces/IWETH.sol",name:"IWETH",methods:{"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/layer/MecenateBay.sol:MecenateBay":{source:"contracts/sismo-zkp/layer/MecenateBay.sol",name:"MecenateBay",constructor:{inputs:[{internalType:"address",name:"_usersMouduleContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RequestAccepted(bytes32,(bytes32,uint256,uint256,address,bool,uint256,uint8),uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"user",type:"bytes32"},{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],indexed:!1,internalType:"struct Structures.BayRequest",name:"",type:"tuple"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"RequestAccepted",type:"event"},"RequestCreated(bytes32,(bytes32,uint256,uint256,address,bool,uint256,uint8),uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"user",type:"bytes32"},{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],indexed:!1,internalType:"struct Structures.BayRequest",name:"",type:"tuple"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"}],name:"RequestCreated",type:"event"}},methods:{"acceptRequest(uint256,address,bytes,address,address)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"_feed",type:"address"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"acceptRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"allRequests(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allRequests",outputs:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],stateMutability:"view",type:"function"},"allRequestsPrivate(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allRequestsPrivate",outputs:[{internalType:"bytes",name:"vaultIdSeller",type:"bytes"},{internalType:"bytes",name:"sellerResponse",type:"bytes"},{internalType:"bytes",name:"vaultIdBuyer",type:"bytes"},{internalType:"bytes",name:"buyerResponse",type:"bytes"},{internalType:"address",name:"buyerTo",type:"address"},{internalType:"address",name:"buyerFrom",type:"address"}],stateMutability:"view",type:"function"},"changeDaiToken(address)":{inputs:[{internalType:"address",name:"_daiToken",type:"address"}],name:"changeDaiToken",outputs:[],stateMutability:"nonpayable",type:"function"},"changeMuseToken(address)":{inputs:[{internalType:"address",name:"_museToken",type:"address"}],name:"changeMuseToken",outputs:[],stateMutability:"nonpayable",type:"function"},"changeUsersModule(address)":{inputs:[{internalType:"address",name:"_usersModule",type:"address"}],name:"changeUsersModule",outputs:[],stateMutability:"nonpayable",type:"function"},"changeVerifier(address)":{inputs:[{internalType:"address",name:"_verifier",type:"address"}],name:"changeVerifier",outputs:[],stateMutability:"nonpayable",type:"function"},"contractCounter()":{inputs:[],name:"contractCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"createRequest((bytes32,uint256,uint256,address,bool,uint256,uint8),bytes,address,address)":{inputs:[{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.BayRequest",name:"request",type:"tuple"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"createRequest",outputs:[{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.BayRequest",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"daiToken()":{inputs:[],name:"daiToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getRequestForAddress(bytes32)":{inputs:[{internalType:"bytes32",name:"_user",type:"bytes32"}],name:"getRequestForAddress",outputs:[{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getRequests()":{inputs:[],name:"getRequests",outputs:[{components:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.BayRequest[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"museToken()":{inputs:[],name:"museToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeRequest(uint256,bytes,address,address)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"removeRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"requests(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"requests",outputs:[{internalType:"bytes32",name:"request",type:"bytes32"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"address",name:"postAddress",type:"address"},{internalType:"bool",name:"accepted",type:"bool"},{internalType:"uint256",name:"postCount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"usersMouduleContract()":{inputs:[],name:"usersMouduleContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/library/Structures.sol:Structures":{source:"contracts/sismo-zkp/library/Structures.sol",name:"Structures"},"contracts/sismo-zkp/mocks/MockDai.sol:MockDai":{source:"contracts/sismo-zkp/mocks/MockDai.sol",name:"MockDai",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/sismo-zkp/mocks/MockERC20.sol:MockERC20":{source:"contracts/sismo-zkp/mocks/MockERC20.sol",name:"MockERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/sismo-zkp/mocks/MockWeth.sol:MockWeth":{source:"contracts/sismo-zkp/mocks/MockWeth.sol",name:"MockWeth",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/sismo-zkp/modules/Acceptance.sol:Acceptance":{source:"contracts/sismo-zkp/modules/Acceptance.sol",name:"Acceptance",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"acceptPost(bytes,address,address,uint8,uint256)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"_paymentAmount",type:"uint256"}],name:"acceptPost",outputs:[],stateMutability:"payable",type:"function"},"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/BurnDAI.sol:BurnDAI":{source:"contracts/sismo-zkp/modules/BurnDAI.sol",name:"BurnDAI",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/BurnMUSE.sol:BurnMUSE":{source:"contracts/sismo-zkp/modules/BurnMUSE.sol",name:"BurnMUSE",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Creation.sol:Creation":{source:"contracts/sismo-zkp/modules/Creation.sol",name:"Creation",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"createPost(bytes,uint8,uint8,uint256,uint256,uint8,bytes,address,address)":{inputs:[{internalType:"bytes",name:"encryptedHash",type:"bytes"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"enum Structures.PostDuration",name:"postDuration",type:"uint8"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"stakeAmount",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"createPost",outputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],internalType:"struct Structures.Post",name:"",type:"tuple"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Data.sol:Data":{source:"contracts/sismo-zkp/modules/Data.sol",name:"Data",title:"Data",details:"This contract stores data related to Mecenate posts and provides functions to interact with it.",constructor:{inputs:[{internalType:"address",name:"_usersModuleContract",type:"address"},{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"_factoryContract",type:"address"},{internalType:"string",name:"_version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Deposit.sol:Deposit":{source:"contracts/sismo-zkp/modules/Deposit.sol",name:"Deposit",events:{"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"}}},"contracts/sismo-zkp/modules/Events.sol:Events":{source:"contracts/sismo-zkp/modules/Events.sol",name:"Events",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/FeedViewer.sol:FeedViewer":{source:"contracts/sismo-zkp/modules/FeedViewer.sol",name:"FeedViewer"},"contracts/sismo-zkp/modules/Finalization.sol:Finalization":{source:"contracts/sismo-zkp/modules/Finalization.sol",name:"Finalization",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"finalizePost(bytes,address,address,bool,uint256)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"bool",name:"valid",type:"bool"},{internalType:"uint256",name:"punishment",type:"uint256"}],name:"finalizePost",outputs:[],stateMutability:"nonpayable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Message.sol:Message":{source:"contracts/sismo-zkp/modules/Message.sol",name:"Message",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getHashedVaultId(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"getHashedVaultId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},"getMessage(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"getMessage",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTelegramIds(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getTelegramIds",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVaultIdSecret(bytes32)":{inputs:[{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"getVaultIdSecret",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"write(bytes,bytes32)":{inputs:[{internalType:"bytes",name:"encodeMessage",type:"bytes"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"write",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/sismo-zkp/modules/Renounce.sol:Renounce":{source:"contracts/sismo-zkp/modules/Renounce.sol",name:"Renounce",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renouncePost(bytes,address,address)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"renouncePost",outputs:[],stateMutability:"nonpayable",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Staking.sol:Staking":{source:"contracts/sismo-zkp/modules/Staking.sol",name:"Staking",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"DepositDecreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositDecreased",type:"event"},"DepositIncreased(uint8,bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenID",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"user",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDeposit",type:"uint256"}],name:"DepositIncreased",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"StakeAdded(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeAdded",type:"event"},"StakeBurned(bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"StakeBurned",type:"event"},"StakeTaken(bytes32,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"staker",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],name:"StakeTaken",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"addStake(uint8,uint256,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToAdd",type:"uint256"},{internalType:"bytes32",name:"encryptedVaultId",type:"bytes32"}],name:"addStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},"getBuyerStake()":{inputs:[],name:"getBuyerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getSellerStake()":{inputs:[],name:"getSellerStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStake(uint8,bytes32)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes32",name:"staker",type:"bytes32"}],name:"getStake",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getTotalStaked()":{inputs:[],name:"getTotalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"takeFullStake(uint8,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeFullStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"takeStake(uint8,uint256,bytes,address,address)":{inputs:[{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"},{internalType:"uint256",name:"amountToTake",type:"uint256"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"takeStake",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Submission.sol:Submission":{source:"contracts/sismo-zkp/modules/Submission.sol",name:"Submission",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"revealData(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"decryptedData",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"revealData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"submitHash(bytes,bytes,address,address)":{inputs:[{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"}],name:"submitHash",outputs:[],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/modules/Swapper.sol:Swapper":{source:"contracts/sismo-zkp/modules/Swapper.sol",name:"Swapper",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"}],name:"addLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},"configLiquidityProvider(address,address)":{inputs:[{internalType:"address",name:"_native",type:"address"},{internalType:"contract ISwapRouter",name:"_swapRouter",type:"address"}],name:"configLiquidityProvider",outputs:[],stateMutability:"nonpayable",type:"function"},"customApprove(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"customApprove",outputs:[],stateMutability:"nonpayable",type:"function"},"native()":{inputs:[],name:"native",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"positionManager()":{inputs:[],name:"positionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setSplitLiqudity(bool)":{inputs:[{internalType:"bool",name:"_splitLiquidity",type:"bool"}],name:"setSplitLiqudity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"splitLiquidity()":{inputs:[],name:"splitLiquidity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"swapRouter()":{inputs:[],name:"swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},"swapTokensForTokens(address,address,uint256,uint24)":{inputs:[{internalType:"address",name:"token1",type:"address"},{internalType:"address",name:"token2",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"}],name:"swapTokensForTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/sismo-zkp/modules/TokenManager.sol:TokenManager":{source:"contracts/sismo-zkp/modules/TokenManager.sol",name:"TokenManager",receive:{stateMutability:"payable",type:"receive"},events:{"Accepted(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Accepted",type:"event"},"Created(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Created",type:"event"},"Finalized(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Finalized",type:"event"},"Invalid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Invalid",type:"event"},"MadePublic(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"MadePublic",type:"event"},"Renounced(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Renounced",type:"event"},"Valid(((bytes32),((uint8,uint8,uint256,uint256,uint256,uint8),(uint256,uint256,uint256,uint256),(bytes,bytes,bytes))))":{anonymous:!1,inputs:[{components:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],indexed:!1,internalType:"struct Structures.Post",name:"post",type:"tuple"}],name:"Valid",type:"event"}},methods:{"getPaymentRequested()":{inputs:[],name:"getPaymentRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeRequested()":{inputs:[],name:"getStakeRequested",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getStatus()":{inputs:[],name:"getStatus",outputs:[{internalType:"enum Structures.PostStatus",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenId()":{inputs:[],name:"getTokenId",outputs:[{internalType:"enum Structures.Tokens",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"getTokenIdAddress()":{inputs:[],name:"getTokenIdAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"post()":{inputs:[],name:"post",outputs:[{components:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],internalType:"struct Structures.User",name:"creator",type:"tuple"},{components:[{components:[{internalType:"enum Structures.PostStatus",name:"status",type:"uint8"},{internalType:"enum Structures.PostType",name:"postType",type:"uint8"},{internalType:"uint256",name:"creationTimeStamp",type:"uint256"},{internalType:"uint256",name:"endTimeStamp",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"enum Structures.Tokens",name:"tokenId",type:"uint8"}],internalType:"struct Structures.PostSettings",name:"settings",type:"tuple"},{components:[{internalType:"uint256",name:"stake",type:"uint256"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"uint256",name:"punishment",type:"uint256"},{internalType:"uint256",name:"penalty",type:"uint256"}],internalType:"struct Structures.PostEscrow",name:"escrow",type:"tuple"},{components:[{internalType:"bytes",name:"encryptedData",type:"bytes"},{internalType:"bytes",name:"encryptedKey",type:"bytes"},{internalType:"bytes",name:"decryptedData",type:"bytes"}],internalType:"struct Structures.PostEncryptedData",name:"data",type:"tuple"}],internalType:"struct Structures.PostData",name:"postdata",type:"tuple"}],stateMutability:"view",type:"function"},"postCount()":{inputs:[],name:"postCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/registry/MecenateUsers.sol:MecenateUsers":{source:"contracts/sismo-zkp/registry/MecenateUsers.sol",name:"MecenateUsers",constructor:{inputs:[{internalType:"address",name:"_verifierContract",type:"address"},{internalType:"address",name:"_treasuryContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"UserRegistered(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"UserRegistered",type:"event"}},methods:{"changeTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"changeTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"changeUserName(bytes,address,address,string)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"string",name:"_username",type:"string"}],name:"changeUserName",outputs:[],stateMutability:"nonpayable",type:"function"},"changeVerifier(address)":{inputs:[{internalType:"address",name:"_verifier",type:"address"}],name:"changeVerifier",outputs:[],stateMutability:"nonpayable",type:"function"},"checkifUserExist(bytes32)":{inputs:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"checkifUserExist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getPaginatedUsers(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"getPaginatedUsers",outputs:[{internalType:"bytes32[]",name:"users",type:"bytes32[]"}],stateMutability:"view",type:"function"},"getUserAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserAt",outputs:[{internalType:"bytes32",name:"user",type:"bytes32"}],stateMutability:"view",type:"function"},"getUserCount()":{inputs:[],name:"getUserCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},"getUserName(bytes32)":{inputs:[{internalType:"bytes32",name:"vaultId",type:"bytes32"}],name:"getUserName",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getUserVaultIdAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getUserVaultIdAt",outputs:[{internalType:"bytes32",name:"user",type:"bytes32"}],stateMutability:"view",type:"function"},"getUsers()":{inputs:[],name:"getUsers",outputs:[{internalType:"bytes32[]",name:"users",type:"bytes32[]"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"registerUser(bytes,address,address,string)":{inputs:[{internalType:"bytes",name:"sismoConnectResponse",type:"bytes"},{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"string",name:"_username",type:"string"}],name:"registerUser",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasuryContract()":{inputs:[],name:"treasuryContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"userNames(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"userNames",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"verifierContract()":{inputs:[],name:"verifierContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/sismo-zkp/tokens/Muse.sol:MUSE":{source:"contracts/sismo-zkp/tokens/Muse.sol",name:"MUSE",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event",details:"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",details:"Emitted when an account changes their delegate."},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",details:"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"EIP712DomainChanged()":{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event",details:"MAY be emitted to signal that the domain could have changed."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event",details:"Emitted when the pause is triggered by `account`."},"Snapshot(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"Snapshot",type:"event",details:"Emitted by {_snapshot} when a snapshot identified by `id` is created."},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event",details:"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event",details:"Emitted when the pause is lifted by `account`."}},methods:{"CLOCK_MODE()":{inputs:[],name:"CLOCK_MODE",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Description of the clock"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"balanceOfAt(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"snapshotId",type:"uint256"}],name:"balanceOfAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieves the balance of `account` at the time `snapshotId` was created."},"burn(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20Votes.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function",details:"Get the `pos`-th checkpoint for `account`."},"clock()":{inputs:[],name:"clock",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function",details:"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",details:"Delegate votes from the sender to `delegatee`."},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",details:"Delegates votes from signer to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Get the address `account` is currently delegating to."},"eip712Domain()":{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function",details:"See {EIP-5267}. _Available since v4.9._"},"getPastTotalSupply(uint256)":{inputs:[{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past"},"getPastVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past"},"getVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Gets the current votes balance for `account`"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",details:"Get number of checkpoints for `account`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"snapshot()":{inputs:[],name:"snapshot",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{inputs:[{internalType:"uint256",name:"snapshotId",type:"uint256"}],name:"totalSupplyAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Retrieves the total supply at the time `snapshotId` was created."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"}}}};new Wn({el:"#app",router:new ku({routes:[{path:"/",component:zu,props:()=>({json:ju})},{path:"*",component:Vu,props:e=>({json:ju[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Pu)})})()})();