{"id":"d9da69fa2e5659fd813fe178dd7dfb0b","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/factories/MecenateForwarderFactory.sol":{"content":"import \"../MecenateForwarder.sol\";\r\n\r\n// import Ownable\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MecenateForwarderFactory is Ownable {\r\n    mapping(bytes32 => address) public forwardersMapping;\r\n\r\n    address public mecenateVault;\r\n\r\n    constructor(address _mecenateVault) {\r\n        mecenateVault = _mecenateVault;\r\n    }\r\n\r\n    function getVault() public view returns (address) {\r\n        return mecenateVault;\r\n    }\r\n\r\n    function changeVault(address _mecenateVault) public onlyOwner {\r\n        require(\r\n            msg.sender == _mecenateVault,\r\n            \"Only the factory can change the factory\"\r\n        );\r\n        mecenateVault = _mecenateVault;\r\n    }\r\n\r\n    event ForwarderCreated(\r\n        address indexed forwarder,\r\n        bytes32 encryptedVaultId,\r\n        address vaultContract\r\n    );\r\n\r\n    function createforwarder(\r\n        bytes32 _encryptedVaultId,\r\n        address _vaultContract\r\n    ) public returns (address) {\r\n        require(\r\n            forwardersMapping[_encryptedVaultId] == address(0),\r\n            \"forwarder already created\"\r\n        );\r\n        MecenateForwarder forwarder = new MecenateForwarder(_encryptedVaultId);\r\n\r\n        forwardersMapping[_encryptedVaultId] = address(forwarder);\r\n\r\n        emit ForwarderCreated(\r\n            address(forwarder),\r\n            _encryptedVaultId,\r\n            _vaultContract\r\n        );\r\n\r\n        return address(forwarder);\r\n    }\r\n\r\n    function getforwarders(bytes32 _user) public view returns (address) {\r\n        return forwardersMapping[_user];\r\n    }\r\n}\r\n"},"contracts/MecenateForwarder.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IMecenateVault {\n    function depositToken(\n        address token,\n        uint256 amount,\n        bytes32 encryptedVaultId\n    ) external;\n\n    function depositETH(bytes32 encryptedVaultId) external payable;\n}\n\ninterface IMecenateETHForwarderFactory {\n    function getVault() external view returns (address);\n}\n\ncontract MecenateForwarder {\n    bytes32 private encryptedVaultId;\n    address public factory;\n\n    constructor(bytes32 _encryptedVaultId) {\n        encryptedVaultId = _encryptedVaultId;\n        factory = msg.sender;\n    }\n\n    function depositToken(address token, uint256 amount) external {\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\n\n        // Approva il token\n        require(IERC20(token).approve(vault, amount), \"Approve failed\");\n\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\n    }\n\n    receive() external payable {\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\n\n        // Esegui il deposito in ETH\n        (bool success, ) = payable(vault).call{value: msg.value}(\n            abi.encodeWithSignature(\"depositETH(bytes32)\", encryptedVaultId)\n        );\n        require(success, \"Deposit failed\");\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/factories/MecenateForwarderFactory.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/factories/MecenateForwarderFactory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/factories/MecenateForwarderFactory.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/factories/MecenateForwarderFactory.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[212],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":213,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,212],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":190,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[212]},"id":213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":212,"linearizedBaseContracts":[212],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":201,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:2","memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":197,"id":200,"nodeType":"Return","src":"712:17:2"}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":212,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:2","memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":206,"id":209,"nodeType":"Return","src":"819:15:2"}]},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":212,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":213,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"contracts/MecenateForwarder.sol":{"ast":{"absolutePath":"contracts/MecenateForwarder.sol","exportedSymbols":{"IERC20":[190],"IMecenateETHForwarderFactory":[236],"IMecenateVault":[230],"MecenateForwarder":[326]},"id":327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":214,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":327,"sourceUnit":191,"src":"58:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IMecenateVault","nameLocation":"126:14:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"84abac95","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"156:12:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"token","nameLocation":"186:5:3","nodeType":"VariableDeclaration","scope":224,"src":"178:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"amount","nameLocation":"209:6:3","nodeType":"VariableDeclaration","scope":224,"src":"201:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"201:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"233:16:3","nodeType":"VariableDeclaration","scope":224,"src":"225:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"225:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"168:87:3"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"264:0:3"},"scope":230,"src":"147:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d68d9d4e","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"280:10:3","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"299:16:3","nodeType":"VariableDeclaration","scope":229,"src":"291:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"291:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"290:26:3"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"333:0:3"},"scope":230,"src":"271:63:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":327,"src":"116:220:3","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateETHForwarderFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":236,"linearizedBaseContracts":[236],"name":"IMecenateETHForwarderFactory","nameLocation":"348:28:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8d928af8","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"getVault","nameLocation":"392:8:3","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"400:2:3"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":235,"src":"426:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"425:9:3"},"scope":236,"src":"383:52:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":327,"src":"338:99:3","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"MecenateForwarder","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":326,"linearizedBaseContracts":[326],"name":"MecenateForwarder","nameLocation":"448:17:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":238,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"488:16:3","nodeType":"VariableDeclaration","scope":326,"src":"472:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"472:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"functionSelector":"c45a0155","id":240,"mutability":"mutable","name":"factory","nameLocation":"525:7:3","nodeType":"VariableDeclaration","scope":326,"src":"510:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":254,"nodeType":"Block","src":"578:83:3","statements":[{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":245,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"588:16:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":246,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"607:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"588:36:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":248,"nodeType":"ExpressionStatement","src":"588:36:3"},{"expression":{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":249,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"634:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"644:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"648:6:3","memberName":"sender","nodeType":"MemberAccess","src":"644:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"634:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":253,"nodeType":"ExpressionStatement","src":"634:20:3"}]},"id":255,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"_encryptedVaultId","nameLocation":"559:17:3","nodeType":"VariableDeclaration","scope":255,"src":"551:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"551:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"550:27:3"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"578:0:3"},"scope":326,"src":"539:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":290,"nodeType":"Block","src":"729:261:3","statements":[{"assignments":[263],"declarations":[{"constant":false,"id":263,"mutability":"mutable","name":"vault","nameLocation":"747:5:3","nodeType":"VariableDeclaration","scope":290,"src":"739:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":265,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"784:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":264,"name":"IMecenateETHForwarderFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"755:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateETHForwarderFactory_$236_$","typeString":"type(contract IMecenateETHForwarderFactory)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateETHForwarderFactory_$236","typeString":"contract IMecenateETHForwarderFactory"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"793:8:3","memberName":"getVault","nodeType":"MemberAccess","referencedDeclaration":235,"src":"755:46:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"739:64:3"},{"expression":{"arguments":[{"arguments":[{"id":275,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"872:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"879:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"857:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":271,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"850:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"850:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"864:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"850:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"850:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417070726f7665206661696c6564","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""},"value":"Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""}],"id":270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"842:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"842:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"842:63:3"},{"expression":{"arguments":[{"id":285,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"951:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"958:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":287,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"966:16:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":282,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"931:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":281,"name":"IMecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"916:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateVault_$230_$","typeString":"type(contract IMecenateVault)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateVault_$230","typeString":"contract IMecenateVault"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"938:12:3","memberName":"depositToken","nodeType":"MemberAccess","referencedDeclaration":224,"src":"916:34:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32) external"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"916:67:3"}]},"functionSelector":"338b5dea","id":291,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"676:12:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"token","nameLocation":"697:5:3","nodeType":"VariableDeclaration","scope":291,"src":"689:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"712:6:3","nodeType":"VariableDeclaration","scope":291,"src":"704:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"688:31:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"729:0:3"},"scope":326,"src":"667:323:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":324,"nodeType":"Block","src":"1023:317:3","statements":[{"assignments":[295],"declarations":[{"constant":false,"id":295,"mutability":"mutable","name":"vault","nameLocation":"1041:5:3","nodeType":"VariableDeclaration","scope":324,"src":"1033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":301,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":297,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1078:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"IMecenateETHForwarderFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1049:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateETHForwarderFactory_$236_$","typeString":"type(contract IMecenateETHForwarderFactory)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateETHForwarderFactory_$236","typeString":"contract IMecenateETHForwarderFactory"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1087:8:3","memberName":"getVault","nodeType":"MemberAccess","referencedDeclaration":235,"src":"1049:46:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1033:64:3"},{"assignments":[303,null],"declarations":[{"constant":false,"id":303,"mutability":"mutable","name":"success","nameLocation":"1151:7:3","nodeType":"VariableDeclaration","scope":324,"src":"1146:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"1146:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":318,"initialValue":{"arguments":[{"arguments":[{"hexValue":"6465706f736974455448286279746573333229","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1239:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d68d9d4e7202a896f11559cd1bd4ce5527818fff8f63a2874de71c2cd5fb9501","typeString":"literal_string \"depositETH(bytes32)\""},"value":"depositETH(bytes32)"},{"id":315,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1262:16:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d68d9d4e7202a896f11559cd1bd4ce5527818fff8f63a2874de71c2cd5fb9501","typeString":"literal_string \"depositETH(bytes32)\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1215:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1219:19:3","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"1215:23:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1215:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":306,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1172:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1164:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1164:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1164:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:4:3","memberName":"call","nodeType":"MemberAccess","src":"1164:19:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1191:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1195:5:3","memberName":"value","nodeType":"MemberAccess","src":"1191:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1164:37:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1164:125:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1145:144:3"},{"expression":{"arguments":[{"id":320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1307:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206661696c6564","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1316:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ef3522165fd90e0e1148ebcaaaed21ce8bee4aaa5ab7024953291759483a221","typeString":"literal_string \"Deposit failed\""},"value":"Deposit failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ef3522165fd90e0e1148ebcaaaed21ce8bee4aaa5ab7024953291759483a221","typeString":"literal_string \"Deposit failed\""}],"id":319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"1299:34:3"}]},"id":325,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"1003:2:3"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"1023:0:3"},"scope":326,"src":"996:344:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":327,"src":"439:903:3","usedErrors":[]}],"src":"33:1310:3"},"id":3},"contracts/factories/MecenateForwarderFactory.sol":{"ast":{"absolutePath":"contracts/factories/MecenateForwarderFactory.sol","exportedSymbols":{"Context":[212],"IERC20":[190],"IMecenateETHForwarderFactory":[236],"IMecenateVault":[230],"MecenateForwarder":[326],"MecenateForwarderFactory":[450],"Ownable":[112]},"id":451,"nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/MecenateForwarder.sol","file":"../MecenateForwarder.sol","id":328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":327,"src":"0:34:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":113,"src":"57:52:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":330,"name":"Ownable","nameLocations":["150:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"150:7:4"},"id":331,"nodeType":"InheritanceSpecifier","src":"150:7:4"}],"canonicalName":"MecenateForwarderFactory","contractDependencies":[326],"contractKind":"contract","fullyImplemented":true,"id":450,"linearizedBaseContracts":[450,112,212],"name":"MecenateForwarderFactory","nameLocation":"122:24:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"05d45fad","id":335,"mutability":"mutable","name":"forwardersMapping","nameLocation":"200:17:4","nodeType":"VariableDeclaration","scope":450,"src":"165:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":334,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"165:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"184:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"541886b2","id":337,"mutability":"mutable","name":"mecenateVault","nameLocation":"241:13:4","nodeType":"VariableDeclaration","scope":450,"src":"226:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":346,"nodeType":"Block","src":"299:49:4","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":342,"name":"mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"310:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":343,"name":"_mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"326:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"310:30:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":345,"nodeType":"ExpressionStatement","src":"310:30:4"}]},"id":347,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"_mecenateVault","nameLocation":"283:14:4","nodeType":"VariableDeclaration","scope":347,"src":"275:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:24:4"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"299:0:4"},"scope":450,"src":"263:85:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"406:39:4","statements":[{"expression":{"id":352,"name":"mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"424:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":351,"id":353,"nodeType":"Return","src":"417:20:4"}]},"functionSelector":"8d928af8","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"getVault","nameLocation":"365:8:4","nodeType":"FunctionDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"373:2:4"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"397:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"397:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"396:9:4"},"scope":450,"src":"356:89:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":374,"nodeType":"Block","src":"515:177:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"548:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"552:6:4","memberName":"sender","nodeType":"MemberAccess","src":"548:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":365,"name":"_mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"562:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"548:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520666163746f72792063616e206368616e67652074686520666163746f7279","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"591:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_81929531542ea57e91621372fc54cc9dafd145b612d45067383be99eede5a8a9","typeString":"literal_string \"Only the factory can change the factory\""},"value":"Only the factory can change the factory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_81929531542ea57e91621372fc54cc9dafd145b612d45067383be99eede5a8a9","typeString":"literal_string \"Only the factory can change the factory\""}],"id":362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"526:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"526:117:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"526:117:4"},{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"654:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":371,"name":"_mecenateVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"670:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"654:30:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":373,"nodeType":"ExpressionStatement","src":"654:30:4"}]},"functionSelector":"60e232a9","id":375,"implemented":true,"kind":"function","modifiers":[{"id":360,"kind":"modifierInvocation","modifierName":{"id":359,"name":"onlyOwner","nameLocations":["505:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"505:9:4"},"nodeType":"ModifierInvocation","src":"505:9:4"}],"name":"changeVault","nameLocation":"462:11:4","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"_mecenateVault","nameLocation":"482:14:4","nodeType":"VariableDeclaration","scope":375,"src":"474:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"473:24:4"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"515:0:4"},"scope":450,"src":"453:239:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"d20b14a4eb13758b273b5380a229e4cbc58e9ccc277f94fc221c0578e0a7bcb9","id":383,"name":"ForwarderCreated","nameLocation":"706:16:4","nodeType":"EventDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"indexed":true,"mutability":"mutable","name":"forwarder","nameLocation":"749:9:4","nodeType":"VariableDeclaration","scope":383,"src":"733:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"indexed":false,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"777:16:4","nodeType":"VariableDeclaration","scope":383,"src":"769:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"769:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":381,"indexed":false,"mutability":"mutable","name":"vaultContract","nameLocation":"812:13:4","nodeType":"VariableDeclaration","scope":383,"src":"804:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:110:4"},"src":"700:133:4"},{"body":{"id":436,"nodeType":"Block","src":"967:472:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":393,"name":"forwardersMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"1000:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":395,"indexExpression":{"id":394,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"1018:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1000:36:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1048:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1040:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:4","typeDescriptions":{}}},"id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1040:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1000:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"666f7277617264657220616c72656164792063726561746564","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1065:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0839d8e8a83ae9018e74371342fbe5bb5d3922ea0b800072e94b3b67b83c60af","typeString":"literal_string \"forwarder already created\""},"value":"forwarder already created"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0839d8e8a83ae9018e74371342fbe5bb5d3922ea0b800072e94b3b67b83c60af","typeString":"literal_string \"forwarder already created\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"978:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:125:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"978:125:4"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"forwarder","nameLocation":"1132:9:4","nodeType":"VariableDeclaration","scope":436,"src":"1114:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"},"typeName":{"id":405,"nodeType":"UserDefinedTypeName","pathNode":{"id":404,"name":"MecenateForwarder","nameLocations":["1114:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"1114:17:4"},"referencedDeclaration":326,"src":"1114:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}},"visibility":"internal"}],"id":412,"initialValue":{"arguments":[{"id":410,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"1166:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1144:21:4","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_bytes32_$returns$_t_contract$_MecenateForwarder_$326_$","typeString":"function (bytes32) returns (contract MecenateForwarder)"},"typeName":{"id":408,"nodeType":"UserDefinedTypeName","pathNode":{"id":407,"name":"MecenateForwarder","nameLocations":["1148:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"1148:17:4"},"referencedDeclaration":326,"src":"1148:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1144:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}},"nodeType":"VariableDeclarationStatement","src":"1114:70:4"},{"expression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":413,"name":"forwardersMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"1197:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":415,"indexExpression":{"id":414,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"1215:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1197:36:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":418,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1244:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1236:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:4","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1197:57:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"nodeType":"ExpressionStatement","src":"1197:57:4"},{"eventCall":{"arguments":[{"arguments":[{"id":425,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1311:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1303:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:4","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"1336:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1368:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":422,"name":"ForwarderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1272:16:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1272:121:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"EmitStatement","src":"1267:126:4"},{"expression":{"arguments":[{"id":433,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1421:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateForwarder_$326","typeString":"contract MecenateForwarder"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1413:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"1413:7:4","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1413:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":391,"id":435,"nodeType":"Return","src":"1406:25:4"}]},"functionSelector":"48a7c45b","id":437,"implemented":true,"kind":"function","modifiers":[],"name":"createforwarder","nameLocation":"850:15:4","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"_encryptedVaultId","nameLocation":"884:17:4","nodeType":"VariableDeclaration","scope":437,"src":"876:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"876:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"_vaultContract","nameLocation":"920:14:4","nodeType":"VariableDeclaration","scope":437,"src":"912:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"865:76:4"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"958:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"957:9:4"},"scope":450,"src":"841:598:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":448,"nodeType":"Block","src":"1515:50:4","statements":[{"expression":{"baseExpression":{"id":444,"name":"forwardersMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"1533:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":446,"indexExpression":{"id":445,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"1551:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1533:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":447,"nodeType":"Return","src":"1526:31:4"}]},"functionSelector":"07c0e602","id":449,"implemented":true,"kind":"function","modifiers":[],"name":"getforwarders","nameLocation":"1456:13:4","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"_user","nameLocation":"1478:5:4","nodeType":"VariableDeclaration","scope":449,"src":"1470:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1470:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1469:15:4"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"1506:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1505:9:4"},"scope":450,"src":"1447:118:4","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":451,"src":"113:1455:4","usedErrors":[]}],"src":"0:1570:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MecenateForwarder.sol":{"IMecenateETHForwarderFactory":{"abi":[{"inputs":[],"name":"getVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getVault()":"8d928af8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateForwarder.sol\":\"IMecenateETHForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address token,\\n        uint256 amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateETHForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 private encryptedVaultId;\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = msg.sender;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xdee9d481ea79305812088ac7ae01883d0f9e6847747e82b2c9057fe256f2ecf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IMecenateVault":{"abi":[{"inputs":[{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositETH(bytes32)":"d68d9d4e","depositToken(address,uint256,bytes32)":"84abac95"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateForwarder.sol\":\"IMecenateVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address token,\\n        uint256 amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateETHForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 private encryptedVaultId;\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = msg.sender;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xdee9d481ea79305812088ac7ae01883d0f9e6847747e82b2c9057fe256f2ecf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"MecenateForwarder":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_encryptedVaultId","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803461006357601f61064738819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b031916331790556040516105c8908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea264697066735822122099081a7175736b42cf9cb10cdcdcdbfb16abd6e6fcb1a2e90121b6a5b679039764736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x63 JUMPI PUSH1 0x1F PUSH2 0x647 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x68 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x63 JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP1 DUP2 PUSH2 0x7F DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x223 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP6 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E9 JUMPI JUMPDEST POP PUSH1 0x0 SLOAD DUP6 MLOAD SWAP3 DUP5 DUP5 ADD SWAP2 PUSH32 0xD68D9D4E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x24 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP2 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x1BB JUMPI DUP9 MSTORE MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 CALLVALUE SWAP2 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x187 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x11C DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x12D JUMPI STOP JUMPDEST PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x126 JUMP JUMPDEST PUSH1 0x41 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20A SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x79 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F8 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI POP PUSH4 0xC45A0155 SUB PUSH2 0x13 JUMPI DUP3 CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x42A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x42A JUMPI DUP1 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x4ED JUMPI DUP1 PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 PUSH1 0x1 SLOAD AND PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP7 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP4 PUSH2 0x4CE JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND SWAP2 DUP3 DUP6 DUP3 ADD MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP12 DUP12 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP2 PUSH2 0x48A JUMPI JUMPDEST POP ISZERO PUSH2 0x42E JUMPI POP SWAP1 DUP6 SWAP2 DUP3 SLOAD SWAP6 DUP2 EXTCODESIZE ISZERO PUSH2 0x42A JUMPI DUP4 PUSH1 0x64 SWAP3 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH32 0x84ABAC9500000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP10 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x420 JUMPI PUSH2 0x3DC JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3F4 JUMPI POP MSTORE DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F7665206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4B9 JUMPI DUP9 PUSH2 0x37C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 SWAP4 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x211 JUMPI PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x331 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x532 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x58D JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x58D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 ADDMOD BYTE PUSH18 0x75736B42CF9CB10CDCDCDBFB16ABD6E6FCB1 LOG2 0xE9 ADD 0x21 0xB6 0xA5 0xB6 PUSH26 0x39764736F6C6343000813003300000000000000000000000000 ","sourceMap":"439:903:3:-:0;;;;;;;;;;;;;-1:-1:-1;;439:903:3;;;;-1:-1:-1;;;;;439:903:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;439:903:3;;;;-1:-1:-1;;;;;;439:903:3;644:10;439:903;;;;;;;;;;;;;-1:-1:-1;439:903:3;;;;;;-1:-1:-1;439:903:3;;;;;-1:-1:-1;439:903:3"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1377,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1265,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea264697066735822122099081a7175736b42cf9cb10cdcdcdbfb16abd6e6fcb1a2e90121b6a5b679039764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x223 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP6 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E9 JUMPI JUMPDEST POP PUSH1 0x0 SLOAD DUP6 MLOAD SWAP3 DUP5 DUP5 ADD SWAP2 PUSH32 0xD68D9D4E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x24 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP2 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x1BB JUMPI DUP9 MSTORE MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 CALLVALUE SWAP2 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x187 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x11C DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x12D JUMPI STOP JUMPDEST PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x126 JUMP JUMPDEST PUSH1 0x41 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20A SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x79 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F8 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI POP PUSH4 0xC45A0155 SUB PUSH2 0x13 JUMPI DUP3 CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x42A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x42A JUMPI DUP1 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x4ED JUMPI DUP1 PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 PUSH1 0x1 SLOAD AND PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP7 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP4 PUSH2 0x4CE JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND SWAP2 DUP3 DUP6 DUP3 ADD MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP12 DUP12 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP2 PUSH2 0x48A JUMPI JUMPDEST POP ISZERO PUSH2 0x42E JUMPI POP SWAP1 DUP6 SWAP2 DUP3 SLOAD SWAP6 DUP2 EXTCODESIZE ISZERO PUSH2 0x42A JUMPI DUP4 PUSH1 0x64 SWAP3 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH32 0x84ABAC9500000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP10 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x420 JUMPI PUSH2 0x3DC JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3F4 JUMPI POP MSTORE DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F7665206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4B9 JUMPI DUP9 PUSH2 0x37C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 SWAP4 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x211 JUMPI PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x331 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x532 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x58D JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x58D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 ADDMOD BYTE PUSH18 0x75736B42CF9CB10CDCDCDBFB16ABD6E6FCB1 LOG2 0xE9 ADD 0x21 0xB6 0xA5 0xB6 PUSH26 0x39764736F6C6343000813003300000000000000000000000000 ","sourceMap":"439:903:3:-:0;;;;;;;;;;;;;;-1:-1:-1;439:903:3;;;;;;;;;;;1078:7;439:903;;;;1049:48;;;439:903;1049:48;;;;;;;;;;;;;;;-1:-1:-1;1049:48:3;;;439:903;;-1:-1:-1;439:903:3;;;1215:64;;;;;;;;;;;439:903;1215:64;;;439:903;;;;;;;;;;;;;;;;;1164:125;-1:-1:-1;;;;1164:125:3;;1191:9;;439:903;1164:125;;439:903;;;;;;;;;;;;;;;;1215:64;439:903;;;;;;;:::i;:::-;;;-1:-1:-1;439:903:3;;;;;;;;;;;;;;;;;;;;;;1215:64;439:903;;;;;;;;;;;;;-1:-1:-1;439:903:3;;1215:64;-1:-1:-1;439:903:3;;;;;;;;;-1:-1:-1;439:903:3;;1215:64;-1:-1:-1;439:903:3;1049:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;439:903;;;-1:-1:-1;439:903:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:22;439:903;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:48;;439:903;;;755:48;;;;;;;;;;;;;;439:903;;;;850:36;439:903;850:36;;439:903;850:36;;;;;439:903;;;;;;850:36;;439:903;850:36;;;;;;;;;;;;;;439:903;;;;;;;;;;;916:67;;;;;;439:903;;;;;916:67;;;;;439:903;916:67;;;;;439:903;;;;;;;;;916:67;;;;;;;;439:903;;;916:67;439:903;;;;;;;916:67;;;439:903;;;;;;;;;;;;;916:67;439:903;;;;;;;;;916:67;439:903;;;;;;;;;;;;;;;;;;;;;;;;;;;850:36;;;;;;;;;;;;;;;;:::i;:::-;;;439:903;;;;;;;;;;;;850:36;;;439:903;;;;850:36;;;;;;439:903;;;;;;;;;755:48;;;;;;;;;;;;;;;:::i;:::-;;;;;439:903;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;439:903:3;"},"gasEstimates":{"creation":{"codeDepositCost":"296000","executionCost":"infinite","totalCost":"infinite"},"external":{"depositToken(address,uint256)":"infinite","factory()":"2303"}},"methodIdentifiers":{"depositToken(address,uint256)":"338b5dea","factory()":"c45a0155"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateForwarder.sol\":\"MecenateForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address token,\\n        uint256 amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateETHForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 private encryptedVaultId;\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = msg.sender;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xdee9d481ea79305812088ac7ae01883d0f9e6847747e82b2c9057fe256f2ecf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":238,"contract":"contracts/MecenateForwarder.sol:MecenateForwarder","label":"encryptedVaultId","offset":0,"slot":"0","type":"t_bytes32"},{"astId":240,"contract":"contracts/MecenateForwarder.sol:MecenateForwarder","label":"factory","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/factories/MecenateForwarderFactory.sol":{"MecenateForwarderFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_mecenateVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"forwarder","type":"address"},{"indexed":false,"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"vaultContract","type":"address"}],"name":"ForwarderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_mecenateVault","type":"address"}],"name":"changeVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_encryptedVaultId","type":"bytes32"},{"internalType":"address","name":"_vaultContract","type":"address"}],"name":"createforwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"forwardersMapping","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_user","type":"bytes32"}],"name":"getforwarders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mecenateVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100a757601f610d6138819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36002541617600255610c9e90816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816305d45fad1461053e5750806307c0e6021461050157806348a7c45b1461037f578063541886b2146101d857806360e232a91461028e578063715018a61461020d5780638d928af8146101d85780638da5cb5b146101a15763f2fde38b1461008657600080fd5b3461019d57602060031936011261019d5761009f61057a565b906100a86105a2565b73ffffffffffffffffffffffffffffffffffffffff80921692831561011a5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101d457816003193601126101d45773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b5050346101d457816003193601126101d45760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b833461028b578060031936011261028b576102266105a2565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461019d57602060031936011261019d5773ffffffffffffffffffffffffffffffffffffffff6102bd61057a565b6102c56105a2565b16918233036102fc5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b50913461028b578160031936011261028b57823560243573ffffffffffffffffffffffffffffffffffffffff8082168092036104fd57828452602095600187528186862054166104a1578551906106478083019183831067ffffffffffffffff841117610475575088918391610622833986815203019085f0801561046b57927fd20b14a4eb13758b273b5380a229e4cbc58e9ccc277f94fc221c0578e0a7bcb9928695949286931696858389975260018a5220857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055825191825287820152a251908152f35b85513d86823e3d90fd5b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b8380fd5b503461019d57602060031936011261019d578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b92919050346104fd5760206003193601126104fd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361059d57565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036105c357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461006357601f61064738819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b031916331790556040516105c8908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea264697066735822122099081a7175736b42cf9cb10cdcdcdbfb16abd6e6fcb1a2e90121b6a5b679039764736f6c63430008130033a2646970667358221220409bc610783af714774d24d56d4056baebe78ee401c0c407deb43332dc62448664736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xA7 JUMPI PUSH1 0x1F PUSH2 0xD61 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xAC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xA7 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0xC9E SWAP1 DUP2 PUSH2 0xC3 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5D45FAD EQ PUSH2 0x53E JUMPI POP DUP1 PUSH4 0x7C0E602 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x48A7C45B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x541886B2 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI PUSH2 0x9F PUSH2 0x57A JUMP JUMPDEST SWAP1 PUSH2 0xA8 PUSH2 0x5A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x11A JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D4 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0x226 PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2BD PUSH2 0x57A JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x5A2 JUMP JUMPDEST AND SWAP2 DUP3 CALLER SUB PUSH2 0x2FC JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520666163746F72792063616E206368616E67652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666163746F727900000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI DUP3 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4FD JUMPI DUP3 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 DUP8 MSTORE DUP2 DUP7 DUP7 KECCAK256 SLOAD AND PUSH2 0x4A1 JUMPI DUP6 MLOAD SWAP1 PUSH2 0x647 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x475 JUMPI POP DUP9 SWAP2 DUP4 SWAP2 PUSH2 0x622 DUP4 CODECOPY DUP7 DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0x46B JUMPI SWAP3 PUSH32 0xD20B14A4EB13758B273B5380A229E4CBC58E9CCC277F94FC221C0578E0A7BCB9 SWAP3 DUP7 SWAP6 SWAP5 SWAP3 DUP7 SWAP4 AND SWAP7 DUP6 DUP4 DUP10 SWAP8 MSTORE PUSH1 0x1 DUP11 MSTORE KECCAK256 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE DUP8 DUP3 ADD MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x666F7277617264657220616C7265616479206372656174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0x4FD JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4FD JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x59D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x5C3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0x63 JUMPI PUSH1 0x1F PUSH2 0x647 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x68 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x63 JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP1 DUP2 PUSH2 0x7F DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x223 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP6 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E9 JUMPI JUMPDEST POP PUSH1 0x0 SLOAD DUP6 MLOAD SWAP3 DUP5 DUP5 ADD SWAP2 PUSH32 0xD68D9D4E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x24 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP2 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x1BB JUMPI DUP9 MSTORE MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 CALLVALUE SWAP2 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x187 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x11C DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x12D JUMPI STOP JUMPDEST PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x126 JUMP JUMPDEST PUSH1 0x41 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20A SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x79 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F8 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI POP PUSH4 0xC45A0155 SUB PUSH2 0x13 JUMPI DUP3 CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x42A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x42A JUMPI DUP1 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x4ED JUMPI DUP1 PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 PUSH1 0x1 SLOAD AND PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP7 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP4 PUSH2 0x4CE JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND SWAP2 DUP3 DUP6 DUP3 ADD MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP12 DUP12 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP2 PUSH2 0x48A JUMPI JUMPDEST POP ISZERO PUSH2 0x42E JUMPI POP SWAP1 DUP6 SWAP2 DUP3 SLOAD SWAP6 DUP2 EXTCODESIZE ISZERO PUSH2 0x42A JUMPI DUP4 PUSH1 0x64 SWAP3 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH32 0x84ABAC9500000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP10 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x420 JUMPI PUSH2 0x3DC JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3F4 JUMPI POP MSTORE DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F7665206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4B9 JUMPI DUP9 PUSH2 0x37C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 SWAP4 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x211 JUMPI PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x331 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x532 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x58D JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x58D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 ADDMOD BYTE PUSH18 0x75736B42CF9CB10CDCDCDBFB16ABD6E6FCB1 LOG2 0xE9 ADD 0x21 0xB6 0xA5 0xB6 PUSH26 0x39764736F6C63430008130033A2646970667358221220409BC6 LT PUSH25 0x3AF714774D24D56D4056BAEBE78EE401C0C407DEB43332DC62 PREVRANDAO DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"113:1455:4:-:0;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;-1:-1:-1;;;;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;113:1455:4;;;;;;;;;;-1:-1:-1;113:1455:4;;;;;;;719:10:2;;113:1455:4;;;;-1:-1:-1;113:1455:4;;;719:10:2;;113:1455:4;;2566:40:0;-1:-1:-1;2566:40:0;;310:30:4;113:1455;;;310:30;113:1455;;;;;;;;;-1:-1:-1;113:1455:4;;;;;;-1:-1:-1;113:1455:4;;;;;-1:-1:-1;113:1455:4"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1402,"id":null,"parameterSlots":0,"returnSlots":1},"fun_checkOwner":{"entryPoint":1442,"id":54,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c90816305d45fad1461053e5750806307c0e6021461050157806348a7c45b1461037f578063541886b2146101d857806360e232a91461028e578063715018a61461020d5780638d928af8146101d85780638da5cb5b146101a15763f2fde38b1461008657600080fd5b3461019d57602060031936011261019d5761009f61057a565b906100a86105a2565b73ffffffffffffffffffffffffffffffffffffffff80921692831561011a5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101d457816003193601126101d45773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b5050346101d457816003193601126101d45760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b833461028b578060031936011261028b576102266105a2565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461019d57602060031936011261019d5773ffffffffffffffffffffffffffffffffffffffff6102bd61057a565b6102c56105a2565b16918233036102fc5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f4f6e6c792074686520666163746f72792063616e206368616e6765207468652060448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152fd5b50913461028b578160031936011261028b57823560243573ffffffffffffffffffffffffffffffffffffffff8082168092036104fd57828452602095600187528186862054166104a1578551906106478083019183831067ffffffffffffffff841117610475575088918391610622833986815203019085f0801561046b57927fd20b14a4eb13758b273b5380a229e4cbc58e9ccc277f94fc221c0578e0a7bcb9928695949286931696858389975260018a5220857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055825191825287820152a251908152f35b85513d86823e3d90fd5b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606490878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f666f7277617264657220616c72656164792063726561746564000000000000006044820152fd5b8380fd5b503461019d57602060031936011261019d578160209373ffffffffffffffffffffffffffffffffffffffff92358152600185522054169051908152f35b92919050346104fd5760206003193601126104fd573583526001602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361059d57565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036105c357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60803461006357601f61064738819003918201601f19168301916001600160401b03831184841017610068578084926020946040528339810103126100635751600055600180546001600160a01b031916331790556040516105c8908161007f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610223575b50361561001f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff806001541683519182917f8d928af8000000000000000000000000000000000000000000000000000000008352828560209586935afa918215610218576000926101e9575b50600054855192848401917fd68d9d4e000000000000000000000000000000000000000000000000000000008352602485015260248452606084019367ffffffffffffffff94818110868211176101bb57885251600093849391923491165af1903d156101b5573d9081116101875784519061011c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836104f1565b81526000833d92013e5b1561012d57005b60649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4465706f736974206661696c65640000000000000000000000000000000000006044820152fd5b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50610126565b6041887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b61020a919250833d8511610211575b61020281836104f1565b810190610561565b9038610079565b503d6101f8565b85513d6000823e3d90fd5b600090813560e01c908163338b5dea14610298575063c45a01550361001357823461029457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102945760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905083833461042a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042a5780359273ffffffffffffffffffffffffffffffffffffffff908185168095036104ed57806024359280600154167f8d928af8000000000000000000000000000000000000000000000000000000008352828660209485935afa9283156104c45788936104ce575b508551927f095ea7b30000000000000000000000000000000000000000000000000000000084521691828582015283602482015281816044818b8b5af19081156104c457889161048a575b501561042e5750908591825495813b1561042a5783606492875198899586947f84abac9500000000000000000000000000000000000000000000000000000000865289860152602485015260448401525af18015610420576103dc578380f35b67ffffffffffffffff83116103f45750528180808380f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82513d86823e3d90fd5b8380fd5b836064918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b90508181813d83116104bd575b6104a181836104f1565b810103126104b9575180151581036104b9578861037c565b8780fd5b503d610497565b86513d8a823e3d90fd5b6104e6919350823d84116102115761020281836104f1565b9188610331565b8580fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761053257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9081602091031261058d575173ffffffffffffffffffffffffffffffffffffffff8116810361058d5790565b600080fdfea264697066735822122099081a7175736b42cf9cb10cdcdcdbfb16abd6e6fcb1a2e90121b6a5b679039764736f6c63430008130033a2646970667358221220409bc610783af714774d24d56d4056baebe78ee401c0c407deb43332dc62448664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5D45FAD EQ PUSH2 0x53E JUMPI POP DUP1 PUSH4 0x7C0E602 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x48A7C45B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x541886B2 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI PUSH2 0x9F PUSH2 0x57A JUMP JUMPDEST SWAP1 PUSH2 0xA8 PUSH2 0x5A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x11A JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D4 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0x226 PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2BD PUSH2 0x57A JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x5A2 JUMP JUMPDEST AND SWAP2 DUP3 CALLER SUB PUSH2 0x2FC JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520666163746F72792063616E206368616E67652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666163746F727900000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI DUP3 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4FD JUMPI DUP3 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 DUP8 MSTORE DUP2 DUP7 DUP7 KECCAK256 SLOAD AND PUSH2 0x4A1 JUMPI DUP6 MLOAD SWAP1 PUSH2 0x647 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x475 JUMPI POP DUP9 SWAP2 DUP4 SWAP2 PUSH2 0x622 DUP4 CODECOPY DUP7 DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0x46B JUMPI SWAP3 PUSH32 0xD20B14A4EB13758B273B5380A229E4CBC58E9CCC277F94FC221C0578E0A7BCB9 SWAP3 DUP7 SWAP6 SWAP5 SWAP3 DUP7 SWAP4 AND SWAP7 DUP6 DUP4 DUP10 SWAP8 MSTORE PUSH1 0x1 DUP11 MSTORE KECCAK256 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE DUP8 DUP3 ADD MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x666F7277617264657220616C7265616479206372656174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19D JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0x4FD JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4FD JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x59D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x5C3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0x63 JUMPI PUSH1 0x1F PUSH2 0x647 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x68 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x63 JUMPI MLOAD PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP1 DUP2 PUSH2 0x7F DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x223 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP6 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E9 JUMPI JUMPDEST POP PUSH1 0x0 SLOAD DUP6 MLOAD SWAP3 DUP5 DUP5 ADD SWAP2 PUSH32 0xD68D9D4E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x24 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP2 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x1BB JUMPI DUP9 MSTORE MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 CALLVALUE SWAP2 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x187 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x11C DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x12D JUMPI STOP JUMPDEST PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x126 JUMP JUMPDEST PUSH1 0x41 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20A SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x79 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F8 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI POP PUSH4 0xC45A0155 SUB PUSH2 0x13 JUMPI DUP3 CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x42A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x42A JUMPI DUP1 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x4ED JUMPI DUP1 PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 PUSH1 0x1 SLOAD AND PUSH32 0x8D928AF800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 DUP7 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP4 PUSH2 0x4CE JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND SWAP2 DUP3 DUP6 DUP3 ADD MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP12 DUP12 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI DUP9 SWAP2 PUSH2 0x48A JUMPI JUMPDEST POP ISZERO PUSH2 0x42E JUMPI POP SWAP1 DUP6 SWAP2 DUP3 SLOAD SWAP6 DUP2 EXTCODESIZE ISZERO PUSH2 0x42A JUMPI DUP4 PUSH1 0x64 SWAP3 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH32 0x84ABAC9500000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP10 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x420 JUMPI PUSH2 0x3DC JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3F4 JUMPI POP MSTORE DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F7665206661696C6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4B9 JUMPI DUP9 PUSH2 0x37C JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 SWAP4 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x211 JUMPI PUSH2 0x202 DUP2 DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x331 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x532 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x58D JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x58D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 ADDMOD BYTE PUSH18 0x75736B42CF9CB10CDCDCDBFB16ABD6E6FCB1 LOG2 0xE9 ADD 0x21 0xB6 0xA5 0xB6 PUSH26 0x39764736F6C63430008130033A2646970667358221220409BC6 LT PUSH25 0x3AF714774D24D56D4056BAEBE78EE401C0C407DEB43332DC62 PREVRANDAO DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"113:1455:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;113:1455:4;;;;2162:22:0;;;113:1455:4;;;;;;;;;;;;;;2566:40:0;;;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;424:13;113:1455;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;1063:62:0;;:::i;:::-;113:1455:4;;;;;;;;;;2566:40:0;;;;113:1455:4;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;113:1455:4;548:10;;;:28;113:1455;;;;;654:30;113:1455;;;654:30;113:1455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:40;;;;;;;;;;;;;;;;;;;;;;;113:1455;;;1144:40;;;;;;;;;113:1455;1272:121;113:1455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:121;113:1455;;;;;1144:40;113:1455;;;;;;;;;1144:40;113:1455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;113:1455:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;1359:130:0;113:1455:4;1273:6:0;113:1455:4;;719:10:2;1422:23:0;113:1455:4;;1359:130:0:o;113:1455:4:-;;;;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"646000","executionCost":"infinite","totalCost":"infinite"},"external":{"changeVault(address)":"26697","createforwarder(bytes32,address)":"infinite","forwardersMapping(bytes32)":"2339","getVault()":"2415","getforwarders(bytes32)":"2366","mecenateVault()":"2349","owner()":"2434","renounceOwnership()":"28143","transferOwnership(address)":"28305"}},"methodIdentifiers":{"changeVault(address)":"60e232a9","createforwarder(bytes32,address)":"48a7c45b","forwardersMapping(bytes32)":"05d45fad","getVault()":"8d928af8","getforwarders(bytes32)":"07c0e602","mecenateVault()":"541886b2","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultContract\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateVault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_vaultContract\",\"type\":\"address\"}],\"name\":\"createforwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"forwardersMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_user\",\"type\":\"bytes32\"}],\"name\":\"getforwarders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/MecenateForwarderFactory.sol\":\"MecenateForwarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MecenateForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMecenateVault {\\n    function depositToken(\\n        address token,\\n        uint256 amount,\\n        bytes32 encryptedVaultId\\n    ) external;\\n\\n    function depositETH(bytes32 encryptedVaultId) external payable;\\n}\\n\\ninterface IMecenateETHForwarderFactory {\\n    function getVault() external view returns (address);\\n}\\n\\ncontract MecenateForwarder {\\n    bytes32 private encryptedVaultId;\\n    address public factory;\\n\\n    constructor(bytes32 _encryptedVaultId) {\\n        encryptedVaultId = _encryptedVaultId;\\n        factory = msg.sender;\\n    }\\n\\n    function depositToken(address token, uint256 amount) external {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Approva il token\\n        require(IERC20(token).approve(vault, amount), \\\"Approve failed\\\");\\n\\n        IMecenateVault(vault).depositToken(token, amount, encryptedVaultId);\\n    }\\n\\n    receive() external payable {\\n        address vault = IMecenateETHForwarderFactory(factory).getVault();\\n\\n        // Esegui il deposito in ETH\\n        (bool success, ) = payable(vault).call{value: msg.value}(\\n            abi.encodeWithSignature(\\\"depositETH(bytes32)\\\", encryptedVaultId)\\n        );\\n        require(success, \\\"Deposit failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xdee9d481ea79305812088ac7ae01883d0f9e6847747e82b2c9057fe256f2ecf0\",\"license\":\"MIT\"},\"contracts/factories/MecenateForwarderFactory.sol\":{\"content\":\"import \\\"../MecenateForwarder.sol\\\";\\r\\n\\r\\n// import Ownable\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract MecenateForwarderFactory is Ownable {\\r\\n    mapping(bytes32 => address) public forwardersMapping;\\r\\n\\r\\n    address public mecenateVault;\\r\\n\\r\\n    constructor(address _mecenateVault) {\\r\\n        mecenateVault = _mecenateVault;\\r\\n    }\\r\\n\\r\\n    function getVault() public view returns (address) {\\r\\n        return mecenateVault;\\r\\n    }\\r\\n\\r\\n    function changeVault(address _mecenateVault) public onlyOwner {\\r\\n        require(\\r\\n            msg.sender == _mecenateVault,\\r\\n            \\\"Only the factory can change the factory\\\"\\r\\n        );\\r\\n        mecenateVault = _mecenateVault;\\r\\n    }\\r\\n\\r\\n    event ForwarderCreated(\\r\\n        address indexed forwarder,\\r\\n        bytes32 encryptedVaultId,\\r\\n        address vaultContract\\r\\n    );\\r\\n\\r\\n    function createforwarder(\\r\\n        bytes32 _encryptedVaultId,\\r\\n        address _vaultContract\\r\\n    ) public returns (address) {\\r\\n        require(\\r\\n            forwardersMapping[_encryptedVaultId] == address(0),\\r\\n            \\\"forwarder already created\\\"\\r\\n        );\\r\\n        MecenateForwarder forwarder = new MecenateForwarder(_encryptedVaultId);\\r\\n\\r\\n        forwardersMapping[_encryptedVaultId] = address(forwarder);\\r\\n\\r\\n        emit ForwarderCreated(\\r\\n            address(forwarder),\\r\\n            _encryptedVaultId,\\r\\n            _vaultContract\\r\\n        );\\r\\n\\r\\n        return address(forwarder);\\r\\n    }\\r\\n\\r\\n    function getforwarders(bytes32 _user) public view returns (address) {\\r\\n        return forwardersMapping[_user];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x025b6dde948cf768b648b4b3db4cacd0e75c37adeca6e7e4a2f4dac5358f2f6e\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":335,"contract":"contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory","label":"forwardersMapping","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_address)"},{"astId":337,"contract":"contracts/factories/MecenateForwarderFactory.sol:MecenateForwarderFactory","label":"mecenateVault","offset":0,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}