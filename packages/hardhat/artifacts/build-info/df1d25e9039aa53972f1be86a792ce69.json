{"id":"df1d25e9039aa53972f1be86a792ce69","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/interfaces/IMecenateFeed.sol":{"content":"pragma solidity 0.8.19;\n\nimport \"../library/Structures.sol\";\n\ninterface IMecenateFeed {\n    function getTotalStaked() external view returns (uint256);\n\n    function postCount() external view returns (uint256);\n\n    function acceptPost(\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce,\n        Structures.Tokens,\n        uint256 _amount\n    ) external payable;\n\n    function getSellerStake() external view returns (uint256);\n\n    function getBuyerStake() external view returns (uint256);\n\n    function getPaymentRequested() external view returns (uint256);\n\n    function getStakeRequested() external view returns (uint256);\n\n    function getStatus() external view returns (Structures.PostStatus status);\n\n    function getTokenId() external view returns (Structures.Tokens tokenId);\n\n    function owner() external view returns (bytes32);\n\n    function version() external view returns (string memory);\n}\n"},"contracts/interfaces/IMecenateFeedFactory.sol":{"content":"pragma solidity 0.8.19;\n\ninterface IMecenateFeedFactory {\n    function owner() external view returns (address payable);\n\n    function treasuryContract() external view returns (address payable);\n\n    function identityContract() external view returns (address);\n\n    function feeds() external view returns (address[] memory);\n\n    function contractCounter() external view returns (uint256);\n\n    function isFeed(address _feed) external view returns (bool);\n\n    function museToken() external view returns (address);\n\n    function wethToken() external view returns (address);\n\n    function daiToken() external view returns (address);\n\n    function router() external view returns (address);\n\n    function getRouterFee(uint8 tokenId) external view returns (uint24);\n\n    function burnEnabled() external view returns (bool);\n}\n"},"contracts/interfaces/IMecenateUsers.sol":{"content":"pragma solidity 0.8.19;\r\nimport \"../library/Structures.sol\";\r\n\r\ninterface IMecenateUsers {\r\n    function checkifUserExist(bytes32 vaultId) external view returns (bool);\r\n\r\n    function getUserData(\r\n        address user\r\n    ) external view returns (Structures.User memory);\r\n\r\n    function getUserCount() external view returns (uint256);\r\n\r\n    function getUserAt(uint256 index) external view returns (address);\r\n\r\n    function getUserVaultIdAt(uint256 index) external view returns (bytes32);\r\n}\r\n"},"contracts/interfaces/IMecenateVerifier.sol":{"content":"pragma solidity 0.8.19;\r\n\r\ninterface IMecenateVerifier {\r\n    function sismoVerify(\r\n        bytes memory sismoConnectResponse,\r\n        address _to,\r\n        bytes32 _nonce\r\n    ) external view returns (bytes memory, uint256, uint256, bytes memory);\r\n}\r\n"},"contracts/layer/MecenateBay.sol":{"content":"/**\n * @title MecenateBay\n * @dev This contract manages the creation and acceptance of requests for Mecenate feeds. It also verifies user identity using the Sismo protocol.\n */\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IMecenateVerifier.sol\";\nimport \"../library/Structures.sol\";\nimport \"../modules/FeedViewer.sol\";\nimport \"../interfaces/IMecenateUsers.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract MecenateBay is Ownable, FeedViewer {\n    using SafeERC20 for IERC20;\n\n    Structures.BayRequest[] public allRequests;\n\n    Structures.BayRequestPrivate[] public allRequestsPrivate;\n\n    address public usersMouduleContract;\n\n    address public verifierContract;\n\n    address public vaultContract;\n\n    address public museToken;\n\n    address public daiToken;\n\n    mapping(bytes32 => Structures.BayRequest[]) public requests;\n\n    uint256 public contractCounter;\n\n    mapping(uint256 => bytes) private sismoResponseMapping;\n\n    event RequestCreated(\n        bytes32 indexed user,\n        Structures.BayRequest,\n        uint256 indexed index\n    );\n\n    event RequestAccepted(\n        bytes32 indexed user,\n        Structures.BayRequest,\n        uint256 indexed index\n    );\n\n    constructor(\n        address _usersMouduleContract,\n        address _verifierContract,\n        address _vaultContract\n    ) {\n        usersMouduleContract = _usersMouduleContract;\n        verifierContract = _verifierContract;\n        vaultContract = _vaultContract;\n    }\n\n    function changeMuseToken(address _museToken) external onlyOwner {\n        museToken = _museToken;\n    }\n\n    function changeDaiToken(address _daiToken) external onlyOwner {\n        daiToken = _daiToken;\n    }\n\n    function createRequest(\n        Structures.BayRequest memory request,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public payable returns (Structures.BayRequest memory) {\n        if (request.tokenId == Structures.Tokens.NaN) {\n            require(msg.value > 0, \"BAY:payment is not enough\");\n        } else if (request.tokenId == Structures.Tokens.DAI) {\n            IERC20(daiToken).safeTransferFrom(\n                msg.sender,\n                address(this),\n                request.payment\n            );\n        } else if (request.tokenId == Structures.Tokens.MUSE) {\n            IERC20(museToken).safeTransferFrom(\n                msg.sender,\n                address(this),\n                request.payment\n            );\n        }\n\n        require(request.payment > 0, \"BAY:payment is not enough\");\n\n        (bytes memory vaultId, , , ) = _sismoVerify(\n            sismoConnectResponse,\n            _to,\n            _nonce\n        );\n\n        bytes32 encryptedVaultId = keccak256(vaultId);\n\n        require(\n            IMecenateUsers(usersMouduleContract).checkifUserExist(\n                keccak256(vaultId)\n            ),\n            \"user does not exist\"\n        );\n\n        require(request.stake > 0, \"BAY:stake is not enough\");\n\n        require(request.payment == msg.value, \"BAY:payment is not enough\");\n\n        require(request.payment > 0, \"BAY:payment is not enough\");\n\n        requests[encryptedVaultId].push(request);\n\n        allRequests.push(request);\n\n        allRequestsPrivate.push(\n            Structures.BayRequestPrivate({\n                vaultIdSeller: \"0x00\",\n                sellerResponse: \"0x00\",\n                vaultIdBuyer: vaultId,\n                buyerResponse: sismoConnectResponse,\n                buyerTo: _to,\n                buyerNonce: _nonce\n            })\n        );\n\n        contractCounter++;\n\n        emit RequestCreated(encryptedVaultId, request, allRequests.length - 1);\n    }\n\n    function acceptRequest(\n        uint256 index,\n        address _feed,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public {\n        (bytes memory vaultId, , , ) = _sismoVerify(\n            sismoConnectResponse,\n            _to,\n            _nonce\n        );\n\n        bytes32 encryptedVaultId = keccak256(vaultId);\n\n        Structures.Feed memory feed = _getFeedInfo(_feed);\n\n        require(\n            allRequests[index].payment >= feed.paymentRequested,\n            \"BAY:payment is not the same of the feed\"\n        );\n\n        require(\n            feed.stakeRequested >= allRequests[index].stake,\n            \"BAY:stake is not the same of the feed\"\n        );\n\n        require(\n            IMecenateUsers(usersMouduleContract).checkifUserExist(\n                encryptedVaultId\n            ),\n            \"BAY:user does not exist\"\n        );\n\n        allRequestsPrivate.push(\n            Structures.BayRequestPrivate({\n                vaultIdSeller: vaultId,\n                sellerResponse: sismoConnectResponse,\n                vaultIdBuyer: allRequestsPrivate[index].vaultIdBuyer,\n                buyerResponse: allRequestsPrivate[index].buyerResponse,\n                buyerTo: allRequestsPrivate[index].buyerTo,\n                buyerNonce: allRequestsPrivate[index].buyerNonce\n            })\n        );\n\n        if (allRequests[index].tokenId != Structures.Tokens.NaN) {\n            if (allRequests[index].tokenId == Structures.Tokens.DAI) {\n                IERC20(daiToken).approve(\n                    msg.sender,\n                    allRequests[index].payment\n                );\n            } else if (allRequests[index].tokenId == Structures.Tokens.MUSE) {\n                IERC20(museToken).approve(\n                    msg.sender,\n                    allRequests[index].payment\n                );\n            }\n\n            IMecenateFeed(_feed).acceptPost{value: 0}(\n                allRequestsPrivate[index].buyerResponse,\n                allRequestsPrivate[index].buyerTo,\n                allRequestsPrivate[index].buyerNonce,\n                allRequests[index].tokenId,\n                allRequests[index].payment\n            );\n        } else {\n            IMecenateFeed(_feed).acceptPost{value: allRequests[index].payment}(\n                allRequestsPrivate[index].buyerResponse,\n                allRequestsPrivate[index].buyerTo,\n                allRequestsPrivate[index].buyerNonce,\n                allRequests[index].tokenId,\n                allRequests[index].payment\n            );\n        }\n\n        allRequests[index].accepted = true;\n\n        allRequests[index].postAddress = _feed;\n\n        allRequests[index].postCount = feed.postCount;\n\n        emit RequestAccepted(encryptedVaultId, allRequests[index], index);\n    }\n\n    function _sismoVerify(\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) internal view returns (bytes memory, uint256, uint256, bytes memory) {\n        (\n            bytes memory vaultId,\n            uint256 twitterId,\n            uint256 telegramId,\n            bytes memory signedMessage\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\n                sismoConnectResponse,\n                _to,\n                _nonce\n            );\n\n        (address to, bytes32 nonce) = abi.decode(\n            signedMessage,\n            (address, bytes32)\n        );\n\n        require(_nonce == nonce, \"Not Same Nonce\");\n\n        return (vaultId, twitterId, telegramId, signedMessage);\n    }\n\n    function getRequests()\n        public\n        view\n        returns (Structures.BayRequest[] memory)\n    {\n        return allRequests;\n    }\n\n    function getRequestForAddress(\n        bytes32 _user\n    ) public view returns (Structures.BayRequest[] memory) {\n        return requests[_user];\n    }\n\n    // removéthe request and refund the user delete the array and move the last element to the index\n    function removeRequest(\n        uint256 index,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public {\n        (\n            bytes memory vaultId,\n            uint256 twitterId,\n            uint256 telegramId,\n            bytes memory signedMessage\n        ) = _sismoVerify(sismoConnectResponse, _to, _nonce);\n\n        bytes32 encryptedVaultId = keccak256(vaultId);\n\n        require(\n            encryptedVaultId ==\n                keccak256(allRequestsPrivate[index].vaultIdBuyer),\n            \"BAY:you are not the buyer\"\n        );\n\n        require(\n            allRequests[index].accepted == false,\n            \"BAY:request is already accepted\"\n        );\n\n        Structures.BayRequest memory requestToRemove = allRequests[index];\n\n        //  send eth with data to the vaultctx\n        (bool _result, ) = vaultContract.call{value: requestToRemove.payment}(\n            sismoConnectResponse\n        );\n\n        require(_result, \"BAY:Vault call failed\");\n\n        // Remove from allRequests array\n        uint256 lastIndex = allRequests.length - 1;\n        if (index < lastIndex) {\n            allRequests[index] = allRequests[lastIndex];\n        }\n        allRequests.pop();\n\n        // Remove from allRequestsPrivate array\n        uint256 lastIndexPrivate = allRequestsPrivate.length - 1;\n        if (index < lastIndexPrivate) {\n            allRequestsPrivate[index] = allRequestsPrivate[lastIndexPrivate];\n        }\n        allRequestsPrivate.pop();\n\n        // Remove from requests mapping\n        for (uint256 i = 0; i < requests[encryptedVaultId].length; i++) {\n            if (\n                requests[encryptedVaultId][i].payment ==\n                requestToRemove.payment &&\n                requests[encryptedVaultId][i].stake == requestToRemove.stake &&\n                requests[encryptedVaultId][i].postAddress ==\n                requestToRemove.postAddress &&\n                requests[encryptedVaultId][i].postCount ==\n                requestToRemove.postCount\n            ) {\n                uint256 lastIndexSender = requests[encryptedVaultId].length - 1;\n                if (i < lastIndexSender) {\n                    requests[encryptedVaultId][i] = requests[encryptedVaultId][\n                        lastIndexSender\n                    ];\n                }\n                requests[encryptedVaultId].pop();\n                break;\n            }\n        }\n    }\n\n    function changeVault(address _vault) external onlyOwner {\n        vaultContract = _vault;\n    }\n\n    function changeVerifier(address _verifier) external onlyOwner {\n        verifierContract = _verifier;\n    }\n\n    function changeUsersModule(address _usersModule) external onlyOwner {\n        usersMouduleContract = _usersModule;\n    }\n\n    receive() external payable {}\n}\n"},"contracts/library/Structures.sol":{"content":"/**\n * @title Structures\n * @dev This library defines various data structures used in the Mecenate platform.\n */\npragma solidity 0.8.19;\n\nlibrary Structures {\n    enum PostStatus {\n        Waiting,\n        Proposed,\n        Accepted,\n        Submitted,\n        Finalized,\n        Punished,\n        Revealed,\n        Renounced\n    }\n    enum Tokens {\n        NaN,\n        MUSE,\n        DAI\n    }\n    enum PostType {\n        Text,\n        Image,\n        Video,\n        Audio,\n        File\n    }\n    enum PostDuration {\n        OneDay,\n        ThreeDays,\n        OneWeek,\n        TwoWeeks,\n        OneMonth\n    }\n\n    struct FeedSettings {\n        uint256 punishmentRatio;\n        uint256 postCount;\n        address usersModuleContract;\n        address factoryContract;\n        address verifierContract;\n        address vaultContract;\n        address router;\n        bytes encodedSymKey;\n        bytes lastMessageForBuyer;\n        bytes lastMessageForSeller;\n        string version;\n    }\n\n    struct FactorySettings {\n        address treasuryContract;\n        address usersModuleContract;\n        address verifierContract;\n        address vaultContract;\n        address museToken;\n        address daiToken;\n        address wethToken;\n        address router;\n    }\n\n    /**\n     * @dev Struct representing a post on the Mecenate platform.\n     */\n    struct Post {\n        User creator;\n        PostData postdata;\n    }\n\n    /**\n     * @dev Struct representing the data of a post on the Mecenate platform.\n     */\n    struct PostData {\n        PostSettings settings;\n        PostEscrow escrow;\n        PostEncryptedData data;\n    }\n\n    /**\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\n     */\n    struct PostEncryptedData {\n        bytes encryptedData;\n        bytes encryptedKey;\n        bytes decryptedData;\n    }\n\n    /**\n     * @dev Struct representing the settings of a post on the Mecenate platform.\n     */\n    struct PostSettings {\n        PostStatus status;\n        PostType postType;\n        uint256 creationTimeStamp;\n        uint256 endTimeStamp;\n        uint256 duration;\n        Tokens tokenId;\n    }\n\n    /**\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\n     */\n    struct PostSettingPrivate {\n        bytes vaultIdSeller;\n        uint256 sellerTwitterId;\n        uint256 sellerTelegramId;\n        bytes vaultIdBuyer;\n        uint256 buyerTwitterId;\n        uint256 buyerTelegramId;\n    }\n\n    /**\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\n     */\n    struct PostEscrow {\n        uint256 stake;\n        uint256 payment;\n        uint256 punishment;\n        uint256 penalty;\n    }\n\n    /**\n     * @dev Struct representing a user on the Mecenate platform.\n     */\n    struct User {\n        bytes32 vaultId;\n    }\n\n    /**\n     * @dev Struct representing a feed on the Mecenate platform.\n     */\n    struct Feed {\n        address contractAddress;\n        bytes32 operator;\n        uint256 sellerStake;\n        uint256 buyerStake;\n        uint256 totalStake;\n        uint256 postCount;\n        uint256 paymentRequested;\n        uint256 stakeRequested;\n        PostStatus status;\n        Tokens tokenId;\n        string version;\n    }\n\n    /**\n     * @dev Struct representing a bay request on the Mecenate platform.\n     */\n    struct BayRequest {\n        bytes32 request;\n        uint256 payment;\n        uint256 stake;\n        address postAddress;\n        bool accepted;\n        uint256 postCount;\n        Tokens tokenId;\n    }\n\n    /**\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\n     */\n    struct BayRequestPrivate {\n        bytes vaultIdSeller;\n        bytes sellerResponse;\n        bytes vaultIdBuyer;\n        bytes buyerResponse;\n        address buyerTo;\n        bytes32 buyerNonce;\n    }\n}\n"},"contracts/MecenateVault.sol":{"content":"/**\n * @title MecenateVault\n * @dev This contract allows users to deposit and withdraw ETH and ERC20 tokens, and pay ETH and ERC20 tokens to other addresses.\n * It also keeps track of the deposited balances for each user using a commitment hash.\n */\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"./interfaces/IMecenateVerifier.sol\";\nimport \"./interfaces/IMecenateFeedFactory.sol\";\n\ncontract MecenateVault is Ownable, ReentrancyGuard {\n    using Address for address;\n    using Address for address payable;\n\n    mapping(bytes32 => uint256) private ethDeposits;\n    mapping(bytes32 => mapping(address => uint256)) private tokenDeposits;\n\n    address public WETH;\n    address public DAI;\n    address public USDC;\n    address public MUSE;\n    address public verifierContract;\n    address public factoryContract;\n    address public mecenateBay;\n    address public mecenateUsers;\n    address private relayer;\n\n    uint256 public relayerFeePercentage = 200;\n    uint256 public constant MAX_RELAYER_FEE_PERCENTAGE = 500;\n\n    event MetaTransactionExecuted(\n        address userAddress,\n        address relayerAddress,\n        bytes functionSignature\n    );\n\n    event Withdrawn(\n        bytes32 indexed commitment,\n        uint256 amount,\n        string secret,\n        address token\n    );\n\n    modifier onlyRelayer() {\n        require(msg.sender == relayer, \"Not relayer\");\n        _;\n    }\n\n    constructor(\n        address _verifierContract,\n        address _factoryContract,\n        address _bayContract,\n        address _usersContract,\n        address _relayer\n    ) {\n        verifierContract = _verifierContract;\n        factoryContract = _factoryContract;\n        mecenateBay = _bayContract;\n        mecenateUsers = _usersContract;\n        relayer = _relayer;\n    }\n\n    function setTokens(\n        address _WETH,\n        address _DAI,\n        address _USDC,\n        address _MUSE\n    ) external onlyOwner {\n        WETH = _WETH;\n        DAI = _DAI;\n        USDC = _USDC;\n        MUSE = _MUSE;\n    }\n\n    function changeRelayerFee(\n        uint256 _newRelayerFeePercentage\n    ) external onlyOwner {\n        require(\n            _newRelayerFeePercentage <= MAX_RELAYER_FEE_PERCENTAGE,\n            \"New relayer fee percentage is too high\"\n        );\n        relayerFeePercentage = _newRelayerFeePercentage;\n    }\n\n    function depositETH(bytes32 encryptedVaultId) public payable nonReentrant {\n        // 1. Add the deposit to the correct deposit mapping\n        ethDeposits[encryptedVaultId] += msg.value;\n    }\n\n    function approveTokenToFeed(\n        address _token,\n        uint256 _amount,\n        address _feed,\n        bytes32 encryptedVaultId\n    ) public {\n        require(_token != address(0), \"Token address cannot be 0\");\n        require(_amount > 0, \"Amount must be greater than zero\");\n        require(\n            _token == WETH || _token == DAI || _token == USDC || _token == MUSE,\n            \"Token not supported\"\n        );\n        require(\n            tokenDeposits[encryptedVaultId][_token] >= _amount,\n            \"Not enough balance\"\n        );\n\n        require(\n            IMecenateFeedFactory(factoryContract).isFeed(_feed) ||\n                _feed == mecenateBay,\n            \"Not a feed\"\n        );\n\n        // The user must first approve the token transfer\n        // to this contract\n        IERC20 token = IERC20(_token);\n        // Approve the token to the feed\n        token.approve(_feed, _amount);\n    }\n\n    function depositToken(\n        address _token,\n        uint256 _amount,\n        bytes32 encryptedVaultId\n    ) external {\n        require(_token != address(0), \"Token address cannot be 0\");\n\n        require(_amount > 0, \"Amount must be greater than zero\");\n\n        require(\n            _token == WETH || _token == DAI || _token == USDC || _token == MUSE,\n            \"Token not supported\"\n        );\n\n        // The user must first approve the token transfer\n        // to this contract\n        IERC20 token = IERC20(_token);\n\n        require(\n            token.transferFrom(msg.sender, address(this), _amount),\n            \"Token transfer failed\"\n        );\n\n        // Add the deposited amount to the tokenDeposits mapping\n        tokenDeposits[encryptedVaultId][_token] += _amount;\n    }\n\n    function withdrawETH(\n        uint256 _amount,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public onlyRelayer nonReentrant {\n        uint256 initialGas = gasleft();\n\n        (\n            bytes memory vaultId,\n            ,\n            ,\n            bytes memory signedMessage\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\n                sismoConnectResponse,\n                _to,\n                _nonce\n            );\n\n        (address to, bytes32 nonce) = abi.decode(\n            signedMessage,\n            (address, bytes32)\n        );\n\n        require(to == _to, \"Not Same Address\");\n\n        require(nonce == _nonce, \"Not Same Nonce\");\n\n        bytes32 encryptedVaultId = keccak256(vaultId);\n\n        uint256 totalRequired = _amount; // Initialize with _value\n\n        totalRequired -= tx.gasprice * initialGas; // Add maximum possible gas cost\n\n        require(\n            ethDeposits[encryptedVaultId] >= totalRequired,\n            \"Not enough balance\"\n        );\n\n        // 1. Verify that the commitment exists and the amount is not zero\n        require(ethDeposits[encryptedVaultId] > 0, \"Commitment does not exist\");\n\n        require(_amount > 0, \"Amount must be greater than zero\");\n\n        // 2. Verify that the commitment has enough balance to withdraw from\n        require(ethDeposits[encryptedVaultId] >= _amount, \"Not enough balance\");\n\n        //decode signedMessage as address\n        ethDeposits[encryptedVaultId] -= _amount;\n\n        uint256 gasUsed = initialGas - gasleft();\n\n        uint256 gasCost = gasUsed * tx.gasprice;\n\n        uint256 relayerFee = (gasCost * relayerFeePercentage) / 10000;\n\n        require(_amount >= gasCost + relayerFee, \"Not enough balance for gas\");\n\n        uint256 newAmount = _amount - gasCost - relayerFee;\n\n        (bool result, ) = payable(to).call{value: newAmount}(\"\");\n\n        require(result, \"ETH transfer failed\");\n\n        (bool result2, ) = payable(msg.sender).call{\n            value: gasCost + relayerFee\n        }(\"\");\n\n        require(result2, \"ETH transfer failed with gas\");\n    }\n\n    function withdrawWithSecret(\n        string memory _secret,\n        address _token,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public onlyRelayer nonReentrant {\n        bytes32 commitment = keccak256(abi.encodePacked(_secret));\n        uint256 amount;\n\n        if (_token == address(0)) {\n            amount = ethDeposits[commitment];\n            require(amount > 0, \"No ETH deposit for this secret\");\n            ethDeposits[commitment] = 0;\n            payable(_to).transfer(amount);\n        } else {\n            amount = tokenDeposits[commitment][_token];\n            require(amount > 0, \"No Token deposit for this secret\");\n            tokenDeposits[commitment][_token] = 0;\n            IERC20(_token).transfer(_to, amount);\n        }\n\n        emit Withdrawn(commitment, amount, _secret, _token);\n    }\n\n    function withdrawToken(\n        address _token,\n        uint256 _amount,\n        bytes memory sismoConnectResponse,\n        address _to,\n        bytes32 _nonce\n    ) public onlyRelayer nonReentrant {\n        uint256 initialGas = gasleft();\n\n        uint256 totalRequired = tx.gasprice * initialGas;\n\n        (\n            bytes memory vaultId,\n            ,\n            ,\n            bytes memory signedMessage\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\n                sismoConnectResponse,\n                _to,\n                _nonce\n            );\n\n        (address to, bytes32 nonce) = abi.decode(\n            signedMessage,\n            (address, bytes32)\n        );\n\n        require(\n            ethDeposits[keccak256(vaultId)] >= totalRequired,\n            \"Not enough ETH for gas required\"\n        );\n\n        require(to == _to, \"Not Same Address\");\n\n        require(nonce == _nonce, \"Not Same Nonce\");\n\n        // Check if the commitment exists\n        // and the amount is greater than the deposit.\n        require(\n            tokenDeposits[keccak256(vaultId)][_token] >= _amount,\n            \"Not enough token balance\"\n        );\n\n        // Decrease the token balance for the commitment.\n        tokenDeposits[keccak256(vaultId)][_token] -= _amount;\n\n        // Transfer the tokens to msg.sender or operator.\n        IERC20(_token).transfer(to, _amount);\n\n        uint256 gasUsed = initialGas - gasleft();\n\n        uint256 gasCost = gasUsed * tx.gasprice;\n\n        uint256 relayerFee = (gasCost * relayerFeePercentage) / 10000;\n\n        require(\n            ethDeposits[keccak256(vaultId)] >= gasCost + relayerFee,\n            \"Not enough balance for gas used\"\n        );\n\n        ethDeposits[keccak256(vaultId)] -= gasCost + relayerFee;\n\n        (bool result, ) = payable(msg.sender).call{value: gasCost + relayerFee}(\n            \"\"\n        );\n\n        require(result, \"ETH transfer failed with gas\");\n    }\n\n    function getEthDeposit(\n        bytes32 encryptedVaultId\n    ) public view returns (uint256) {\n        return ethDeposits[encryptedVaultId];\n    }\n\n    receive() external payable {\n        revert(\"Use depositETH function\");\n    }\n\n    fallback() external payable {\n        require(msg.data.length > 0, \"Data required for Sismo verification.\");\n        bytes32 encryptedVaultId = abi.decode(msg.data, (bytes32));\n        ethDeposits[encryptedVaultId] += msg.value;\n    }\n\n    function getTokenDeposit(\n        address _token,\n        bytes32 encryptedVaultId\n    ) public view returns (uint256) {\n        return tokenDeposits[encryptedVaultId][_token];\n    }\n\n    function execute(\n        address _target,\n        bytes calldata _data,\n        uint256 _value,\n        bytes32 _encryptedVaultId\n    ) external onlyRelayer nonReentrant returns (bool) {\n        uint256 availableBalance = ethDeposits[_encryptedVaultId];\n\n        uint256 ethBalanceB4 = address(this).balance;\n        uint256 daiBalanceB4 = IERC20(DAI).balanceOf(address(this));\n        uint256 museBalanceB4 = IERC20(MUSE).balanceOf(address(this));\n\n        uint256 totalRequired = _value + (tx.gasprice * gasleft());\n\n        require(availableBalance >= totalRequired, \"Insufficient ETH balance\");\n\n        bool success; // variabile per verificare il successo delle transazioni\n        bytes memory retData; // dati di ritorno dalle transazioni\n\n        if (_data.length == 0) {\n            (success, ) = payable(_target).call{value: _value}(\"\");\n        } else {\n            if (_value == 0) {\n                (success, retData) = _target.call(_data);\n            } else {\n                (success, retData) = _target.call{value: _value}(_data);\n            }\n        }\n\n        require(success, \"Transaction failed\");\n\n        uint256 gasUsed = totalRequired - _value - (tx.gasprice * gasleft());\n\n        uint256 relayerFee = (gasUsed * relayerFeePercentage) / 10000;\n\n        require(\n            availableBalance >= gasUsed + relayerFee,\n            \"Insufficient balance for gas and fee\"\n        );\n\n        uint256 ethBalance = address(this).balance;\n        uint256 daiBalance = IERC20(DAI).balanceOf(address(this));\n        uint256 museBalance = IERC20(MUSE).balanceOf(address(this));\n\n        uint256 diffEth;\n        uint256 diffDai;\n        uint256 diffMuse;\n\n        if (ethBalanceB4 > ethBalance) {\n            diffEth = ethBalanceB4 - ethBalance;\n\n            if (diffEth > 0 && ethBalanceB4 != 0) {\n                ethDeposits[_encryptedVaultId] -= diffEth;\n            }\n        }\n\n        ethDeposits[_encryptedVaultId] = gasUsed - relayerFee;\n\n        (success, ) = payable(msg.sender).call{value: gasUsed + relayerFee}(\"\");\n\n        require(success, \"ETH transfer failed\");\n\n        if (daiBalanceB4 > daiBalance) {\n            diffDai = daiBalanceB4 - daiBalance;\n\n            if (diffDai > 0 && daiBalanceB4 != 0) {\n                tokenDeposits[_encryptedVaultId][DAI] -= diffDai;\n            }\n        }\n\n        if (museBalanceB4 > museBalance) {\n            diffMuse = museBalanceB4 - museBalance;\n\n            if (diffMuse > 0 && museBalanceB4 != 0) {\n                tokenDeposits[_encryptedVaultId][MUSE] -= diffMuse;\n            }\n        }\n\n        return true;\n    }\n\n    function setRelayer(address _relayer) external onlyOwner {\n        relayer = _relayer;\n    }\n\n    function setVerifierContract(address _verifierContract) external onlyOwner {\n        verifierContract = _verifierContract;\n    }\n\n    function setFactoryContract(address _factoryContract) external onlyOwner {\n        factoryContract = _factoryContract;\n    }\n\n    function setMecenateBay(address _mecenateBay) external onlyOwner {\n        mecenateBay = _mecenateBay;\n    }\n\n    function setMecenateUsers(address _mecenateUsers) external onlyOwner {\n        mecenateUsers = _mecenateUsers;\n    }\n}\n"},"contracts/modules/FeedViewer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"../library/Structures.sol\";\nimport \"../interfaces/IMecenateFeed.sol\";\n\ncontract FeedViewer {\n    function _getFeedInfo(\n        address feed\n    ) internal view returns (Structures.Feed memory) {\n        Structures.Feed memory f;\n\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\n\n        f.contractAddress = feed;\n        f.operator = mecenateFeed.owner();\n        f.sellerStake = mecenateFeed.getSellerStake();\n        f.buyerStake = mecenateFeed.getBuyerStake();\n        f.totalStake = mecenateFeed.getTotalStaked();\n        f.postCount = mecenateFeed.postCount();\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\n        f.stakeRequested = mecenateFeed.getStakeRequested();\n        f.status = mecenateFeed.getStatus();\n        f.tokenId = mecenateFeed.getTokenId();\n        f.version = mecenateFeed.version();\n\n        return f;\n    }\n\n    function _getFeedsInfo(\n        address[] memory _feeds\n    ) internal view returns (Structures.Feed[] memory) {\n        uint256 len = _feeds.length;\n        Structures.Feed[] memory f = new Structures.Feed[](len);\n\n        for (uint256 i = 0; i < len; i++) {\n            f[i] = _getFeedInfo(_feeds[i]);\n        }\n\n        return f;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateFeed.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateFeed.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateFeedFactory.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateFeedFactory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateUsers.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateUsers.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateVerifier.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateVerifier.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/library/Structures.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/library/Structures.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/layer/MecenateBay.sol:75:31:\n   |\n75 |     ) public payable returns (Structures.BayRequest memory) {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":2127,"file":"contracts/layer/MecenateBay.sol","start":2099},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/MecenateVault.sol:226:9:\n    |\n226 |         bytes memory sismoConnectResponse,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6733,"file":"contracts/MecenateVault.sol","start":6700},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/MecenateVault.sol:228:9:\n    |\n228 |         bytes32 _nonce\n    |         ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6778,"file":"contracts/MecenateVault.sol","start":6764},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/layer/MecenateBay.sol:235:10:\n    |\n235 |         (address to, bytes32 nonce) = abi.decode(\n    |          ^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":7200,"file":"contracts/layer/MecenateBay.sol","start":7190},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/layer/MecenateBay.sol:268:13:\n    |\n268 |             uint256 twitterId,\n    |             ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":8055,"file":"contracts/layer/MecenateBay.sol","start":8038},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/layer/MecenateBay.sol:269:13:\n    |\n269 |             uint256 telegramId,\n    |             ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":8087,"file":"contracts/layer/MecenateBay.sol","start":8069},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/layer/MecenateBay.sol:270:13:\n    |\n270 |             bytes memory signedMessage\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":8127,"file":"contracts/layer/MecenateBay.sol","start":8101},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1019],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1020,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1019],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":255,"linearizedBaseContracts":[255],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":189,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":189,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":189,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":189,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":198,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":198,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":198,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":198,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":204,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":255,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":212,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":255,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":222,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":222,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":222,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":255,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":232,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":232,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":255,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":242,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":242,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":255,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":254,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":254,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":254,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":251,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":255,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":256,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[291]},"id":292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"148:480:3","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":291,"linearizedBaseContracts":[291],"name":"IERC20Permit","nameLocation":"639:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"658:792:3","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:3","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"owner","nameLocation":"1488:5:3","nodeType":"VariableDeclaration","scope":276,"src":"1480:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"spender","nameLocation":"1511:7:3","nodeType":"VariableDeclaration","scope":276,"src":"1503:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"value","nameLocation":"1536:5:3","nodeType":"VariableDeclaration","scope":276,"src":"1528:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:3","nodeType":"VariableDeclaration","scope":276,"src":"1551:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"v","nameLocation":"1583:1:3","nodeType":"VariableDeclaration","scope":276,"src":"1577:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":268,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"r","nameLocation":"1602:1:3","nodeType":"VariableDeclaration","scope":276,"src":"1594:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"s","nameLocation":"1621:1:3","nodeType":"VariableDeclaration","scope":276,"src":"1613:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:3"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"1637:0:3"},"scope":291,"src":"1455:183:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"1644:294:3","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":284,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:3","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"owner","nameLocation":"1967:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1959:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:3"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"1997:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:3"},"scope":291,"src":"1943:63:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"2012:128:3","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":290,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:3","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"2223:2:3"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"2249:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:3"},"scope":291,"src":"2198:60:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":292,"src":"629:1631:3","usedErrors":[]}],"src":"123:2138:3"},"id":3},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[997],"IERC20":[255],"IERC20Permit":[291],"SafeERC20":[667]},"id":668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":293,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":256,"src":"140:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":292,"src":"164:40:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":998,"src":"205:36:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"243:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":667,"linearizedBaseContracts":[667],"name":"SafeERC20","nameLocation":"709:9:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":300,"libraryName":{"id":298,"name":"Address","nameLocations":["731:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"731:7:4"},"nodeType":"UsingForDirective","src":"725:26:4","typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":323,"nodeType":"Block","src":"1013:103:4","statements":[{"expression":{"arguments":[{"id":312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1043:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":315,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1073:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"1073:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1098:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"1102:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":313,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":311,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1023:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"1023:86:4"}]},"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"757:179:4","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:4","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"token","nameLocation":"970:5:4","nodeType":"VariableDeclaration","scope":324,"src":"963:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":303,"nodeType":"UserDefinedTypeName","pathNode":{"id":302,"name":"IERC20","nameLocations":["963:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"963:6:4"},"referencedDeclaration":255,"src":"963:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"to","nameLocation":"985:2:4","nodeType":"VariableDeclaration","scope":324,"src":"977:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"997:5:4","nodeType":"VariableDeclaration","scope":324,"src":"989:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:4"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[],"src":"1013:0:4"},"scope":667,"src":"941:175:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":350,"nodeType":"Block","src":"1445:113:4","statements":[{"expression":{"arguments":[{"id":338,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1475:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":341,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1505:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":254,"src":"1505:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"1534:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1540:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1544:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":339,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":337,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1455:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"1455:96:4"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"1122:228:4","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":351,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:4","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"token","nameLocation":"1388:5:4","nodeType":"VariableDeclaration","scope":351,"src":"1381:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":327,"nodeType":"UserDefinedTypeName","pathNode":{"id":326,"name":"IERC20","nameLocations":["1381:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"1381:6:4"},"referencedDeclaration":255,"src":"1381:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"1403:4:4","nodeType":"VariableDeclaration","scope":351,"src":"1395:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"1417:2:4","nodeType":"VariableDeclaration","scope":351,"src":"1409:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"value","nameLocation":"1429:5:4","nodeType":"VariableDeclaration","scope":351,"src":"1421:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:4"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"1445:0:4"},"scope":667,"src":"1355:203:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"1894:497:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2143:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":371,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:4","typeDescriptions":{}}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2190:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":367,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2159:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":232,"src":"2159:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"2121:163:4"},{"expression":{"arguments":[{"id":383,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2314:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":386,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2344:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"2344:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":389,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2368:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2377:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":384,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":382,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2294:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"2294:90:4"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1564:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:4","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"token","nameLocation":"1846:5:4","nodeType":"VariableDeclaration","scope":395,"src":"1839:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":354,"nodeType":"UserDefinedTypeName","pathNode":{"id":353,"name":"IERC20","nameLocations":["1839:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"1839:6:4"},"referencedDeclaration":255,"src":"1839:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"spender","nameLocation":"1861:7:4","nodeType":"VariableDeclaration","scope":395,"src":"1853:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"value","nameLocation":"1878:5:4","nodeType":"VariableDeclaration","scope":395,"src":"1870:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:4"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"1894:0:4"},"scope":667,"src":"1818:573:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":431,"nodeType":"Block","src":"2668:194:4","statements":[{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:4","nodeType":"VariableDeclaration","scope":431,"src":"2678:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":416,"initialValue":{"arguments":[{"arguments":[{"id":412,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:4","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2732:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2701:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":232,"src":"2701:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:4"},{"expression":{"arguments":[{"id":418,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2770:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":421,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2800:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"2800:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":424,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2824:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2833:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2848:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":419,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":417,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2750:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2750:105:4"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2397:180:4","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":432,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"token","nameLocation":"2620:5:4","nodeType":"VariableDeclaration","scope":432,"src":"2613:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"IERC20","nameLocations":["2613:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"2613:6:4"},"referencedDeclaration":255,"src":"2613:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"spender","nameLocation":"2635:7:4","nodeType":"VariableDeclaration","scope":432,"src":"2627:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"value","nameLocation":"2652:5:4","nodeType":"VariableDeclaration","scope":432,"src":"2644:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:4"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"2668:0:4"},"scope":667,"src":"2582:280:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"3139:321:4","statements":[{"id":475,"nodeType":"UncheckedBlock","src":"3149:305:4","statements":[{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:4","nodeType":"VariableDeclaration","scope":475,"src":"3173:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":453,"initialValue":{"arguments":[{"arguments":[{"id":449,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$667","typeString":"library SafeERC20"}],"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:4","typeDescriptions":{}}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3227:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":445,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3196:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":232,"src":"3196:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3257:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3273:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"3249:75:4"},{"expression":{"arguments":[{"id":462,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3358:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3388:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"3388:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:4","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3412:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3421:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3436:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":463,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":461,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3338:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"3338:105:4"}]}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"2868:180:4","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:4","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"token","nameLocation":"3091:5:4","nodeType":"VariableDeclaration","scope":477,"src":"3084:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":435,"nodeType":"UserDefinedTypeName","pathNode":{"id":434,"name":"IERC20","nameLocations":["3084:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"3084:6:4"},"referencedDeclaration":255,"src":"3084:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"spender","nameLocation":"3106:7:4","nodeType":"VariableDeclaration","scope":477,"src":"3098:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"value","nameLocation":"3123:5:4","nodeType":"VariableDeclaration","scope":477,"src":"3115:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:4"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"3139:0:4"},"scope":667,"src":"3053:407:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"3856:333:4","statements":[{"assignments":[489],"declarations":[{"constant":false,"id":489,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:4","nodeType":"VariableDeclaration","scope":523,"src":"3866:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":498,"initialValue":{"arguments":[{"expression":{"expression":{"id":492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"3917:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"3917:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:4","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":495,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3941:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3950:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":490,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:4"},{"condition":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:4","subExpression":{"arguments":[{"id":500,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"3996:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"id":501,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4003:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":499,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3972:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":522,"nodeType":"IfStatement","src":"3967:216:4","trueBody":{"id":521,"nodeType":"Block","src":"4018:165:4","statements":[{"expression":{"arguments":[{"id":505,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4052:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":508,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4082:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"4082:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:4","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":511,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"4106:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":504,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4032:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"4032:86:4"},{"expression":{"arguments":[{"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4152:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},{"id":518,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4159:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":516,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4132:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"4132:40:4"}]}}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"3466:308:4","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:4","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"token","nameLocation":"3808:5:4","nodeType":"VariableDeclaration","scope":524,"src":"3801:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"IERC20","nameLocations":["3801:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"3801:6:4"},"referencedDeclaration":255,"src":"3801:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"spender","nameLocation":"3823:7:4","nodeType":"VariableDeclaration","scope":524,"src":"3815:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"value","nameLocation":"3840:5:4","nodeType":"VariableDeclaration","scope":524,"src":"3832:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:4"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"3856:0:4"},"scope":667,"src":"3779:410:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"4556:257:4","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:4","nodeType":"VariableDeclaration","scope":580,"src":"4566:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":551,"initialValue":{"arguments":[{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4601:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4588:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$291","typeString":"contract IERC20Permit"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":284,"src":"4588:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:4"},{"expression":{"arguments":[{"id":555,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4630:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"4637:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4646:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":558,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"4653:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":559,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"4663:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":560,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4666:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":561,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4669:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":552,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4617:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$291","typeString":"contract IERC20Permit"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:4","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":276,"src":"4617:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"4617:54:4"},{"assignments":[565],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:4","nodeType":"VariableDeclaration","scope":580,"src":"4681:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":570,"initialValue":{"arguments":[{"id":568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4715:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":566,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4702:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$291","typeString":"contract IERC20Permit"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":284,"src":"4702:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4739:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":573,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4753:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"4731:75:4"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"4195:141:4","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"token","nameLocation":"4383:5:4","nodeType":"VariableDeclaration","scope":581,"src":"4370:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$291","typeString":"contract IERC20Permit"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"IERC20Permit","nameLocations":["4370:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":291,"src":"4370:12:4"},"referencedDeclaration":291,"src":"4370:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$291","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"owner","nameLocation":"4406:5:4","nodeType":"VariableDeclaration","scope":581,"src":"4398:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"spender","nameLocation":"4429:7:4","nodeType":"VariableDeclaration","scope":581,"src":"4421:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"value","nameLocation":"4454:5:4","nodeType":"VariableDeclaration","scope":581,"src":"4446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:4","nodeType":"VariableDeclaration","scope":581,"src":"4469:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"v","nameLocation":"4501:1:4","nodeType":"VariableDeclaration","scope":581,"src":"4495:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":537,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"r","nameLocation":"4520:1:4","nodeType":"VariableDeclaration","scope":581,"src":"4512:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"s","nameLocation":"4539:1:4","nodeType":"VariableDeclaration","scope":581,"src":"4531:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:4"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"4556:0:4"},"scope":667,"src":"4341:472:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":617,"nodeType":"Block","src":"5266:572:4","statements":[{"assignments":[591],"declarations":[{"constant":false,"id":591,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:4","nodeType":"VariableDeclaration","scope":617,"src":"5615:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":600,"initialValue":{"arguments":[{"id":597,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"5669:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":594,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5649:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:4","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:4","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":757,"src":"5641:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":602,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5728:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:4","memberName":"length","nodeType":"MemberAccess","src":"5728:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":608,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5765:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":609,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:4","typeDescriptions":{}}}],"id":611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":606,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:4","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"5720:111:4"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"4819:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":618,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:4","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"token","nameLocation":"5232:5:4","nodeType":"VariableDeclaration","scope":618,"src":"5225:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":584,"nodeType":"UserDefinedTypeName","pathNode":{"id":583,"name":"IERC20","nameLocations":["5225:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"5225:6:4"},"referencedDeclaration":255,"src":"5225:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"data","nameLocation":"5252:4:4","nodeType":"VariableDeclaration","scope":618,"src":"5239:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:4"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"5266:0:4"},"scope":667,"src":"5196:642:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":665,"nodeType":"Block","src":"6428:505:4","statements":[{"assignments":[630,632],"declarations":[{"constant":false,"id":630,"mutability":"mutable","name":"success","nameLocation":"6729:7:4","nodeType":"VariableDeclaration","scope":665,"src":"6724:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":629,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:4","nodeType":"VariableDeclaration","scope":665,"src":"6738:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":631,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":640,"initialValue":{"arguments":[{"id":638,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6785:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":635,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6773:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:4","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:4","memberName":"call","nodeType":"MemberAccess","src":"6765:19:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:4"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6819:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":642,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6831:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:4","memberName":"length","nodeType":"MemberAccess","src":"6831:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":648,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6868:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":649,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:4","typeDescriptions":{}}}],"id":651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":646,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:4","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":660,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6919:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:4","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":656,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"6892:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$997_$","typeString":"type(library Address)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6892:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":628,"id":664,"nodeType":"Return","src":"6800:126:4"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"5844:490:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:4","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"token","nameLocation":"6379:5:4","nodeType":"VariableDeclaration","scope":666,"src":"6372:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"IERC20","nameLocations":["6372:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"6372:6:4"},"referencedDeclaration":255,"src":"6372:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"data","nameLocation":"6399:4:4","nodeType":"VariableDeclaration","scope":666,"src":"6386:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":623,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:4"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"6422:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":626,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:4"},"scope":667,"src":"6339:594:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":668,"src":"701:6234:4","usedErrors":[]}],"src":"115:6821:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[997]},"id":998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":669,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":997,"linearizedBaseContracts":[997],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":684,"nodeType":"Block","src":"1478:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":678,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:5","memberName":"code","nodeType":"MemberAccess","src":"1702:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"length","nodeType":"MemberAccess","src":"1702:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":677,"id":683,"nodeType":"Return","src":"1695:30:5"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"216:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"account","nameLocation":"1440:7:5","nodeType":"VariableDeclaration","scope":685,"src":"1432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"1472:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:5"},"scope":997,"src":"1412:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":718,"nodeType":"Block","src":"2718:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$997","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$997","typeString":"library Address"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:5","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":699,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2761:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"2728:73:5"},{"assignments":[705,null],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"success","nameLocation":"2818:7:5","nodeType":"VariableDeclaration","scope":718,"src":"2813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":704,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":712,"initialValue":{"arguments":[{"hexValue":"","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":706,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2831:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:5","memberName":"call","nodeType":"MemberAccess","src":"2831:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2853:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:5"},{"expression":{"arguments":[{"id":714,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"2874:78:5"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1738:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:5","nodeType":"VariableDeclaration","scope":719,"src":"2666:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"amount","nameLocation":"2701:6:5","nodeType":"VariableDeclaration","scope":719,"src":"2693:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:5"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"2718:0:5"},"scope":997,"src":"2647:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"3790:96:5","statements":[{"expression":{"arguments":[{"id":730,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"3829:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":729,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[777,821],"referencedDeclaration":821,"src":"3807:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":728,"id":735,"nodeType":"Return","src":"3800:79:5"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"2965:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:5","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"target","nameLocation":"3731:6:5","nodeType":"VariableDeclaration","scope":737,"src":"3723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"data","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":737,"src":"3739:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:5"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":737,"src":"3776:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":726,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:5"},"scope":997,"src":"3701:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"4255:76:5","statements":[{"expression":{"arguments":[{"id":750,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4294:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4302:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":753,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4311:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":749,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[777,821],"referencedDeclaration":821,"src":"4272:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":748,"id":755,"nodeType":"Return","src":"4265:59:5"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"3892:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:5","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":757,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":757,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":741,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:5","nodeType":"VariableDeclaration","scope":757,"src":"4190:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":743,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:5"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"4241:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":746,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:5"},"scope":997,"src":"4108:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"4806:111:5","statements":[{"expression":{"arguments":[{"id":770,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4853:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":769,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[777,821],"referencedDeclaration":821,"src":"4823:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":768,"id":775,"nodeType":"Return","src":"4816:94:5"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"4337:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:5","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"target","nameLocation":"4732:6:5","nodeType":"VariableDeclaration","scope":777,"src":"4724:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"data","nameLocation":"4753:4:5","nodeType":"VariableDeclaration","scope":777,"src":"4740:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"value","nameLocation":"4767:5:5","nodeType":"VariableDeclaration","scope":777,"src":"4759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:5"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"4792:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":766,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:5"},"scope":997,"src":"4693:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"5344:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$997","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$997","typeString":"library Address"}],"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:5","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"5354:81:5"},{"assignments":[803,805],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"success","nameLocation":"5451:7:5","nodeType":"VariableDeclaration","scope":820,"src":"5446:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":802,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:5","nodeType":"VariableDeclaration","scope":820,"src":"5460:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"5513:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":806,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:5","memberName":"call","nodeType":"MemberAccess","src":"5487:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5506:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:5"},{"expression":{"arguments":[{"id":814,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"5562:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5570:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":816,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5579:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":817,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5591:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":813,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5535:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":790,"id":819,"nodeType":"Return","src":"5528:76:5"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4923:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:5","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"target","nameLocation":"5213:6:5","nodeType":"VariableDeclaration","scope":821,"src":"5205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"data","nameLocation":"5242:4:5","nodeType":"VariableDeclaration","scope":821,"src":"5229:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":781,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"value","nameLocation":"5264:5:5","nodeType":"VariableDeclaration","scope":821,"src":"5256:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:5","nodeType":"VariableDeclaration","scope":821,"src":"5279:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:5"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"5330:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:5"},"scope":997,"src":"5165:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":837,"nodeType":"Block","src":"5888:97:5","statements":[{"expression":{"arguments":[{"id":832,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5924:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5932:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":831,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[838,867],"referencedDeclaration":867,"src":"5905:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":830,"id":836,"nodeType":"Return","src":"5898:80:5"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"5617:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":838,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:5","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"target","nameLocation":"5824:6:5","nodeType":"VariableDeclaration","scope":838,"src":"5816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"data","nameLocation":"5845:4:5","nodeType":"VariableDeclaration","scope":838,"src":"5832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:5"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"5874:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:5"},"scope":997,"src":"5788:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"6327:168:5","statements":[{"assignments":[851,853],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"success","nameLocation":"6343:7:5","nodeType":"VariableDeclaration","scope":866,"src":"6338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":850,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:5","nodeType":"VariableDeclaration","scope":866,"src":"6352:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":858,"initialValue":{"arguments":[{"id":856,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"6397:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":854,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6379:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:5"},{"expression":{"arguments":[{"id":860,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6446:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":862,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"6463:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":863,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6475:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":859,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"6419:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":849,"id":865,"nodeType":"Return","src":"6412:76:5"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"5991:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:5","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"target","nameLocation":"6214:6:5","nodeType":"VariableDeclaration","scope":867,"src":"6206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"data","nameLocation":"6243:4:5","nodeType":"VariableDeclaration","scope":867,"src":"6230:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":842,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:5","nodeType":"VariableDeclaration","scope":867,"src":"6257:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":844,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"6313:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":847,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:5"},"scope":997,"src":"6169:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":883,"nodeType":"Block","src":"6771:101:5","statements":[{"expression":{"arguments":[{"id":878,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"6809:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6817:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":877,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[884,913],"referencedDeclaration":913,"src":"6788:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"6781:84:5"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"6501:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:5","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"target","nameLocation":"6712:6:5","nodeType":"VariableDeclaration","scope":884,"src":"6704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"data","nameLocation":"6733:4:5","nodeType":"VariableDeclaration","scope":884,"src":"6720:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:5"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"6757:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":874,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:5"},"scope":997,"src":"6674:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"7213:170:5","statements":[{"assignments":[897,899],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"success","nameLocation":"7229:7:5","nodeType":"VariableDeclaration","scope":912,"src":"7224:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":896,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:5","nodeType":"VariableDeclaration","scope":912,"src":"7238:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[{"id":902,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":900,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"7265:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:5"},{"expression":{"arguments":[{"id":906,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"7334:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"7342:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7351:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":909,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":905,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"7307:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":895,"id":911,"nodeType":"Return","src":"7300:76:5"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"6878:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:5","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"target","nameLocation":"7105:6:5","nodeType":"VariableDeclaration","scope":913,"src":"7097:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"data","nameLocation":"7134:4:5","nodeType":"VariableDeclaration","scope":913,"src":"7121:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":888,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:5","nodeType":"VariableDeclaration","scope":913,"src":"7148:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":890,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":913,"src":"7199:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:5"},"scope":997,"src":"7058:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"7865:434:5","statements":[{"condition":{"id":927,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"7879:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":949,"nodeType":"Block","src":"8235:58:5","statements":[{"expression":{"arguments":[{"id":945,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8257:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":946,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"8269:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":944,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"8249:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"8249:33:5"}]},"id":950,"nodeType":"IfStatement","src":"7875:418:5","trueBody":{"id":943,"nodeType":"Block","src":"7888:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":928,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"7906:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:5","memberName":"length","nodeType":"MemberAccess","src":"7906:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"7902:286:5","trueBody":{"id":939,"nodeType":"Block","src":"7930:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":934,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8132:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"8113:60:5"}]}},{"expression":{"id":941,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8208:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":926,"id":942,"nodeType":"Return","src":"8201:17:5"}]}}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"7389:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"target","nameLocation":"7724:6:5","nodeType":"VariableDeclaration","scope":952,"src":"7716:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"success","nameLocation":"7745:7:5","nodeType":"VariableDeclaration","scope":952,"src":"7740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":917,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:5","nodeType":"VariableDeclaration","scope":952,"src":"7762:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":919,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:5","nodeType":"VariableDeclaration","scope":952,"src":"7795:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":921,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"7851:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:5"},"scope":997,"src":"7671:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"8680:135:5","statements":[{"condition":{"id":964,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"8694:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":973,"nodeType":"Block","src":"8751:58:5","statements":[{"expression":{"arguments":[{"id":969,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8773:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":970,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8785:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":968,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"8765:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"8765:33:5"}]},"id":974,"nodeType":"IfStatement","src":"8690:119:5","trueBody":{"id":967,"nodeType":"Block","src":"8703:42:5","statements":[{"expression":{"id":965,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8724:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":963,"id":966,"nodeType":"Return","src":"8717:17:5"}]}}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"8305:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:5","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"success","nameLocation":"8560:7:5","nodeType":"VariableDeclaration","scope":976,"src":"8555:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:5","nodeType":"VariableDeclaration","scope":976,"src":"8577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:5","nodeType":"VariableDeclaration","scope":976,"src":"8610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":958,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:5"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"8666:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":961,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:5"},"scope":997,"src":"8520:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"8904:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":983,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"8980:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:5","memberName":"length","nodeType":"MemberAccess","src":"8980:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":993,"nodeType":"Block","src":"9310:45:5","statements":[{"expression":{"arguments":[{"id":990,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"9331:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":989,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"ExpressionStatement","src":"9324:20:5"}]},"id":994,"nodeType":"IfStatement","src":"8976:379:5","trueBody":{"id":988,"nodeType":"Block","src":"9003:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:5"},"nodeType":"YulFunctionCall","src":"9202:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:5"},"nodeType":"YulFunctionCall","src":"9243:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:5"},"nodeType":"YulFunctionCall","src":"9236:44:5"},"nodeType":"YulExpressionStatement","src":"9236:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":978,"isOffset":false,"isSlot":false,"src":"9208:10:5","valueSize":1},{"declaration":978,"isOffset":false,"isSlot":false,"src":"9251:10:5","valueSize":1}],"id":987,"nodeType":"InlineAssembly","src":"9152:142:5"}]}}]},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:5","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:5","nodeType":"VariableDeclaration","scope":996,"src":"8838:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:5","nodeType":"VariableDeclaration","scope":996,"src":"8863:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":979,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:5"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"8904:0:5"},"scope":997,"src":"8821:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":998,"src":"194:9169:5","usedErrors":[]}],"src":"101:9263:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":999,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1008,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1004,"id":1007,"nodeType":"Return","src":"712:17:6"}]},"id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1019,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1013,"id":1016,"nodeType":"Return","src":"819:15:6"}]},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1019,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1020,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2480],"SignedMath":[2585],"Strings":[1248]},"id":1249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":2481,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1023,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":2586,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1248,"linearizedBaseContracts":[1248],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1027,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":1248,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1025,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1030,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":1248,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1028,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1077,"nodeType":"Block","src":"518:625:7","statements":[{"id":1076,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[1039],"declarations":[{"constant":false,"id":1039,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":1076,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1046,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1040,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2480_$","typeString":"type(library Math)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[1048],"declarations":[{"constant":false,"id":1048,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":1076,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1047,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1053,"initialValue":{"arguments":[{"id":1051,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1049,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":1076,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1056,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nodeType":"YulBlock","src":"740:67:7","statements":[{"nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:7"},"nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1048,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":1039,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":1057,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":1072,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":1059,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:7"},"nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:7"},"nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:7"},"nodeType":"YulFunctionCall","src":"956:44:7"},"nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1027,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":1033,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":1062,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":1070,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1073,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":1074,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1037,"id":1075,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1078,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1035,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":1248,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1105,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1097,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2585_$","typeString":"type(library SignedMath)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1096,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1078,1106],"referencedDeclaration":1078,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1088,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1086,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1085,"id":1104,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1106,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1106,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1080,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1083,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":1248,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"1595:100:7","statements":[{"id":1124,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1116,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2480_$","typeString":"type(library Math)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1114,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1126,1202,1222],"referencedDeclaration":1202,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1113,"id":1123,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1111,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":1248,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[1137],"declarations":[{"constant":false,"id":1137,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":1201,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1136,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1141,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1138,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1147,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1149,"indexExpression":{"hexValue":"30","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1152,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1155,"indexExpression":{"hexValue":"31","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1158,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":1187,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1173,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1175,"indexExpression":{"id":1174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1176,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1180,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1182,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1186,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"initializationExpression":{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":1188,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1162,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"loopExpression":{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":1170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":1198,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1196,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1135,"id":1200,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":1202,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1133,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":1248,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1215,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1213,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1218,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1210,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1126,1202,1222],"referencedDeclaration":1202,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1209,"id":1220,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":1222,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":1248,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1246,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1233,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1232,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1238,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1231,"id":1245,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":1247,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1224,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":1247,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1226,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1247,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1229,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":1248,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1249,"src":"220:2559:7","usedErrors":[]}],"src":"101:2679:7"},"id":7},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1614],"Math":[2480],"SignedMath":[2585],"Strings":[1248]},"id":1615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1250,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":1249,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"163:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1614,"linearizedBaseContracts":[1614],"name":"ECDSA","nameLocation":"377:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1258,"members":[{"id":1253,"name":"NoError","nameLocation":"417:7:8","nodeType":"EnumValue","src":"417:7:8"},{"id":1254,"name":"InvalidSignature","nameLocation":"434:16:8","nodeType":"EnumValue","src":"434:16:8"},{"id":1255,"name":"InvalidSignatureLength","nameLocation":"460:22:8","nodeType":"EnumValue","src":"460:22:8"},{"id":1256,"name":"InvalidSignatureS","nameLocation":"492:17:8","nodeType":"EnumValue","src":"492:17:8"},{"id":1257,"name":"InvalidSignatureV","nameLocation":"519:17:8","nodeType":"EnumValue","src":"519:17:8"}],"name":"RecoverError","nameLocation":"394:12:8","nodeType":"EnumDefinition","src":"389:175:8"},{"body":{"id":1301,"nodeType":"Block","src":"624:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1264,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"638:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1265,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"647:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"647:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"734:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1271,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"743:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"743:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"843:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1280,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"852:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"852:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"965:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1289,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"974:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"974:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"961:114:8","trueBody":{"id":1296,"nodeType":"Block","src":"1006:69:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1292,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"1020:44:8"}]}},"id":1298,"nodeType":"IfStatement","src":"839:236:8","trueBody":{"id":1287,"nodeType":"Block","src":"889:66:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1283,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"903:41:8"}]}},"id":1299,"nodeType":"IfStatement","src":"730:345:8","trueBody":{"id":1278,"nodeType":"Block","src":"774:59:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1274,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"ExpressionStatement","src":"788:34:8"}]}},"id":1300,"nodeType":"IfStatement","src":"634:441:8","trueBody":{"id":1269,"nodeType":"Block","src":"669:55:8","statements":[{"functionReturnParameters":1263,"id":1268,"nodeType":"Return","src":"683:7:8"}]}}]},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:8","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"error","nameLocation":"604:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"591:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"RecoverError","nameLocations":["591:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"591:12:8"},"referencedDeclaration":1258,"src":"591:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:8"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[],"src":"624:0:8"},"scope":1614,"src":"570:511:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1347,"nodeType":"Block","src":"2249:626:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1315,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2263:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1345,"nodeType":"Block","src":"2788:81:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:8","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1341,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2822:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"2822:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1314,"id":1344,"nodeType":"Return","src":"2802:56:8"}]},"id":1346,"nodeType":"IfStatement","src":"2259:610:8","trueBody":{"id":1336,"nodeType":"Block","src":"2287:495:8","statements":[{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"r","nameLocation":"2309:1:8","nodeType":"VariableDeclaration","scope":1336,"src":"2301:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1321,"nodeType":"VariableDeclarationStatement","src":"2301:9:8"},{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"s","nameLocation":"2332:1:8","nodeType":"VariableDeclaration","scope":1336,"src":"2324:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1324,"nodeType":"VariableDeclarationStatement","src":"2324:9:8"},{"assignments":[1326],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"v","nameLocation":"2353:1:8","nodeType":"VariableDeclaration","scope":1336,"src":"2347:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1325,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1327,"nodeType":"VariableDeclarationStatement","src":"2347:7:8"},{"AST":{"nodeType":"YulBlock","src":"2555:171:8","statements":[{"nodeType":"YulAssignment","src":"2573:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:8"},"nodeType":"YulFunctionCall","src":"2584:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:8"},"nodeType":"YulFunctionCall","src":"2578:27:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:8"}]},{"nodeType":"YulAssignment","src":"2622:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:8"},"nodeType":"YulFunctionCall","src":"2633:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:8"},"nodeType":"YulFunctionCall","src":"2627:27:8"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:8"}]},{"nodeType":"YulAssignment","src":"2671:41:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:8"},"nodeType":"YulFunctionCall","src":"2690:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:8"},"nodeType":"YulFunctionCall","src":"2684:27:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:8"},"nodeType":"YulFunctionCall","src":"2676:36:8"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1320,"isOffset":false,"isSlot":false,"src":"2573:1:8","valueSize":1},{"declaration":1323,"isOffset":false,"isSlot":false,"src":"2622:1:8","valueSize":1},{"declaration":1307,"isOffset":false,"isSlot":false,"src":"2588:9:8","valueSize":1},{"declaration":1307,"isOffset":false,"isSlot":false,"src":"2637:9:8","valueSize":1},{"declaration":1307,"isOffset":false,"isSlot":false,"src":"2694:9:8","valueSize":1},{"declaration":1326,"isOffset":false,"isSlot":false,"src":"2671:1:8","valueSize":1}],"id":1328,"nodeType":"InlineAssembly","src":"2546:180:8"},{"expression":{"arguments":[{"id":1330,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2757:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1331,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2763:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1332,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"2766:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1333,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2769:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1329,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1348,1422,1516],"referencedDeclaration":1516,"src":"2746:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1314,"id":1335,"nodeType":"Return","src":"2739:32:8"}]}}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"1087:1053:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:8","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"hash","nameLocation":"2173:4:8","nodeType":"VariableDeclaration","scope":1348,"src":"2165:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"signature","nameLocation":"2192:9:8","nodeType":"VariableDeclaration","scope":1348,"src":"2179:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1306,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:8"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"2226:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"2235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"RecoverError","nameLocations":["2235:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"2235:12:8"},"referencedDeclaration":1258,"src":"2235:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:8"},"scope":1614,"src":"2145:730:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"3748:140:8","statements":[{"assignments":[1359,1362],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:8","nodeType":"VariableDeclaration","scope":1374,"src":"3759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"error","nameLocation":"3791:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"3778:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"RecoverError","nameLocations":["3778:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"3778:12:8"},"referencedDeclaration":1258,"src":"3778:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1367,"initialValue":{"arguments":[{"id":1364,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3811:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1365,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3817:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1363,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1348,1422,1516],"referencedDeclaration":1348,"src":"3800:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:8"},{"expression":{"arguments":[{"id":1369,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"3849:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}],"id":1368,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3837:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1258_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"3837:18:8"},{"expression":{"id":1372,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"3872:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1357,"id":1373,"nodeType":"Return","src":"3865:16:8"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2881:775:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:8","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"hash","nameLocation":"3686:4:8","nodeType":"VariableDeclaration","scope":1375,"src":"3678:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"signature","nameLocation":"3705:9:8","nodeType":"VariableDeclaration","scope":1375,"src":"3692:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:8"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"3739:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:8"},"scope":1614,"src":"3661:227:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"4245:203:8","statements":[{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"s","nameLocation":"4263:1:8","nodeType":"VariableDeclaration","scope":1421,"src":"4255:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1398,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4267:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:8","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:8"},{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"v","nameLocation":"4363:1:8","nodeType":"VariableDeclaration","scope":1421,"src":"4357:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1399,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1413,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1405,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4382:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:8","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1401,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:8","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:8"},{"expression":{"arguments":[{"id":1415,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4427:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1416,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"4433:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1417,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4436:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1418,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"4439:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1414,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1348,1422,1516],"referencedDeclaration":1516,"src":"4416:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1389,"id":1420,"nodeType":"Return","src":"4409:32:8"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3894:243:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:8","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"hash","nameLocation":"4170:4:8","nodeType":"VariableDeclaration","scope":1422,"src":"4162:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"r","nameLocation":"4184:1:8","nodeType":"VariableDeclaration","scope":1422,"src":"4176:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"vs","nameLocation":"4195:2:8","nodeType":"VariableDeclaration","scope":1422,"src":"4187:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:8"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"4222:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"4231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1387,"nodeType":"UserDefinedTypeName","pathNode":{"id":1386,"name":"RecoverError","nameLocations":["4231:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"4231:12:8"},"referencedDeclaration":1258,"src":"4231:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:8"},"scope":1614,"src":"4142:306:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"4699:136:8","statements":[{"assignments":[1435,1438],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:8","nodeType":"VariableDeclaration","scope":1451,"src":"4710:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"error","nameLocation":"4742:5:8","nodeType":"VariableDeclaration","scope":1451,"src":"4729:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1437,"nodeType":"UserDefinedTypeName","pathNode":{"id":1436,"name":"RecoverError","nameLocations":["4729:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"4729:12:8"},"referencedDeclaration":1258,"src":"4729:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1444,"initialValue":{"arguments":[{"id":1440,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4762:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1441,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"4768:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1442,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4771:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1439,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1348,1422,1516],"referencedDeclaration":1422,"src":"4751:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:8"},{"expression":{"arguments":[{"id":1446,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4796:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}],"id":1445,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"4784:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1258_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"4784:18:8"},{"expression":{"id":1449,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4819:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1433,"id":1450,"nodeType":"Return","src":"4812:16:8"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"4454:154:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:8","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"hash","nameLocation":"4638:4:8","nodeType":"VariableDeclaration","scope":1452,"src":"4630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"r","nameLocation":"4652:1:8","nodeType":"VariableDeclaration","scope":1452,"src":"4644:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"vs","nameLocation":"4663:2:8","nodeType":"VariableDeclaration","scope":1452,"src":"4655:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:8"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"4690:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:8"},"scope":1614,"src":"4613:222:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"5120:1345:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1471,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6016:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:8","typeDescriptions":{}}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"6004:161:8","trueBody":{"id":1483,"nodeType":"Block","src":"6089:76:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:8","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1479,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6123:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"6123:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"id":1481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1468,"id":1482,"nodeType":"Return","src":"6103:51:8"}]}},{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"signer","nameLocation":"6267:6:8","nodeType":"VariableDeclaration","scope":1515,"src":"6259:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[{"id":1488,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6286:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1489,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6292:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1490,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"6295:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1491,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"6298:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1487,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"6314:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:8","typeDescriptions":{}}},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"6310:101:8","trueBody":{"id":1508,"nodeType":"Block","src":"6336:75:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1504,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6370:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"6370:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"id":1506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1468,"id":1507,"nodeType":"Return","src":"6350:50:8"}]}},{"expression":{"components":[{"id":1510,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"6429:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1511,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6437:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1258_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"6437:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1468,"id":1514,"nodeType":"Return","src":"6421:37:8"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"4841:163:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:8","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"hash","nameLocation":"5037:4:8","nodeType":"VariableDeclaration","scope":1516,"src":"5029:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"v","nameLocation":"5049:1:8","nodeType":"VariableDeclaration","scope":1516,"src":"5043:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1456,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"r","nameLocation":"5060:1:8","nodeType":"VariableDeclaration","scope":1516,"src":"5052:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"s","nameLocation":"5071:1:8","nodeType":"VariableDeclaration","scope":1516,"src":"5063:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:8"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"5097:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1466,"nodeType":"UserDefinedTypeName","pathNode":{"id":1465,"name":"RecoverError","nameLocations":["5106:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"5106:12:8"},"referencedDeclaration":1258,"src":"5106:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:8"},"scope":1614,"src":"5009:1456:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"6692:138:8","statements":[{"assignments":[1531,1534],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:8","nodeType":"VariableDeclaration","scope":1548,"src":"6703:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"error","nameLocation":"6735:5:8","nodeType":"VariableDeclaration","scope":1548,"src":"6722:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1533,"nodeType":"UserDefinedTypeName","pathNode":{"id":1532,"name":"RecoverError","nameLocations":["6722:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1258,"src":"6722:12:8"},"referencedDeclaration":1258,"src":"6722:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1541,"initialValue":{"arguments":[{"id":1536,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"6755:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1537,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"6761:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1538,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"6764:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1539,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"6767:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1535,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1348,1422,1516],"referencedDeclaration":1516,"src":"6744:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1258_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:8"},{"expression":{"arguments":[{"id":1543,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"6791:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1258","typeString":"enum ECDSA.RecoverError"}],"id":1542,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"6779:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1258_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"6779:18:8"},{"expression":{"id":1546,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"6814:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1529,"id":1547,"nodeType":"Return","src":"6807:16:8"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"6471:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:8","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"hash","nameLocation":"6623:4:8","nodeType":"VariableDeclaration","scope":1549,"src":"6615:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"v","nameLocation":"6635:1:8","nodeType":"VariableDeclaration","scope":1549,"src":"6629:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1520,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"r","nameLocation":"6646:1:8","nodeType":"VariableDeclaration","scope":1549,"src":"6638:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"s","nameLocation":"6657:1:8","nodeType":"VariableDeclaration","scope":1549,"src":"6649:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:8"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"6683:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:8"},"scope":1614,"src":"6598:232:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1558,"nodeType":"Block","src":"7206:310:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:8","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:8","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:8"},"nodeType":"YulFunctionCall","src":"7376:48:8"},"nodeType":"YulExpressionStatement","src":"7376:48:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:8","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:8"},"nodeType":"YulFunctionCall","src":"7437:18:8"},"nodeType":"YulExpressionStatement","src":"7437:18:8"},{"nodeType":"YulAssignment","src":"7468:32:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:8","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:8"},"nodeType":"YulFunctionCall","src":"7479:21:8"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1552,"isOffset":false,"isSlot":false,"src":"7450:4:8","valueSize":1},{"declaration":1555,"isOffset":false,"isSlot":false,"src":"7468:7:8","valueSize":1}],"id":1557,"nodeType":"InlineAssembly","src":"7353:157:8"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"6836:279:8","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1559,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:8","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"hash","nameLocation":"7160:4:8","nodeType":"VariableDeclaration","scope":1559,"src":"7152:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:8"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"message","nameLocation":"7197:7:8","nodeType":"VariableDeclaration","scope":1559,"src":"7189:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:8"},"scope":1614,"src":"7120:396:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"7881:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"7976:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:8","memberName":"length","nodeType":"MemberAccess","src":"7976:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1571,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7959:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1248_$","typeString":"type(library Strings)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"7959:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1576,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"7987:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1568,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1567,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1566,"id":1579,"nodeType":"Return","src":"7891:99:8"}]},"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"7522:274:8","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:8","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"s","nameLocation":"7846:1:8","nodeType":"VariableDeclaration","scope":1581,"src":"7833:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:8"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"7872:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:8"},"scope":1614,"src":"7801:196:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"8443:290:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:8"},"nodeType":"YulFunctionCall","src":"8530:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:8"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:8","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:8"},"nodeType":"YulFunctionCall","src":"8554:23:8"},"nodeType":"YulExpressionStatement","src":"8554:23:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:8","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:8"},"nodeType":"YulFunctionCall","src":"8597:14:8"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:8"},"nodeType":"YulFunctionCall","src":"8590:39:8"},"nodeType":"YulExpressionStatement","src":"8590:39:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:8","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:8"},"nodeType":"YulFunctionCall","src":"8649:14:8"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:8"},"nodeType":"YulFunctionCall","src":"8642:34:8"},"nodeType":"YulExpressionStatement","src":"8642:34:8"},{"nodeType":"YulAssignment","src":"8689:28:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:8","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:8"},"nodeType":"YulFunctionCall","src":"8697:20:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1589,"isOffset":false,"isSlot":false,"src":"8689:4:8","valueSize":1},{"declaration":1584,"isOffset":false,"isSlot":false,"src":"8613:15:8","valueSize":1},{"declaration":1586,"isOffset":false,"isSlot":false,"src":"8665:10:8","valueSize":1}],"id":1591,"nodeType":"InlineAssembly","src":"8496:231:8"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"8003:328:8","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:8","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:8","nodeType":"VariableDeclaration","scope":1593,"src":"8361:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:8","nodeType":"VariableDeclaration","scope":1593,"src":"8386:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:8"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"data","nameLocation":"8437:4:8","nodeType":"VariableDeclaration","scope":1593,"src":"8429:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:8"},"scope":1614,"src":"8336:397:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"9048:80:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1607,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9104:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1608,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1602,"id":1611,"nodeType":"Return","src":"9058:63:8"}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"8739:193:8","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:8","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"validator","nameLocation":"8986:9:8","nodeType":"VariableDeclaration","scope":1613,"src":"8978:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"data","nameLocation":"9010:4:8","nodeType":"VariableDeclaration","scope":1613,"src":"8997:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1597,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:8"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"9039:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:8"},"scope":1614,"src":"8937:191:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1615,"src":"369:8761:8","usedErrors":[]}],"src":"112:9019:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2480]},"id":2481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1616,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2480,"linearizedBaseContracts":[2480],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1621,"members":[{"id":1618,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1619,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1620,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1638,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1632,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1630,"id":1637,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1639,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1639,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2480,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1648,"id":1655,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1657,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1657,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2480,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1679,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1668,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1666,"id":1678,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1680,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1680,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1680,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2480,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1689,"id":1703,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1705,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1705,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2480,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1827,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1826,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1826,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1719,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[1721],"declarations":[{"constant":false,"id":1721,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1826,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1722,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1718,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":1708,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":1708,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":1723,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1732,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":1731,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1716,"id":1730,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1735,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[1741],"declarations":[{"constant":false,"id":1741,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1826,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1742,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1712,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":1741,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":1741,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":1741,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":1708,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":1743,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1826,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":1747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1712,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":1712,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":1718,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":1754,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1755,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1757,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1760,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1826,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1769,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1773,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1777,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1789,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1793,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1797,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1804,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1805,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1810,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1813,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1716,"id":1825,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1828,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1828,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1828,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1828,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1828,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":2480,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":1871,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1850,"initialValue":{"arguments":[{"id":1846,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1847,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1848,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1845,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1828,1872],"referencedDeclaration":1828,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1852,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1621_$","typeString":"type(enum Math.Rounding)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1619,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1856,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1857,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1858,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1855,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1868,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":1867,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":1869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1870,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":1872,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":1872,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":1872,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":1872,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"typeName":{"id":1837,"nodeType":"UserDefinedTypeName","pathNode":{"id":1836,"name":"Rounding","nameLocations":["6071:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"6071:8:9"},"referencedDeclaration":1621,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":2480,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1983,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1886,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":1885,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1879,"id":1884,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":1983,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1897,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1890,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2152,2188],"referencedDeclaration":2152,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":1982,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1941,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":1976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1975,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1981,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":1984,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":2480,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2019,"nodeType":"Block","src":"8348:161:9","statements":[{"id":2018,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":2018,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2000,"initialValue":{"arguments":[{"id":1998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1984,2020],"referencedDeclaration":1984,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2003,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1621_$","typeString":"type(enum Math.Rounding)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1619,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1994,"id":2017,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":2020,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":2020,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"typeName":{"id":1989,"nodeType":"UserDefinedTypeName","pathNode":{"id":1988,"name":"Rounding","nameLocations":["8297:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"8297:8:9"},"referencedDeclaration":1621,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":2480,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":2151,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"hexValue":"30","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":2148,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":2045,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":2060,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2076,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":2075,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":2090,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2106,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":2105,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2121,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":2120,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2119,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":2135,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2147,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":2146,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":2149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2027,"id":2150,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":2152,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":2480,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"9849:165:9","statements":[{"id":2186,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":2186,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"initialValue":{"arguments":[{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2165,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2152,2188],"referencedDeclaration":2152,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2171,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1621_$","typeString":"type(enum Math.Rounding)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1619,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2162,"id":2185,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":2188,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":2188,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"typeName":{"id":2157,"nodeType":"UserDefinedTypeName","pathNode":{"id":2156,"name":"Rounding","nameLocations":["9798:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"9798:8:9"},"referencedDeclaration":1621,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":2480,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":2316,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2199,"initialValue":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":2313,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":2215,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2233,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":2232,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":2249,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2267,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":2266,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":2283,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2301,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":2300,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2295,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2312,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":2311,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2310,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":2314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2195,"id":2315,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":2317,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":2480,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"11290:167:9","statements":[{"id":2351,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[2329],"declarations":[{"constant":false,"id":2329,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":2351,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2333,"initialValue":{"arguments":[{"id":2331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2330,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2317,2353],"referencedDeclaration":2317,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2336,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1621_$","typeString":"type(enum Math.Rounding)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1619,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2327,"id":2350,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":2353,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":2353,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"typeName":{"id":2322,"nodeType":"UserDefinedTypeName","pathNode":{"id":2321,"name":"Rounding","nameLocations":["11239:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"11239:8:9"},"referencedDeclaration":1621,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":2480,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2439,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[2362],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":2439,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"hexValue":"30","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":2436,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":2378,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":2393,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":2408,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":2423,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":2434,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":2437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2360,"id":2438,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":2440,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2440,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":2480,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"12608:174:9","statements":[{"id":2477,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":2477,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2456,"initialValue":{"arguments":[{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2453,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2440,2479],"referencedDeclaration":2440,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2459,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1621_$","typeString":"type(enum Math.Rounding)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1619,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2450,"id":2476,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":2479,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":2479,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"},"typeName":{"id":2445,"nodeType":"UserDefinedTypeName","pathNode":{"id":2444,"name":"Rounding","nameLocations":["12557:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"12557:8:9"},"referencedDeclaration":1621,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1621","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":2480,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2481,"src":"202:12582:9","usedErrors":[]}],"src":"103:12682:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2585]},"id":2586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"134:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2585,"linearizedBaseContracts":[2585],"name":"SignedMath","nameLocation":"223:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2500,"nodeType":"Block","src":"375:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"392:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"396:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"404:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:10","trueExpression":{"id":2496,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"400:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2492,"id":2499,"nodeType":"Return","src":"385:20:10"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"240:66:10","text":" @dev Returns the largest of two signed numbers."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:10","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"a","nameLocation":"331:1:10","nodeType":"VariableDeclaration","scope":2501,"src":"324:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2485,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"b","nameLocation":"341:1:10","nodeType":"VariableDeclaration","scope":2501,"src":"334:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2487,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:10"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"367:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2490,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:10"},"scope":2585,"src":"311:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2518,"nodeType":"Block","src":"554:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"571:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"575:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"583:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:10","trueExpression":{"id":2514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"579:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2510,"id":2517,"nodeType":"Return","src":"564:20:10"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"418:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:10","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"a","nameLocation":"510:1:10","nodeType":"VariableDeclaration","scope":2519,"src":"503:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2503,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"b","nameLocation":"520:1:10","nodeType":"VariableDeclaration","scope":2519,"src":"513:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2505,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:10"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"546:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2508,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:10"},"scope":2585,"src":"490:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"796:162:10","statements":[{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"x","nameLocation":"865:1:10","nodeType":"VariableDeclaration","scope":2562,"src":"858:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2529,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2543,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"870:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"874:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"881:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"885:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"930:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:10","typeDescriptions":{}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2545,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:10","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"944:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"948:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2528,"id":2561,"nodeType":"Return","src":"903:48:10"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"597:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:10","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"a","nameLocation":"752:1:10","nodeType":"VariableDeclaration","scope":2563,"src":"745:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2521,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"b","nameLocation":"762:1:10","nodeType":"VariableDeclaration","scope":2563,"src":"755:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2523,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:10"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"788:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2526,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:10"},"scope":2585,"src":"728:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"1102:158:10","statements":[{"id":2582,"nodeType":"UncheckedBlock","src":"1112:142:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"1227:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:10","subExpression":{"id":2577,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"1241:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:10","trueExpression":{"id":2576,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"1236:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2570,"id":2581,"nodeType":"Return","src":"1212:31:10"}]}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"964:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:10","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"n","nameLocation":"1067:1:10","nodeType":"VariableDeclaration","scope":2584,"src":"1060:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2565,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:10"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"1093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:10"},"scope":2585,"src":"1047:213:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2586,"src":"215:1047:10","usedErrors":[]}],"src":"109:1154:10"},"id":10},"contracts/MecenateVault.sol":{"ast":{"absolutePath":"contracts/MecenateVault.sol","exportedSymbols":{"Address":[997],"Context":[1019],"IERC20":[255],"IMecenateFeedFactory":[3988],"IMecenateVerifier":[4046],"MecenateVault":[3850],"Ownable":[112],"ReentrancyGuard":[177]},"id":3851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2587,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"282:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":256,"src":"307:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":178,"src":"364:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":113,"src":"427:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":2591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":998,"src":"480:51:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateVerifier.sol","file":"./interfaces/IMecenateVerifier.sol","id":2592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":4047,"src":"532:44:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateFeedFactory.sol","file":"./interfaces/IMecenateFeedFactory.sol","id":2593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3851,"sourceUnit":3989,"src":"577:47:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2594,"name":"Ownable","nameLocations":["652:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"652:7:11"},"id":2595,"nodeType":"InheritanceSpecifier","src":"652:7:11"},{"baseName":{"id":2596,"name":"ReentrancyGuard","nameLocations":["661:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"661:15:11"},"id":2597,"nodeType":"InheritanceSpecifier","src":"661:15:11"}],"canonicalName":"MecenateVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3850,"linearizedBaseContracts":[3850,177,112,1019],"name":"MecenateVault","nameLocation":"635:13:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2600,"libraryName":{"id":2598,"name":"Address","nameLocations":["689:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"689:7:11"},"nodeType":"UsingForDirective","src":"683:26:11","typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":2603,"libraryName":{"id":2601,"name":"Address","nameLocations":["720:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"720:7:11"},"nodeType":"UsingForDirective","src":"714:34:11","typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"732:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"constant":false,"id":2607,"mutability":"mutable","name":"ethDeposits","nameLocation":"790:11:11","nodeType":"VariableDeclaration","scope":3850,"src":"754:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2606,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"762:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"754:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2613,"mutability":"mutable","name":"tokenDeposits","nameLocation":"863:13:11","nodeType":"VariableDeclaration","scope":3850,"src":"807:69:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"},"typeName":{"id":2612,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"815:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"807:47:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2611,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"826:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"functionSelector":"ad5c4648","id":2615,"mutability":"mutable","name":"WETH","nameLocation":"898:4:11","nodeType":"VariableDeclaration","scope":3850,"src":"883:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e0bab4c4","id":2617,"mutability":"mutable","name":"DAI","nameLocation":"923:3:11","nodeType":"VariableDeclaration","scope":3850,"src":"908:18:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"89a30271","id":2619,"mutability":"mutable","name":"USDC","nameLocation":"947:4:11","nodeType":"VariableDeclaration","scope":3850,"src":"932:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5262712f","id":2621,"mutability":"mutable","name":"MUSE","nameLocation":"972:4:11","nodeType":"VariableDeclaration","scope":3850,"src":"957:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cf695688","id":2623,"mutability":"mutable","name":"verifierContract","nameLocation":"997:16:11","nodeType":"VariableDeclaration","scope":3850,"src":"982:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"de11c94a","id":2625,"mutability":"mutable","name":"factoryContract","nameLocation":"1034:15:11","nodeType":"VariableDeclaration","scope":3850,"src":"1019:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3f16a3bb","id":2627,"mutability":"mutable","name":"mecenateBay","nameLocation":"1070:11:11","nodeType":"VariableDeclaration","scope":3850,"src":"1055:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"1055:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"139e3c54","id":2629,"mutability":"mutable","name":"mecenateUsers","nameLocation":"1102:13:11","nodeType":"VariableDeclaration","scope":3850,"src":"1087:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2631,"mutability":"mutable","name":"relayer","nameLocation":"1137:7:11","nodeType":"VariableDeclaration","scope":3850,"src":"1121:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"functionSelector":"85e66df4","id":2634,"mutability":"mutable","name":"relayerFeePercentage","nameLocation":"1166:20:11","nodeType":"VariableDeclaration","scope":3850,"src":"1151:41:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":true,"functionSelector":"6961b361","id":2637,"mutability":"constant","name":"MAX_RELAYER_FEE_PERCENTAGE","nameLocation":"1222:26:11","nodeType":"VariableDeclaration","scope":3850,"src":"1198:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1251:3:11","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"anonymous":false,"eventSelector":"5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b","id":2645,"name":"MetaTransactionExecuted","nameLocation":"1267:23:11","nodeType":"EventDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"1308:11:11","nodeType":"VariableDeclaration","scope":2645,"src":"1300:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2641,"indexed":false,"mutability":"mutable","name":"relayerAddress","nameLocation":"1337:14:11","nodeType":"VariableDeclaration","scope":2645,"src":"1329:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"indexed":false,"mutability":"mutable","name":"functionSignature","nameLocation":"1367:17:11","nodeType":"VariableDeclaration","scope":2645,"src":"1361:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"1361:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1290:100:11"},"src":"1261:130:11"},{"anonymous":false,"eventSelector":"a5ecd7cf58f2f1e36e387c6442f5dea0a47926654ed49e6d1d9eb06d04064244","id":2655,"name":"Withdrawn","nameLocation":"1403:9:11","nodeType":"EventDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"indexed":true,"mutability":"mutable","name":"commitment","nameLocation":"1438:10:11","nodeType":"VariableDeclaration","scope":2655,"src":"1422:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1422:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2649,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1466:6:11","nodeType":"VariableDeclaration","scope":2655,"src":"1458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"1489:6:11","nodeType":"VariableDeclaration","scope":2655,"src":"1482:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2650,"name":"string","nodeType":"ElementaryTypeName","src":"1482:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2653,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1513:5:11","nodeType":"VariableDeclaration","scope":2655,"src":"1505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1412:112:11"},"src":"1397:128:11"},{"body":{"id":2666,"nodeType":"Block","src":"1554:73:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1572:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1576:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1572:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2660,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1586:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1572:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742072656c61796572","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1595:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46","typeString":"literal_string \"Not relayer\""},"value":"Not relayer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46","typeString":"literal_string \"Not relayer\""}],"id":2657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1564:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"1564:45:11"},{"id":2665,"nodeType":"PlaceholderStatement","src":"1619:1:11"}]},"id":2667,"name":"onlyRelayer","nameLocation":"1540:11:11","nodeType":"ModifierDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[],"src":"1551:2:11"},"src":"1531:96:11","virtual":false,"visibility":"internal"},{"body":{"id":2700,"nodeType":"Block","src":"1808:201:11","statements":[{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2680,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1818:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2681,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"1837:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1818:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2683,"nodeType":"ExpressionStatement","src":"1818:36:11"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"factoryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1864:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2685,"name":"_factoryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1882:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1864:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2687,"nodeType":"ExpressionStatement","src":"1864:34:11"},{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"mecenateBay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"1908:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2689,"name":"_bayContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1922:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1908:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2691,"nodeType":"ExpressionStatement","src":"1908:26:11"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"mecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"1944:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2693,"name":"_usersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1960:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1944:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2695,"nodeType":"ExpressionStatement","src":"1944:30:11"},{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2696,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1984:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2697,"name":"_relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"1994:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1984:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2699,"nodeType":"ExpressionStatement","src":"1984:18:11"}]},"id":2701,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"_verifierContract","nameLocation":"1662:17:11","nodeType":"VariableDeclaration","scope":2701,"src":"1654:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"_factoryContract","nameLocation":"1697:16:11","nodeType":"VariableDeclaration","scope":2701,"src":"1689:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"_bayContract","nameLocation":"1731:12:11","nodeType":"VariableDeclaration","scope":2701,"src":"1723:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"_usersContract","nameLocation":"1761:14:11","nodeType":"VariableDeclaration","scope":2701,"src":"1753:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"1753:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"_relayer","nameLocation":"1793:8:11","nodeType":"VariableDeclaration","scope":2701,"src":"1785:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1644:163:11"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"1808:0:11"},"scope":3850,"src":"1633:376:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2730,"nodeType":"Block","src":"2150:93:11","statements":[{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2160:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2715,"name":"_WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"2167:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2160:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2717,"nodeType":"ExpressionStatement","src":"2160:12:11"},{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2718,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"2182:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2719,"name":"_DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"2188:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2182:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2721,"nodeType":"ExpressionStatement","src":"2182:10:11"},{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2202:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2723,"name":"_USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"2209:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2202:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2725,"nodeType":"ExpressionStatement","src":"2202:12:11"},{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2224:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2727,"name":"_MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"2231:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2224:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2729,"nodeType":"ExpressionStatement","src":"2224:12:11"}]},"functionSelector":"537820bf","id":2731,"implemented":true,"kind":"function","modifiers":[{"id":2712,"kind":"modifierInvocation","modifierName":{"id":2711,"name":"onlyOwner","nameLocations":["2140:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2140:9:11"},"nodeType":"ModifierInvocation","src":"2140:9:11"}],"name":"setTokens","nameLocation":"2024:9:11","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"_WETH","nameLocation":"2051:5:11","nodeType":"VariableDeclaration","scope":2731,"src":"2043:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"_DAI","nameLocation":"2074:4:11","nodeType":"VariableDeclaration","scope":2731,"src":"2066:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"_USDC","nameLocation":"2096:5:11","nodeType":"VariableDeclaration","scope":2731,"src":"2088:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"_MUSE","nameLocation":"2119:5:11","nodeType":"VariableDeclaration","scope":2731,"src":"2111:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2033:97:11"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"2150:0:11"},"scope":3850,"src":"2015:228:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2749,"nodeType":"Block","src":"2342:213:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"_newRelayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2373:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2740,"name":"MAX_RELAYER_FEE_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2401:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2373:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e65772072656c61796572206665652070657263656e7461676520697320746f6f2068696768","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2441:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1541acf18b8786f33a6cf683142b90dfd08144feea70bdc7db6a1d051be243c9","typeString":"literal_string \"New relayer fee percentage is too high\""},"value":"New relayer fee percentage is too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1541acf18b8786f33a6cf683142b90dfd08144feea70bdc7db6a1d051be243c9","typeString":"literal_string \"New relayer fee percentage is too high\""}],"id":2738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2352:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2352:139:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2744,"nodeType":"ExpressionStatement","src":"2352:139:11"},{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"relayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"2501:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2746,"name":"_newRelayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2524:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2748,"nodeType":"ExpressionStatement","src":"2501:47:11"}]},"functionSelector":"17d026e6","id":2750,"implemented":true,"kind":"function","modifiers":[{"id":2736,"kind":"modifierInvocation","modifierName":{"id":2735,"name":"onlyOwner","nameLocations":["2332:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2332:9:11"},"nodeType":"ModifierInvocation","src":"2332:9:11"}],"name":"changeRelayerFee","nameLocation":"2258:16:11","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"_newRelayerFeePercentage","nameLocation":"2292:24:11","nodeType":"VariableDeclaration","scope":2750,"src":"2284:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2274:48:11"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"2342:0:11"},"scope":3850,"src":"2249:306:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2764,"nodeType":"Block","src":"2635:120:11","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2757,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"2706:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2759,"indexExpression":{"id":2758,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2718:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2706:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2739:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2743:5:11","memberName":"value","nodeType":"MemberAccess","src":"2739:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2706:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"2706:42:11"}]},"functionSelector":"d68d9d4e","id":2765,"implemented":true,"kind":"function","modifiers":[{"id":2755,"kind":"modifierInvocation","modifierName":{"id":2754,"name":"nonReentrant","nameLocations":["2622:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"2622:12:11"},"nodeType":"ModifierInvocation","src":"2622:12:11"}],"name":"depositETH","nameLocation":"2570:10:11","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"2589:16:11","nodeType":"VariableDeclaration","scope":2765,"src":"2581:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2581:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2580:26:11"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[],"src":"2635:0:11"},"scope":3850,"src":"2561:194:11","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2851,"nodeType":"Block","src":"2908:774:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2926:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2944:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2936:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"2936:7:11","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2926:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616464726573732063616e6e6f742062652030","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""},"value":"Token address cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2918:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2918:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2785,"nodeType":"ExpressionStatement","src":"2918:58:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2994:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2994:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3007:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2986:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"2986:56:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3073:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2795,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3083:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3073:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3091:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2798,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3101:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3091:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3073:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3108:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2802,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"3118:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3108:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3073:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3126:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2806,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"3136:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3126:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3073:67:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3154:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":2793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3052:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:133:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2811,"nodeType":"ExpressionStatement","src":"3052:133:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2813,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3216:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":2815,"indexExpression":{"id":2814,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"3230:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3216:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2817,"indexExpression":{"id":2816,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3248:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3216:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2818,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"3259:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3216:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e6365","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""},"value":"Not enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""}],"id":2812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3195:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3195:115:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"3195:115:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2828,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"3387:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2825,"name":"factoryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"3363:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2824,"name":"IMecenateFeedFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"3342:20:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateFeedFactory_$3988_$","typeString":"type(contract IMecenateFeedFactory)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeedFactory_$3988","typeString":"contract IMecenateFeedFactory"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3380:6:11","memberName":"isFeed","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"3342:44:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2830,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"3413:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2831,"name":"mecenateBay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3422:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3413:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3342:91:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612066656564","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3447:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_315658e23eb6c2803170c3d0908e08d34e995b14b1d757e78e37b9095493b94f","typeString":"literal_string \"Not a feed\""},"value":"Not a feed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_315658e23eb6c2803170c3d0908e08d34e995b14b1d757e78e37b9095493b94f","typeString":"literal_string \"Not a feed\""}],"id":2823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3321:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3321:148:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2836,"nodeType":"ExpressionStatement","src":"3321:148:11"},{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"token","nameLocation":"3573:5:11","nodeType":"VariableDeclaration","scope":2851,"src":"3566:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"IERC20","nameLocations":["3566:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"3566:6:11"},"referencedDeclaration":255,"src":"3566:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2843,"initialValue":{"arguments":[{"id":2841,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3588:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2840,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3581:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3566:29:11"},{"expression":{"arguments":[{"id":2847,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"3660:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2848,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"3667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3646:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3652:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"3646:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"ExpressionStatement","src":"3646:29:11"}]},"functionSelector":"6ff61585","id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"approveTokenToFeed","nameLocation":"2770:18:11","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"_token","nameLocation":"2806:6:11","nodeType":"VariableDeclaration","scope":2852,"src":"2798:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"2798:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"_amount","nameLocation":"2830:7:11","nodeType":"VariableDeclaration","scope":2852,"src":"2822:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"_feed","nameLocation":"2855:5:11","nodeType":"VariableDeclaration","scope":2852,"src":"2847:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"2878:16:11","nodeType":"VariableDeclaration","scope":2852,"src":"2870:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2870:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2788:112:11"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"2908:0:11"},"scope":3850,"src":"2761:921:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2926,"nodeType":"Block","src":"3808:671:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"3826:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3844:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3836:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"3836:7:11","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3836:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3826:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616464726573732063616e6e6f742062652030","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3848:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""},"value":"Token address cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""}],"id":2861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3818:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"ExpressionStatement","src":"3818:58:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"3895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3905:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3895:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3908:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3887:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2877,"nodeType":"ExpressionStatement","src":"3887:56:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"3975:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2880,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3985:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3975:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"3993:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2883,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4003:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3993:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3975:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4010:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2887,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4020:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4010:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3975:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4028:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2891,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"4038:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4028:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3975:67:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4056:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":2878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:133:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2896,"nodeType":"ExpressionStatement","src":"3954:133:11"},{"assignments":[2899],"declarations":[{"constant":false,"id":2899,"mutability":"mutable","name":"token","nameLocation":"4191:5:11","nodeType":"VariableDeclaration","scope":2926,"src":"4184:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":2898,"nodeType":"UserDefinedTypeName","pathNode":{"id":2897,"name":"IERC20","nameLocations":["4184:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"4184:6:11"},"referencedDeclaration":255,"src":"4184:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2903,"initialValue":{"arguments":[{"id":2901,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4206:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2900,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4199:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4199:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4184:29:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4264:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4268:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4264:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2911,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4284:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4276:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"4276:7:11","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2913,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2905,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4245:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4251:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":254,"src":"4245:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4245:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4313:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":2904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4224:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:122:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"4224:122:11"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2918,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4422:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":2921,"indexExpression":{"id":2919,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4436:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4422:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2922,"indexExpression":{"id":2920,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4454:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4422:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2923,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4422:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"4422:50:11"}]},"functionSelector":"84abac95","id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"3697:12:11","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"_token","nameLocation":"3727:6:11","nodeType":"VariableDeclaration","scope":2927,"src":"3719:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"3719:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"_amount","nameLocation":"3751:7:11","nodeType":"VariableDeclaration","scope":2927,"src":"3743:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3743:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"3776:16:11","nodeType":"VariableDeclaration","scope":2927,"src":"3768:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3768:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3709:89:11"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[],"src":"3808:0:11"},"scope":3850,"src":"3688:791:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3122,"nodeType":"Block","src":"4657:1945:11","statements":[{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"initialGas","nameLocation":"4675:10:11","nodeType":"VariableDeclaration","scope":3122,"src":"4667:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2946,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2944,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4688:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4667:30:11"},{"assignments":[2948,null,null,2950],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"vaultId","nameLocation":"4735:7:11","nodeType":"VariableDeclaration","scope":3122,"src":"4722:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2947,"name":"bytes","nodeType":"ElementaryTypeName","src":"4722:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},null,null,{"constant":false,"id":2950,"mutability":"mutable","name":"signedMessage","nameLocation":"4797:13:11","nodeType":"VariableDeclaration","scope":3122,"src":"4784:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4784:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2959,"initialValue":{"arguments":[{"id":2955,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"4888:20:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2956,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4926:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2957,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4947:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":2952,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4841:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2951,"name":"IMecenateVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"4823:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateVerifier_$4046_$","typeString":"type(contract IMecenateVerifier)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateVerifier_$4046","typeString":"contract IMecenateVerifier"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4859:11:11","memberName":"sismoVerify","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"4823:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view external returns (bytes memory,uint256,uint256,bytes memory)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:144:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4708:259:11"},{"assignments":[2961,2963],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"to","nameLocation":"4987:2:11","nodeType":"VariableDeclaration","scope":3122,"src":"4979:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"4979:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"nonce","nameLocation":"4999:5:11","nodeType":"VariableDeclaration","scope":3122,"src":"4991:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4991:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2973,"initialValue":{"arguments":[{"id":2966,"name":"signedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5032:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5060:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"5060:7:11","typeDescriptions":{}}},{"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5069:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5069:7:11","typeDescriptions":{}}}],"id":2971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5059:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}],"expression":{"id":2964,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5008:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5012:6:11","memberName":"decode","nodeType":"MemberAccess","src":"5008:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes32_$","typeString":"tuple(address payable,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4978:109:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"5106:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2976,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"5112:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5106:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742053616d652041646472657373","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3585a83ff0f200647deecb18d226ea7c9409e14c26b5828adea0dc4563a40b6","typeString":"literal_string \"Not Same Address\""},"value":"Not Same Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3585a83ff0f200647deecb18d226ea7c9409e14c26b5828adea0dc4563a40b6","typeString":"literal_string \"Not Same Address\""}],"id":2974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5098:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"ExpressionStatement","src":"5098:38:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"5155:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2983,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5164:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5155:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742053616d65204e6f6e6365","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5172:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""},"value":"Not Same Nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""}],"id":2981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5147:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"5147:42:11"},{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"5208:16:11","nodeType":"VariableDeclaration","scope":3122,"src":"5200:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5200:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2993,"initialValue":{"arguments":[{"id":2991,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"5237:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5227:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5200:45:11"},{"assignments":[2995],"declarations":[{"constant":false,"id":2995,"mutability":"mutable","name":"totalRequired","nameLocation":"5264:13:11","nodeType":"VariableDeclaration","scope":3122,"src":"5256:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2997,"initialValue":{"id":2996,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5256:31:11"},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2998,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"5324:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2999,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"5341:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5344:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"5341:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3001,"name":"initialGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"5355:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5341:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5324:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"5324:41:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3006,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5430:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3008,"indexExpression":{"id":3007,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5442:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5430:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3009,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"5463:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5430:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e6365","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5490:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""},"value":"Not enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""}],"id":3005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:111:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"ExpressionStatement","src":"5409:111:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3015,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5614:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3017,"indexExpression":{"id":3016,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5626:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5614:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5646:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5614:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d6d69746d656e7420646f6573206e6f74206578697374","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5649:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_25a24ede4abf32d908dbfc1014cfa48fd50620404cfd7b141e009fc312be8869","typeString":"literal_string \"Commitment does not exist\""},"value":"Commitment does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25a24ede4abf32d908dbfc1014cfa48fd50620404cfd7b141e009fc312be8869","typeString":"literal_string \"Commitment does not exist\""}],"id":3014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5606:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"ExpressionStatement","src":"5606:71:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5696:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5696:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5709:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":3023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5688:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5688:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"ExpressionStatement","src":"5688:56:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3031,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5840:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3033,"indexExpression":{"id":3032,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5852:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5840:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3034,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5873:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5840:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e6365","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5882:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""},"value":"Not enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad","typeString":"literal_string \"Not enough balance\""}],"id":3030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5832:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5832:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3038,"nodeType":"ExpressionStatement","src":"5832:71:11"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3039,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5956:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3041,"indexExpression":{"id":3040,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5968:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5956:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3042,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5989:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5956:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"5956:40:11"},{"assignments":[3046],"declarations":[{"constant":false,"id":3046,"mutability":"mutable","name":"gasUsed","nameLocation":"6015:7:11","nodeType":"VariableDeclaration","scope":3122,"src":"6007:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"6007:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3051,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"initialGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"6025:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3048,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"6038:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6025:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6007:40:11"},{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"gasCost","nameLocation":"6066:7:11","nodeType":"VariableDeclaration","scope":3122,"src":"6058:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"6076:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3055,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"6086:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6089:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"6086:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6076:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6058:39:11"},{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"relayerFee","nameLocation":"6116:10:11","nodeType":"VariableDeclaration","scope":3122,"src":"6108:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6108:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3067,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6130:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3062,"name":"relayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"6140:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6130:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6129:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6164:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6129:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6108:61:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6188:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6199:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3071,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"6209:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6199:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6188:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e636520666f7220676173","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6221:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_41d668ab771a4bad9ba1228075e1d5178447d6332f5ecfbbe35ebf3c8e5b397a","typeString":"literal_string \"Not enough balance for gas\""},"value":"Not enough balance for gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41d668ab771a4bad9ba1228075e1d5178447d6332f5ecfbbe35ebf3c8e5b397a","typeString":"literal_string \"Not enough balance for gas\""}],"id":3068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6180:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6180:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"ExpressionStatement","src":"6180:70:11"},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"newAmount","nameLocation":"6269:9:11","nodeType":"VariableDeclaration","scope":3122,"src":"6261:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"6261:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3084,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3080,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6281:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3082,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"6301:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6281:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6261:50:11"},{"assignments":[3086,null],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"result","nameLocation":"6328:6:11","nodeType":"VariableDeclaration","scope":3122,"src":"6323:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3085,"name":"bool","nodeType":"ElementaryTypeName","src":"6323:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3096,"initialValue":{"arguments":[{"hexValue":"","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6375:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3089,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"6348:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6340:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"6340:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6352:4:11","memberName":"call","nodeType":"MemberAccess","src":"6340:16:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3092,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"6364:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6340:34:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6322:56:11"},{"expression":{"arguments":[{"id":3098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"6397:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6405:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":3097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6389:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6389:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3101,"nodeType":"ExpressionStatement","src":"6389:38:11"},{"assignments":[3103,null],"declarations":[{"constant":false,"id":3103,"mutability":"mutable","name":"result2","nameLocation":"6444:7:11","nodeType":"VariableDeclaration","scope":3122,"src":"6439:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3102,"name":"bool","nodeType":"ElementaryTypeName","src":"6439:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3116,"initialValue":{"arguments":[{"hexValue":"","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6465:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6469:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6465:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6457:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"6457:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6477:4:11","memberName":"call","nodeType":"MemberAccess","src":"6457:24:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6502:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3111,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"6512:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6502:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6457:75:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6438:98:11"},{"expression":{"arguments":[{"id":3118,"name":"result2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"6555:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564207769746820676173","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6564:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731423e464d9b87b26ca3fef841ae3d35dc2db6257232fd683c97094fdfae28a","typeString":"literal_string \"ETH transfer failed with gas\""},"value":"ETH transfer failed with gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_731423e464d9b87b26ca3fef841ae3d35dc2db6257232fd683c97094fdfae28a","typeString":"literal_string \"ETH transfer failed with gas\""}],"id":3117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6547:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6547:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3121,"nodeType":"ExpressionStatement","src":"6547:48:11"}]},"functionSelector":"10d5700e","id":3123,"implemented":true,"kind":"function","modifiers":[{"id":2938,"kind":"modifierInvocation","modifierName":{"id":2937,"name":"onlyRelayer","nameLocations":["4632:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"4632:11:11"},"nodeType":"ModifierInvocation","src":"4632:11:11"},{"id":2940,"kind":"modifierInvocation","modifierName":{"id":2939,"name":"nonReentrant","nameLocations":["4644:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"4644:12:11"},"nodeType":"ModifierInvocation","src":"4644:12:11"}],"name":"withdrawETH","nameLocation":"4494:11:11","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"_amount","nameLocation":"4523:7:11","nodeType":"VariableDeclaration","scope":3123,"src":"4515:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2931,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"4553:20:11","nodeType":"VariableDeclaration","scope":3123,"src":"4540:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4540:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"_to","nameLocation":"4591:3:11","nodeType":"VariableDeclaration","scope":3123,"src":"4583:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"4583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"_nonce","nameLocation":"4612:6:11","nodeType":"VariableDeclaration","scope":3123,"src":"4604:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4604:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4505:119:11"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[],"src":"4657:0:11"},"scope":3850,"src":"4485:2117:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3226,"nodeType":"Block","src":"6817:647:11","statements":[{"assignments":[3141],"declarations":[{"constant":false,"id":3141,"mutability":"mutable","name":"commitment","nameLocation":"6835:10:11","nodeType":"VariableDeclaration","scope":3226,"src":"6827:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6827:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3148,"initialValue":{"arguments":[{"arguments":[{"id":3145,"name":"_secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"6875:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6858:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6862:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"6858:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6858:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3142,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6848:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6848:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6827:57:11"},{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"amount","nameLocation":"6902:6:11","nodeType":"VariableDeclaration","scope":3226,"src":"6894:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"6894:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3151,"nodeType":"VariableDeclarationStatement","src":"6894:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"6923:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6941:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6933:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"6933:7:11","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6923:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3217,"nodeType":"Block","src":"7159:237:11","statements":[{"expression":{"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7173:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":3187,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7182:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3189,"indexExpression":{"id":3188,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"7196:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7182:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3191,"indexExpression":{"id":3190,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7208:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7182:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7173:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3193,"nodeType":"ExpressionStatement","src":"7173:42:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7237:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7246:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7237:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20546f6b656e206465706f73697420666f72207468697320736563726574","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7249:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d6e6f0fdb0864e34059e778be940569e002706ca2ba506922efe65d660432f1","typeString":"literal_string \"No Token deposit for this secret\""},"value":"No Token deposit for this secret"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d6e6f0fdb0864e34059e778be940569e002706ca2ba506922efe65d660432f1","typeString":"literal_string \"No Token deposit for this secret\""}],"id":3194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7229:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"ExpressionStatement","src":"7229:55:11"},{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3201,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7298:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3204,"indexExpression":{"id":3202,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"7312:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7298:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3205,"indexExpression":{"id":3203,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7298:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7334:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7298:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"7298:37:11"},{"expression":{"arguments":[{"id":3213,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"7373:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7378:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3210,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7356:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3209,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"7349:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7349:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7364:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"7349:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7349:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"ExpressionStatement","src":"7349:36:11"}]},"id":3218,"nodeType":"IfStatement","src":"6919:477:11","trueBody":{"id":3185,"nodeType":"Block","src":"6945:208:11","statements":[{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"6959:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3159,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"6968:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3161,"indexExpression":{"id":3160,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"6980:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6968:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6959:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"6959:32:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7013:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7022:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7013:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20455448206465706f73697420666f72207468697320736563726574","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7025:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a2615727e1dffa5a6cc68f3859080d0c3164602ecb870a6ed54655f2823bb9","typeString":"literal_string \"No ETH deposit for this secret\""},"value":"No ETH deposit for this secret"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a2615727e1dffa5a6cc68f3859080d0c3164602ecb870a6ed54655f2823bb9","typeString":"literal_string \"No ETH deposit for this secret\""}],"id":3164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7005:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7005:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3170,"nodeType":"ExpressionStatement","src":"7005:53:11"},{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3171,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"7072:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3173,"indexExpression":{"id":3172,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"7084:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7072:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7072:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"7072:27:11"},{"expression":{"arguments":[{"id":3182,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7135:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3179,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"7121:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7113:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"7113:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7113:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7126:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"7113:21:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7113:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"7113:29:11"}]}},{"eventCall":{"arguments":[{"id":3220,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"7421:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7433:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3222,"name":"_secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"7441:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3223,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7450:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3219,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"7411:9:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,string memory,address)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7411:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"EmitStatement","src":"7406:51:11"}]},"functionSelector":"bda7193a","id":3227,"implemented":true,"kind":"function","modifiers":[{"id":3136,"kind":"modifierInvocation","modifierName":{"id":3135,"name":"onlyRelayer","nameLocations":["6792:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"6792:11:11"},"nodeType":"ModifierInvocation","src":"6792:11:11"},{"id":3138,"kind":"modifierInvocation","modifierName":{"id":3137,"name":"nonReentrant","nameLocations":["6804:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"6804:12:11"},"nodeType":"ModifierInvocation","src":"6804:12:11"}],"name":"withdrawWithSecret","nameLocation":"6617:18:11","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"_secret","nameLocation":"6659:7:11","nodeType":"VariableDeclaration","scope":3227,"src":"6645:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3124,"name":"string","nodeType":"ElementaryTypeName","src":"6645:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"_token","nameLocation":"6684:6:11","nodeType":"VariableDeclaration","scope":3227,"src":"6676:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"6676:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"6713:20:11","nodeType":"VariableDeclaration","scope":3227,"src":"6700:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"6700:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"_to","nameLocation":"6751:3:11","nodeType":"VariableDeclaration","scope":3227,"src":"6743:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"_nonce","nameLocation":"6772:6:11","nodeType":"VariableDeclaration","scope":3227,"src":"6764:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6764:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6635:149:11"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[],"src":"6817:0:11"},"scope":3850,"src":"6608:856:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3405,"nodeType":"Block","src":"7668:1741:11","statements":[{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"initialGas","nameLocation":"7686:10:11","nodeType":"VariableDeclaration","scope":3405,"src":"7678:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3248,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3246,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"7699:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7699:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7678:30:11"},{"assignments":[3250],"declarations":[{"constant":false,"id":3250,"mutability":"mutable","name":"totalRequired","nameLocation":"7727:13:11","nodeType":"VariableDeclaration","scope":3405,"src":"7719:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3251,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"7743:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7746:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"7743:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3253,"name":"initialGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7757:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7743:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7719:48:11"},{"assignments":[3257,null,null,3259],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"vaultId","nameLocation":"7805:7:11","nodeType":"VariableDeclaration","scope":3405,"src":"7792:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3256,"name":"bytes","nodeType":"ElementaryTypeName","src":"7792:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},null,null,{"constant":false,"id":3259,"mutability":"mutable","name":"signedMessage","nameLocation":"7867:13:11","nodeType":"VariableDeclaration","scope":3405,"src":"7854:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3258,"name":"bytes","nodeType":"ElementaryTypeName","src":"7854:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3268,"initialValue":{"arguments":[{"id":3264,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7958:20:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3265,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"7996:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3266,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"8017:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":3261,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7911:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3260,"name":"IMecenateVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7893:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateVerifier_$4046_$","typeString":"type(contract IMecenateVerifier)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateVerifier_$4046","typeString":"contract IMecenateVerifier"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7929:11:11","memberName":"sismoVerify","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"7893:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view external returns (bytes memory,uint256,uint256,bytes memory)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:144:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7778:259:11"},{"assignments":[3270,3272],"declarations":[{"constant":false,"id":3270,"mutability":"mutable","name":"to","nameLocation":"8057:2:11","nodeType":"VariableDeclaration","scope":3405,"src":"8049:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"8049:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"nonce","nameLocation":"8069:5:11","nodeType":"VariableDeclaration","scope":3405,"src":"8061:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8061:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3282,"initialValue":{"arguments":[{"id":3275,"name":"signedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"8102:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8130:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"8130:7:11","typeDescriptions":{}}},{"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8139:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8139:7:11","typeDescriptions":{}}}],"id":3280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8129:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}],"expression":{"id":3273,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8078:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8082:6:11","memberName":"decode","nodeType":"MemberAccess","src":"8078:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8078:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes32_$","typeString":"tuple(address payable,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"8048:109:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3284,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"8189:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3288,"indexExpression":{"arguments":[{"id":3286,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"8211:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3285,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8201:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8201:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8189:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3289,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"8224:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8189:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682045544820666f7220676173207265717569726564","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8251:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe2c84e1ab19ebcc169701b48d23d0ada92d17237238e7797e900da54754cf3","typeString":"literal_string \"Not enough ETH for gas required\""},"value":"Not enough ETH for gas required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe2c84e1ab19ebcc169701b48d23d0ada92d17237238e7797e900da54754cf3","typeString":"literal_string \"Not enough ETH for gas required\""}],"id":3283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8168:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:126:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"8168:126:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"8313:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3296,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"8319:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8313:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742053616d652041646472657373","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8324:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3585a83ff0f200647deecb18d226ea7c9409e14c26b5828adea0dc4563a40b6","typeString":"literal_string \"Not Same Address\""},"value":"Not Same Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3585a83ff0f200647deecb18d226ea7c9409e14c26b5828adea0dc4563a40b6","typeString":"literal_string \"Not Same Address\""}],"id":3294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8305:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8305:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"ExpressionStatement","src":"8305:38:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"8362:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3303,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"8371:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8362:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742053616d65204e6f6e6365","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8379:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""},"value":"Not Same Nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""}],"id":3301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8354:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8354:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3307,"nodeType":"ExpressionStatement","src":"8354:42:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3309,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"8525:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3313,"indexExpression":{"arguments":[{"id":3311,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"8549:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8539:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8539:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8525:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3315,"indexExpression":{"id":3314,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"8559:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8525:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3316,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"8570:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820746f6b656e2062616c616e6365","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8591:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b","typeString":"literal_string \"Not enough token balance\""},"value":"Not enough token balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b","typeString":"literal_string \"Not enough token balance\""}],"id":3308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8504:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8504:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3320,"nodeType":"ExpressionStatement","src":"8504:123:11"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3321,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"8696:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3326,"indexExpression":{"arguments":[{"id":3323,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"8720:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3322,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8710:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8710:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8696:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3327,"indexExpression":{"id":3325,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"8730:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8696:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3328,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"8741:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8696:52:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"8696:52:11"},{"expression":{"arguments":[{"id":3335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"8841:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3336,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"8845:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3332,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"8824:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"8817:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8817:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8832:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"8817:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8817:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3338,"nodeType":"ExpressionStatement","src":"8817:36:11"},{"assignments":[3340],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"gasUsed","nameLocation":"8872:7:11","nodeType":"VariableDeclaration","scope":3405,"src":"8864:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"8864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3345,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"initialGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"8882:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3342,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"8895:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8895:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8882:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8864:40:11"},{"assignments":[3347],"declarations":[{"constant":false,"id":3347,"mutability":"mutable","name":"gasCost","nameLocation":"8923:7:11","nodeType":"VariableDeclaration","scope":3405,"src":"8915:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"8915:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3352,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"8933:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3349,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"8943:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8946:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"8943:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8933:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8915:39:11"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"relayerFee","nameLocation":"8973:10:11","nodeType":"VariableDeclaration","scope":3405,"src":"8965:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"8965:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3361,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"8987:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3356,"name":"relayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"8997:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8987:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8986:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9021:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8986:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8965:61:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3363,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9058:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3367,"indexExpression":{"arguments":[{"id":3365,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"9080:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3364,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9070:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9070:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9058:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"9093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3369,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"9103:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9093:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9058:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e636520666f72206761732075736564","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9127:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f298307e1f975947de118300154942b291cb249c875fd1681f235523a6e101a","typeString":"literal_string \"Not enough balance for gas used\""},"value":"Not enough balance for gas used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f298307e1f975947de118300154942b291cb249c875fd1681f235523a6e101a","typeString":"literal_string \"Not enough balance for gas used\""}],"id":3362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9037:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9037:133:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3374,"nodeType":"ExpressionStatement","src":"9037:133:11"},{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3375,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9181:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3379,"indexExpression":{"arguments":[{"id":3377,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"9203:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3376,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9193:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9181:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"9216:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3381,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"9226:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9216:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9181:55:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3384,"nodeType":"ExpressionStatement","src":"9181:55:11"},{"assignments":[3386,null],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"result","nameLocation":"9253:6:11","nodeType":"VariableDeclaration","scope":3405,"src":"9248:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3385,"name":"bool","nodeType":"ElementaryTypeName","src":"9248:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3399,"initialValue":{"arguments":[{"hexValue":"","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9332:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9273:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9277:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9273:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9265:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"9265:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9265:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9285:4:11","memberName":"call","nodeType":"MemberAccess","src":"9265:24:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"9297:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3394,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"9307:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9297:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9265:53:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9265:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9247:97:11"},{"expression":{"arguments":[{"id":3401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"9363:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564207769746820676173","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9371:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731423e464d9b87b26ca3fef841ae3d35dc2db6257232fd683c97094fdfae28a","typeString":"literal_string \"ETH transfer failed with gas\""},"value":"ETH transfer failed with gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_731423e464d9b87b26ca3fef841ae3d35dc2db6257232fd683c97094fdfae28a","typeString":"literal_string \"ETH transfer failed with gas\""}],"id":3400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9355:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9355:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3404,"nodeType":"ExpressionStatement","src":"9355:47:11"}]},"functionSelector":"1378f5d9","id":3406,"implemented":true,"kind":"function","modifiers":[{"id":3240,"kind":"modifierInvocation","modifierName":{"id":3239,"name":"onlyRelayer","nameLocations":["7643:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"7643:11:11"},"nodeType":"ModifierInvocation","src":"7643:11:11"},{"id":3242,"kind":"modifierInvocation","modifierName":{"id":3241,"name":"nonReentrant","nameLocations":["7655:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"7655:12:11"},"nodeType":"ModifierInvocation","src":"7655:12:11"}],"name":"withdrawToken","nameLocation":"7479:13:11","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"_token","nameLocation":"7510:6:11","nodeType":"VariableDeclaration","scope":3406,"src":"7502:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"7502:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"_amount","nameLocation":"7534:7:11","nodeType":"VariableDeclaration","scope":3406,"src":"7526:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"7564:20:11","nodeType":"VariableDeclaration","scope":3406,"src":"7551:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3232,"name":"bytes","nodeType":"ElementaryTypeName","src":"7551:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"_to","nameLocation":"7602:3:11","nodeType":"VariableDeclaration","scope":3406,"src":"7594:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"7594:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"_nonce","nameLocation":"7623:6:11","nodeType":"VariableDeclaration","scope":3406,"src":"7615:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7615:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7492:143:11"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[],"src":"7668:0:11"},"scope":3850,"src":"7470:1939:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3417,"nodeType":"Block","src":"9508:53:11","statements":[{"expression":{"baseExpression":{"id":3413,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9525:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3415,"indexExpression":{"id":3414,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"9537:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9525:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3412,"id":3416,"nodeType":"Return","src":"9518:36:11"}]},"functionSelector":"20491915","id":3418,"implemented":true,"kind":"function","modifiers":[],"name":"getEthDeposit","nameLocation":"9424:13:11","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"9455:16:11","nodeType":"VariableDeclaration","scope":3418,"src":"9447:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9447:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9437:40:11"},"returnParameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3418,"src":"9499:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"9499:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9498:9:11"},"scope":3850,"src":"9415:146:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3425,"nodeType":"Block","src":"9594:50:11","statements":[{"expression":{"arguments":[{"hexValue":"557365206465706f7369744554482066756e6374696f6e","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9611:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_195ad2b5e4bb499ed384fb7ad4a2e97c70f5a58433fafda2adf1a3c856ce3e42","typeString":"literal_string \"Use depositETH function\""},"value":"Use depositETH function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_195ad2b5e4bb499ed384fb7ad4a2e97c70f5a58433fafda2adf1a3c856ce3e42","typeString":"literal_string \"Use depositETH function\""}],"id":3421,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9604:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9604:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"ExpressionStatement","src":"9604:33:11"}]},"id":3426,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[],"src":"9574:2:11"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[],"src":"9594:0:11"},"scope":3850,"src":"9567:77:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3456,"nodeType":"Block","src":"9678:206:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9696:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:11","memberName":"data","nodeType":"MemberAccess","src":"9696:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9705:6:11","memberName":"length","nodeType":"MemberAccess","src":"9696:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9714:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9696:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4461746120726571756972656420666f72205369736d6f20766572696669636174696f6e2e","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9717:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5539778f10587acd11da1beba3c2de7b5c86c6e5f446fb084fec4d4a105f55f","typeString":"literal_string \"Data required for Sismo verification.\""},"value":"Data required for Sismo verification."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5539778f10587acd11da1beba3c2de7b5c86c6e5f446fb084fec4d4a105f55f","typeString":"literal_string \"Data required for Sismo verification.\""}],"id":3429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3437,"nodeType":"ExpressionStatement","src":"9688:69:11"},{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"9775:16:11","nodeType":"VariableDeclaration","scope":3456,"src":"9767:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9767:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3448,"initialValue":{"arguments":[{"expression":{"id":3442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9805:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9809:4:11","memberName":"data","nodeType":"MemberAccess","src":"9805:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9816:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9816:7:11","typeDescriptions":{}}}],"id":3446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9815:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":3440,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9794:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9798:6:11","memberName":"decode","nodeType":"MemberAccess","src":"9794:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9794:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9767:58:11"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3449,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9835:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3451,"indexExpression":{"id":3450,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"9847:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9835:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9868:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9872:5:11","memberName":"value","nodeType":"MemberAccess","src":"9868:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9835:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"9835:42:11"}]},"id":3457,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[],"src":"9658:2:11"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[],"src":"9678:0:11"},"scope":3850,"src":"9650:234:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3472,"nodeType":"Block","src":"10009:63:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3466,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"10026:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3468,"indexExpression":{"id":3467,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"10040:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10026:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3470,"indexExpression":{"id":3469,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"10058:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10026:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3465,"id":3471,"nodeType":"Return","src":"10019:46:11"}]},"functionSelector":"5e0cd92f","id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenDeposit","nameLocation":"9899:15:11","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"_token","nameLocation":"9932:6:11","nodeType":"VariableDeclaration","scope":3473,"src":"9924:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"9924:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"9956:16:11","nodeType":"VariableDeclaration","scope":3473,"src":"9948:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9948:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9914:64:11"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"10000:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"10000:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9999:9:11"},"scope":3850,"src":"9890:182:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3788,"nodeType":"Block","src":"10264:2415:11","statements":[{"assignments":[3491],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"availableBalance","nameLocation":"10282:16:11","nodeType":"VariableDeclaration","scope":3788,"src":"10274:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"baseExpression":{"id":3492,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"10301:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3494,"indexExpression":{"id":3493,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"10313:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10301:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10274:57:11"},{"assignments":[3497],"declarations":[{"constant":false,"id":3497,"mutability":"mutable","name":"ethBalanceB4","nameLocation":"10350:12:11","nodeType":"VariableDeclaration","scope":3788,"src":"10342:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3503,"initialValue":{"expression":{"arguments":[{"id":3500,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10373:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10365:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3498,"name":"address","nodeType":"ElementaryTypeName","src":"10365:7:11","typeDescriptions":{}}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10379:7:11","memberName":"balance","nodeType":"MemberAccess","src":"10365:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:11"},{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"daiBalanceB4","nameLocation":"10404:12:11","nodeType":"VariableDeclaration","scope":3788,"src":"10396:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"arguments":[{"arguments":[{"id":3512,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10449:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10441:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"10441:7:11","typeDescriptions":{}}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3507,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"10426:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3506,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"10419:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10419:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10431:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":212,"src":"10419:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10419:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10396:59:11"},{"assignments":[3517],"declarations":[{"constant":false,"id":3517,"mutability":"mutable","name":"museBalanceB4","nameLocation":"10473:13:11","nodeType":"VariableDeclaration","scope":3788,"src":"10465:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"10465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3527,"initialValue":{"arguments":[{"arguments":[{"id":3524,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10520:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10512:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"10512:7:11","typeDescriptions":{}}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10512:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3519,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"10496:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3518,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"10489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10489:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10502:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":212,"src":"10489:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10489:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10465:61:11"},{"assignments":[3529],"declarations":[{"constant":false,"id":3529,"mutability":"mutable","name":"totalRequired","nameLocation":"10545:13:11","nodeType":"VariableDeclaration","scope":3788,"src":"10537:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"10537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3538,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"10561:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3531,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"10571:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10574:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"10571:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3533,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10585:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10585:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10571:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10570:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10537:58:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"10614:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3541,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"10634:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10614:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482062616c616e6365","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10649:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""},"value":"Insufficient ETH balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""}],"id":3539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10606:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10606:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"ExpressionStatement","src":"10606:70:11"},{"assignments":[3547],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"success","nameLocation":"10692:7:11","nodeType":"VariableDeclaration","scope":3788,"src":"10687:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3546,"name":"bool","nodeType":"ElementaryTypeName","src":"10687:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3548,"nodeType":"VariableDeclarationStatement","src":"10687:12:11"},{"assignments":[3550],"declarations":[{"constant":false,"id":3550,"mutability":"mutable","name":"retData","nameLocation":"10780:7:11","nodeType":"VariableDeclaration","scope":3788,"src":"10767:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3549,"name":"bytes","nodeType":"ElementaryTypeName","src":"10767:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3551,"nodeType":"VariableDeclarationStatement","src":"10767:20:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3552,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"10839:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10845:6:11","memberName":"length","nodeType":"MemberAccess","src":"10839:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10855:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10839:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3596,"nodeType":"Block","src":"10943:208:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"10961:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10971:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10961:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3594,"nodeType":"Block","src":"11053:88:11","statements":[{"expression":{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"11072:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3584,"name":"retData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"11081:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3585,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11071:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3590,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"11120:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3586,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"11092:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11100:4:11","memberName":"call","nodeType":"MemberAccess","src":"11092:12:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3588,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"11112:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11092:27:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11092:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"11071:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3593,"nodeType":"ExpressionStatement","src":"11071:55:11"}]},"id":3595,"nodeType":"IfStatement","src":"10957:184:11","trueBody":{"id":3582,"nodeType":"Block","src":"10974:73:11","statements":[{"expression":{"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3573,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10993:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3574,"name":"retData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"11002:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3575,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10992:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3578,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"11026:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3576,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"11013:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11021:4:11","memberName":"call","nodeType":"MemberAccess","src":"11013:12:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"10992:40:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"ExpressionStatement","src":"10992:40:11"}]}}]},"id":3597,"nodeType":"IfStatement","src":"10835:316:11","trueBody":{"id":3569,"nodeType":"Block","src":"10858:79:11","statements":[{"expression":{"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3556,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10873:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":3557,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10872:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10923:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3560,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"10894:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10886:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3558,"name":"address","nodeType":"ElementaryTypeName","src":"10886:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10903:4:11","memberName":"call","nodeType":"MemberAccess","src":"10886:21:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3563,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"10915:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10886:36:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"10872:54:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3568,"nodeType":"ExpressionStatement","src":"10872:54:11"}]}},{"expression":{"arguments":[{"id":3599,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"11169:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e206661696c6564","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11178:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588","typeString":"literal_string \"Transaction failed\""},"value":"Transaction failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588","typeString":"literal_string \"Transaction failed\""}],"id":3598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11161:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11161:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"11161:38:11"},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"gasUsed","nameLocation":"11218:7:11","nodeType":"VariableDeclaration","scope":3788,"src":"11210:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11210:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3615,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"11228:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3606,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"11244:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11228:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3608,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"11254:2:11","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11257:8:11","memberName":"gasprice","nodeType":"MemberAccess","src":"11254:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3610,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"11268:7:11","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11268:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11254:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11253:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11228:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11210:68:11"},{"assignments":[3617],"declarations":[{"constant":false,"id":3617,"mutability":"mutable","name":"relayerFee","nameLocation":"11297:10:11","nodeType":"VariableDeclaration","scope":3788,"src":"11289:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"11289:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3624,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3619,"name":"relayerFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11321:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11311:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11310:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11310:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11289:61:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3626,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3628,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"11412:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11402:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11382:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f722067617320616e6420666565","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11436:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf59ff243190ad1ce4243908c3fb2d9795de10f87dcce9081d8dbd49f8487a7a","typeString":"literal_string \"Insufficient balance for gas and fee\""},"value":"Insufficient balance for gas and fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf59ff243190ad1ce4243908c3fb2d9795de10f87dcce9081d8dbd49f8487a7a","typeString":"literal_string \"Insufficient balance for gas and fee\""}],"id":3625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11361:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11361:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"ExpressionStatement","src":"11361:123:11"},{"assignments":[3635],"declarations":[{"constant":false,"id":3635,"mutability":"mutable","name":"ethBalance","nameLocation":"11503:10:11","nodeType":"VariableDeclaration","scope":3788,"src":"11495:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11495:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3641,"initialValue":{"expression":{"arguments":[{"id":3638,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11524:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11516:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"11516:7:11","typeDescriptions":{}}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11516:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11530:7:11","memberName":"balance","nodeType":"MemberAccess","src":"11516:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11495:42:11"},{"assignments":[3643],"declarations":[{"constant":false,"id":3643,"mutability":"mutable","name":"daiBalance","nameLocation":"11555:10:11","nodeType":"VariableDeclaration","scope":3788,"src":"11547:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"11547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3653,"initialValue":{"arguments":[{"arguments":[{"id":3650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11598:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11590:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"11590:7:11","typeDescriptions":{}}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11590:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3645,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"11575:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3644,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"11568:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11568:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11580:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":212,"src":"11568:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11568:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11547:57:11"},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"museBalance","nameLocation":"11622:11:11","nodeType":"VariableDeclaration","scope":3788,"src":"11614:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"11614:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3665,"initialValue":{"arguments":[{"arguments":[{"id":3662,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11667:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateVault_$3850","typeString":"contract MecenateVault"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11659:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"11659:7:11","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3657,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"11643:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3656,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"11636:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11636:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11649:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":212,"src":"11636:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11636:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11614:59:11"},{"assignments":[3667],"declarations":[{"constant":false,"id":3667,"mutability":"mutable","name":"diffEth","nameLocation":"11692:7:11","nodeType":"VariableDeclaration","scope":3788,"src":"11684:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"11684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3668,"nodeType":"VariableDeclarationStatement","src":"11684:15:11"},{"assignments":[3670],"declarations":[{"constant":false,"id":3670,"mutability":"mutable","name":"diffDai","nameLocation":"11717:7:11","nodeType":"VariableDeclaration","scope":3788,"src":"11709:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"nodeType":"VariableDeclarationStatement","src":"11709:15:11"},{"assignments":[3673],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"diffMuse","nameLocation":"11742:8:11","nodeType":"VariableDeclaration","scope":3788,"src":"11734:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"11734:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"nodeType":"VariableDeclarationStatement","src":"11734:16:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"ethBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11765:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3676,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"11780:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11765:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3700,"nodeType":"IfStatement","src":"11761:217:11","trueBody":{"id":3699,"nodeType":"Block","src":"11792:186:11","statements":[{"expression":{"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3678,"name":"diffEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"11806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"ethBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11816:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3680,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"11831:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11816:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11806:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3683,"nodeType":"ExpressionStatement","src":"11806:35:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"diffEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"11860:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11870:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11860:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"ethBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11875:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11875:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11860:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"IfStatement","src":"11856:112:11","trueBody":{"id":3697,"nodeType":"Block","src":"11894:74:11","statements":[{"expression":{"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3691,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"11912:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3693,"indexExpression":{"id":3692,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"11924:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11912:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3694,"name":"diffEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"11946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11912:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3696,"nodeType":"ExpressionStatement","src":"11912:41:11"}]}}]}},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3701,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"11988:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3703,"indexExpression":{"id":3702,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12000:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11988:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"12021:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3705,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12031:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12021:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11988:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"11988:53:11"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3709,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"12053:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":3710,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"12052:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12120:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3713,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12074:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12078:6:11","memberName":"sender","nodeType":"MemberAccess","src":"12074:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12066:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"12066:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12086:4:11","memberName":"call","nodeType":"MemberAccess","src":"12066:24:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"12098:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3718,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12108:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12098:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12066:53:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"12052:71:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"ExpressionStatement","src":"12052:71:11"},{"expression":{"arguments":[{"id":3726,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"12142:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12151:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":3725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12134:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12134:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"ExpressionStatement","src":"12134:39:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"daiBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"12188:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3731,"name":"daiBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"12203:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12188:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3757,"nodeType":"IfStatement","src":"12184:224:11","trueBody":{"id":3756,"nodeType":"Block","src":"12215:193:11","statements":[{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"diffDai","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"daiBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"12239:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3735,"name":"daiBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"12254:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12239:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12229:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ExpressionStatement","src":"12229:35:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"diffDai","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12293:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"daiBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"12298:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12298:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12283:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3755,"nodeType":"IfStatement","src":"12279:119:11","trueBody":{"id":3754,"nodeType":"Block","src":"12317:81:11","statements":[{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3746,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"12335:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3749,"indexExpression":{"id":3747,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12349:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12335:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3750,"indexExpression":{"id":3748,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"12368:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12335:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3751,"name":"diffDai","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12335:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"12335:48:11"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"museBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"12422:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3759,"name":"museBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"12438:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12422:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3785,"nodeType":"IfStatement","src":"12418:233:11","trueBody":{"id":3784,"nodeType":"Block","src":"12451:200:11","statements":[{"expression":{"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3761,"name":"diffMuse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12465:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"museBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"12476:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3763,"name":"museBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"12492:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12476:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12465:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3766,"nodeType":"ExpressionStatement","src":"12465:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"diffMuse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12522:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12533:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12522:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"museBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"12538:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12555:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12538:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12522:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"12518:123:11","trueBody":{"id":3782,"nodeType":"Block","src":"12558:83:11","statements":[{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3774,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"12576:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":3777,"indexExpression":{"id":3775,"name":"_encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12590:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12576:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3778,"indexExpression":{"id":3776,"name":"MUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"12609:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12576:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3779,"name":"diffMuse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12618:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12576:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"12576:50:11"}]}}]}},{"expression":{"hexValue":"74727565","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12668:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3489,"id":3787,"nodeType":"Return","src":"12661:11:11"}]},"functionSelector":"9926ad87","id":3789,"implemented":true,"kind":"function","modifiers":[{"id":3484,"kind":"modifierInvocation","modifierName":{"id":3483,"name":"onlyRelayer","nameLocations":["10224:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"10224:11:11"},"nodeType":"ModifierInvocation","src":"10224:11:11"},{"id":3486,"kind":"modifierInvocation","modifierName":{"id":3485,"name":"nonReentrant","nameLocations":["10236:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"10236:12:11"},"nodeType":"ModifierInvocation","src":"10236:12:11"}],"name":"execute","nameLocation":"10087:7:11","nodeType":"FunctionDefinition","parameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"_target","nameLocation":"10112:7:11","nodeType":"VariableDeclaration","scope":3789,"src":"10104:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"10104:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"_data","nameLocation":"10144:5:11","nodeType":"VariableDeclaration","scope":3789,"src":"10129:20:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3476,"name":"bytes","nodeType":"ElementaryTypeName","src":"10129:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"_value","nameLocation":"10167:6:11","nodeType":"VariableDeclaration","scope":3789,"src":"10159:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"10159:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"_encryptedVaultId","nameLocation":"10191:17:11","nodeType":"VariableDeclaration","scope":3789,"src":"10183:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10094:120:11"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"10258:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3487,"name":"bool","nodeType":"ElementaryTypeName","src":"10258:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10257:6:11"},"scope":3850,"src":"10078:2601:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3800,"nodeType":"Block","src":"12742:35:11","statements":[{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3796,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"12752:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3797,"name":"_relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"12762:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12752:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3799,"nodeType":"ExpressionStatement","src":"12752:18:11"}]},"functionSelector":"6548e9bc","id":3801,"implemented":true,"kind":"function","modifiers":[{"id":3794,"kind":"modifierInvocation","modifierName":{"id":3793,"name":"onlyOwner","nameLocations":["12732:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12732:9:11"},"nodeType":"ModifierInvocation","src":"12732:9:11"}],"name":"setRelayer","nameLocation":"12694:10:11","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"_relayer","nameLocation":"12713:8:11","nodeType":"VariableDeclaration","scope":3801,"src":"12705:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3790,"name":"address","nodeType":"ElementaryTypeName","src":"12705:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12704:18:11"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"12742:0:11"},"scope":3850,"src":"12685:92:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3812,"nodeType":"Block","src":"12858:53:11","statements":[{"expression":{"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12868:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3809,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"12887:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12868:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3811,"nodeType":"ExpressionStatement","src":"12868:36:11"}]},"functionSelector":"a25da83c","id":3813,"implemented":true,"kind":"function","modifiers":[{"id":3806,"kind":"modifierInvocation","modifierName":{"id":3805,"name":"onlyOwner","nameLocations":["12848:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12848:9:11"},"nodeType":"ModifierInvocation","src":"12848:9:11"}],"name":"setVerifierContract","nameLocation":"12792:19:11","nodeType":"FunctionDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"_verifierContract","nameLocation":"12820:17:11","nodeType":"VariableDeclaration","scope":3813,"src":"12812:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3802,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12811:27:11"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[],"src":"12858:0:11"},"scope":3850,"src":"12783:128:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3824,"nodeType":"Block","src":"12990:51:11","statements":[{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3820,"name":"factoryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"13000:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3821,"name":"_factoryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"13018:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13000:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3823,"nodeType":"ExpressionStatement","src":"13000:34:11"}]},"functionSelector":"d4241341","id":3825,"implemented":true,"kind":"function","modifiers":[{"id":3818,"kind":"modifierInvocation","modifierName":{"id":3817,"name":"onlyOwner","nameLocations":["12980:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12980:9:11"},"nodeType":"ModifierInvocation","src":"12980:9:11"}],"name":"setFactoryContract","nameLocation":"12926:18:11","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"_factoryContract","nameLocation":"12953:16:11","nodeType":"VariableDeclaration","scope":3825,"src":"12945:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3814,"name":"address","nodeType":"ElementaryTypeName","src":"12945:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12944:26:11"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[],"src":"12990:0:11"},"scope":3850,"src":"12917:124:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3836,"nodeType":"Block","src":"13112:43:11","statements":[{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"mecenateBay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"13122:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3833,"name":"_mecenateBay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"13136:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13122:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3835,"nodeType":"ExpressionStatement","src":"13122:26:11"}]},"functionSelector":"24ebc145","id":3837,"implemented":true,"kind":"function","modifiers":[{"id":3830,"kind":"modifierInvocation","modifierName":{"id":3829,"name":"onlyOwner","nameLocations":["13102:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13102:9:11"},"nodeType":"ModifierInvocation","src":"13102:9:11"}],"name":"setMecenateBay","nameLocation":"13056:14:11","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"_mecenateBay","nameLocation":"13079:12:11","nodeType":"VariableDeclaration","scope":3837,"src":"13071:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"13071:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13070:22:11"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[],"src":"13112:0:11"},"scope":3850,"src":"13047:108:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3848,"nodeType":"Block","src":"13230:47:11","statements":[{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"mecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"13240:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3845,"name":"_mecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"13256:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13240:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3847,"nodeType":"ExpressionStatement","src":"13240:30:11"}]},"functionSelector":"2fe4f4c1","id":3849,"implemented":true,"kind":"function","modifiers":[{"id":3842,"kind":"modifierInvocation","modifierName":{"id":3841,"name":"onlyOwner","nameLocations":["13220:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13220:9:11"},"nodeType":"ModifierInvocation","src":"13220:9:11"}],"name":"setMecenateUsers","nameLocation":"13170:16:11","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"_mecenateUsers","nameLocation":"13195:14:11","nodeType":"VariableDeclaration","scope":3849,"src":"13187:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3838,"name":"address","nodeType":"ElementaryTypeName","src":"13187:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13186:24:11"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[],"src":"13230:0:11"},"scope":3850,"src":"13161:116:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3851,"src":"626:12653:11","usedErrors":[]}],"src":"282:12998:11"},"id":11},"contracts/interfaces/IMecenateFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateFeed.sol","exportedSymbols":{"IMecenateFeed":[3920],"Structures":[5102]},"id":3921,"nodeType":"SourceUnit","nodes":[{"id":3852,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:12"},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":3853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3921,"sourceUnit":5103,"src":"25:35:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateFeed","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3920,"linearizedBaseContracts":[3920],"name":"IMecenateFeed","nameLocation":"72:13:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0917e776","id":3858,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalStaked","nameLocation":"101:14:12","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[],"src":"115:2:12"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"141:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"141:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"140:9:12"},"scope":3920,"src":"92:58:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"17906c2e","id":3863,"implemented":false,"kind":"function","modifiers":[],"name":"postCount","nameLocation":"165:9:12","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[],"src":"174:2:12"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"200:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"200:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199:9:12"},"scope":3920,"src":"156:53:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"200f852c","id":3877,"implemented":false,"kind":"function","modifiers":[],"name":"acceptPost","nameLocation":"224:10:12","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"257:20:12","nodeType":"VariableDeclaration","scope":3877,"src":"244:33:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3864,"name":"bytes","nodeType":"ElementaryTypeName","src":"244:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"_to","nameLocation":"295:3:12","nodeType":"VariableDeclaration","scope":3877,"src":"287:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"_nonce","nameLocation":"316:6:12","nodeType":"VariableDeclaration","scope":3877,"src":"308:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"308:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3877,"src":"332:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"typeName":{"id":3871,"nodeType":"UserDefinedTypeName","pathNode":{"id":3870,"name":"Structures.Tokens","nameLocations":["332:10:12","343:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"332:17:12"},"referencedDeclaration":4930,"src":"332:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"_amount","nameLocation":"367:7:12","nodeType":"VariableDeclaration","scope":3877,"src":"359:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"234:146:12"},"returnParameters":{"id":3876,"nodeType":"ParameterList","parameters":[],"src":"397:0:12"},"scope":3920,"src":"215:183:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5c63ed69","id":3882,"implemented":false,"kind":"function","modifiers":[],"name":"getSellerStake","nameLocation":"413:14:12","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[],"src":"427:2:12"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"453:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:9:12"},"scope":3920,"src":"404:58:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4c38d877","id":3887,"implemented":false,"kind":"function","modifiers":[],"name":"getBuyerStake","nameLocation":"477:13:12","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[],"src":"490:2:12"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"516:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"515:9:12"},"scope":3920,"src":"468:57:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d24e0c87","id":3892,"implemented":false,"kind":"function","modifiers":[],"name":"getPaymentRequested","nameLocation":"540:19:12","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[],"src":"559:2:12"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3892,"src":"585:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"584:9:12"},"scope":3920,"src":"531:63:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"faeb5e17","id":3897,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeRequested","nameLocation":"609:17:12","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[],"src":"626:2:12"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3897,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:9:12"},"scope":3920,"src":"600:61:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4e69d560","id":3903,"implemented":false,"kind":"function","modifiers":[],"name":"getStatus","nameLocation":"676:9:12","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[],"src":"685:2:12"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"status","nameLocation":"733:6:12","nodeType":"VariableDeclaration","scope":3903,"src":"711:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"},"typeName":{"id":3900,"nodeType":"UserDefinedTypeName","pathNode":{"id":3899,"name":"Structures.PostStatus","nameLocations":["711:10:12","722:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"711:21:12"},"referencedDeclaration":4926,"src":"711:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"visibility":"internal"}],"src":"710:30:12"},"scope":3920,"src":"667:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"010a38f5","id":3909,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"756:10:12","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[],"src":"766:2:12"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"tokenId","nameLocation":"810:7:12","nodeType":"VariableDeclaration","scope":3909,"src":"792:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"typeName":{"id":3906,"nodeType":"UserDefinedTypeName","pathNode":{"id":3905,"name":"Structures.Tokens","nameLocations":["792:10:12","803:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"792:17:12"},"referencedDeclaration":4930,"src":"792:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"visibility":"internal"}],"src":"791:27:12"},"scope":3920,"src":"747:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":3914,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"834:5:12","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[],"src":"839:2:12"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"865:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"865:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"864:9:12"},"scope":3920,"src":"825:49:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":3919,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"889:7:12","nodeType":"FunctionDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[],"src":"896:2:12"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"922:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3916,"name":"string","nodeType":"ElementaryTypeName","src":"922:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"921:15:12"},"scope":3920,"src":"880:57:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3921,"src":"62:877:12","usedErrors":[]}],"src":"0:940:12"},"id":12},"contracts/interfaces/IMecenateFeedFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateFeedFactory.sol","exportedSymbols":{"IMecenateFeedFactory":[3988]},"id":3989,"nodeType":"SourceUnit","nodes":[{"id":3922,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateFeedFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3988,"linearizedBaseContracts":[3988],"name":"IMecenateFeedFactory","nameLocation":"35:20:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":3927,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"71:5:13","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"76:2:13"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3927,"src":"102:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3924,"name":"address","nodeType":"ElementaryTypeName","src":"102:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"101:17:13"},"scope":3988,"src":"62:57:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18da0011","id":3932,"implemented":false,"kind":"function","modifiers":[],"name":"treasuryContract","nameLocation":"134:16:13","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[],"src":"150:2:13"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3932,"src":"176:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3929,"name":"address","nodeType":"ElementaryTypeName","src":"176:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"175:17:13"},"scope":3988,"src":"125:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67031bae","id":3937,"implemented":false,"kind":"function","modifiers":[],"name":"identityContract","nameLocation":"208:16:13","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[],"src":"224:2:13"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"250:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3934,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"249:9:13"},"scope":3988,"src":"199:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d63605b8","id":3943,"implemented":false,"kind":"function","modifiers":[],"name":"feeds","nameLocation":"274:5:13","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[],"src":"279:2:13"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"305:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3940,"nodeType":"ArrayTypeName","src":"305:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"304:18:13"},"scope":3988,"src":"265:58:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"067bd3b4","id":3948,"implemented":false,"kind":"function","modifiers":[],"name":"contractCounter","nameLocation":"338:15:13","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[],"src":"353:2:13"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"379:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"378:9:13"},"scope":3988,"src":"329:59:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e58fdd04","id":3955,"implemented":false,"kind":"function","modifiers":[],"name":"isFeed","nameLocation":"403:6:13","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"_feed","nameLocation":"418:5:13","nodeType":"VariableDeclaration","scope":3955,"src":"410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"409:15:13"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"448:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3952,"name":"bool","nodeType":"ElementaryTypeName","src":"448:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"447:6:13"},"scope":3988,"src":"394:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f77800e5","id":3960,"implemented":false,"kind":"function","modifiers":[],"name":"museToken","nameLocation":"469:9:13","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[],"src":"478:2:13"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"504:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3957,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"503:9:13"},"scope":3988,"src":"460:53:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4b57b0be","id":3965,"implemented":false,"kind":"function","modifiers":[],"name":"wethToken","nameLocation":"528:9:13","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[],"src":"537:2:13"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"563:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"563:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"562:9:13"},"scope":3988,"src":"519:53:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"be22f546","id":3970,"implemented":false,"kind":"function","modifiers":[],"name":"daiToken","nameLocation":"587:8:13","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"595:2:13"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3970,"src":"621:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3967,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:9:13"},"scope":3988,"src":"578:52:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":3975,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"645:6:13","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[],"src":"651:2:13"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"677:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"676:9:13"},"scope":3988,"src":"636:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d223a564","id":3982,"implemented":false,"kind":"function","modifiers":[],"name":"getRouterFee","nameLocation":"701:12:13","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"tokenId","nameLocation":"720:7:13","nodeType":"VariableDeclaration","scope":3982,"src":"714:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3976,"name":"uint8","nodeType":"ElementaryTypeName","src":"714:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"713:15:13"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3982,"src":"752:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3979,"name":"uint24","nodeType":"ElementaryTypeName","src":"752:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"751:8:13"},"scope":3988,"src":"692:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5dc96d16","id":3987,"implemented":false,"kind":"function","modifiers":[],"name":"burnEnabled","nameLocation":"775:11:13","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"786:2:13"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"812:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3984,"name":"bool","nodeType":"ElementaryTypeName","src":"812:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"811:6:13"},"scope":3988,"src":"766:52:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3989,"src":"25:795:13","usedErrors":[]}],"src":"0:821:13"},"id":13},"contracts/interfaces/IMecenateUsers.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateUsers.sol","exportedSymbols":{"IMecenateUsers":[4026],"Structures":[5102]},"id":4027,"nodeType":"SourceUnit","nodes":[{"id":3990,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:14"},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":3991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4027,"sourceUnit":5103,"src":"25:35:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateUsers","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4026,"linearizedBaseContracts":[4026],"name":"IMecenateUsers","nameLocation":"74:14:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38aad32c","id":3998,"implemented":false,"kind":"function","modifiers":[],"name":"checkifUserExist","nameLocation":"105:16:14","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"vaultId","nameLocation":"130:7:14","nodeType":"VariableDeclaration","scope":3998,"src":"122:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"122:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"121:17:14"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"162:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3995,"name":"bool","nodeType":"ElementaryTypeName","src":"162:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"161:6:14"},"scope":4026,"src":"96:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ffc9896b","id":4006,"implemented":false,"kind":"function","modifiers":[],"name":"getUserData","nameLocation":"185:11:14","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"user","nameLocation":"215:4:14","nodeType":"VariableDeclaration","scope":4006,"src":"207:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"196:30:14"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4006,"src":"250:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5047_memory_ptr","typeString":"struct Structures.User"},"typeName":{"id":4003,"nodeType":"UserDefinedTypeName","pathNode":{"id":4002,"name":"Structures.User","nameLocations":["250:10:14","261:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5047,"src":"250:15:14"},"referencedDeclaration":5047,"src":"250:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5047_storage_ptr","typeString":"struct Structures.User"}},"visibility":"internal"}],"src":"249:24:14"},"scope":4026,"src":"176:98:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5cb15f7","id":4011,"implemented":false,"kind":"function","modifiers":[],"name":"getUserCount","nameLocation":"291:12:14","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[],"src":"303:2:14"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4011,"src":"329:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:9:14"},"scope":4026,"src":"282:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6e064ad","id":4018,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAt","nameLocation":"355:9:14","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"index","nameLocation":"373:5:14","nodeType":"VariableDeclaration","scope":4018,"src":"365:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"364:15:14"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4018,"src":"403:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"402:9:14"},"scope":4026,"src":"346:66:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5b5cf50a","id":4025,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVaultIdAt","nameLocation":"429:16:14","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"index","nameLocation":"454:5:14","nodeType":"VariableDeclaration","scope":4025,"src":"446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"445:15:14"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4025,"src":"484:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"484:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"483:9:14"},"scope":4026,"src":"420:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4027,"src":"64:432:14","usedErrors":[]}],"src":"0:498:14"},"id":14},"contracts/interfaces/IMecenateVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateVerifier.sol","exportedSymbols":{"IMecenateVerifier":[4046]},"id":4047,"nodeType":"SourceUnit","nodes":[{"id":4028,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4046,"linearizedBaseContracts":[4046],"name":"IMecenateVerifier","nameLocation":"37:17:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7276069d","id":4045,"implemented":false,"kind":"function","modifiers":[],"name":"sismoVerify","nameLocation":"71:11:15","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"106:20:15","nodeType":"VariableDeclaration","scope":4045,"src":"93:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4029,"name":"bytes","nodeType":"ElementaryTypeName","src":"93:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"_to","nameLocation":"145:3:15","nodeType":"VariableDeclaration","scope":4045,"src":"137:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4031,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"_nonce","nameLocation":"167:6:15","nodeType":"VariableDeclaration","scope":4045,"src":"159:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"159:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82:98:15"},"returnParameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"204:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4036,"name":"bytes","nodeType":"ElementaryTypeName","src":"204:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"218:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"236:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4042,"name":"bytes","nodeType":"ElementaryTypeName","src":"236:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"203:46:15"},"scope":4046,"src":"62:188:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4047,"src":"27:226:15","usedErrors":[]}],"src":"0:255:15"},"id":15},"contracts/layer/MecenateBay.sol":{"ast":{"absolutePath":"contracts/layer/MecenateBay.sol","exportedSymbols":{"Address":[997],"Context":[1019],"ECDSA":[1614],"FeedViewer":[5270],"IERC20":[255],"IERC20Permit":[291],"IMecenateFeed":[3920],"IMecenateUsers":[4026],"IMecenateVerifier":[4046],"Math":[2480],"MecenateBay":[4915],"Ownable":[112],"SafeERC20":[667],"SignedMath":[2585],"Strings":[1248],"Structures":[5102]},"id":4916,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4048,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"209:23:16"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":113,"src":"234:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateVerifier.sol","file":"../interfaces/IMecenateVerifier.sol","id":4050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":4047,"src":"287:45:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":4051,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":5103,"src":"333:35:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/modules/FeedViewer.sol","file":"../modules/FeedViewer.sol","id":4052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":5271,"src":"369:35:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateUsers.sol","file":"../interfaces/IMecenateUsers.sol","id":4053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":4027,"src":"405:42:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":1615,"src":"448:62:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":256,"src":"511:56:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":668,"src":"568:65:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4057,"name":"Ownable","nameLocations":["659:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"659:7:16"},"id":4058,"nodeType":"InheritanceSpecifier","src":"659:7:16"},{"baseName":{"id":4059,"name":"FeedViewer","nameLocations":["668:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5270,"src":"668:10:16"},"id":4060,"nodeType":"InheritanceSpecifier","src":"668:10:16"}],"canonicalName":"MecenateBay","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4915,"linearizedBaseContracts":[4915,5270,112,1019],"name":"MecenateBay","nameLocation":"644:11:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4064,"libraryName":{"id":4061,"name":"SafeERC20","nameLocations":["691:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":667,"src":"691:9:16"},"nodeType":"UsingForDirective","src":"685:27:16","typeName":{"id":4063,"nodeType":"UserDefinedTypeName","pathNode":{"id":4062,"name":"IERC20","nameLocations":["705:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"705:6:16"},"referencedDeclaration":255,"src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"9bf4ec2f","id":4068,"mutability":"mutable","name":"allRequests","nameLocation":"749:11:16","nodeType":"VariableDeclaration","scope":4915,"src":"718:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest[]"},"typeName":{"baseType":{"id":4066,"nodeType":"UserDefinedTypeName","pathNode":{"id":4065,"name":"Structures.BayRequest","nameLocations":["718:10:16","729:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"718:21:16"},"referencedDeclaration":5088,"src":"718:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"id":4067,"nodeType":"ArrayTypeName","src":"718:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr","typeString":"struct Structures.BayRequest[]"}},"visibility":"public"},{"constant":false,"functionSelector":"8416e304","id":4072,"mutability":"mutable","name":"allRequestsPrivate","nameLocation":"805:18:16","nodeType":"VariableDeclaration","scope":4915,"src":"767:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate[]"},"typeName":{"baseType":{"id":4070,"nodeType":"UserDefinedTypeName","pathNode":{"id":4069,"name":"Structures.BayRequestPrivate","nameLocations":["767:10:16","778:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":5101,"src":"767:28:16"},"referencedDeclaration":5101,"src":"767:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage_ptr","typeString":"struct Structures.BayRequestPrivate"}},"id":4071,"nodeType":"ArrayTypeName","src":"767:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr","typeString":"struct Structures.BayRequestPrivate[]"}},"visibility":"public"},{"constant":false,"functionSelector":"b0413770","id":4074,"mutability":"mutable","name":"usersMouduleContract","nameLocation":"845:20:16","nodeType":"VariableDeclaration","scope":4915,"src":"830:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4073,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cf695688","id":4076,"mutability":"mutable","name":"verifierContract","nameLocation":"887:16:16","nodeType":"VariableDeclaration","scope":4915,"src":"872:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2274346b","id":4078,"mutability":"mutable","name":"vaultContract","nameLocation":"925:13:16","nodeType":"VariableDeclaration","scope":4915,"src":"910:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f77800e5","id":4080,"mutability":"mutable","name":"museToken","nameLocation":"960:9:16","nodeType":"VariableDeclaration","scope":4915,"src":"945:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"be22f546","id":4082,"mutability":"mutable","name":"daiToken","nameLocation":"991:8:16","nodeType":"VariableDeclaration","scope":4915,"src":"976:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9655e6d8","id":4088,"mutability":"mutable","name":"requests","nameLocation":"1057:8:16","nodeType":"VariableDeclaration","scope":4915,"src":"1006:59:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest[])"},"typeName":{"id":4087,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1014:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1006:43:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4085,"nodeType":"UserDefinedTypeName","pathNode":{"id":4084,"name":"Structures.BayRequest","nameLocations":["1025:10:16","1036:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"1025:21:16"},"referencedDeclaration":5088,"src":"1025:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"id":4086,"nodeType":"ArrayTypeName","src":"1025:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr","typeString":"struct Structures.BayRequest[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"067bd3b4","id":4090,"mutability":"mutable","name":"contractCounter","nameLocation":"1087:15:16","nodeType":"VariableDeclaration","scope":4915,"src":"1072:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":4094,"mutability":"mutable","name":"sismoResponseMapping","nameLocation":"1143:20:16","nodeType":"VariableDeclaration","scope":4915,"src":"1109:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes)"},"typeName":{"id":4093,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4092,"name":"bytes","nodeType":"ElementaryTypeName","src":"1128:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"e9a2b6f068c8e156e02b1fa5a51213d9f1811ceb25dc05211a1df6b0f0f51102","id":4103,"name":"RequestCreated","nameLocation":"1176:14:16","nodeType":"EventDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1216:4:16","nodeType":"VariableDeclaration","scope":4103,"src":"1200:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1200:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4099,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4103,"src":"1230:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest"},"typeName":{"id":4098,"nodeType":"UserDefinedTypeName","pathNode":{"id":4097,"name":"Structures.BayRequest","nameLocations":["1230:10:16","1241:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"1230:21:16"},"referencedDeclaration":5088,"src":"1230:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"visibility":"internal"},{"constant":false,"id":4101,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"1277:5:16","nodeType":"VariableDeclaration","scope":4103,"src":"1261:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1190:98:16"},"src":"1170:119:16"},{"anonymous":false,"eventSelector":"83c2cca80e93944a5016ae3e3f51bd5e9275d6459dfdbfdad3fe85d918d92f33","id":4112,"name":"RequestAccepted","nameLocation":"1301:15:16","nodeType":"EventDefinition","parameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1342:4:16","nodeType":"VariableDeclaration","scope":4112,"src":"1326:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4108,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4112,"src":"1356:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest"},"typeName":{"id":4107,"nodeType":"UserDefinedTypeName","pathNode":{"id":4106,"name":"Structures.BayRequest","nameLocations":["1356:10:16","1367:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"1356:21:16"},"referencedDeclaration":5088,"src":"1356:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"visibility":"internal"},{"constant":false,"id":4110,"indexed":true,"mutability":"mutable","name":"index","nameLocation":"1403:5:16","nodeType":"VariableDeclaration","scope":4112,"src":"1387:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1316:98:16"},"src":"1295:120:16"},{"body":{"id":4133,"nodeType":"Block","src":"1545:147:16","statements":[{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4121,"name":"usersMouduleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"1555:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4122,"name":"_usersMouduleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"1578:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1555:44:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4124,"nodeType":"ExpressionStatement","src":"1555:44:16"},{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"1609:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4126,"name":"_verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"1628:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1609:36:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4128,"nodeType":"ExpressionStatement","src":"1609:36:16"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4129,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"1655:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4130,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"1671:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1655:30:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4132,"nodeType":"ExpressionStatement","src":"1655:30:16"}]},"id":4134,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"_usersMouduleContract","nameLocation":"1450:21:16","nodeType":"VariableDeclaration","scope":4134,"src":"1442:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4113,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"_verifierContract","nameLocation":"1489:17:16","nodeType":"VariableDeclaration","scope":4134,"src":"1481:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4115,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"_vaultContract","nameLocation":"1524:14:16","nodeType":"VariableDeclaration","scope":4134,"src":"1516:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"1516:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1432:112:16"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[],"src":"1545:0:16"},"scope":4915,"src":"1421:271:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4145,"nodeType":"Block","src":"1762:39:16","statements":[{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"museToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"1772:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4142,"name":"_museToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"1784:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1772:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4144,"nodeType":"ExpressionStatement","src":"1772:22:16"}]},"functionSelector":"0f3cd888","id":4146,"implemented":true,"kind":"function","modifiers":[{"id":4139,"kind":"modifierInvocation","modifierName":{"id":4138,"name":"onlyOwner","nameLocations":["1752:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1752:9:16"},"nodeType":"ModifierInvocation","src":"1752:9:16"}],"name":"changeMuseToken","nameLocation":"1707:15:16","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"_museToken","nameLocation":"1731:10:16","nodeType":"VariableDeclaration","scope":4146,"src":"1723:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4135,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1722:20:16"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[],"src":"1762:0:16"},"scope":4915,"src":"1698:103:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4157,"nodeType":"Block","src":"1869:37:16","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4153,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"1879:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4154,"name":"_daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"1890:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1879:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4156,"nodeType":"ExpressionStatement","src":"1879:20:16"}]},"functionSelector":"9c673fe5","id":4158,"implemented":true,"kind":"function","modifiers":[{"id":4151,"kind":"modifierInvocation","modifierName":{"id":4150,"name":"onlyOwner","nameLocations":["1859:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1859:9:16"},"nodeType":"ModifierInvocation","src":"1859:9:16"}],"name":"changeDaiToken","nameLocation":"1816:14:16","nodeType":"FunctionDefinition","parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"_daiToken","nameLocation":"1839:9:16","nodeType":"VariableDeclaration","scope":4158,"src":"1831:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4147,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1830:19:16"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[],"src":"1869:0:16"},"scope":4915,"src":"1807:99:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4331,"nodeType":"Block","src":"2129:1755:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4173,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2143:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2151:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"2143:15:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4175,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2162:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"2162:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2180:3:16","memberName":"NaN","nodeType":"MemberAccess","referencedDeclaration":4927,"src":"2162:21:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"2143:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4188,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2271:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2279:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"2271:15:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4190,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2290:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2301:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"2290:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2308:3:16","memberName":"DAI","nodeType":"MemberAccess","referencedDeclaration":4929,"src":"2290:21:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"2271:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4209,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2487:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2495:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"2487:15:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4211,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2506:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"2506:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2524:4:16","memberName":"MUSE","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"2506:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"2487:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4230,"nodeType":"IfStatement","src":"2483:212:16","trueBody":{"id":4229,"nodeType":"Block","src":"2530:165:16","statements":[{"expression":{"arguments":[{"expression":{"id":4219,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2596:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2600:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2596:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4223,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2632:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateBay_$4915","typeString":"contract MecenateBay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateBay_$4915","typeString":"contract MecenateBay"}],"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2624:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4221,"name":"address","nodeType":"ElementaryTypeName","src":"2624:7:16","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4225,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2655:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2663:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"2655:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4216,"name":"museToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"2551:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4215,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2544:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2562:16:16","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":351,"src":"2544:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$255_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:140:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4228,"nodeType":"ExpressionStatement","src":"2544:140:16"}]}},"id":4231,"nodeType":"IfStatement","src":"2267:428:16","trueBody":{"id":4208,"nodeType":"Block","src":"2313:164:16","statements":[{"expression":{"arguments":[{"expression":{"id":4198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2378:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2382:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2378:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4202,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2414:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateBay_$4915","typeString":"contract MecenateBay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateBay_$4915","typeString":"contract MecenateBay"}],"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2406:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"2406:7:16","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2406:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4204,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2437:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2445:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"2437:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4195,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2334:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4194,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2327:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:16:16","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":351,"src":"2327:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$255_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$255_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:139:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"ExpressionStatement","src":"2327:139:16"}]}},"id":4232,"nodeType":"IfStatement","src":"2139:556:16","trueBody":{"id":4187,"nodeType":"Block","src":"2185:76:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2207:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2211:5:16","memberName":"value","nodeType":"MemberAccess","src":"2207:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2207:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7061796d656e74206973206e6f7420656e6f756768","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2222:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""},"value":"BAY:payment is not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""}],"id":4179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2199:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4186,"nodeType":"ExpressionStatement","src":"2199:51:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4234,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2713:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2721:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"2713:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2713:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7061796d656e74206973206e6f7420656e6f756768","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2734:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""},"value":"BAY:payment is not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""}],"id":4233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2705:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2705:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4240,"nodeType":"ExpressionStatement","src":"2705:57:16"},{"assignments":[4242,null,null,null],"declarations":[{"constant":false,"id":4242,"mutability":"mutable","name":"vaultId","nameLocation":"2787:7:16","nodeType":"VariableDeclaration","scope":4331,"src":"2774:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4241,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},null,null,null],"id":4248,"initialValue":{"arguments":[{"id":4244,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"2830:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4245,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"2864:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4246,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"2881:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4243,"name":"_sismoVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2804:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view returns (bytes memory,uint256,uint256,bytes memory)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:93:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2773:124:16"},{"assignments":[4250],"declarations":[{"constant":false,"id":4250,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"2916:16:16","nodeType":"VariableDeclaration","scope":4331,"src":"2908:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2908:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4254,"initialValue":{"arguments":[{"id":4252,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"2945:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4251,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2935:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2935:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2908:45:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4261,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"3066:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4260,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3056:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3056:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":4257,"name":"usersMouduleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"3000:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4256,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"2985:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$4026_$","typeString":"type(contract IMecenateUsers)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2985:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$4026","typeString":"contract IMecenateUsers"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3022:16:16","memberName":"checkifUserExist","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"2985:53:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view external returns (bool)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2985:103:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7573657220646f6573206e6f74206578697374","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3102:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18","typeString":"literal_string \"user does not exist\""},"value":"user does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18","typeString":"literal_string \"user does not exist\""}],"id":4255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2964:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2964:169:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"ExpressionStatement","src":"2964:169:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4268,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3152:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3160:5:16","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"3152:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3168:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3152:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7374616b65206973206e6f7420656e6f756768","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3171:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_60770ed3858bd92cef775815990a5cf281cb3be779979de98390a1b9af34166f","typeString":"literal_string \"BAY:stake is not enough\""},"value":"BAY:stake is not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60770ed3858bd92cef775815990a5cf281cb3be779979de98390a1b9af34166f","typeString":"literal_string \"BAY:stake is not enough\""}],"id":4267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3144:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3144:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4274,"nodeType":"ExpressionStatement","src":"3144:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4276,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3216:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3224:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"3216:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3235:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3239:5:16","memberName":"value","nodeType":"MemberAccess","src":"3235:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3216:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7061796d656e74206973206e6f7420656e6f756768","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3246:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""},"value":"BAY:payment is not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""}],"id":4275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3208:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"ExpressionStatement","src":"3208:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4285,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3293:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3301:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"3293:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3311:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3293:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7061796d656e74206973206e6f7420656e6f756768","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3314:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""},"value":"BAY:payment is not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1702851fb57fefa2e8b2846e50dd60f10ac6755f4258c8c3228c7c1e2d9f3b","typeString":"literal_string \"BAY:payment is not enough\""}],"id":4284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3285:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4291,"nodeType":"ExpressionStatement","src":"3285:57:16"},{"expression":{"arguments":[{"id":4296,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3385:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}],"expression":{"baseExpression":{"id":4292,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"3353:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4294,"indexExpression":{"id":4293,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"3362:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3353:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3380:4:16","memberName":"push","nodeType":"MemberAccess","src":"3353:31:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$_t_struct$_BayRequest_$5088_storage_$returns$__$attached_to$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequest storage ref[] storage pointer,struct Structures.BayRequest storage ref)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4298,"nodeType":"ExpressionStatement","src":"3353:40:16"},{"expression":{"arguments":[{"id":4302,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3421:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}],"expression":{"id":4299,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3404:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3416:4:16","memberName":"push","nodeType":"MemberAccess","src":"3404:16:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$_t_struct$_BayRequest_$5088_storage_$returns$__$attached_to$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequest storage ref[] storage pointer,struct Structures.BayRequest storage ref)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4304,"nodeType":"ExpressionStatement","src":"3404:25:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783030","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3539:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},{"hexValue":"30783030","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3579:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},{"id":4312,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"3617:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4313,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"3657:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4314,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3704:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4315,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3737:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4308,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"3477:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3488:17:16","memberName":"BayRequestPrivate","nodeType":"MemberAccess","referencedDeclaration":5101,"src":"3477:28:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BayRequestPrivate_$5101_storage_ptr_$","typeString":"type(struct Structures.BayRequestPrivate storage pointer)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3524:13:16","3563:14:16","3603:12:16","3642:13:16","3695:7:16","3725:10:16"],"names":["vaultIdSeller","sellerResponse","vaultIdBuyer","buyerResponse","buyerTo","buyerNonce"],"nodeType":"FunctionCall","src":"3477:281:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_memory_ptr","typeString":"struct Structures.BayRequestPrivate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_memory_ptr","typeString":"struct Structures.BayRequestPrivate memory"}],"expression":{"id":4305,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"3440:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3459:4:16","memberName":"push","nodeType":"MemberAccess","src":"3440:23:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$_t_struct$_BayRequestPrivate_$5101_storage_$returns$__$attached_to$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequestPrivate storage ref[] storage pointer,struct Structures.BayRequestPrivate storage ref)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3440:328:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"ExpressionStatement","src":"3440:328:16"},{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3779:17:16","subExpression":{"id":4319,"name":"contractCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"3779:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4321,"nodeType":"ExpressionStatement","src":"3779:17:16"},{"eventCall":{"arguments":[{"id":4323,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"3827:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4324,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3845:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4325,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3854:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:6:16","memberName":"length","nodeType":"MemberAccess","src":"3854:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3875:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3854:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"name":"RequestCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3812:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_struct$_BayRequest_$5088_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,struct Structures.BayRequest memory,uint256)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3812:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4330,"nodeType":"EmitStatement","src":"3807:70:16"}]},"functionSelector":"c81ac646","id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"createRequest","nameLocation":"1921:13:16","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"request","nameLocation":"1973:7:16","nodeType":"VariableDeclaration","scope":4332,"src":"1944:36:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest"},"typeName":{"id":4160,"nodeType":"UserDefinedTypeName","pathNode":{"id":4159,"name":"Structures.BayRequest","nameLocations":["1944:10:16","1955:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"1944:21:16"},"referencedDeclaration":5088,"src":"1944:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"2003:20:16","nodeType":"VariableDeclaration","scope":4332,"src":"1990:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4162,"name":"bytes","nodeType":"ElementaryTypeName","src":"1990:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"_to","nameLocation":"2041:3:16","nodeType":"VariableDeclaration","scope":4332,"src":"2033:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4164,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"_nonce","nameLocation":"2062:6:16","nodeType":"VariableDeclaration","scope":4332,"src":"2054:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2054:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1934:140:16"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"2099:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest"},"typeName":{"id":4170,"nodeType":"UserDefinedTypeName","pathNode":{"id":4169,"name":"Structures.BayRequest","nameLocations":["2099:10:16","2110:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"2099:21:16"},"referencedDeclaration":5088,"src":"2099:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"visibility":"internal"}],"src":"2098:30:16"},"scope":4915,"src":"1912:1972:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4570,"nodeType":"Block","src":"4060:2623:16","statements":[{"assignments":[4346,null,null,null],"declarations":[{"constant":false,"id":4346,"mutability":"mutable","name":"vaultId","nameLocation":"4084:7:16","nodeType":"VariableDeclaration","scope":4570,"src":"4071:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4345,"name":"bytes","nodeType":"ElementaryTypeName","src":"4071:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},null,null,null],"id":4352,"initialValue":{"arguments":[{"id":4348,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"4127:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4349,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"4161:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4350,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"4178:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4347,"name":"_sismoVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"4101:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view returns (bytes memory,uint256,uint256,bytes memory)"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4101:93:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4070:124:16"},{"assignments":[4354],"declarations":[{"constant":false,"id":4354,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"4213:16:16","nodeType":"VariableDeclaration","scope":4570,"src":"4205:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4205:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4358,"initialValue":{"arguments":[{"id":4356,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"4242:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4355,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4232:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4232:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4205:45:16"},{"assignments":[4363],"declarations":[{"constant":false,"id":4363,"mutability":"mutable","name":"feed","nameLocation":"4284:4:16","nodeType":"VariableDeclaration","scope":4570,"src":"4261:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":4362,"nodeType":"UserDefinedTypeName","pathNode":{"id":4361,"name":"Structures.Feed","nameLocations":["4261:10:16","4272:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"4261:15:16"},"referencedDeclaration":5072,"src":"4261:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"id":4367,"initialValue":{"arguments":[{"id":4365,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4304:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4364,"name":"_getFeedInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"4291:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Feed_$5072_memory_ptr_$","typeString":"function (address) view returns (struct Structures.Feed memory)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"nodeType":"VariableDeclarationStatement","src":"4261:49:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4369,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"4342:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4371,"indexExpression":{"id":4370,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"4354:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4342:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"4342:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4373,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4372:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":4374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4377:16:16","memberName":"paymentRequested","nodeType":"MemberAccess","referencedDeclaration":5061,"src":"4372:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4342:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7061796d656e74206973206e6f74207468652073616d65206f66207468652066656564","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4407:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a8100c7054159b0f22b31695bb9fa77133ce860bcf01ed8ed08caedeb442f63","typeString":"literal_string \"BAY:payment is not the same of the feed\""},"value":"BAY:payment is not the same of the feed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a8100c7054159b0f22b31695bb9fa77133ce860bcf01ed8ed08caedeb442f63","typeString":"literal_string \"BAY:payment is not the same of the feed\""}],"id":4368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4321:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:137:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4378,"nodeType":"ExpressionStatement","src":"4321:137:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4380,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4490:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":4381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4495:14:16","memberName":"stakeRequested","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"4490:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":4382,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"4513:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4384,"indexExpression":{"id":4383,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"4525:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4513:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4532:5:16","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"4513:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4490:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7374616b65206973206e6f74207468652073616d65206f66207468652066656564","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4551:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6611c2116518876a7fafecdd590c59959a281dccfa04d86b6a059f42e9cae595","typeString":"literal_string \"BAY:stake is not the same of the feed\""},"value":"BAY:stake is not the same of the feed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6611c2116518876a7fafecdd590c59959a281dccfa04d86b6a059f42e9cae595","typeString":"literal_string \"BAY:stake is not the same of the feed\""}],"id":4379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:131:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4389,"nodeType":"ExpressionStatement","src":"4469:131:16"},{"expression":{"arguments":[{"arguments":[{"id":4395,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"4703:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":4392,"name":"usersMouduleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4647:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4391,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"4632:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$4026_$","typeString":"type(contract IMecenateUsers)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$4026","typeString":"contract IMecenateUsers"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4669:16:16","memberName":"checkifUserExist","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"4632:53:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view external returns (bool)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:101:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7573657220646f6573206e6f74206578697374","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_beb1b4967970ec14d8b62b9beace059ada26ea9aac885fdce8b0af82aa6af62e","typeString":"literal_string \"BAY:user does not exist\""},"value":"BAY:user does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_beb1b4967970ec14d8b62b9beace059ada26ea9aac885fdce8b0af82aa6af62e","typeString":"literal_string \"BAY:user does not exist\""}],"id":4390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4611:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:171:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"ExpressionStatement","src":"4611:171:16"},{"expression":{"arguments":[{"arguments":[{"id":4405,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"4892:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4406,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"4933:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"baseExpression":{"id":4407,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"4985:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4409,"indexExpression":{"id":4408,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5004:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4985:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5011:12:16","memberName":"vaultIdBuyer","nodeType":"MemberAccess","referencedDeclaration":5094,"src":"4985:38:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"expression":{"baseExpression":{"id":4411,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5056:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4413,"indexExpression":{"id":4412,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5075:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5056:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5082:13:16","memberName":"buyerResponse","nodeType":"MemberAccess","referencedDeclaration":5096,"src":"5056:39:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"expression":{"baseExpression":{"id":4415,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5122:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4417,"indexExpression":{"id":4416,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5141:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5122:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5148:7:16","memberName":"buyerTo","nodeType":"MemberAccess","referencedDeclaration":5098,"src":"5122:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4419,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5185:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4421,"indexExpression":{"id":4420,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5204:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5185:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5211:10:16","memberName":"buyerNonce","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"5185:36:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4403,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"4830:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4841:17:16","memberName":"BayRequestPrivate","nodeType":"MemberAccess","referencedDeclaration":5101,"src":"4830:28:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BayRequestPrivate_$5101_storage_ptr_$","typeString":"type(struct Structures.BayRequestPrivate storage pointer)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4877:13:16","4917:14:16","4971:12:16","5041:13:16","5113:7:16","5173:10:16"],"names":["vaultIdSeller","sellerResponse","vaultIdBuyer","buyerResponse","buyerTo","buyerNonce"],"nodeType":"FunctionCall","src":"4830:406:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_memory_ptr","typeString":"struct Structures.BayRequestPrivate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_memory_ptr","typeString":"struct Structures.BayRequestPrivate memory"}],"expression":{"id":4400,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"4793:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4812:4:16","memberName":"push","nodeType":"MemberAccess","src":"4793:23:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$_t_struct$_BayRequestPrivate_$5101_storage_$returns$__$attached_to$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequestPrivate storage ref[] storage pointer,struct Structures.BayRequestPrivate storage ref)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:453:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"4793:453:16"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4426,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5261:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4428,"indexExpression":{"id":4427,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5273:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5261:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5280:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"5261:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":4430,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"5291:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5302:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"5291:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5309:3:16","memberName":"NaN","nodeType":"MemberAccess","referencedDeclaration":4927,"src":"5291:21:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"5261:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4538,"nodeType":"Block","src":"6096:355:16","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4516,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"6194:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4518,"indexExpression":{"id":4517,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6213:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6194:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6220:13:16","memberName":"buyerResponse","nodeType":"MemberAccess","referencedDeclaration":5096,"src":"6194:39:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"expression":{"baseExpression":{"id":4520,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"6251:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4522,"indexExpression":{"id":4521,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6270:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6251:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6277:7:16","memberName":"buyerTo","nodeType":"MemberAccess","referencedDeclaration":5098,"src":"6251:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4524,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"6302:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4526,"indexExpression":{"id":4525,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6321:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6302:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:10:16","memberName":"buyerNonce","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"6302:36:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"baseExpression":{"id":4528,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6356:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4530,"indexExpression":{"id":4529,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6368:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6356:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6375:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"6356:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},{"expression":{"baseExpression":{"id":4532,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6400:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4534,"indexExpression":{"id":4533,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6412:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6400:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6419:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"6400:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4508,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"6124:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4507,"name":"IMecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"6110:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateFeed_$3920_$","typeString":"type(contract IMecenateFeed)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6110:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6131:10:16","memberName":"acceptPost","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"6110:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$_t_enum$_Tokens_$4930_$_t_uint256_$returns$__$","typeString":"function (bytes memory,address,bytes32,enum Structures.Tokens,uint256) payable external"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"baseExpression":{"id":4511,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6149:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4513,"indexExpression":{"id":4512,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6161:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6149:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6168:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"6149:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6110:66:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$_t_enum$_Tokens_$4930_$_t_uint256_$returns$__$value","typeString":"function (bytes memory,address,bytes32,enum Structures.Tokens,uint256) payable external"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6110:330:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4537,"nodeType":"ExpressionStatement","src":"6110:330:16"}]},"id":4539,"nodeType":"IfStatement","src":"5257:1194:16","trueBody":{"id":4506,"nodeType":"Block","src":"5314:776:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4434,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5332:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4436,"indexExpression":{"id":4435,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5344:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5332:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5351:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"5332:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4438,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"5362:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5373:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"5362:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5380:3:16","memberName":"DAI","nodeType":"MemberAccess","referencedDeclaration":4929,"src":"5362:21:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"5332:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4455,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5550:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4457,"indexExpression":{"id":4456,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5562:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5550:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5569:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"5550:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4459,"name":"Structures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"5580:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structures_$5102_$","typeString":"type(library Structures)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5591:6:16","memberName":"Tokens","nodeType":"MemberAccess","referencedDeclaration":4930,"src":"5580:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Tokens_$4930_$","typeString":"type(enum Structures.Tokens)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5598:4:16","memberName":"MUSE","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"5580:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"5550:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"5546:214:16","trueBody":{"id":4475,"nodeType":"Block","src":"5604:156:16","statements":[{"expression":{"arguments":[{"expression":{"id":4467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5669:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5669:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4469,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5701:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4471,"indexExpression":{"id":4470,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5713:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5701:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5720:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"5701:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4464,"name":"museToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"5629:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4463,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"5622:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5622:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5640:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"5622:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5622:123:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"ExpressionStatement","src":"5622:123:16"}]}},"id":4477,"nodeType":"IfStatement","src":"5328:432:16","trueBody":{"id":4454,"nodeType":"Block","src":"5385:155:16","statements":[{"expression":{"arguments":[{"expression":{"id":4446,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5449:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5453:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5449:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4448,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5481:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4450,"indexExpression":{"id":4449,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5493:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5481:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5500:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"5481:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4443,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"5410:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4442,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"5403:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5420:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":242,"src":"5403:24:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:122:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"nodeType":"ExpressionStatement","src":"5403:122:16"}]}},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4484,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5833:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4486,"indexExpression":{"id":4485,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5852:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5833:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5859:13:16","memberName":"buyerResponse","nodeType":"MemberAccess","referencedDeclaration":5096,"src":"5833:39:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"expression":{"baseExpression":{"id":4488,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5890:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4490,"indexExpression":{"id":4489,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5909:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5890:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5916:7:16","memberName":"buyerTo","nodeType":"MemberAccess","referencedDeclaration":5098,"src":"5890:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4492,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"5941:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4494,"indexExpression":{"id":4493,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5960:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5941:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5967:10:16","memberName":"buyerNonce","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"5941:36:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"baseExpression":{"id":4496,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"5995:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4498,"indexExpression":{"id":4497,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6007:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5995:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6014:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"5995:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},{"expression":{"baseExpression":{"id":4500,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6039:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4502,"indexExpression":{"id":4501,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6051:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6039:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6058:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"6039:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4479,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"5788:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4478,"name":"IMecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"5774:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateFeed_$3920_$","typeString":"type(contract IMecenateFeed)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:10:16","memberName":"acceptPost","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"5774:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$_t_enum$_Tokens_$4930_$_t_uint256_$returns$__$","typeString":"function (bytes memory,address,bytes32,enum Structures.Tokens,uint256) payable external"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"30","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5813:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"src":"5774:41:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$_t_enum$_Tokens_$4930_$_t_uint256_$returns$__$value","typeString":"function (bytes memory,address,bytes32,enum Structures.Tokens,uint256) payable external"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:305:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4505,"nodeType":"ExpressionStatement","src":"5774:305:16"}]}},{"expression":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4540,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6461:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4542,"indexExpression":{"id":4541,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6473:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6480:8:16","memberName":"accepted","nodeType":"MemberAccess","referencedDeclaration":5082,"src":"6461:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6491:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6461:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4546,"nodeType":"ExpressionStatement","src":"6461:34:16"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4547,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6506:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4549,"indexExpression":{"id":4548,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6518:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6506:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6525:11:16","memberName":"postAddress","nodeType":"MemberAccess","referencedDeclaration":5080,"src":"6506:30:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4551,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"6539:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6506:38:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4553,"nodeType":"ExpressionStatement","src":"6506:38:16"},{"expression":{"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4554,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6555:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4556,"indexExpression":{"id":4555,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6567:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6555:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6574:9:16","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"6555:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4558,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"6586:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":4559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6591:9:16","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":5059,"src":"6586:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6555:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4561,"nodeType":"ExpressionStatement","src":"6555:45:16"},{"eventCall":{"arguments":[{"id":4563,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"6632:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4564,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"6650:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4566,"indexExpression":{"id":4565,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6662:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6650:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},{"id":4567,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"6670:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"name":"RequestAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"6616:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_struct$_BayRequest_$5088_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,struct Structures.BayRequest memory,uint256)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6616:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4569,"nodeType":"EmitStatement","src":"6611:65:16"}]},"functionSelector":"346207b6","id":4571,"implemented":true,"kind":"function","modifiers":[],"name":"acceptRequest","nameLocation":"3899:13:16","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"index","nameLocation":"3930:5:16","nodeType":"VariableDeclaration","scope":4571,"src":"3922:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3922:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"_feed","nameLocation":"3953:5:16","nodeType":"VariableDeclaration","scope":4571,"src":"3945:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4335,"name":"address","nodeType":"ElementaryTypeName","src":"3945:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"3981:20:16","nodeType":"VariableDeclaration","scope":4571,"src":"3968:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3968:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"_to","nameLocation":"4019:3:16","nodeType":"VariableDeclaration","scope":4571,"src":"4011:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4339,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"_nonce","nameLocation":"4040:6:16","nodeType":"VariableDeclaration","scope":4571,"src":"4032:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4032:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3912:140:16"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"4060:0:16"},"scope":4915,"src":"3890:2793:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4632,"nodeType":"Block","src":"6874:549:16","statements":[{"assignments":[4589,4591,4593,4595],"declarations":[{"constant":false,"id":4589,"mutability":"mutable","name":"vaultId","nameLocation":"6911:7:16","nodeType":"VariableDeclaration","scope":4632,"src":"6898:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6898:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"twitterId","nameLocation":"6940:9:16","nodeType":"VariableDeclaration","scope":4632,"src":"6932:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"telegramId","nameLocation":"6971:10:16","nodeType":"VariableDeclaration","scope":4632,"src":"6963:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"6963:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"signedMessage","nameLocation":"7008:13:16","nodeType":"VariableDeclaration","scope":4632,"src":"6995:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4594,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4604,"initialValue":{"arguments":[{"id":4600,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"7099:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4601,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"7137:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4602,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"7158:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":4597,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"7052:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4596,"name":"IMecenateVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7034:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateVerifier_$4046_$","typeString":"type(contract IMecenateVerifier)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateVerifier_$4046","typeString":"contract IMecenateVerifier"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7070:11:16","memberName":"sismoVerify","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"7034:47:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view external returns (bytes memory,uint256,uint256,bytes memory)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:144:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6884:294:16"},{"assignments":[4606,4608],"declarations":[{"constant":false,"id":4606,"mutability":"mutable","name":"to","nameLocation":"7198:2:16","nodeType":"VariableDeclaration","scope":4632,"src":"7190:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4605,"name":"address","nodeType":"ElementaryTypeName","src":"7190:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"nonce","nameLocation":"7210:5:16","nodeType":"VariableDeclaration","scope":4632,"src":"7202:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7202:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4618,"initialValue":{"arguments":[{"id":4611,"name":"signedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7243:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7271:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4612,"name":"address","nodeType":"ElementaryTypeName","src":"7271:7:16","typeDescriptions":{}}},{"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7280:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7280:7:16","typeDescriptions":{}}}],"id":4616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7270:18:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(bytes32))"}],"expression":{"id":4609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7219:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7223:6:16","memberName":"decode","nodeType":"MemberAccess","src":"7219:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:79:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes32_$","typeString":"tuple(address payable,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7189:109:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"7317:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4621,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"7327:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7317:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742053616d65204e6f6e6365","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7334:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""},"value":"Not Same Nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4274a641d2b8402bc86755455243acc033c27d0ce9deb1af7fb079f715651773","typeString":"literal_string \"Not Same Nonce\""}],"id":4619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7309:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7309:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4625,"nodeType":"ExpressionStatement","src":"7309:42:16"},{"expression":{"components":[{"id":4626,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"7370:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4627,"name":"twitterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"7379:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4628,"name":"telegramId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7390:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4629,"name":"signedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7402:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7369:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"functionReturnParameters":4587,"id":4631,"nodeType":"Return","src":"7362:54:16"}]},"id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"_sismoVerify","nameLocation":"6698:12:16","nodeType":"FunctionDefinition","parameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"6733:20:16","nodeType":"VariableDeclaration","scope":4633,"src":"6720:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4572,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"_to","nameLocation":"6771:3:16","nodeType":"VariableDeclaration","scope":4633,"src":"6763:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"6763:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"_nonce","nameLocation":"6792:6:16","nodeType":"VariableDeclaration","scope":4633,"src":"6784:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6784:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6710:94:16"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"6828:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4579,"name":"bytes","nodeType":"ElementaryTypeName","src":"6828:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"6842:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"6842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"6851:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"6860:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4585,"name":"bytes","nodeType":"ElementaryTypeName","src":"6860:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6827:46:16"},"scope":4915,"src":"6689:734:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4642,"nodeType":"Block","src":"7533:35:16","statements":[{"expression":{"id":4640,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"7550:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"functionReturnParameters":4639,"id":4641,"nodeType":"Return","src":"7543:18:16"}]},"functionSelector":"8813ce12","id":4643,"implemented":true,"kind":"function","modifiers":[],"name":"getRequests","nameLocation":"7438:11:16","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"7449:2:16"},"returnParameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4643,"src":"7497:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.BayRequest[]"},"typeName":{"baseType":{"id":4636,"nodeType":"UserDefinedTypeName","pathNode":{"id":4635,"name":"Structures.BayRequest","nameLocations":["7497:10:16","7508:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"7497:21:16"},"referencedDeclaration":5088,"src":"7497:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"id":4637,"nodeType":"ArrayTypeName","src":"7497:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr","typeString":"struct Structures.BayRequest[]"}},"visibility":"internal"}],"src":"7496:32:16"},"scope":4915,"src":"7429:139:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4656,"nodeType":"Block","src":"7686:39:16","statements":[{"expression":{"baseExpression":{"id":4652,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"7703:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4654,"indexExpression":{"id":4653,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"7712:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7703:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"functionReturnParameters":4651,"id":4655,"nodeType":"Return","src":"7696:22:16"}]},"functionSelector":"a357427d","id":4657,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestForAddress","nameLocation":"7583:20:16","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"_user","nameLocation":"7621:5:16","nodeType":"VariableDeclaration","scope":4657,"src":"7613:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7613:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7603:29:16"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4657,"src":"7654:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.BayRequest[]"},"typeName":{"baseType":{"id":4648,"nodeType":"UserDefinedTypeName","pathNode":{"id":4647,"name":"Structures.BayRequest","nameLocations":["7654:10:16","7665:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"7654:21:16"},"referencedDeclaration":5088,"src":"7654:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"id":4649,"nodeType":"ArrayTypeName","src":"7654:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr","typeString":"struct Structures.BayRequest[]"}},"visibility":"internal"}],"src":"7653:32:16"},"scope":4915,"src":"7574:151:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4873,"nodeType":"Block","src":"7980:2279:16","statements":[{"assignments":[4669,4671,4673,4675],"declarations":[{"constant":false,"id":4669,"mutability":"mutable","name":"vaultId","nameLocation":"8017:7:16","nodeType":"VariableDeclaration","scope":4873,"src":"8004:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4668,"name":"bytes","nodeType":"ElementaryTypeName","src":"8004:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"twitterId","nameLocation":"8046:9:16","nodeType":"VariableDeclaration","scope":4873,"src":"8038:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"8038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"telegramId","nameLocation":"8077:10:16","nodeType":"VariableDeclaration","scope":4873,"src":"8069:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"signedMessage","nameLocation":"8114:13:16","nodeType":"VariableDeclaration","scope":4873,"src":"8101:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4674,"name":"bytes","nodeType":"ElementaryTypeName","src":"8101:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4681,"initialValue":{"arguments":[{"id":4677,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"8153:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4678,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8175:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4679,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"8180:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4676,"name":"_sismoVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"8140:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address,bytes32) view returns (bytes memory,uint256,uint256,bytes memory)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8140:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7990:197:16"},{"assignments":[4683],"declarations":[{"constant":false,"id":4683,"mutability":"mutable","name":"encryptedVaultId","nameLocation":"8206:16:16","nodeType":"VariableDeclaration","scope":4873,"src":"8198:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8198:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4687,"initialValue":{"arguments":[{"id":4685,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"8235:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8225:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8225:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8198:45:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"8275:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"baseExpression":{"id":4691,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"8321:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4693,"indexExpression":{"id":4692,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"8340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8347:12:16","memberName":"vaultIdBuyer","nodeType":"MemberAccess","referencedDeclaration":5094,"src":"8321:38:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":4690,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8311:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8311:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8275:85:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a796f7520617265206e6f7420746865206275796572","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8374:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_07fe356ea368815520f784c413016a0ff30d7dfe2083db866fc286c158984a44","typeString":"literal_string \"BAY:you are not the buyer\""},"value":"BAY:you are not the buyer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07fe356ea368815520f784c413016a0ff30d7dfe2083db866fc286c158984a44","typeString":"literal_string \"BAY:you are not the buyer\""}],"id":4688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8254:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8254:157:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4699,"nodeType":"ExpressionStatement","src":"8254:157:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4701,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"8443:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4703,"indexExpression":{"id":4702,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"8455:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8443:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8462:8:16","memberName":"accepted","nodeType":"MemberAccess","referencedDeclaration":5082,"src":"8443:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8443:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a7265717565737420697320616c7265616479206163636570746564","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8493:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d803e9092804749b68646ef4ecdc425c6c1015c17cd89826e1b87938bdf0ea84","typeString":"literal_string \"BAY:request is already accepted\""},"value":"BAY:request is already accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d803e9092804749b68646ef4ecdc425c6c1015c17cd89826e1b87938bdf0ea84","typeString":"literal_string \"BAY:request is already accepted\""}],"id":4700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8422:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:114:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"ExpressionStatement","src":"8422:114:16"},{"assignments":[4714],"declarations":[{"constant":false,"id":4714,"mutability":"mutable","name":"requestToRemove","nameLocation":"8576:15:16","nodeType":"VariableDeclaration","scope":4873,"src":"8547:44:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest"},"typeName":{"id":4713,"nodeType":"UserDefinedTypeName","pathNode":{"id":4712,"name":"Structures.BayRequest","nameLocations":["8547:10:16","8558:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5088,"src":"8547:21:16"},"referencedDeclaration":5088,"src":"8547:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage_ptr","typeString":"struct Structures.BayRequest"}},"visibility":"internal"}],"id":4718,"initialValue":{"baseExpression":{"id":4715,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"8594:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4717,"indexExpression":{"id":4716,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"8606:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8594:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8547:65:16"},{"assignments":[4720,null],"declarations":[{"constant":false,"id":4720,"mutability":"mutable","name":"_result","nameLocation":"8676:7:16","nodeType":"VariableDeclaration","scope":4873,"src":"8671:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4719,"name":"bool","nodeType":"ElementaryTypeName","src":"8671:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4728,"initialValue":{"arguments":[{"id":4726,"name":"sismoConnectResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"8753:20:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4721,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"8689:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8703:4:16","memberName":"call","nodeType":"MemberAccess","src":"8689:18:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4723,"name":"requestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"8715:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"8715:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8689:50:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8689:94:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8670:113:16"},{"expression":{"arguments":[{"id":4730,"name":"_result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"8802:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4241593a5661756c742063616c6c206661696c6564","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8811:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0616e234b48488015082cbf6c63e92c395010c888cc443ce11377774798a3b17","typeString":"literal_string \"BAY:Vault call failed\""},"value":"BAY:Vault call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0616e234b48488015082cbf6c63e92c395010c888cc443ce11377774798a3b17","typeString":"literal_string \"BAY:Vault call failed\""}],"id":4729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8794:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4733,"nodeType":"ExpressionStatement","src":"8794:41:16"},{"assignments":[4735],"declarations":[{"constant":false,"id":4735,"mutability":"mutable","name":"lastIndex","nameLocation":"8895:9:16","nodeType":"VariableDeclaration","scope":4873,"src":"8887:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4736,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"8907:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8919:6:16","memberName":"length","nodeType":"MemberAccess","src":"8907:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8907:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8887:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"8943:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4742,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"8951:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8943:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4753,"nodeType":"IfStatement","src":"8939:91:16","trueBody":{"id":4752,"nodeType":"Block","src":"8962:68:16","statements":[{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4744,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"8976:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4746,"indexExpression":{"id":4745,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"8988:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8976:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4747,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"8997:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4749,"indexExpression":{"id":4748,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"9009:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8997:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"src":"8976:43:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4751,"nodeType":"ExpressionStatement","src":"8976:43:16"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4754,"name":"allRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"9039:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9051:3:16","memberName":"pop","nodeType":"MemberAccess","src":"9039:15:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequest storage ref[] storage pointer)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9039:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4758,"nodeType":"ExpressionStatement","src":"9039:17:16"},{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"lastIndexPrivate","nameLocation":"9123:16:16","nodeType":"VariableDeclaration","scope":4873,"src":"9115:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"9115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4765,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4761,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"9142:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9161:6:16","memberName":"length","nodeType":"MemberAccess","src":"9142:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9142:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9115:56:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"9185:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4767,"name":"lastIndexPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9193:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9185:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4778,"nodeType":"IfStatement","src":"9181:119:16","trueBody":{"id":4777,"nodeType":"Block","src":"9211:89:16","statements":[{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4769,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"9225:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4771,"indexExpression":{"id":4770,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"9244:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9225:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4772,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"9253:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4774,"indexExpression":{"id":4773,"name":"lastIndexPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9272:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9253:36:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"src":"9225:64:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequestPrivate_$5101_storage","typeString":"struct Structures.BayRequestPrivate storage ref"}},"id":4776,"nodeType":"ExpressionStatement","src":"9225:64:16"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4779,"name":"allRequestsPrivate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"9309:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage","typeString":"struct Structures.BayRequestPrivate storage ref[] storage ref"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9328:3:16","memberName":"pop","nodeType":"MemberAccess","src":"9309:22:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_BayRequestPrivate_$5101_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequestPrivate storage ref[] storage pointer)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4783,"nodeType":"ExpressionStatement","src":"9309:24:16"},{"body":{"id":4871,"nodeType":"Block","src":"9448:805:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4797,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9483:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4799,"indexExpression":{"id":4798,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9492:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9483:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4801,"indexExpression":{"id":4800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9510:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9483:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9513:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"9483:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4803,"name":"requestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9540:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9556:7:16","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":5076,"src":"9540:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4806,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9583:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4808,"indexExpression":{"id":4807,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9592:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9583:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4810,"indexExpression":{"id":4809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9610:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9583:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9613:5:16","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"9583:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4812,"name":"requestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9622:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9638:5:16","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"9622:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9583:60:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9483:160:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4816,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9663:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4818,"indexExpression":{"id":4817,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9672:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9663:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4820,"indexExpression":{"id":4819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9690:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9663:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9693:11:16","memberName":"postAddress","nodeType":"MemberAccess","referencedDeclaration":5080,"src":"9663:41:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4822,"name":"requestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9724:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9740:11:16","memberName":"postAddress","nodeType":"MemberAccess","referencedDeclaration":5080,"src":"9724:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9663:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9483:268:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4826,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9771:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4828,"indexExpression":{"id":4827,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9780:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9771:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4830,"indexExpression":{"id":4829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9798:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9771:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9801:9:16","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"9771:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4832,"name":"requestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9830:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_memory_ptr","typeString":"struct Structures.BayRequest memory"}},"id":4833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9846:9:16","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"9830:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9771:84:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9483:372:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4870,"nodeType":"IfStatement","src":"9462:781:16","trueBody":{"id":4869,"nodeType":"Block","src":"9870:373:16","statements":[{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"lastIndexSender","nameLocation":"9896:15:16","nodeType":"VariableDeclaration","scope":4869,"src":"9888:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"9888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4844,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4838,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9914:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4840,"indexExpression":{"id":4839,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9923:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9914:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9941:6:16","memberName":"length","nodeType":"MemberAccess","src":"9914:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9914:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9888:63:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9973:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4846,"name":"lastIndexSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"9977:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9973:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4861,"nodeType":"IfStatement","src":"9969:187:16","trueBody":{"id":4860,"nodeType":"Block","src":"9994:162:16","statements":[{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4848,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"10016:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4851,"indexExpression":{"id":4849,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"10025:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10016:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4852,"indexExpression":{"id":4850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"10043:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10016:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":4853,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"10048:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4855,"indexExpression":{"id":4854,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"10057:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10048:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4857,"indexExpression":{"id":4856,"name":"lastIndexSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"10100:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10048:89:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"src":"10016:121:16","typeDescriptions":{"typeIdentifier":"t_struct$_BayRequest_$5088_storage","typeString":"struct Structures.BayRequest storage ref"}},"id":4859,"nodeType":"ExpressionStatement","src":"10016:121:16"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":4862,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"10173:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4864,"indexExpression":{"id":4863,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"10182:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10173:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10200:3:16","memberName":"pop","nodeType":"MemberAccess","src":"10173:30:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_ptr_$","typeString":"function (struct Structures.BayRequest storage ref[] storage pointer)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10173:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4867,"nodeType":"ExpressionStatement","src":"10173:32:16"},{"id":4868,"nodeType":"Break","src":"10223:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9404:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":4789,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9408:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct Structures.BayRequest storage ref[] storage ref)"}},"id":4791,"indexExpression":{"id":4790,"name":"encryptedVaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"9417:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9408:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BayRequest_$5088_storage_$dyn_storage","typeString":"struct Structures.BayRequest storage ref[] storage ref"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9435:6:16","memberName":"length","nodeType":"MemberAccess","src":"9408:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9404:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"initializationExpression":{"assignments":[4785],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"i","nameLocation":"9397:1:16","nodeType":"VariableDeclaration","scope":4872,"src":"9389:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4787,"initialValue":{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9401:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9389:13:16"},"loopExpression":{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9443:3:16","subExpression":{"id":4794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"9443:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4796,"nodeType":"ExpressionStatement","src":"9443:3:16"},"nodeType":"ForStatement","src":"9384:869:16"}]},"functionSelector":"97910036","id":4874,"implemented":true,"kind":"function","modifiers":[],"name":"removeRequest","nameLocation":"7842:13:16","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"index","nameLocation":"7873:5:16","nodeType":"VariableDeclaration","scope":4874,"src":"7865:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7865:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"sismoConnectResponse","nameLocation":"7901:20:16","nodeType":"VariableDeclaration","scope":4874,"src":"7888:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4660,"name":"bytes","nodeType":"ElementaryTypeName","src":"7888:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"_to","nameLocation":"7939:3:16","nodeType":"VariableDeclaration","scope":4874,"src":"7931:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4662,"name":"address","nodeType":"ElementaryTypeName","src":"7931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"_nonce","nameLocation":"7960:6:16","nodeType":"VariableDeclaration","scope":4874,"src":"7952:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7952:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7855:117:16"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[],"src":"7980:0:16"},"scope":4915,"src":"7833:2426:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4885,"nodeType":"Block","src":"10321:39:16","statements":[{"expression":{"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"10331:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4882,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10347:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10331:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4884,"nodeType":"ExpressionStatement","src":"10331:22:16"}]},"functionSelector":"60e232a9","id":4886,"implemented":true,"kind":"function","modifiers":[{"id":4879,"kind":"modifierInvocation","modifierName":{"id":4878,"name":"onlyOwner","nameLocations":["10311:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10311:9:16"},"nodeType":"ModifierInvocation","src":"10311:9:16"}],"name":"changeVault","nameLocation":"10274:11:16","nodeType":"FunctionDefinition","parameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"_vault","nameLocation":"10294:6:16","nodeType":"VariableDeclaration","scope":4886,"src":"10286:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4875,"name":"address","nodeType":"ElementaryTypeName","src":"10286:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10285:16:16"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[],"src":"10321:0:16"},"scope":4915,"src":"10265:95:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4897,"nodeType":"Block","src":"10428:45:16","statements":[{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"10438:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4894,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"10457:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10438:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4896,"nodeType":"ExpressionStatement","src":"10438:28:16"}]},"functionSelector":"cf04fb94","id":4898,"implemented":true,"kind":"function","modifiers":[{"id":4891,"kind":"modifierInvocation","modifierName":{"id":4890,"name":"onlyOwner","nameLocations":["10418:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10418:9:16"},"nodeType":"ModifierInvocation","src":"10418:9:16"}],"name":"changeVerifier","nameLocation":"10375:14:16","nodeType":"FunctionDefinition","parameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"_verifier","nameLocation":"10398:9:16","nodeType":"VariableDeclaration","scope":4898,"src":"10390:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4887,"name":"address","nodeType":"ElementaryTypeName","src":"10390:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10389:19:16"},"returnParameters":{"id":4892,"nodeType":"ParameterList","parameters":[],"src":"10428:0:16"},"scope":4915,"src":"10366:107:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4909,"nodeType":"Block","src":"10547:52:16","statements":[{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"usersMouduleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"10557:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4906,"name":"_usersModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10580:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10557:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4908,"nodeType":"ExpressionStatement","src":"10557:35:16"}]},"functionSelector":"c4bb77d0","id":4910,"implemented":true,"kind":"function","modifiers":[{"id":4903,"kind":"modifierInvocation","modifierName":{"id":4902,"name":"onlyOwner","nameLocations":["10537:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10537:9:16"},"nodeType":"ModifierInvocation","src":"10537:9:16"}],"name":"changeUsersModule","nameLocation":"10488:17:16","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"_usersModule","nameLocation":"10514:12:16","nodeType":"VariableDeclaration","scope":4910,"src":"10506:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4899,"name":"address","nodeType":"ElementaryTypeName","src":"10506:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10505:22:16"},"returnParameters":{"id":4904,"nodeType":"ParameterList","parameters":[],"src":"10547:0:16"},"scope":4915,"src":"10479:120:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4913,"nodeType":"Block","src":"10632:2:16","statements":[]},"id":4914,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[],"src":"10612:2:16"},"returnParameters":{"id":4912,"nodeType":"ParameterList","parameters":[],"src":"10632:0:16"},"scope":4915,"src":"10605:29:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4916,"src":"635:10001:16","usedErrors":[]}],"src":"209:10428:16"},"id":16},"contracts/library/Structures.sol":{"ast":{"absolutePath":"contracts/library/Structures.sol","exportedSymbols":{"Structures":[5102]},"id":5103,"nodeType":"SourceUnit","nodes":[{"id":4917,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"113:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Structures","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5102,"linearizedBaseContracts":[5102],"name":"Structures","nameLocation":"146:10:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Structures.PostStatus","id":4926,"members":[{"id":4918,"name":"Waiting","nameLocation":"189:7:17","nodeType":"EnumValue","src":"189:7:17"},{"id":4919,"name":"Proposed","nameLocation":"206:8:17","nodeType":"EnumValue","src":"206:8:17"},{"id":4920,"name":"Accepted","nameLocation":"224:8:17","nodeType":"EnumValue","src":"224:8:17"},{"id":4921,"name":"Submitted","nameLocation":"242:9:17","nodeType":"EnumValue","src":"242:9:17"},{"id":4922,"name":"Finalized","nameLocation":"261:9:17","nodeType":"EnumValue","src":"261:9:17"},{"id":4923,"name":"Punished","nameLocation":"280:8:17","nodeType":"EnumValue","src":"280:8:17"},{"id":4924,"name":"Revealed","nameLocation":"298:8:17","nodeType":"EnumValue","src":"298:8:17"},{"id":4925,"name":"Renounced","nameLocation":"316:9:17","nodeType":"EnumValue","src":"316:9:17"}],"name":"PostStatus","nameLocation":"168:10:17","nodeType":"EnumDefinition","src":"163:168:17"},{"canonicalName":"Structures.Tokens","id":4930,"members":[{"id":4927,"name":"NaN","nameLocation":"358:3:17","nodeType":"EnumValue","src":"358:3:17"},{"id":4928,"name":"MUSE","nameLocation":"371:4:17","nodeType":"EnumValue","src":"371:4:17"},{"id":4929,"name":"DAI","nameLocation":"385:3:17","nodeType":"EnumValue","src":"385:3:17"}],"name":"Tokens","nameLocation":"341:6:17","nodeType":"EnumDefinition","src":"336:58:17"},{"canonicalName":"Structures.PostType","id":4936,"members":[{"id":4931,"name":"Text","nameLocation":"423:4:17","nodeType":"EnumValue","src":"423:4:17"},{"id":4932,"name":"Image","nameLocation":"437:5:17","nodeType":"EnumValue","src":"437:5:17"},{"id":4933,"name":"Video","nameLocation":"452:5:17","nodeType":"EnumValue","src":"452:5:17"},{"id":4934,"name":"Audio","nameLocation":"467:5:17","nodeType":"EnumValue","src":"467:5:17"},{"id":4935,"name":"File","nameLocation":"482:4:17","nodeType":"EnumValue","src":"482:4:17"}],"name":"PostType","nameLocation":"404:8:17","nodeType":"EnumDefinition","src":"399:93:17"},{"canonicalName":"Structures.PostDuration","id":4942,"members":[{"id":4937,"name":"OneDay","nameLocation":"525:6:17","nodeType":"EnumValue","src":"525:6:17"},{"id":4938,"name":"ThreeDays","nameLocation":"541:9:17","nodeType":"EnumValue","src":"541:9:17"},{"id":4939,"name":"OneWeek","nameLocation":"560:7:17","nodeType":"EnumValue","src":"560:7:17"},{"id":4940,"name":"TwoWeeks","nameLocation":"577:8:17","nodeType":"EnumValue","src":"577:8:17"},{"id":4941,"name":"OneMonth","nameLocation":"595:8:17","nodeType":"EnumValue","src":"595:8:17"}],"name":"PostDuration","nameLocation":"502:12:17","nodeType":"EnumDefinition","src":"497:112:17"},{"canonicalName":"Structures.FeedSettings","id":4965,"members":[{"constant":false,"id":4944,"mutability":"mutable","name":"punishmentRatio","nameLocation":"653:15:17","nodeType":"VariableDeclaration","scope":4965,"src":"645:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4946,"mutability":"mutable","name":"postCount","nameLocation":"686:9:17","nodeType":"VariableDeclaration","scope":4965,"src":"678:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4948,"mutability":"mutable","name":"usersModuleContract","nameLocation":"713:19:17","nodeType":"VariableDeclaration","scope":4965,"src":"705:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4947,"name":"address","nodeType":"ElementaryTypeName","src":"705:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4950,"mutability":"mutable","name":"factoryContract","nameLocation":"750:15:17","nodeType":"VariableDeclaration","scope":4965,"src":"742:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4949,"name":"address","nodeType":"ElementaryTypeName","src":"742:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4952,"mutability":"mutable","name":"verifierContract","nameLocation":"783:16:17","nodeType":"VariableDeclaration","scope":4965,"src":"775:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4951,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"vaultContract","nameLocation":"817:13:17","nodeType":"VariableDeclaration","scope":4965,"src":"809:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4953,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"router","nameLocation":"848:6:17","nodeType":"VariableDeclaration","scope":4965,"src":"840:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"encodedSymKey","nameLocation":"870:13:17","nodeType":"VariableDeclaration","scope":4965,"src":"864:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4957,"name":"bytes","nodeType":"ElementaryTypeName","src":"864:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"lastMessageForBuyer","nameLocation":"899:19:17","nodeType":"VariableDeclaration","scope":4965,"src":"893:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4959,"name":"bytes","nodeType":"ElementaryTypeName","src":"893:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"lastMessageForSeller","nameLocation":"934:20:17","nodeType":"VariableDeclaration","scope":4965,"src":"928:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4961,"name":"bytes","nodeType":"ElementaryTypeName","src":"928:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"version","nameLocation":"971:7:17","nodeType":"VariableDeclaration","scope":4965,"src":"964:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4963,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"FeedSettings","nameLocation":"622:12:17","nodeType":"StructDefinition","scope":5102,"src":"615:370:17","visibility":"public"},{"canonicalName":"Structures.FactorySettings","id":4982,"members":[{"constant":false,"id":4967,"mutability":"mutable","name":"treasuryContract","nameLocation":"1032:16:17","nodeType":"VariableDeclaration","scope":4982,"src":"1024:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4966,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"usersModuleContract","nameLocation":"1066:19:17","nodeType":"VariableDeclaration","scope":4982,"src":"1058:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4968,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"verifierContract","nameLocation":"1103:16:17","nodeType":"VariableDeclaration","scope":4982,"src":"1095:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"vaultContract","nameLocation":"1137:13:17","nodeType":"VariableDeclaration","scope":4982,"src":"1129:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4972,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"museToken","nameLocation":"1168:9:17","nodeType":"VariableDeclaration","scope":4982,"src":"1160:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4974,"name":"address","nodeType":"ElementaryTypeName","src":"1160:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"daiToken","nameLocation":"1195:8:17","nodeType":"VariableDeclaration","scope":4982,"src":"1187:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4976,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"wethToken","nameLocation":"1221:9:17","nodeType":"VariableDeclaration","scope":4982,"src":"1213:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"router","nameLocation":"1248:6:17","nodeType":"VariableDeclaration","scope":4982,"src":"1240:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4980,"name":"address","nodeType":"ElementaryTypeName","src":"1240:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FactorySettings","nameLocation":"998:15:17","nodeType":"StructDefinition","scope":5102,"src":"991:270:17","visibility":"public"},{"canonicalName":"Structures.Post","id":4989,"members":[{"constant":false,"id":4985,"mutability":"mutable","name":"creator","nameLocation":"1375:7:17","nodeType":"VariableDeclaration","scope":4989,"src":"1370:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5047_storage_ptr","typeString":"struct Structures.User"},"typeName":{"id":4984,"nodeType":"UserDefinedTypeName","pathNode":{"id":4983,"name":"User","nameLocations":["1370:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":5047,"src":"1370:4:17"},"referencedDeclaration":5047,"src":"1370:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5047_storage_ptr","typeString":"struct Structures.User"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"postdata","nameLocation":"1401:8:17","nodeType":"VariableDeclaration","scope":4989,"src":"1392:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostData_$4999_storage_ptr","typeString":"struct Structures.PostData"},"typeName":{"id":4987,"nodeType":"UserDefinedTypeName","pathNode":{"id":4986,"name":"PostData","nameLocations":["1392:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4999,"src":"1392:8:17"},"referencedDeclaration":4999,"src":"1392:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_PostData_$4999_storage_ptr","typeString":"struct Structures.PostData"}},"visibility":"internal"}],"name":"Post","nameLocation":"1355:4:17","nodeType":"StructDefinition","scope":5102,"src":"1348:68:17","visibility":"public"},{"canonicalName":"Structures.PostData","id":4999,"members":[{"constant":false,"id":4992,"mutability":"mutable","name":"settings","nameLocation":"1554:8:17","nodeType":"VariableDeclaration","scope":4999,"src":"1541:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostSettings_$5022_storage_ptr","typeString":"struct Structures.PostSettings"},"typeName":{"id":4991,"nodeType":"UserDefinedTypeName","pathNode":{"id":4990,"name":"PostSettings","nameLocations":["1541:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":5022,"src":"1541:12:17"},"referencedDeclaration":5022,"src":"1541:12:17","typeDescriptions":{"typeIdentifier":"t_struct$_PostSettings_$5022_storage_ptr","typeString":"struct Structures.PostSettings"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"escrow","nameLocation":"1583:6:17","nodeType":"VariableDeclaration","scope":4999,"src":"1572:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostEscrow_$5044_storage_ptr","typeString":"struct Structures.PostEscrow"},"typeName":{"id":4994,"nodeType":"UserDefinedTypeName","pathNode":{"id":4993,"name":"PostEscrow","nameLocations":["1572:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":5044,"src":"1572:10:17"},"referencedDeclaration":5044,"src":"1572:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_PostEscrow_$5044_storage_ptr","typeString":"struct Structures.PostEscrow"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"data","nameLocation":"1617:4:17","nodeType":"VariableDeclaration","scope":4999,"src":"1599:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostEncryptedData_$5006_storage_ptr","typeString":"struct Structures.PostEncryptedData"},"typeName":{"id":4997,"nodeType":"UserDefinedTypeName","pathNode":{"id":4996,"name":"PostEncryptedData","nameLocations":["1599:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":5006,"src":"1599:17:17"},"referencedDeclaration":5006,"src":"1599:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_PostEncryptedData_$5006_storage_ptr","typeString":"struct Structures.PostEncryptedData"}},"visibility":"internal"}],"name":"PostData","nameLocation":"1522:8:17","nodeType":"StructDefinition","scope":5102,"src":"1515:113:17","visibility":"public"},{"canonicalName":"Structures.PostEncryptedData","id":5006,"members":[{"constant":false,"id":5001,"mutability":"mutable","name":"encryptedData","nameLocation":"1778:13:17","nodeType":"VariableDeclaration","scope":5006,"src":"1772:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5000,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"encryptedKey","nameLocation":"1807:12:17","nodeType":"VariableDeclaration","scope":5006,"src":"1801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5002,"name":"bytes","nodeType":"ElementaryTypeName","src":"1801:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"decryptedData","nameLocation":"1835:13:17","nodeType":"VariableDeclaration","scope":5006,"src":"1829:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5004,"name":"bytes","nodeType":"ElementaryTypeName","src":"1829:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PostEncryptedData","nameLocation":"1744:17:17","nodeType":"StructDefinition","scope":5102,"src":"1737:118:17","visibility":"public"},{"canonicalName":"Structures.PostSettings","id":5022,"members":[{"constant":false,"id":5009,"mutability":"mutable","name":"status","nameLocation":"1999:6:17","nodeType":"VariableDeclaration","scope":5022,"src":"1988:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"},"typeName":{"id":5008,"nodeType":"UserDefinedTypeName","pathNode":{"id":5007,"name":"PostStatus","nameLocations":["1988:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"1988:10:17"},"referencedDeclaration":4926,"src":"1988:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"visibility":"internal"},{"constant":false,"id":5012,"mutability":"mutable","name":"postType","nameLocation":"2024:8:17","nodeType":"VariableDeclaration","scope":5022,"src":"2015:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostType_$4936","typeString":"enum Structures.PostType"},"typeName":{"id":5011,"nodeType":"UserDefinedTypeName","pathNode":{"id":5010,"name":"PostType","nameLocations":["2015:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4936,"src":"2015:8:17"},"referencedDeclaration":4936,"src":"2015:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostType_$4936","typeString":"enum Structures.PostType"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"creationTimeStamp","nameLocation":"2050:17:17","nodeType":"VariableDeclaration","scope":5022,"src":"2042:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5016,"mutability":"mutable","name":"endTimeStamp","nameLocation":"2085:12:17","nodeType":"VariableDeclaration","scope":5022,"src":"2077:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2077:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"duration","nameLocation":"2115:8:17","nodeType":"VariableDeclaration","scope":5022,"src":"2107:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"tokenId","nameLocation":"2140:7:17","nodeType":"VariableDeclaration","scope":5022,"src":"2133:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"typeName":{"id":5020,"nodeType":"UserDefinedTypeName","pathNode":{"id":5019,"name":"Tokens","nameLocations":["2133:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"2133:6:17"},"referencedDeclaration":4930,"src":"2133:6:17","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"visibility":"internal"}],"name":"PostSettings","nameLocation":"1965:12:17","nodeType":"StructDefinition","scope":5102,"src":"1958:196:17","visibility":"public"},{"canonicalName":"Structures.PostSettingPrivate","id":5035,"members":[{"constant":false,"id":5024,"mutability":"mutable","name":"vaultIdSeller","nameLocation":"2307:13:17","nodeType":"VariableDeclaration","scope":5035,"src":"2301:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5023,"name":"bytes","nodeType":"ElementaryTypeName","src":"2301:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"sellerTwitterId","nameLocation":"2338:15:17","nodeType":"VariableDeclaration","scope":5035,"src":"2330:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"sellerTelegramId","nameLocation":"2371:16:17","nodeType":"VariableDeclaration","scope":5035,"src":"2363:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5030,"mutability":"mutable","name":"vaultIdBuyer","nameLocation":"2403:12:17","nodeType":"VariableDeclaration","scope":5035,"src":"2397:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5029,"name":"bytes","nodeType":"ElementaryTypeName","src":"2397:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5032,"mutability":"mutable","name":"buyerTwitterId","nameLocation":"2433:14:17","nodeType":"VariableDeclaration","scope":5035,"src":"2425:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"buyerTelegramId","nameLocation":"2465:15:17","nodeType":"VariableDeclaration","scope":5035,"src":"2457:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PostSettingPrivate","nameLocation":"2272:18:17","nodeType":"StructDefinition","scope":5102,"src":"2265:222:17","visibility":"public"},{"canonicalName":"Structures.PostEscrow","id":5044,"members":[{"constant":false,"id":5037,"mutability":"mutable","name":"stake","nameLocation":"2624:5:17","nodeType":"VariableDeclaration","scope":5044,"src":"2616:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"payment","nameLocation":"2647:7:17","nodeType":"VariableDeclaration","scope":5044,"src":"2639:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5041,"mutability":"mutable","name":"punishment","nameLocation":"2672:10:17","nodeType":"VariableDeclaration","scope":5044,"src":"2664:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5043,"mutability":"mutable","name":"penalty","nameLocation":"2700:7:17","nodeType":"VariableDeclaration","scope":5044,"src":"2692:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2692:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PostEscrow","nameLocation":"2595:10:17","nodeType":"StructDefinition","scope":5102,"src":"2588:126:17","visibility":"public"},{"canonicalName":"Structures.User","id":5047,"members":[{"constant":false,"id":5046,"mutability":"mutable","name":"vaultId","nameLocation":"2831:7:17","nodeType":"VariableDeclaration","scope":5047,"src":"2823:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2823:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"User","nameLocation":"2808:4:17","nodeType":"StructDefinition","scope":5102,"src":"2801:44:17","visibility":"public"},{"canonicalName":"Structures.Feed","id":5072,"members":[{"constant":false,"id":5049,"mutability":"mutable","name":"contractAddress","nameLocation":"2962:15:17","nodeType":"VariableDeclaration","scope":5072,"src":"2954:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5048,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5051,"mutability":"mutable","name":"operator","nameLocation":"2995:8:17","nodeType":"VariableDeclaration","scope":5072,"src":"2987:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"sellerStake","nameLocation":"3021:11:17","nodeType":"VariableDeclaration","scope":5072,"src":"3013:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"buyerStake","nameLocation":"3050:10:17","nodeType":"VariableDeclaration","scope":5072,"src":"3042:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"totalStake","nameLocation":"3078:10:17","nodeType":"VariableDeclaration","scope":5072,"src":"3070:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"postCount","nameLocation":"3106:9:17","nodeType":"VariableDeclaration","scope":5072,"src":"3098:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"paymentRequested","nameLocation":"3133:16:17","nodeType":"VariableDeclaration","scope":5072,"src":"3125:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"stakeRequested","nameLocation":"3167:14:17","nodeType":"VariableDeclaration","scope":5072,"src":"3159:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"status","nameLocation":"3202:6:17","nodeType":"VariableDeclaration","scope":5072,"src":"3191:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"},"typeName":{"id":5065,"nodeType":"UserDefinedTypeName","pathNode":{"id":5064,"name":"PostStatus","nameLocations":["3191:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"3191:10:17"},"referencedDeclaration":4926,"src":"3191:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"tokenId","nameLocation":"3225:7:17","nodeType":"VariableDeclaration","scope":5072,"src":"3218:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"Tokens","nameLocations":["3218:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"3218:6:17"},"referencedDeclaration":4930,"src":"3218:6:17","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":5071,"mutability":"mutable","name":"version","nameLocation":"3249:7:17","nodeType":"VariableDeclaration","scope":5072,"src":"3242:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5070,"name":"string","nodeType":"ElementaryTypeName","src":"3242:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Feed","nameLocation":"2939:4:17","nodeType":"StructDefinition","scope":5102,"src":"2932:331:17","visibility":"public"},{"canonicalName":"Structures.BayRequest","id":5088,"members":[{"constant":false,"id":5074,"mutability":"mutable","name":"request","nameLocation":"3393:7:17","nodeType":"VariableDeclaration","scope":5088,"src":"3385:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3385:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"payment","nameLocation":"3418:7:17","nodeType":"VariableDeclaration","scope":5088,"src":"3410:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3410:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"stake","nameLocation":"3443:5:17","nodeType":"VariableDeclaration","scope":5088,"src":"3435:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"postAddress","nameLocation":"3466:11:17","nodeType":"VariableDeclaration","scope":5088,"src":"3458:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5079,"name":"address","nodeType":"ElementaryTypeName","src":"3458:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5082,"mutability":"mutable","name":"accepted","nameLocation":"3492:8:17","nodeType":"VariableDeclaration","scope":5088,"src":"3487:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5081,"name":"bool","nodeType":"ElementaryTypeName","src":"3487:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"postCount","nameLocation":"3518:9:17","nodeType":"VariableDeclaration","scope":5088,"src":"3510:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"3510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"tokenId","nameLocation":"3544:7:17","nodeType":"VariableDeclaration","scope":5088,"src":"3537:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"},"typeName":{"id":5086,"nodeType":"UserDefinedTypeName","pathNode":{"id":5085,"name":"Tokens","nameLocations":["3537:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4930,"src":"3537:6:17"},"referencedDeclaration":4930,"src":"3537:6:17","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"visibility":"internal"}],"name":"BayRequest","nameLocation":"3364:10:17","nodeType":"StructDefinition","scope":5102,"src":"3357:201:17","visibility":"public"},{"canonicalName":"Structures.BayRequestPrivate","id":5101,"members":[{"constant":false,"id":5090,"mutability":"mutable","name":"vaultIdSeller","nameLocation":"3717:13:17","nodeType":"VariableDeclaration","scope":5101,"src":"3711:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5092,"mutability":"mutable","name":"sellerResponse","nameLocation":"3746:14:17","nodeType":"VariableDeclaration","scope":5101,"src":"3740:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5091,"name":"bytes","nodeType":"ElementaryTypeName","src":"3740:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"vaultIdBuyer","nameLocation":"3776:12:17","nodeType":"VariableDeclaration","scope":5101,"src":"3770:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5093,"name":"bytes","nodeType":"ElementaryTypeName","src":"3770:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"buyerResponse","nameLocation":"3804:13:17","nodeType":"VariableDeclaration","scope":5101,"src":"3798:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5095,"name":"bytes","nodeType":"ElementaryTypeName","src":"3798:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5098,"mutability":"mutable","name":"buyerTo","nameLocation":"3835:7:17","nodeType":"VariableDeclaration","scope":5101,"src":"3827:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5097,"name":"address","nodeType":"ElementaryTypeName","src":"3827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5100,"mutability":"mutable","name":"buyerNonce","nameLocation":"3860:10:17","nodeType":"VariableDeclaration","scope":5101,"src":"3852:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3852:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"BayRequestPrivate","nameLocation":"3683:17:17","nodeType":"StructDefinition","scope":5102,"src":"3676:201:17","visibility":"public"}],"scope":5103,"src":"138:3741:17","usedErrors":[]}],"src":"113:3767:17"},"id":17},"contracts/modules/FeedViewer.sol":{"ast":{"absolutePath":"contracts/modules/FeedViewer.sol","exportedSymbols":{"FeedViewer":[5270],"IMecenateFeed":[3920],"Structures":[5102]},"id":5271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5104,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":5105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5271,"sourceUnit":5103,"src":"57:35:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateFeed.sol","file":"../interfaces/IMecenateFeed.sol","id":5106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5271,"sourceUnit":3921,"src":"93:41:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FeedViewer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5270,"linearizedBaseContracts":[5270],"name":"FeedViewer","nameLocation":"145:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":5215,"nodeType":"Block","src":"259:669:18","statements":[{"assignments":[5118],"declarations":[{"constant":false,"id":5118,"mutability":"mutable","name":"f","nameLocation":"292:1:18","nodeType":"VariableDeclaration","scope":5215,"src":"269:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":5117,"nodeType":"UserDefinedTypeName","pathNode":{"id":5116,"name":"Structures.Feed","nameLocations":["269:10:18","280:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"269:15:18"},"referencedDeclaration":5072,"src":"269:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"id":5119,"nodeType":"VariableDeclarationStatement","src":"269:24:18"},{"assignments":[5122],"declarations":[{"constant":false,"id":5122,"mutability":"mutable","name":"mecenateFeed","nameLocation":"318:12:18","nodeType":"VariableDeclaration","scope":5215,"src":"304:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"},"typeName":{"id":5121,"nodeType":"UserDefinedTypeName","pathNode":{"id":5120,"name":"IMecenateFeed","nameLocations":["304:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"304:13:18"},"referencedDeclaration":3920,"src":"304:13:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"visibility":"internal"}],"id":5126,"initialValue":{"arguments":[{"id":5124,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"347:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5123,"name":"IMecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"333:13:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateFeed_$3920_$","typeString":"type(contract IMecenateFeed)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"333:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"nodeType":"VariableDeclarationStatement","src":"304:48:18"},{"expression":{"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5127,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"363:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"365:15:18","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5049,"src":"363:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5130,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"383:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"363:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5132,"nodeType":"ExpressionStatement","src":"363:24:18"},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5133,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"397:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"399:8:18","memberName":"operator","nodeType":"MemberAccess","referencedDeclaration":5051,"src":"397:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5136,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"410:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"423:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"410:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"410:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"397:33:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5140,"nodeType":"ExpressionStatement","src":"397:33:18"},{"expression":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5141,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"440:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"442:11:18","memberName":"sellerStake","nodeType":"MemberAccess","referencedDeclaration":5053,"src":"440:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5144,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"456:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"469:14:18","memberName":"getSellerStake","nodeType":"MemberAccess","referencedDeclaration":3882,"src":"456:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"456:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"440:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5148,"nodeType":"ExpressionStatement","src":"440:45:18"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5149,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"495:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"497:10:18","memberName":"buyerStake","nodeType":"MemberAccess","referencedDeclaration":5055,"src":"495:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5152,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"510:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"523:13:18","memberName":"getBuyerStake","nodeType":"MemberAccess","referencedDeclaration":3887,"src":"510:26:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"510:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"495:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"495:43:18"},{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5157,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"548:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"550:10:18","memberName":"totalStake","nodeType":"MemberAccess","referencedDeclaration":5057,"src":"548:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5160,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"563:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"576:14:18","memberName":"getTotalStaked","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"563:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"563:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"548:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5164,"nodeType":"ExpressionStatement","src":"548:44:18"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5165,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"602:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"604:9:18","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":5059,"src":"602:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5168,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"616:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"629:9:18","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"616:22:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"616:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"602:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5172,"nodeType":"ExpressionStatement","src":"602:38:18"},{"expression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5173,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"650:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"652:16:18","memberName":"paymentRequested","nodeType":"MemberAccess","referencedDeclaration":5061,"src":"650:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5176,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"671:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"684:19:18","memberName":"getPaymentRequested","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"671:32:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"650:55:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5180,"nodeType":"ExpressionStatement","src":"650:55:18"},{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5181,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"715:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"717:14:18","memberName":"stakeRequested","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"715:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5184,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"734:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"747:17:18","memberName":"getStakeRequested","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"734:30:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"734:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"715:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"715:51:18"},{"expression":{"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5189,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"776:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"778:6:18","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5066,"src":"776:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5192,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"787:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"800:9:18","memberName":"getStatus","nodeType":"MemberAccess","referencedDeclaration":3903,"src":"787:22:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_PostStatus_$4926_$","typeString":"function () view external returns (enum Structures.PostStatus)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"787:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"src":"776:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$4926","typeString":"enum Structures.PostStatus"}},"id":5196,"nodeType":"ExpressionStatement","src":"776:35:18"},{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5197,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"821:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"823:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"821:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5200,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"833:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:10:18","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":3909,"src":"833:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_Tokens_$4930_$","typeString":"function () view external returns (enum Structures.Tokens)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"833:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"src":"821:37:18","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$4930","typeString":"enum Structures.Tokens"}},"id":5204,"nodeType":"ExpressionStatement","src":"821:37:18"},{"expression":{"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5205,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"868:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"870:7:18","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":5071,"src":"868:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5208,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"880:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3920","typeString":"contract IMecenateFeed"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"893:7:18","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"880:20:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"880:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"868:34:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5212,"nodeType":"ExpressionStatement","src":"868:34:18"},{"expression":{"id":5213,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"920:1:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"functionReturnParameters":5113,"id":5214,"nodeType":"Return","src":"913:8:18"}]},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedInfo","nameLocation":"171:12:18","nodeType":"FunctionDefinition","parameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"feed","nameLocation":"201:4:18","nodeType":"VariableDeclaration","scope":5216,"src":"193:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5107,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"183:28:18"},"returnParameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5216,"src":"235:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":5111,"nodeType":"UserDefinedTypeName","pathNode":{"id":5110,"name":"Structures.Feed","nameLocations":["235:10:18","246:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"235:15:18"},"referencedDeclaration":5072,"src":"235:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"src":"234:24:18"},"scope":5270,"src":"162:766:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5268,"nodeType":"Block","src":"1045:227:18","statements":[{"assignments":[5227],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"len","nameLocation":"1063:3:18","nodeType":"VariableDeclaration","scope":5268,"src":"1055:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5230,"initialValue":{"expression":{"id":5228,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"1069:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:6:18","memberName":"length","nodeType":"MemberAccess","src":"1069:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1055:27:18"},{"assignments":[5236],"declarations":[{"constant":false,"id":5236,"mutability":"mutable","name":"f","nameLocation":"1117:1:18","nodeType":"VariableDeclaration","scope":5268,"src":"1092:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":5234,"nodeType":"UserDefinedTypeName","pathNode":{"id":5233,"name":"Structures.Feed","nameLocations":["1092:10:18","1103:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"1092:15:18"},"referencedDeclaration":5072,"src":"1092:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"id":5235,"nodeType":"ArrayTypeName","src":"1092:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"id":5243,"initialValue":{"arguments":[{"id":5241,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"1143:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1121:21:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Structures.Feed memory[] memory)"},"typeName":{"baseType":{"id":5238,"nodeType":"UserDefinedTypeName","pathNode":{"id":5237,"name":"Structures.Feed","nameLocations":["1125:10:18","1136:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"1125:15:18"},"referencedDeclaration":5072,"src":"1125:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"id":5239,"nodeType":"ArrayTypeName","src":"1125:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1092:55:18"},{"body":{"id":5264,"nodeType":"Block","src":"1192:55:18","statements":[{"expression":{"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5254,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"1206:1:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"id":5256,"indexExpression":{"id":5255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"1208:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1206:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5258,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"1226:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5260,"indexExpression":{"id":5259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"1233:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1226:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5257,"name":"_getFeedInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"1213:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Feed_$5072_memory_ptr_$","typeString":"function (address) view returns (struct Structures.Feed memory)"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1213:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"src":"1206:30:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":5263,"nodeType":"ExpressionStatement","src":"1206:30:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"1178:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5249,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"1182:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1178:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"initializationExpression":{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"i","nameLocation":"1171:1:18","nodeType":"VariableDeclaration","scope":5265,"src":"1163:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5247,"initialValue":{"hexValue":"30","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1175:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1163:13:18"},"loopExpression":{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1187:3:18","subExpression":{"id":5251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"1187:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"1187:3:18"},"nodeType":"ForStatement","src":"1158:89:18"},{"expression":{"id":5266,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"1264:1:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"functionReturnParameters":5225,"id":5267,"nodeType":"Return","src":"1257:8:18"}]},"id":5269,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedsInfo","nameLocation":"943:13:18","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"_feeds","nameLocation":"983:6:18","nodeType":"VariableDeclaration","scope":5269,"src":"966:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5217,"name":"address","nodeType":"ElementaryTypeName","src":"966:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5218,"nodeType":"ArrayTypeName","src":"966:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"956:39:18"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5269,"src":"1019:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":5222,"nodeType":"UserDefinedTypeName","pathNode":{"id":5221,"name":"Structures.Feed","nameLocations":["1019:10:18","1030:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":5072,"src":"1019:15:18"},"referencedDeclaration":5072,"src":"1019:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$5072_storage_ptr","typeString":"struct Structures.Feed"}},"id":5223,"nodeType":"ArrayTypeName","src":"1019:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$5072_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"src":"1018:26:18"},"scope":5270,"src":"934:338:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5271,"src":"136:1138:18","usedErrors":[]}],"src":"32:1243:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220aa5848e2b0b7c9b0e75c150874fa73242d46eccddcd14dbbbe1dc45f3a5af9b364736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PC BASEFEE 0xE2 0xB0 0xB7 0xC9 0xB0 0xE7 0x5C ISZERO ADDMOD PUSH21 0xFA73242D46ECCDDCD14DBBBE1DC45F3A5AF9B36473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"701:6234:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220aa5848e2b0b7c9b0e75c150874fa73242d46eccddcd14dbbbe1dc45f3a5af9b364736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PC BASEFEE 0xE2 0xB0 0xB7 0xC9 0xB0 0xE7 0x5C ISZERO ADDMOD PUSH21 0xFA73242D46ECCDDCD14DBBBE1DC45F3A5AF9B36473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"701:6234:4:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c3c43d5051cc13937edd04ea088ff32f541ca91259d2edb71d0c38836e05300a64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC4 RETURNDATASIZE POP MLOAD 0xCC SGT SWAP4 PUSH31 0xDD04EA088FF32F541CA91259D2EDB71D0C38836E05300A64736F6C63430008 SGT STOP CALLER ","sourceMap":"194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c3c43d5051cc13937edd04ea088ff32f541ca91259d2edb71d0c38836e05300a64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC4 RETURNDATASIZE POP MLOAD 0xCC SGT SWAP4 PUSH31 0xDD04EA088FF32F541CA91259D2EDB71D0C38836E05300A64736F6C63430008 SGT STOP CALLER ","sourceMap":"194:9169:5:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fb3c0abb370de0e6ac736dc185047e25d2e817941432c4619ed7224cccf4e9c364736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB EXTCODECOPY EXP 0xBB CALLDATACOPY 0xD 0xE0 0xE6 0xAC PUSH20 0x6DC185047E25D2E817941432C4619ED7224CCCF4 0xE9 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fb3c0abb370de0e6ac736dc185047e25d2e817941432c4619ed7224cccf4e9c364736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB EXTCODECOPY EXP 0xBB CALLDATACOPY 0xD 0xE0 0xE6 0xAC PUSH20 0x6DC185047E25D2E817941432C4619ED7224CCCF4 0xE9 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:7:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cd19ae3f46ff12ef8c0fc79db6bfc56852359626906ab17751b8432fdc9ede8f64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD NOT 0xAE EXTCODEHASH CHAINID SELFDESTRUCT SLT 0xEF DUP13 0xF 0xC7 SWAP14 0xB6 0xBF 0xC5 PUSH9 0x52359626906AB17751 0xB8 NUMBER 0x2F 0xDC SWAP15 0xDE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cd19ae3f46ff12ef8c0fc79db6bfc56852359626906ab17751b8432fdc9ede8f64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD NOT 0xAE EXTCODEHASH CHAINID SELFDESTRUCT SLT 0xEF DUP13 0xF 0xC7 SWAP14 0xB6 0xBF 0xC5 PUSH9 0x52359626906AB17751 0xB8 NUMBER 0x2F 0xDC SWAP15 0xDE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_throwError(enum ECDSA.RecoverError)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","toDataWithIntendedValidatorHash(address,bytes memory)":"infinite","toEthSignedMessageHash(bytes memory)":"infinite","toEthSignedMessageHash(bytes32)":"infinite","toTypedDataHash(bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\",\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f730ec07bbfacaf28ddd79e7da4265e4ece1b157a046b028ccf9af36fb90059f64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 ADDRESS 0xEC SMOD 0xBB STATICCALL 0xCA CALLCODE DUP14 0xDD PUSH26 0xE7DA4265E4ECE1B157A046B028CCF9AF36FB90059F64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f730ec07bbfacaf28ddd79e7da4265e4ece1b157a046b028ccf9af36fb90059f64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 ADDRESS 0xEC SMOD 0xBB STATICCALL 0xCA CALLCODE DUP14 0xDD PUSH26 0xE7DA4265E4ECE1B157A046B028CCF9AF36FB90059F64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:9:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b74d92d560d6e51ccbed5e924cbb0a071495af255be56464811cda15a27c394c64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0x4D SWAP3 0xD5 PUSH1 0xD6 0xE5 SHR 0xCB 0xED 0x5E SWAP3 0x4C 0xBB EXP SMOD EQ SWAP6 0xAF 0x25 JUMPDEST 0xE5 PUSH5 0x64811CDA15 LOG2 PUSH29 0x394C64736F6C6343000813003300000000000000000000000000000000 ","sourceMap":"215:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b74d92d560d6e51ccbed5e924cbb0a071495af255be56464811cda15a27c394c64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0x4D SWAP3 0xD5 PUSH1 0xD6 0xE5 SHR 0xCB 0xED 0x5E SWAP3 0x4C 0xBB EXP SMOD EQ SWAP6 0xAF 0x25 JUMPDEST 0xE5 PUSH5 0x64811CDA15 LOG2 PUSH29 0x394C64736F6C6343000813003300000000000000000000000000000000 ","sourceMap":"215:1047:10:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MecenateVault.sol":{"MecenateVault":{"abi":[{"inputs":[{"internalType":"address","name":"_verifierContract","type":"address"},{"internalType":"address","name":"_factoryContract","type":"address"},{"internalType":"address","name":"_bayContract","type":"address"},{"internalType":"address","name":"_usersContract","type":"address"},{"internalType":"address","name":"_relayer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"address","name":"relayerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"functionSignature","type":"bytes"}],"name":"MetaTransactionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"commitment","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"secret","type":"string"},{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"Withdrawn","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"DAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_RELAYER_FEE_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MUSE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_feed","type":"address"},{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"approveTokenToFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newRelayerFeePercentage","type":"uint256"}],"name":"changeRelayerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes32","name":"_encryptedVaultId","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factoryContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"getEthDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"encryptedVaultId","type":"bytes32"}],"name":"getTokenDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mecenateBay","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mecenateUsers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relayerFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_factoryContract","type":"address"}],"name":"setFactoryContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_mecenateBay","type":"address"}],"name":"setMecenateBay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_mecenateUsers","type":"address"}],"name":"setMecenateUsers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_relayer","type":"address"}],"name":"setRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WETH","type":"address"},{"internalType":"address","name":"_DAI","type":"address"},{"internalType":"address","name":"_USDC","type":"address"},{"internalType":"address","name":"_MUSE","type":"address"}],"name":"setTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_verifierContract","type":"address"}],"name":"setVerifierContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"verifierContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_secret","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"withdrawWithSecret","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":315,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200012057601f62001fca38819003918201601f19168301916001600160401b03831184841017620001255780849260a09460405283398101031262000120576200004d816200013b565b906200005c602082016200013b565b6200006a604083016200013b565b926200008760806200007f606086016200013b565b94016200013b565b906000549360018060a01b03199433868216176000556040519660018060a01b0380968180968195823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560c8600d5516896008541617600855168760095416176009551685600a541617600a551683600b541617600b551690600c541617600c55611e799081620001518239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001205756fe604060808152600480361015610083575b361561004157506020361261003c5760003560005260026020526000206100383482546119d9565b9055005b600080fd5b6020606492519162461bcd60e51b8352820152601760248201527f557365206465706f7369744554482066756e6374696f6e0000000000000000006044820152fd5b6000803560e01c806310d5700e1461161e5780631378f5d9146112b2578063139e3c541461128957806317d026e61461120757806320491915146111de57806324ebc1451461119e5780632fe4f4c11461115e5780633f16a3bb146111355780635262712f1461110c578063537820bf1461108c5780635e0cd92f1461104a5780636548e9bc1461100a5780636961b36114610fed5780636ff6158514610e20578063715018a614610dc657806384abac9514610c6d57806385e66df414610c4e57806389a3027114610c255780638da5cb5b14610bfd5780639926ad87146106a2578063a25da83c14610662578063ad5c464814610639578063bda7193a1461038c578063cf69568814610363578063d424134114610320578063d68d9d4e146102eb578063de11c94a146102c2578063e0bab4c4146102955763f2fde38b146101ce5750610010565b919034610291576020366003190112610291576101e961193f565b906101f2611981565b6001600160a01b0391821692831561023f57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5082346102be57816003193601126102be5760055490516001600160a01b039091168152602090f35b5080fd5b5082346102be57816003193601126102be5760095490516001600160a01b039091168152602090f35b5091906020366003190112610291576103026119fc565b358252600260205281206103173482546119d9565b90556001805580f35b50346103605760203660031901126103605761033a61193f565b610342611981565b60018060a01b03166001600160601b0360a01b600954161760095580f35b80fd5b5082346102be57816003193601126102be5760085490516001600160a01b039091168152602090f35b5091346102915760a03660031901126102915767ffffffffffffffff9082358281116106355736602382011215610635576103d090369060248187013591016118d4565b926103d961196b565b92604435908111610631576103f1903690830161190b565b506103fa611955565b600c546001600160a01b039391906104159085163314611b84565b61041d6119fc565b815193808760209661044b88828161043e8183019687815193849201611bbe565b8101038084520182611880565b5190209616918261051c5786895260028652838920549485156104d95750888086819482948b845260028b5283898120551682f1156104cf576104c17fa5ecd7cf58f2f1e36e387c6442f5dea0a47926654ed49e6d1d9eb06d0406424495965b6060845196879687528601526060850190611c71565b918301520390a26001805580f35b81513d88823e3d90fd5b845162461bcd60e51b8152908101879052601e60248201527f4e6f20455448206465706f73697420666f7220746869732073656372657400006044820152606490fd5b9050858852600385528288208289528552828820549384156105f05786895260038652838920838a528652838920899055835163a9059cbb60e01b81526001600160a01b039092169082019081526020810185905285908290819060400103818b865af180156105e657966104c1917fa5ecd7cf58f2f1e36e387c6442f5dea0a47926654ed49e6d1d9eb06d0406424497986105b9575b506104ab565b6105d890873d89116105df575b6105d08183611880565b810190611b6c565b50386105b3565b503d6105c6565b83513d8a823e3d90fd5b606490868086519262461bcd60e51b845283015260248201527f4e6f20546f6b656e206465706f73697420666f722074686973207365637265746044820152fd5b8580fd5b8480fd5b509190346102915782600319360112610291575490516001600160a01b03909116815260209150f35b50346103605760203660031901126103605761067c61193f565b610684611981565b60018060a01b03166001600160601b0360a01b600854161760085580f35b509134610291576080366003190112610291576106bd61193f565b9160249081359467ffffffffffffffff918287116102be57366023880112156102be57868101359283116102be5783870196848436920101116102be57604435926064359360018060a01b039261071984600c54163314611b84565b6107216119fc565b85855260209860028a528886205492479b8660055416928b51968d888d816370a0823160e01b98898252308b8301525afa978815610a6557908e8e8e999897969594938d9b610bbb575b508b6007541690519e8f8092898252308b8301525afa9c8d15610bb1578f8c9e610b7d575b50506107a561079f5a3a611d65565b856119d9565b92838810610b3a57918b8f8c829594839589938215600014610af4575050508293165af16107d1611d85565b505b15610abc576107f5916107e591611d78565b6107ef5a3a611d65565b90611d78565b91612710610805600d5485611d65565b049361081185856119d9565b11610a6f578447928d8d8a6005541690519889809285825230888301525afa968715610a6557918d989796959493918f938c98610a22575b508a600754169951998a938492835230908301525afa958615610a18579b809d8a9b9c9d928e9b938b996109cd575b506108bd958b9586958e6002889787876108ac988b9a11610986575b50506108a08686611d78565b938852528520556119d9565b335af16108b7611d85565b50611db5565b808211610932575b50508086116108dc575b8784600180555160018152f35b6108e69086611d78565b948515159081610928575b506108fd575b806108cf565b61091c9382526003875282822090600754168252865220918254611d78565b905538808281806108f7565b90501515386108f1565b61093c9082611d78565b90811515908161097c575b50610953575b806108c5565b85845260038952848420836005541685528952610974858520918254611d78565b90553861094d565b9050151538610947565b6109909082611d78565b9081151590816109c3575b506109a7575b80610894565b8489528282526109bb848a20918254611d78565b9055386109a1565b905015153861099b565b935098999a5092939495965081813d8311610a11575b6109ed8183611880565b81010312610a0d57518b9897969095949392918a918e91906108bd610878565b8880fd5b503d6109e3565b8b513d8a823e3d90fd5b9294959697509798509181813d8311610a5e575b610a408183611880565b81010312610a5a57918d918d989796959493519638610849565b8980fd5b503d610a36565b8d513d8c823e3d90fd5b608490858d8d519262461bcd60e51b8452830152808201527f496e73756666696369656e742062616c616e636520666f722067617320616e646044820152632066656560e01b6064820152fd5b508a5162461bcd60e51b81528084018d905260128187015271151c985b9cd858dd1a5bdb8819985a5b195960721b6044820152606490fd5b9092508382959415600014610b215750519384928337810182815203925af1610b1b611d85565b506107d3565b9350519384928337810185815203925af1610b1b611d85565b8f8f60188b6064938b93519362461bcd60e51b85528401528201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b9080929e50813d8311610baa575b610b958183611880565b81010312610ba657519b388f610790565b8a80fd5b503d610b8b565b8e513d8d823e3d90fd5b93959799505090929496985081813d8311610bf6575b610bdb8183611880565b81010312610a5a57918c979593918e8d98969451993861076b565b503d610bd1565b5082346102be57816003193601126102be57905490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be5760065490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be57602090600d549051908152f35b5082346102be5760603660031901126102be57610c8861193f565b60243591906001600160a01b0390811690610cd590610ca8831515611a52565b610cb3851515611a9e565b808754168314908115610db8575b8115610daa575b8115610d9c575b50611ae9565b81516323b872dd60e01b815233868201523060248201526044810184905260209590868160648189875af1908115610d92578691610d75575b5015610d3a5750610d359293946044358652600381528286209186525283209182546119d9565b905580f35b825162461bcd60e51b81529081018690526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b610d8c9150873d89116105df576105d08183611880565b87610d0e565b84513d88823e3d90fd5b905060075416821487610ccf565b600654811684149150610cc8565b600554811684149150610cc1565b5034610360578060031936011261036057610ddf611981565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346102be5760803660031901126102be57610e3b61193f565b9060243593610e48611929565b6001600160a01b0393841691610e5f831515611a52565b610e6a871515611a9e565b8481541683148015610fe0575b8015610fd3575b8015610fc6575b610e8e90611ae9565b6064358652602094600386528487208488528652610eb188868920541015611b2b565b8060095416855191633963f74160e21b835287836024818489169586898301525afa928315610fbc578993610f9d575b508215610f8f575b505015610f5f57835163095ea7b360e01b81526001600160a01b0390921690820190815260208101879052909291849184919082908890829060400103925af1908115610f565750610f39578280f35b81610f4f92903d106105df576105d08183611880565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152908101859052600a602482015269139bdd0818481999595960b21b6044820152606490fd5b600a54161490508880610ee9565b610fb5919350883d8a116105df576105d08183611880565b918a610ee1565b87513d8b823e3d90fd5b5060075485168314610e85565b5084600654168314610e7e565b5084600554168314610e77565b5082346102be57816003193601126102be57602090516101f48152f35b50346103605760203660031901126103605761102461193f565b61102c611981565b60018060a01b03166001600160601b0360a01b600c541617600c5580f35b5082346102be57806003193601126102be578060209261106861193f565b6024358252600385528282206001600160a01b039091168252845220549051908152f35b5090346102be5760803660031901126102be576110a761193f565b906110b061196b565b906110b9611929565b906110c2611955565b916110cb611981565b60018060a01b0380948193826001600160601b0360a01b98168882541617905516856005541617600555168360065416176006551690600754161760075580f35b5082346102be57816003193601126102be5760075490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be57600a5490516001600160a01b039091168152602090f35b50346103605760203660031901126103605761117861193f565b611180611981565b60018060a01b03166001600160601b0360a01b600b541617600b5580f35b5034610360576020366003190112610360576111b861193f565b6111c0611981565b60018060a01b03166001600160601b0360a01b600a541617600a5580f35b509190346102915760203660031901126102915760209282913581526002845220549051908152f35b5091903461029157602036600319011261029157803591611226611981565b6101f48311611237575050600d5580f35b906020608492519162461bcd60e51b8352820152602660248201527f4e65772072656c61796572206665652070657263656e7461676520697320746f6044820152650de40d0d2ced60d31b6064820152fd5b5082346102be57816003193601126102be57600b5490516001600160a01b039091168152602090f35b5091346102915760a0366003190112610291576112cd61193f565b906024359060443567ffffffffffffffff8111610631576112f1903690860161190b565b916112fa611955565b906084359460018060a01b0361131581600c54163314611b84565b61131d6119fc565b865a948a8161132c883a611d65565b998560085416908d6113518c519e8f9586948594637276069d60e01b86528501611c96565b03915afa978815611614578b809981906115ce575b8a9b50928a94928a87959361138c9b9a99989460209c818e808094518301019101611cc2565b961698519f019e8f20815260028c5220541061158b57906113b4846113ba9493168614611ce9565b14611d28565b875189208b5260038652868b20921691828b52855282868b205410611548579184916114389388518a208c5260038452878c20828d528452878c20611400848254611d78565b9055875163a9059cbb60e01b81526001600160a01b03909116818c01908152602081019390935293849283918d918391604090910190565b03925af1801561153e579061145f9291611521575b5061145a3a915a90611d78565b611d65565b9361271061146f600d5487611d65565b0495845182208852600283528388205461148988886119d9565b116114de57876114d7818080806114c68d8d8d6114bf8e60028f8f6114ae88886119d9565b955190208952528620918254611d78565b90556119d9565b335af16114d1611d85565b50611df7565b6001805580f35b835162461bcd60e51b8152908101839052601f60248201527f4e6f7420656e6f7567682062616c616e636520666f72206761732075736564006044820152606490fd5b61153790843d86116105df576105d08183611880565b503861144d565b84513d8a823e3d90fd5b855162461bcd60e51b8152808a01869052601860248201527f4e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000006044820152606490fd5b895162461bcd60e51b8152808e018a9052601f60248201527f4e6f7420656e6f7567682045544820666f7220676173207265717569726564006044820152606490fd5b509850918361138c97969594926115f88a9c8c3d8091833e6115f08183611880565b810190611c23565b97929150509c8d9c8d97939650939798999a5050929450611366565b87513d8d823e3d90fd5b509190346102915760803660031901126102915780359060243567ffffffffffffffff811161063557611654903690830161190b565b9161165d611929565b91606435936116aa60018060a01b039561167c87600c54163314611b84565b6116846119fc565b88815a94888a60085416918c5196879485938493637276069d60e01b85528c8501611c96565b03915afa9687156118765789928a9861184e575b5090816113b46116e7936116dc60209b8c8082518301019101611cc2565b931699168914611ce9565b8581519101206117156117036116fd843a611d65565b86611d78565b828a5260028852888a20541015611b2b565b80885260028652868820541561180b579061176d91611735851515611a9e565b8089526002875261174b85898b20541015611b2b565b88526002865286882061175f858254611d78565b905561145a3a915a90611d78565b9361271061177d600d5487611d65565b049561178987876119d9565b84106117ca57505050846114c685856117c584808080809b9a6117ba6114d79e6117b5849e859e611d78565b611d78565b905af16108b7611d85565b6119d9565b5162461bcd60e51b815291820152601a60248201527f4e6f7420656e6f7567682062616c616e636520666f7220676173000000000000604482015260649150fd5b865162461bcd60e51b8152808401879052601960248201527f436f6d6d69746d656e7420646f6573206e6f74206578697374000000000000006044820152606490fd5b6118699198506116e79293503d808c833e6115f08183611880565b9992949391506116be9050565b88513d8b823e3d90fd5b90601f8019910116810190811067ffffffffffffffff8211176118a257604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116118a257601f01601f191660200190565b9291926118e0826118b8565b916118ee6040519384611880565b82948184528183011161003c578281602093846000960137010152565b9080601f8301121561003c57816020611926933591016118d4565b90565b604435906001600160a01b038216820361003c57565b600435906001600160a01b038216820361003c57565b606435906001600160a01b038216820361003c57565b602435906001600160a01b038216820361003c57565b6000546001600160a01b0316330361199557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082018092116119e657565b634e487b7160e01b600052601160045260246000fd5b600260015414611a0d576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b15611a5957565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e20616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b15611aa557565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b15611af057565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b15611b3257565b60405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606490fd5b9081602091031261003c5751801515810361003c5790565b15611b8b57565b60405162461bcd60e51b815260206004820152600b60248201526a2737ba103932b630bcb2b960a91b6044820152606490fd5b60005b838110611bd15750506000910152565b8181015183820152602001611bc1565b81601f8201121561003c578051611bf7816118b8565b92611c056040519485611880565b8184526020828401011161003c576119269160208085019101611bbe565b9160808383031261003c5782519067ffffffffffffffff9182811161003c5783611c4e918601611be1565b93602081015193604082015193606083015190811161003c576119269201611be1565b90602091611c8a81518092818552858086019101611bbe565b601f01601f1916010190565b611cae60409295949395606083526060830190611c71565b6001600160a01b0390951660208201520152565b919082604091031261003c5781516001600160a01b038116810361003c5760209092015190565b15611cf057565b60405162461bcd60e51b815260206004820152601060248201526f4e6f742053616d65204164647265737360801b6044820152606490fd5b15611d2f57565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f742053616d65204e6f6e636560901b6044820152606490fd5b818102929181159184041417156119e657565b919082039182116119e657565b3d15611db0573d90611d96826118b8565b91611da46040519384611880565b82523d6000602084013e565b606090565b15611dbc57565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b15611dfe57565b60405162461bcd60e51b815260206004820152601c60248201527f455448207472616e73666572206661696c6564207769746820676173000000006044820152606490fdfea264697066735822122012919b57fa2551f9647956e1d3c5f0ec49e2603fc51e9104c17b2b85219b881a64736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x120 JUMPI PUSH1 0x1F PUSH3 0x1FCA CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x125 JUMPI DUP1 DUP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x120 JUMPI PUSH3 0x4D DUP2 PUSH3 0x13B JUMP JUMPDEST SWAP1 PUSH3 0x5C PUSH1 0x20 DUP3 ADD PUSH3 0x13B JUMP JUMPDEST PUSH3 0x6A PUSH1 0x40 DUP4 ADD PUSH3 0x13B JUMP JUMPDEST SWAP3 PUSH3 0x87 PUSH1 0x80 PUSH3 0x7F PUSH1 0x60 DUP7 ADD PUSH3 0x13B JUMP JUMPDEST SWAP5 ADD PUSH3 0x13B JUMP JUMPDEST SWAP1 PUSH1 0x0 SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP5 CALLER DUP7 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 DUP2 DUP1 SWAP7 DUP2 SWAP6 DUP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0xC8 PUSH1 0xD SSTORE AND DUP10 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND DUP8 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP6 PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE AND DUP4 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE AND SWAP1 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH2 0x1E79 SWAP1 DUP2 PUSH3 0x151 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x120 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x83 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x41 JUMPI POP PUSH1 0x20 CALLDATASIZE SLT PUSH2 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x38 CALLVALUE DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365206465706F7369744554482066756E6374696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10D5700E EQ PUSH2 0x161E JUMPI DUP1 PUSH4 0x1378F5D9 EQ PUSH2 0x12B2 JUMPI DUP1 PUSH4 0x139E3C54 EQ PUSH2 0x1289 JUMPI DUP1 PUSH4 0x17D026E6 EQ PUSH2 0x1207 JUMPI DUP1 PUSH4 0x20491915 EQ PUSH2 0x11DE JUMPI DUP1 PUSH4 0x24EBC145 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x2FE4F4C1 EQ PUSH2 0x115E JUMPI DUP1 PUSH4 0x3F16A3BB EQ PUSH2 0x1135 JUMPI DUP1 PUSH4 0x5262712F EQ PUSH2 0x110C JUMPI DUP1 PUSH4 0x537820BF EQ PUSH2 0x108C JUMPI DUP1 PUSH4 0x5E0CD92F EQ PUSH2 0x104A JUMPI DUP1 PUSH4 0x6548E9BC EQ PUSH2 0x100A JUMPI DUP1 PUSH4 0x6961B361 EQ PUSH2 0xFED JUMPI DUP1 PUSH4 0x6FF61585 EQ PUSH2 0xE20 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDC6 JUMPI DUP1 PUSH4 0x84ABAC95 EQ PUSH2 0xC6D JUMPI DUP1 PUSH4 0x85E66DF4 EQ PUSH2 0xC4E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xC25 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBFD JUMPI DUP1 PUSH4 0x9926AD87 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA25DA83C EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xBDA7193A EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCF695688 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD4241341 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xD68D9D4E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xDE11C94A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x295 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x1CE JUMPI POP PUSH2 0x10 JUMP JUMPDEST SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1E9 PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH2 0x1F2 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x23F JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x302 PUSH2 0x19FC JUMP JUMPDEST CALLDATALOAD DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x317 CALLVALUE DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x33A PUSH2 0x193F JUMP JUMPDEST PUSH2 0x342 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x635 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x635 JUMPI PUSH2 0x3D0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP3 PUSH2 0x3D9 PUSH2 0x196B JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x631 JUMPI PUSH2 0x3F1 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x190B JUMP JUMPDEST POP PUSH2 0x3FA PUSH2 0x1955 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 SWAP1 PUSH2 0x415 SWAP1 DUP6 AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x41D PUSH2 0x19FC JUMP JUMPDEST DUP2 MLOAD SWAP4 DUP1 DUP8 PUSH1 0x20 SWAP7 PUSH2 0x44B DUP9 DUP3 DUP2 PUSH2 0x43E DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1BBE JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x1880 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 AND SWAP2 DUP3 PUSH2 0x51C JUMPI DUP7 DUP10 MSTORE PUSH1 0x2 DUP7 MSTORE DUP4 DUP10 KECCAK256 SLOAD SWAP5 DUP6 ISZERO PUSH2 0x4D9 JUMPI POP DUP9 DUP1 DUP7 DUP2 SWAP5 DUP3 SWAP5 DUP12 DUP5 MSTORE PUSH1 0x2 DUP12 MSTORE DUP4 DUP10 DUP2 KECCAK256 SSTORE AND DUP3 CALL ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4C1 PUSH32 0xA5ECD7CF58F2F1E36E387C6442F5DEA0A47926654ED49E6D1D9EB06D04064244 SWAP6 SWAP7 JUMPDEST PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1C71 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20455448206465706F73697420666F722074686973207365637265740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP9 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP9 KECCAK256 DUP3 DUP10 MSTORE DUP6 MSTORE DUP3 DUP9 KECCAK256 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x5F0 JUMPI DUP7 DUP10 MSTORE PUSH1 0x3 DUP7 MSTORE DUP4 DUP10 KECCAK256 DUP4 DUP11 MSTORE DUP7 MSTORE DUP4 DUP10 KECCAK256 DUP10 SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP12 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x5E6 JUMPI SWAP7 PUSH2 0x4C1 SWAP2 PUSH32 0xA5ECD7CF58F2F1E36E387C6442F5DEA0A47926654ED49E6D1D9EB06D04064244 SWAP8 SWAP9 PUSH2 0x5B9 JUMPI JUMPDEST POP PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x5D8 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5DF JUMPI JUMPDEST PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1B6C JUMP JUMPDEST POP CODESIZE PUSH2 0x5B3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C6 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP1 DUP7 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E206465706F73697420666F72207468697320736563726574 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x67C PUSH2 0x193F JUMP JUMPDEST PUSH2 0x684 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x6BD PUSH2 0x193F JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP8 GT PUSH2 0x2BE JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x2BE JUMPI DUP7 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x2BE JUMPI DUP4 DUP8 ADD SWAP7 DUP5 DUP5 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x2BE JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x719 DUP5 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x19FC JUMP JUMPDEST DUP6 DUP6 MSTORE PUSH1 0x20 SWAP9 PUSH1 0x2 DUP11 MSTORE DUP9 DUP7 KECCAK256 SLOAD SWAP3 SELFBALANCE SWAP12 DUP7 PUSH1 0x5 SLOAD AND SWAP3 DUP12 MLOAD SWAP7 DUP14 DUP9 DUP14 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP9 DUP10 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xA65 JUMPI SWAP1 DUP15 DUP15 DUP15 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP14 SWAP12 PUSH2 0xBBB JUMPI JUMPDEST POP DUP12 PUSH1 0x7 SLOAD AND SWAP1 MLOAD SWAP15 DUP16 DUP1 SWAP3 DUP10 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP13 DUP14 ISZERO PUSH2 0xBB1 JUMPI DUP16 DUP13 SWAP15 PUSH2 0xB7D JUMPI JUMPDEST POP POP PUSH2 0x7A5 PUSH2 0x79F GAS GASPRICE PUSH2 0x1D65 JUMP JUMPDEST DUP6 PUSH2 0x19D9 JUMP JUMPDEST SWAP3 DUP4 DUP9 LT PUSH2 0xB3A JUMPI SWAP2 DUP12 DUP16 DUP13 DUP3 SWAP6 SWAP5 DUP4 SWAP6 DUP10 SWAP4 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0xAF4 JUMPI POP POP POP DUP3 SWAP4 AND GAS CALL PUSH2 0x7D1 PUSH2 0x1D85 JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xABC JUMPI PUSH2 0x7F5 SWAP2 PUSH2 0x7E5 SWAP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x7EF GAS GASPRICE PUSH2 0x1D65 JUMP JUMPDEST SWAP1 PUSH2 0x1D78 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x805 PUSH1 0xD SLOAD DUP6 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP4 PUSH2 0x811 DUP6 DUP6 PUSH2 0x19D9 JUMP JUMPDEST GT PUSH2 0xA6F JUMPI DUP5 SELFBALANCE SWAP3 DUP14 DUP14 DUP11 PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP9 DUP10 DUP1 SWAP3 DUP6 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xA65 JUMPI SWAP2 DUP14 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 DUP16 SWAP4 DUP13 SWAP9 PUSH2 0xA22 JUMPI JUMPDEST POP DUP11 PUSH1 0x7 SLOAD AND SWAP10 MLOAD SWAP10 DUP11 SWAP4 DUP5 SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA18 JUMPI SWAP12 DUP1 SWAP14 DUP11 SWAP12 SWAP13 SWAP14 SWAP3 DUP15 SWAP12 SWAP4 DUP12 SWAP10 PUSH2 0x9CD JUMPI JUMPDEST POP PUSH2 0x8BD SWAP6 DUP12 SWAP6 DUP7 SWAP6 DUP15 PUSH1 0x2 DUP9 SWAP8 DUP8 DUP8 PUSH2 0x8AC SWAP9 DUP12 SWAP11 GT PUSH2 0x986 JUMPI JUMPDEST POP POP PUSH2 0x8A0 DUP7 DUP7 PUSH2 0x1D78 JUMP JUMPDEST SWAP4 DUP9 MSTORE MSTORE DUP6 KECCAK256 SSTORE PUSH2 0x19D9 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x8B7 PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x1DB5 JUMP JUMPDEST DUP1 DUP3 GT PUSH2 0x932 JUMPI JUMPDEST POP POP DUP1 DUP7 GT PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP5 PUSH1 0x1 DUP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x8E6 SWAP1 DUP7 PUSH2 0x1D78 JUMP JUMPDEST SWAP5 DUP6 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x928 JUMPI JUMPDEST POP PUSH2 0x8FD JUMPI JUMPDEST DUP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x91C SWAP4 DUP3 MSTORE PUSH1 0x3 DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x7 SLOAD AND DUP3 MSTORE DUP7 MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP2 DUP1 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x93C SWAP1 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x97C JUMPI JUMPDEST POP PUSH2 0x953 JUMPI JUMPDEST DUP1 PUSH2 0x8C5 JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH1 0x3 DUP10 MSTORE DUP5 DUP5 KECCAK256 DUP4 PUSH1 0x5 SLOAD AND DUP6 MSTORE DUP10 MSTORE PUSH2 0x974 DUP6 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE PUSH2 0x94D JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x947 JUMP JUMPDEST PUSH2 0x990 SWAP1 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x9C3 JUMPI JUMPDEST POP PUSH2 0x9A7 JUMPI JUMPDEST DUP1 PUSH2 0x894 JUMP JUMPDEST DUP5 DUP10 MSTORE DUP3 DUP3 MSTORE PUSH2 0x9BB DUP5 DUP11 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x99B JUMP JUMPDEST SWAP4 POP SWAP9 SWAP10 SWAP11 POP SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA11 JUMPI JUMPDEST PUSH2 0x9ED DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA0D JUMPI MLOAD DUP12 SWAP9 SWAP8 SWAP7 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP11 SWAP2 DUP15 SWAP2 SWAP1 PUSH2 0x8BD PUSH2 0x878 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x9E3 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 POP SWAP8 SWAP9 POP SWAP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0xA40 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA5A JUMPI SWAP2 DUP14 SWAP2 DUP14 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 MLOAD SWAP7 CODESIZE PUSH2 0x849 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA36 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 SWAP1 DUP6 DUP14 DUP14 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE DUP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520666F722067617320616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20666565 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP14 SWAP1 MSTORE PUSH1 0x12 DUP2 DUP8 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP3 SWAP6 SWAP5 ISZERO PUSH1 0x0 EQ PUSH2 0xB21 JUMPI POP MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB1B PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x7D3 JUMP JUMPDEST SWAP4 POP MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB1B PUSH2 0x1D85 JUMP JUMPDEST DUP16 DUP16 PUSH1 0x18 DUP12 PUSH1 0x64 SWAP4 DUP12 SWAP4 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP15 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBAA JUMPI JUMPDEST PUSH2 0xB95 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xBA6 JUMPI MLOAD SWAP12 CODESIZE DUP16 PUSH2 0x790 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xB8B JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP8 SWAP10 POP POP SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBF6 JUMPI JUMPDEST PUSH2 0xBDB DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA5A JUMPI SWAP2 DUP13 SWAP8 SWAP6 SWAP4 SWAP2 DUP15 DUP14 SWAP9 SWAP7 SWAP5 MLOAD SWAP10 CODESIZE PUSH2 0x76B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBD1 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0xC88 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0xCD5 SWAP1 PUSH2 0xCA8 DUP4 ISZERO ISZERO PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xCB3 DUP6 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP1 DUP8 SLOAD AND DUP4 EQ SWAP1 DUP2 ISZERO PUSH2 0xDB8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xDAA JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xD9C JUMPI JUMPDEST POP PUSH2 0x1AE9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP7 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP6 SWAP1 DUP7 DUP2 PUSH1 0x64 DUP2 DUP10 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD92 JUMPI DUP7 SWAP2 PUSH2 0xD75 JUMPI JUMPDEST POP ISZERO PUSH2 0xD3A JUMPI POP PUSH2 0xD35 SWAP3 SWAP4 SWAP5 PUSH1 0x44 CALLDATALOAD DUP7 MSTORE PUSH1 0x3 DUP2 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE DUP4 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xD8C SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP8 PUSH2 0xD0E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD AND DUP3 EQ DUP8 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 AND DUP5 EQ SWAP2 POP PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 AND DUP5 EQ SWAP2 POP PUSH2 0xCC1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x360 JUMPI PUSH2 0xDDF PUSH2 0x1981 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0xE3B PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 PUSH2 0xE48 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP2 PUSH2 0xE5F DUP4 ISZERO ISZERO PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xE6A DUP8 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP5 DUP2 SLOAD AND DUP4 EQ DUP1 ISZERO PUSH2 0xFE0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xFD3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xFC6 JUMPI JUMPDEST PUSH2 0xE8E SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP7 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x3 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP5 DUP9 MSTORE DUP7 MSTORE PUSH2 0xEB1 DUP9 DUP7 DUP10 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP1 PUSH1 0x9 SLOAD AND DUP6 MLOAD SWAP2 PUSH4 0x3963F741 PUSH1 0xE2 SHL DUP4 MSTORE DUP8 DUP4 PUSH1 0x24 DUP2 DUP5 DUP10 AND SWAP6 DUP7 DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xFBC JUMPI DUP10 SWAP4 PUSH2 0xF9D JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0xF8F JUMPI JUMPDEST POP POP ISZERO PUSH2 0xF5F JUMPI DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF56 JUMPI POP PUSH2 0xF39 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xF4F SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x139BDD08184819995959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD AND EQ SWAP1 POP DUP9 DUP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xFB5 SWAP2 SWAP4 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST SWAP2 DUP11 PUSH2 0xEE1 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD DUP6 AND DUP4 EQ PUSH2 0xE85 JUMP JUMPDEST POP DUP5 PUSH1 0x6 SLOAD AND DUP4 EQ PUSH2 0xE7E JUMP JUMPDEST POP DUP5 PUSH1 0x5 SLOAD AND DUP4 EQ PUSH2 0xE77 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1F4 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x1024 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x102C PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1068 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0x10A7 PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH2 0x10B0 PUSH2 0x196B JUMP JUMPDEST SWAP1 PUSH2 0x10B9 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x10C2 PUSH2 0x1955 JUMP JUMPDEST SWAP2 PUSH2 0x10CB PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 DUP2 SWAP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP9 AND DUP9 DUP3 SLOAD AND OR SWAP1 SSTORE AND DUP6 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE AND DUP4 PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE AND SWAP1 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x1178 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x1180 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x11B8 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x1226 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x1F4 DUP4 GT PUSH2 0x1237 JUMPI POP POP PUSH1 0xD SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772072656C61796572206665652070657263656E7461676520697320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xDE40D0D2CED PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x12CD PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x631 JUMPI PUSH2 0x12F1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x190B JUMP JUMPDEST SWAP2 PUSH2 0x12FA PUSH2 0x1955 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1315 DUP2 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x131D PUSH2 0x19FC JUMP JUMPDEST DUP7 GAS SWAP5 DUP11 DUP2 PUSH2 0x132C DUP9 GASPRICE PUSH2 0x1D65 JUMP JUMPDEST SWAP10 DUP6 PUSH1 0x8 SLOAD AND SWAP1 DUP14 PUSH2 0x1351 DUP13 MLOAD SWAP15 DUP16 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD PUSH2 0x1C96 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x1614 JUMPI DUP12 DUP1 SWAP10 DUP2 SWAP1 PUSH2 0x15CE JUMPI JUMPDEST DUP11 SWAP12 POP SWAP3 DUP11 SWAP5 SWAP3 DUP11 DUP8 SWAP6 SWAP4 PUSH2 0x138C SWAP12 SWAP11 SWAP10 SWAP9 SWAP5 PUSH1 0x20 SWAP13 DUP2 DUP15 DUP1 DUP1 SWAP5 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1CC2 JUMP JUMPDEST SWAP7 AND SWAP9 MLOAD SWAP16 ADD SWAP15 DUP16 KECCAK256 DUP2 MSTORE PUSH1 0x2 DUP13 MSTORE KECCAK256 SLOAD LT PUSH2 0x158B JUMPI SWAP1 PUSH2 0x13B4 DUP5 PUSH2 0x13BA SWAP5 SWAP4 AND DUP7 EQ PUSH2 0x1CE9 JUMP JUMPDEST EQ PUSH2 0x1D28 JUMP JUMPDEST DUP8 MLOAD DUP10 KECCAK256 DUP12 MSTORE PUSH1 0x3 DUP7 MSTORE DUP7 DUP12 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP12 MSTORE DUP6 MSTORE DUP3 DUP7 DUP12 KECCAK256 SLOAD LT PUSH2 0x1548 JUMPI SWAP2 DUP5 SWAP2 PUSH2 0x1438 SWAP4 DUP9 MLOAD DUP11 KECCAK256 DUP13 MSTORE PUSH1 0x3 DUP5 MSTORE DUP8 DUP13 KECCAK256 DUP3 DUP14 MSTORE DUP5 MSTORE DUP8 DUP13 KECCAK256 PUSH2 0x1400 DUP5 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 DUP13 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP14 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x153E JUMPI SWAP1 PUSH2 0x145F SWAP3 SWAP2 PUSH2 0x1521 JUMPI JUMPDEST POP PUSH2 0x145A GASPRICE SWAP2 GAS SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST SWAP4 PUSH2 0x2710 PUSH2 0x146F PUSH1 0xD SLOAD DUP8 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP6 DUP5 MLOAD DUP3 KECCAK256 DUP9 MSTORE PUSH1 0x2 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x1489 DUP9 DUP9 PUSH2 0x19D9 JUMP JUMPDEST GT PUSH2 0x14DE JUMPI DUP8 PUSH2 0x14D7 DUP2 DUP1 DUP1 DUP1 PUSH2 0x14C6 DUP14 DUP14 DUP14 PUSH2 0x14BF DUP15 PUSH1 0x2 DUP16 DUP16 PUSH2 0x14AE DUP9 DUP9 PUSH2 0x19D9 JUMP JUMPDEST SWAP6 MLOAD SWAP1 KECCAK256 DUP10 MSTORE MSTORE DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19D9 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x14D1 PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220676173207573656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1537 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST POP CODESIZE PUSH2 0x144D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E2062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP11 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682045544820666F722067617320726571756972656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP9 POP SWAP2 DUP4 PUSH2 0x138C SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 PUSH2 0x15F8 DUP11 SWAP13 DUP13 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x15F0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C23 JUMP JUMPDEST SWAP8 SWAP3 SWAP2 POP POP SWAP13 DUP14 SWAP13 DUP14 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP8 SWAP9 SWAP10 SWAP11 POP POP SWAP3 SWAP5 POP PUSH2 0x1366 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x635 JUMPI PUSH2 0x1654 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x190B JUMP JUMPDEST SWAP2 PUSH2 0x165D PUSH2 0x1929 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH2 0x16AA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP6 PUSH2 0x167C DUP8 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x1684 PUSH2 0x19FC JUMP JUMPDEST DUP9 DUP2 GAS SWAP5 DUP9 DUP11 PUSH1 0x8 SLOAD AND SWAP2 DUP13 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP6 MSTORE DUP13 DUP6 ADD PUSH2 0x1C96 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x1876 JUMPI DUP10 SWAP3 DUP11 SWAP9 PUSH2 0x184E JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x13B4 PUSH2 0x16E7 SWAP4 PUSH2 0x16DC PUSH1 0x20 SWAP12 DUP13 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1CC2 JUMP JUMPDEST SWAP4 AND SWAP10 AND DUP10 EQ PUSH2 0x1CE9 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1715 PUSH2 0x1703 PUSH2 0x16FD DUP5 GASPRICE PUSH2 0x1D65 JUMP JUMPDEST DUP7 PUSH2 0x1D78 JUMP JUMPDEST DUP3 DUP11 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP11 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP9 KECCAK256 SLOAD ISZERO PUSH2 0x180B JUMPI SWAP1 PUSH2 0x176D SWAP2 PUSH2 0x1735 DUP6 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH1 0x2 DUP8 MSTORE PUSH2 0x174B DUP6 DUP10 DUP12 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP9 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP9 KECCAK256 PUSH2 0x175F DUP6 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x145A GASPRICE SWAP2 GAS SWAP1 PUSH2 0x1D78 JUMP JUMPDEST SWAP4 PUSH2 0x2710 PUSH2 0x177D PUSH1 0xD SLOAD DUP8 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP6 PUSH2 0x1789 DUP8 DUP8 PUSH2 0x19D9 JUMP JUMPDEST DUP5 LT PUSH2 0x17CA JUMPI POP POP POP DUP5 PUSH2 0x14C6 DUP6 DUP6 PUSH2 0x17C5 DUP5 DUP1 DUP1 DUP1 DUP1 SWAP12 SWAP11 PUSH2 0x17BA PUSH2 0x14D7 SWAP15 PUSH2 0x17B5 DUP5 SWAP15 DUP6 SWAP15 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST SWAP1 GAS CALL PUSH2 0x8B7 PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x19D9 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220676173000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D69746D656E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1869 SWAP2 SWAP9 POP PUSH2 0x16E7 SWAP3 SWAP4 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x15F0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST SWAP10 SWAP3 SWAP5 SWAP4 SWAP2 POP PUSH2 0x16BE SWAP1 POP JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18A2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x18E0 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP2 PUSH2 0x18EE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1880 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3C JUMPI DUP2 PUSH1 0x20 PUSH2 0x1926 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1995 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19E6 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1A0D JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A59 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1AA5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1AF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B32 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420656E6F7567682062616C616E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x3C JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1B8B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2737BA103932B630BCB2B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BD1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BC1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3C JUMPI DUP1 MLOAD PUSH2 0x1BF7 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1880 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3C JUMPI PUSH2 0x1926 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP4 DUP4 SUB SLT PUSH2 0x3C JUMPI DUP3 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 GT PUSH2 0x3C JUMPI DUP4 PUSH2 0x1C4E SWAP2 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD MLOAD SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP4 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x3C JUMPI PUSH2 0x1926 SWAP3 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C8A DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x1CAE PUSH1 0x40 SWAP3 SWAP6 SWAP5 SWAP4 SWAP6 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x3C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3C JUMPI PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1CF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F742053616D652041646472657373 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F742053616D65204E6F6E6365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19E6 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19E6 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1D96 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP2 PUSH2 0x1DA4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1880 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1DBC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DFE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656420776974682067617300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP2 SWAP12 JUMPI STATICCALL 0x25 MLOAD 0xF9 PUSH5 0x7956E1D3C5 CREATE 0xEC 0x49 0xE2 PUSH1 0x3F 0xC5 0x1E SWAP2 DIV 0xC1 PUSH28 0x2B85219B881A64736F6C634300081300330000000000000000000000 ","sourceMap":"626:12653:11:-:0;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;626:12653:11;;;;;;;;719:10:6;;626:12653:11;;;;-1:-1:-1;626:12653:11;;;;;;;;;719:10:6;;;;;;;;;626:12653:11;;2566:40:0;-1:-1:-1;2566:40:0;;626:12653:11;;;1189:3;;626:12653;;;1818:36;626:12653;;;1818:36;626:12653;;;1864:34;626:12653;;;1864:34;626:12653;;;1908:26;626:12653;;;1908:26;626:12653;;;1944:30;626:12653;;;1944:30;626:12653;;;1984:18;626:12653;;;1984:18;626:12653;;;;;;;;;-1:-1:-1;626:12653:11;;;;;;-1:-1:-1;626:12653:11;;;;;-1:-1:-1;626:12653:11;;;;-1:-1:-1;;;;;626:12653:11;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6485,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24833":{"entryPoint":6441,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24834":{"entryPoint":6463,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24839":{"entryPoint":6507,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_payablet_bytes32_fromMemory":{"entryPoint":7362,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":6356,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":7020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_fromMemory":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytest_uint256t_uint256t_bytes_fromMemory":{"entryPoint":7203,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes":{"entryPoint":7281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_address_bytes32":{"entryPoint":7318,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6328,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":6617,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7525,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7544,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7102,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":7557,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":6272,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":6529,"id":54,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":6652,"id":157,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":7464,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_335f":{"entryPoint":6814,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3cc2":{"entryPoint":6738,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_62fe":{"entryPoint":6955,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7314":{"entryPoint":7671,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9dc8":{"entryPoint":6889,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c7c2":{"entryPoint":7605,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ed02":{"entryPoint":7044,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f358":{"entryPoint":7401,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060808152600480361015610083575b361561004157506020361261003c5760003560005260026020526000206100383482546119d9565b9055005b600080fd5b6020606492519162461bcd60e51b8352820152601760248201527f557365206465706f7369744554482066756e6374696f6e0000000000000000006044820152fd5b6000803560e01c806310d5700e1461161e5780631378f5d9146112b2578063139e3c541461128957806317d026e61461120757806320491915146111de57806324ebc1451461119e5780632fe4f4c11461115e5780633f16a3bb146111355780635262712f1461110c578063537820bf1461108c5780635e0cd92f1461104a5780636548e9bc1461100a5780636961b36114610fed5780636ff6158514610e20578063715018a614610dc657806384abac9514610c6d57806385e66df414610c4e57806389a3027114610c255780638da5cb5b14610bfd5780639926ad87146106a2578063a25da83c14610662578063ad5c464814610639578063bda7193a1461038c578063cf69568814610363578063d424134114610320578063d68d9d4e146102eb578063de11c94a146102c2578063e0bab4c4146102955763f2fde38b146101ce5750610010565b919034610291576020366003190112610291576101e961193f565b906101f2611981565b6001600160a01b0391821692831561023f57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5082346102be57816003193601126102be5760055490516001600160a01b039091168152602090f35b5080fd5b5082346102be57816003193601126102be5760095490516001600160a01b039091168152602090f35b5091906020366003190112610291576103026119fc565b358252600260205281206103173482546119d9565b90556001805580f35b50346103605760203660031901126103605761033a61193f565b610342611981565b60018060a01b03166001600160601b0360a01b600954161760095580f35b80fd5b5082346102be57816003193601126102be5760085490516001600160a01b039091168152602090f35b5091346102915760a03660031901126102915767ffffffffffffffff9082358281116106355736602382011215610635576103d090369060248187013591016118d4565b926103d961196b565b92604435908111610631576103f1903690830161190b565b506103fa611955565b600c546001600160a01b039391906104159085163314611b84565b61041d6119fc565b815193808760209661044b88828161043e8183019687815193849201611bbe565b8101038084520182611880565b5190209616918261051c5786895260028652838920549485156104d95750888086819482948b845260028b5283898120551682f1156104cf576104c17fa5ecd7cf58f2f1e36e387c6442f5dea0a47926654ed49e6d1d9eb06d0406424495965b6060845196879687528601526060850190611c71565b918301520390a26001805580f35b81513d88823e3d90fd5b845162461bcd60e51b8152908101879052601e60248201527f4e6f20455448206465706f73697420666f7220746869732073656372657400006044820152606490fd5b9050858852600385528288208289528552828820549384156105f05786895260038652838920838a528652838920899055835163a9059cbb60e01b81526001600160a01b039092169082019081526020810185905285908290819060400103818b865af180156105e657966104c1917fa5ecd7cf58f2f1e36e387c6442f5dea0a47926654ed49e6d1d9eb06d0406424497986105b9575b506104ab565b6105d890873d89116105df575b6105d08183611880565b810190611b6c565b50386105b3565b503d6105c6565b83513d8a823e3d90fd5b606490868086519262461bcd60e51b845283015260248201527f4e6f20546f6b656e206465706f73697420666f722074686973207365637265746044820152fd5b8580fd5b8480fd5b509190346102915782600319360112610291575490516001600160a01b03909116815260209150f35b50346103605760203660031901126103605761067c61193f565b610684611981565b60018060a01b03166001600160601b0360a01b600854161760085580f35b509134610291576080366003190112610291576106bd61193f565b9160249081359467ffffffffffffffff918287116102be57366023880112156102be57868101359283116102be5783870196848436920101116102be57604435926064359360018060a01b039261071984600c54163314611b84565b6107216119fc565b85855260209860028a528886205492479b8660055416928b51968d888d816370a0823160e01b98898252308b8301525afa978815610a6557908e8e8e999897969594938d9b610bbb575b508b6007541690519e8f8092898252308b8301525afa9c8d15610bb1578f8c9e610b7d575b50506107a561079f5a3a611d65565b856119d9565b92838810610b3a57918b8f8c829594839589938215600014610af4575050508293165af16107d1611d85565b505b15610abc576107f5916107e591611d78565b6107ef5a3a611d65565b90611d78565b91612710610805600d5485611d65565b049361081185856119d9565b11610a6f578447928d8d8a6005541690519889809285825230888301525afa968715610a6557918d989796959493918f938c98610a22575b508a600754169951998a938492835230908301525afa958615610a18579b809d8a9b9c9d928e9b938b996109cd575b506108bd958b9586958e6002889787876108ac988b9a11610986575b50506108a08686611d78565b938852528520556119d9565b335af16108b7611d85565b50611db5565b808211610932575b50508086116108dc575b8784600180555160018152f35b6108e69086611d78565b948515159081610928575b506108fd575b806108cf565b61091c9382526003875282822090600754168252865220918254611d78565b905538808281806108f7565b90501515386108f1565b61093c9082611d78565b90811515908161097c575b50610953575b806108c5565b85845260038952848420836005541685528952610974858520918254611d78565b90553861094d565b9050151538610947565b6109909082611d78565b9081151590816109c3575b506109a7575b80610894565b8489528282526109bb848a20918254611d78565b9055386109a1565b905015153861099b565b935098999a5092939495965081813d8311610a11575b6109ed8183611880565b81010312610a0d57518b9897969095949392918a918e91906108bd610878565b8880fd5b503d6109e3565b8b513d8a823e3d90fd5b9294959697509798509181813d8311610a5e575b610a408183611880565b81010312610a5a57918d918d989796959493519638610849565b8980fd5b503d610a36565b8d513d8c823e3d90fd5b608490858d8d519262461bcd60e51b8452830152808201527f496e73756666696369656e742062616c616e636520666f722067617320616e646044820152632066656560e01b6064820152fd5b508a5162461bcd60e51b81528084018d905260128187015271151c985b9cd858dd1a5bdb8819985a5b195960721b6044820152606490fd5b9092508382959415600014610b215750519384928337810182815203925af1610b1b611d85565b506107d3565b9350519384928337810185815203925af1610b1b611d85565b8f8f60188b6064938b93519362461bcd60e51b85528401528201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b9080929e50813d8311610baa575b610b958183611880565b81010312610ba657519b388f610790565b8a80fd5b503d610b8b565b8e513d8d823e3d90fd5b93959799505090929496985081813d8311610bf6575b610bdb8183611880565b81010312610a5a57918c979593918e8d98969451993861076b565b503d610bd1565b5082346102be57816003193601126102be57905490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be5760065490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be57602090600d549051908152f35b5082346102be5760603660031901126102be57610c8861193f565b60243591906001600160a01b0390811690610cd590610ca8831515611a52565b610cb3851515611a9e565b808754168314908115610db8575b8115610daa575b8115610d9c575b50611ae9565b81516323b872dd60e01b815233868201523060248201526044810184905260209590868160648189875af1908115610d92578691610d75575b5015610d3a5750610d359293946044358652600381528286209186525283209182546119d9565b905580f35b825162461bcd60e51b81529081018690526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b610d8c9150873d89116105df576105d08183611880565b87610d0e565b84513d88823e3d90fd5b905060075416821487610ccf565b600654811684149150610cc8565b600554811684149150610cc1565b5034610360578060031936011261036057610ddf611981565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346102be5760803660031901126102be57610e3b61193f565b9060243593610e48611929565b6001600160a01b0393841691610e5f831515611a52565b610e6a871515611a9e565b8481541683148015610fe0575b8015610fd3575b8015610fc6575b610e8e90611ae9565b6064358652602094600386528487208488528652610eb188868920541015611b2b565b8060095416855191633963f74160e21b835287836024818489169586898301525afa928315610fbc578993610f9d575b508215610f8f575b505015610f5f57835163095ea7b360e01b81526001600160a01b0390921690820190815260208101879052909291849184919082908890829060400103925af1908115610f565750610f39578280f35b81610f4f92903d106105df576105d08183611880565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152908101859052600a602482015269139bdd0818481999595960b21b6044820152606490fd5b600a54161490508880610ee9565b610fb5919350883d8a116105df576105d08183611880565b918a610ee1565b87513d8b823e3d90fd5b5060075485168314610e85565b5084600654168314610e7e565b5084600554168314610e77565b5082346102be57816003193601126102be57602090516101f48152f35b50346103605760203660031901126103605761102461193f565b61102c611981565b60018060a01b03166001600160601b0360a01b600c541617600c5580f35b5082346102be57806003193601126102be578060209261106861193f565b6024358252600385528282206001600160a01b039091168252845220549051908152f35b5090346102be5760803660031901126102be576110a761193f565b906110b061196b565b906110b9611929565b906110c2611955565b916110cb611981565b60018060a01b0380948193826001600160601b0360a01b98168882541617905516856005541617600555168360065416176006551690600754161760075580f35b5082346102be57816003193601126102be5760075490516001600160a01b039091168152602090f35b5082346102be57816003193601126102be57600a5490516001600160a01b039091168152602090f35b50346103605760203660031901126103605761117861193f565b611180611981565b60018060a01b03166001600160601b0360a01b600b541617600b5580f35b5034610360576020366003190112610360576111b861193f565b6111c0611981565b60018060a01b03166001600160601b0360a01b600a541617600a5580f35b509190346102915760203660031901126102915760209282913581526002845220549051908152f35b5091903461029157602036600319011261029157803591611226611981565b6101f48311611237575050600d5580f35b906020608492519162461bcd60e51b8352820152602660248201527f4e65772072656c61796572206665652070657263656e7461676520697320746f6044820152650de40d0d2ced60d31b6064820152fd5b5082346102be57816003193601126102be57600b5490516001600160a01b039091168152602090f35b5091346102915760a0366003190112610291576112cd61193f565b906024359060443567ffffffffffffffff8111610631576112f1903690860161190b565b916112fa611955565b906084359460018060a01b0361131581600c54163314611b84565b61131d6119fc565b865a948a8161132c883a611d65565b998560085416908d6113518c519e8f9586948594637276069d60e01b86528501611c96565b03915afa978815611614578b809981906115ce575b8a9b50928a94928a87959361138c9b9a99989460209c818e808094518301019101611cc2565b961698519f019e8f20815260028c5220541061158b57906113b4846113ba9493168614611ce9565b14611d28565b875189208b5260038652868b20921691828b52855282868b205410611548579184916114389388518a208c5260038452878c20828d528452878c20611400848254611d78565b9055875163a9059cbb60e01b81526001600160a01b03909116818c01908152602081019390935293849283918d918391604090910190565b03925af1801561153e579061145f9291611521575b5061145a3a915a90611d78565b611d65565b9361271061146f600d5487611d65565b0495845182208852600283528388205461148988886119d9565b116114de57876114d7818080806114c68d8d8d6114bf8e60028f8f6114ae88886119d9565b955190208952528620918254611d78565b90556119d9565b335af16114d1611d85565b50611df7565b6001805580f35b835162461bcd60e51b8152908101839052601f60248201527f4e6f7420656e6f7567682062616c616e636520666f72206761732075736564006044820152606490fd5b61153790843d86116105df576105d08183611880565b503861144d565b84513d8a823e3d90fd5b855162461bcd60e51b8152808a01869052601860248201527f4e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000006044820152606490fd5b895162461bcd60e51b8152808e018a9052601f60248201527f4e6f7420656e6f7567682045544820666f7220676173207265717569726564006044820152606490fd5b509850918361138c97969594926115f88a9c8c3d8091833e6115f08183611880565b810190611c23565b97929150509c8d9c8d97939650939798999a5050929450611366565b87513d8d823e3d90fd5b509190346102915760803660031901126102915780359060243567ffffffffffffffff811161063557611654903690830161190b565b9161165d611929565b91606435936116aa60018060a01b039561167c87600c54163314611b84565b6116846119fc565b88815a94888a60085416918c5196879485938493637276069d60e01b85528c8501611c96565b03915afa9687156118765789928a9861184e575b5090816113b46116e7936116dc60209b8c8082518301019101611cc2565b931699168914611ce9565b8581519101206117156117036116fd843a611d65565b86611d78565b828a5260028852888a20541015611b2b565b80885260028652868820541561180b579061176d91611735851515611a9e565b8089526002875261174b85898b20541015611b2b565b88526002865286882061175f858254611d78565b905561145a3a915a90611d78565b9361271061177d600d5487611d65565b049561178987876119d9565b84106117ca57505050846114c685856117c584808080809b9a6117ba6114d79e6117b5849e859e611d78565b611d78565b905af16108b7611d85565b6119d9565b5162461bcd60e51b815291820152601a60248201527f4e6f7420656e6f7567682062616c616e636520666f7220676173000000000000604482015260649150fd5b865162461bcd60e51b8152808401879052601960248201527f436f6d6d69746d656e7420646f6573206e6f74206578697374000000000000006044820152606490fd5b6118699198506116e79293503d808c833e6115f08183611880565b9992949391506116be9050565b88513d8b823e3d90fd5b90601f8019910116810190811067ffffffffffffffff8211176118a257604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116118a257601f01601f191660200190565b9291926118e0826118b8565b916118ee6040519384611880565b82948184528183011161003c578281602093846000960137010152565b9080601f8301121561003c57816020611926933591016118d4565b90565b604435906001600160a01b038216820361003c57565b600435906001600160a01b038216820361003c57565b606435906001600160a01b038216820361003c57565b602435906001600160a01b038216820361003c57565b6000546001600160a01b0316330361199557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082018092116119e657565b634e487b7160e01b600052601160045260246000fd5b600260015414611a0d576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b15611a5957565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e20616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b15611aa557565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b15611af057565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b15611b3257565b60405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606490fd5b9081602091031261003c5751801515810361003c5790565b15611b8b57565b60405162461bcd60e51b815260206004820152600b60248201526a2737ba103932b630bcb2b960a91b6044820152606490fd5b60005b838110611bd15750506000910152565b8181015183820152602001611bc1565b81601f8201121561003c578051611bf7816118b8565b92611c056040519485611880565b8184526020828401011161003c576119269160208085019101611bbe565b9160808383031261003c5782519067ffffffffffffffff9182811161003c5783611c4e918601611be1565b93602081015193604082015193606083015190811161003c576119269201611be1565b90602091611c8a81518092818552858086019101611bbe565b601f01601f1916010190565b611cae60409295949395606083526060830190611c71565b6001600160a01b0390951660208201520152565b919082604091031261003c5781516001600160a01b038116810361003c5760209092015190565b15611cf057565b60405162461bcd60e51b815260206004820152601060248201526f4e6f742053616d65204164647265737360801b6044820152606490fd5b15611d2f57565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f742053616d65204e6f6e636560901b6044820152606490fd5b818102929181159184041417156119e657565b919082039182116119e657565b3d15611db0573d90611d96826118b8565b91611da46040519384611880565b82523d6000602084013e565b606090565b15611dbc57565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b15611dfe57565b60405162461bcd60e51b815260206004820152601c60248201527f455448207472616e73666572206661696c6564207769746820676173000000006044820152606490fdfea264697066735822122012919b57fa2551f9647956e1d3c5f0ec49e2603fc51e9104c17b2b85219b881a64736f6c63430008130033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x83 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x41 JUMPI POP PUSH1 0x20 CALLDATASIZE SLT PUSH2 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 PUSH2 0x38 CALLVALUE DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365206465706F7369744554482066756E6374696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10D5700E EQ PUSH2 0x161E JUMPI DUP1 PUSH4 0x1378F5D9 EQ PUSH2 0x12B2 JUMPI DUP1 PUSH4 0x139E3C54 EQ PUSH2 0x1289 JUMPI DUP1 PUSH4 0x17D026E6 EQ PUSH2 0x1207 JUMPI DUP1 PUSH4 0x20491915 EQ PUSH2 0x11DE JUMPI DUP1 PUSH4 0x24EBC145 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x2FE4F4C1 EQ PUSH2 0x115E JUMPI DUP1 PUSH4 0x3F16A3BB EQ PUSH2 0x1135 JUMPI DUP1 PUSH4 0x5262712F EQ PUSH2 0x110C JUMPI DUP1 PUSH4 0x537820BF EQ PUSH2 0x108C JUMPI DUP1 PUSH4 0x5E0CD92F EQ PUSH2 0x104A JUMPI DUP1 PUSH4 0x6548E9BC EQ PUSH2 0x100A JUMPI DUP1 PUSH4 0x6961B361 EQ PUSH2 0xFED JUMPI DUP1 PUSH4 0x6FF61585 EQ PUSH2 0xE20 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDC6 JUMPI DUP1 PUSH4 0x84ABAC95 EQ PUSH2 0xC6D JUMPI DUP1 PUSH4 0x85E66DF4 EQ PUSH2 0xC4E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xC25 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBFD JUMPI DUP1 PUSH4 0x9926AD87 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA25DA83C EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xBDA7193A EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCF695688 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD4241341 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xD68D9D4E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xDE11C94A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x295 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x1CE JUMPI POP PUSH2 0x10 JUMP JUMPDEST SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1E9 PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH2 0x1F2 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x23F JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x302 PUSH2 0x19FC JUMP JUMPDEST CALLDATALOAD DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x317 CALLVALUE DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x33A PUSH2 0x193F JUMP JUMPDEST PUSH2 0x342 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x635 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x635 JUMPI PUSH2 0x3D0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP3 PUSH2 0x3D9 PUSH2 0x196B JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x631 JUMPI PUSH2 0x3F1 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x190B JUMP JUMPDEST POP PUSH2 0x3FA PUSH2 0x1955 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 SWAP1 PUSH2 0x415 SWAP1 DUP6 AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x41D PUSH2 0x19FC JUMP JUMPDEST DUP2 MLOAD SWAP4 DUP1 DUP8 PUSH1 0x20 SWAP7 PUSH2 0x44B DUP9 DUP3 DUP2 PUSH2 0x43E DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1BBE JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x1880 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 AND SWAP2 DUP3 PUSH2 0x51C JUMPI DUP7 DUP10 MSTORE PUSH1 0x2 DUP7 MSTORE DUP4 DUP10 KECCAK256 SLOAD SWAP5 DUP6 ISZERO PUSH2 0x4D9 JUMPI POP DUP9 DUP1 DUP7 DUP2 SWAP5 DUP3 SWAP5 DUP12 DUP5 MSTORE PUSH1 0x2 DUP12 MSTORE DUP4 DUP10 DUP2 KECCAK256 SSTORE AND DUP3 CALL ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4C1 PUSH32 0xA5ECD7CF58F2F1E36E387C6442F5DEA0A47926654ED49E6D1D9EB06D04064244 SWAP6 SWAP7 JUMPDEST PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1C71 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20455448206465706F73697420666F722074686973207365637265740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP9 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP9 KECCAK256 DUP3 DUP10 MSTORE DUP6 MSTORE DUP3 DUP9 KECCAK256 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x5F0 JUMPI DUP7 DUP10 MSTORE PUSH1 0x3 DUP7 MSTORE DUP4 DUP10 KECCAK256 DUP4 DUP11 MSTORE DUP7 MSTORE DUP4 DUP10 KECCAK256 DUP10 SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP12 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x5E6 JUMPI SWAP7 PUSH2 0x4C1 SWAP2 PUSH32 0xA5ECD7CF58F2F1E36E387C6442F5DEA0A47926654ED49E6D1D9EB06D04064244 SWAP8 SWAP9 PUSH2 0x5B9 JUMPI JUMPDEST POP PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x5D8 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5DF JUMPI JUMPDEST PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1B6C JUMP JUMPDEST POP CODESIZE PUSH2 0x5B3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C6 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP1 DUP7 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E206465706F73697420666F72207468697320736563726574 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x67C PUSH2 0x193F JUMP JUMPDEST PUSH2 0x684 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x6BD PUSH2 0x193F JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP8 GT PUSH2 0x2BE JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x2BE JUMPI DUP7 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x2BE JUMPI DUP4 DUP8 ADD SWAP7 DUP5 DUP5 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x2BE JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x719 DUP5 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x19FC JUMP JUMPDEST DUP6 DUP6 MSTORE PUSH1 0x20 SWAP9 PUSH1 0x2 DUP11 MSTORE DUP9 DUP7 KECCAK256 SLOAD SWAP3 SELFBALANCE SWAP12 DUP7 PUSH1 0x5 SLOAD AND SWAP3 DUP12 MLOAD SWAP7 DUP14 DUP9 DUP14 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP9 DUP10 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xA65 JUMPI SWAP1 DUP15 DUP15 DUP15 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP14 SWAP12 PUSH2 0xBBB JUMPI JUMPDEST POP DUP12 PUSH1 0x7 SLOAD AND SWAP1 MLOAD SWAP15 DUP16 DUP1 SWAP3 DUP10 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP13 DUP14 ISZERO PUSH2 0xBB1 JUMPI DUP16 DUP13 SWAP15 PUSH2 0xB7D JUMPI JUMPDEST POP POP PUSH2 0x7A5 PUSH2 0x79F GAS GASPRICE PUSH2 0x1D65 JUMP JUMPDEST DUP6 PUSH2 0x19D9 JUMP JUMPDEST SWAP3 DUP4 DUP9 LT PUSH2 0xB3A JUMPI SWAP2 DUP12 DUP16 DUP13 DUP3 SWAP6 SWAP5 DUP4 SWAP6 DUP10 SWAP4 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0xAF4 JUMPI POP POP POP DUP3 SWAP4 AND GAS CALL PUSH2 0x7D1 PUSH2 0x1D85 JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xABC JUMPI PUSH2 0x7F5 SWAP2 PUSH2 0x7E5 SWAP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x7EF GAS GASPRICE PUSH2 0x1D65 JUMP JUMPDEST SWAP1 PUSH2 0x1D78 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x805 PUSH1 0xD SLOAD DUP6 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP4 PUSH2 0x811 DUP6 DUP6 PUSH2 0x19D9 JUMP JUMPDEST GT PUSH2 0xA6F JUMPI DUP5 SELFBALANCE SWAP3 DUP14 DUP14 DUP11 PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP9 DUP10 DUP1 SWAP3 DUP6 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xA65 JUMPI SWAP2 DUP14 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 DUP16 SWAP4 DUP13 SWAP9 PUSH2 0xA22 JUMPI JUMPDEST POP DUP11 PUSH1 0x7 SLOAD AND SWAP10 MLOAD SWAP10 DUP11 SWAP4 DUP5 SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xA18 JUMPI SWAP12 DUP1 SWAP14 DUP11 SWAP12 SWAP13 SWAP14 SWAP3 DUP15 SWAP12 SWAP4 DUP12 SWAP10 PUSH2 0x9CD JUMPI JUMPDEST POP PUSH2 0x8BD SWAP6 DUP12 SWAP6 DUP7 SWAP6 DUP15 PUSH1 0x2 DUP9 SWAP8 DUP8 DUP8 PUSH2 0x8AC SWAP9 DUP12 SWAP11 GT PUSH2 0x986 JUMPI JUMPDEST POP POP PUSH2 0x8A0 DUP7 DUP7 PUSH2 0x1D78 JUMP JUMPDEST SWAP4 DUP9 MSTORE MSTORE DUP6 KECCAK256 SSTORE PUSH2 0x19D9 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x8B7 PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x1DB5 JUMP JUMPDEST DUP1 DUP3 GT PUSH2 0x932 JUMPI JUMPDEST POP POP DUP1 DUP7 GT PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP5 PUSH1 0x1 DUP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x8E6 SWAP1 DUP7 PUSH2 0x1D78 JUMP JUMPDEST SWAP5 DUP6 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x928 JUMPI JUMPDEST POP PUSH2 0x8FD JUMPI JUMPDEST DUP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x91C SWAP4 DUP3 MSTORE PUSH1 0x3 DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x7 SLOAD AND DUP3 MSTORE DUP7 MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP2 DUP1 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x93C SWAP1 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x97C JUMPI JUMPDEST POP PUSH2 0x953 JUMPI JUMPDEST DUP1 PUSH2 0x8C5 JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH1 0x3 DUP10 MSTORE DUP5 DUP5 KECCAK256 DUP4 PUSH1 0x5 SLOAD AND DUP6 MSTORE DUP10 MSTORE PUSH2 0x974 DUP6 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE PUSH2 0x94D JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x947 JUMP JUMPDEST PUSH2 0x990 SWAP1 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x9C3 JUMPI JUMPDEST POP PUSH2 0x9A7 JUMPI JUMPDEST DUP1 PUSH2 0x894 JUMP JUMPDEST DUP5 DUP10 MSTORE DUP3 DUP3 MSTORE PUSH2 0x9BB DUP5 DUP11 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE CODESIZE PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x99B JUMP JUMPDEST SWAP4 POP SWAP9 SWAP10 SWAP11 POP SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA11 JUMPI JUMPDEST PUSH2 0x9ED DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA0D JUMPI MLOAD DUP12 SWAP9 SWAP8 SWAP7 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP11 SWAP2 DUP15 SWAP2 SWAP1 PUSH2 0x8BD PUSH2 0x878 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x9E3 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 POP SWAP8 SWAP9 POP SWAP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0xA40 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA5A JUMPI SWAP2 DUP14 SWAP2 DUP14 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 MLOAD SWAP7 CODESIZE PUSH2 0x849 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA36 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 SWAP1 DUP6 DUP14 DUP14 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE DUP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520666F722067617320616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20666565 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP14 SWAP1 MSTORE PUSH1 0x12 DUP2 DUP8 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP3 SWAP6 SWAP5 ISZERO PUSH1 0x0 EQ PUSH2 0xB21 JUMPI POP MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB1B PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x7D3 JUMP JUMPDEST SWAP4 POP MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB1B PUSH2 0x1D85 JUMP JUMPDEST DUP16 DUP16 PUSH1 0x18 DUP12 PUSH1 0x64 SWAP4 DUP12 SWAP4 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP15 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBAA JUMPI JUMPDEST PUSH2 0xB95 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xBA6 JUMPI MLOAD SWAP12 CODESIZE DUP16 PUSH2 0x790 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xB8B JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP6 SWAP8 SWAP10 POP POP SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBF6 JUMPI JUMPDEST PUSH2 0xBDB DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA5A JUMPI SWAP2 DUP13 SWAP8 SWAP6 SWAP4 SWAP2 DUP15 DUP14 SWAP9 SWAP7 SWAP5 MLOAD SWAP10 CODESIZE PUSH2 0x76B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBD1 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0xC88 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0xCD5 SWAP1 PUSH2 0xCA8 DUP4 ISZERO ISZERO PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xCB3 DUP6 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP1 DUP8 SLOAD AND DUP4 EQ SWAP1 DUP2 ISZERO PUSH2 0xDB8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xDAA JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xD9C JUMPI JUMPDEST POP PUSH2 0x1AE9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP7 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP6 SWAP1 DUP7 DUP2 PUSH1 0x64 DUP2 DUP10 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD92 JUMPI DUP7 SWAP2 PUSH2 0xD75 JUMPI JUMPDEST POP ISZERO PUSH2 0xD3A JUMPI POP PUSH2 0xD35 SWAP3 SWAP4 SWAP5 PUSH1 0x44 CALLDATALOAD DUP7 MSTORE PUSH1 0x3 DUP2 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE DUP4 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xD8C SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP8 PUSH2 0xD0E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD AND DUP3 EQ DUP8 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 AND DUP5 EQ SWAP2 POP PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 AND DUP5 EQ SWAP2 POP PUSH2 0xCC1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x360 JUMPI PUSH2 0xDDF PUSH2 0x1981 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0xE3B PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP4 PUSH2 0xE48 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP2 PUSH2 0xE5F DUP4 ISZERO ISZERO PUSH2 0x1A52 JUMP JUMPDEST PUSH2 0xE6A DUP8 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP5 DUP2 SLOAD AND DUP4 EQ DUP1 ISZERO PUSH2 0xFE0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xFD3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xFC6 JUMPI JUMPDEST PUSH2 0xE8E SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP7 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x3 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP5 DUP9 MSTORE DUP7 MSTORE PUSH2 0xEB1 DUP9 DUP7 DUP10 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP1 PUSH1 0x9 SLOAD AND DUP6 MLOAD SWAP2 PUSH4 0x3963F741 PUSH1 0xE2 SHL DUP4 MSTORE DUP8 DUP4 PUSH1 0x24 DUP2 DUP5 DUP10 AND SWAP6 DUP7 DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xFBC JUMPI DUP10 SWAP4 PUSH2 0xF9D JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0xF8F JUMPI JUMPDEST POP POP ISZERO PUSH2 0xF5F JUMPI DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF56 JUMPI POP PUSH2 0xF39 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xF4F SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x139BDD08184819995959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD AND EQ SWAP1 POP DUP9 DUP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xFB5 SWAP2 SWAP4 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST SWAP2 DUP11 PUSH2 0xEE1 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD DUP6 AND DUP4 EQ PUSH2 0xE85 JUMP JUMPDEST POP DUP5 PUSH1 0x6 SLOAD AND DUP4 EQ PUSH2 0xE7E JUMP JUMPDEST POP DUP5 PUSH1 0x5 SLOAD AND DUP4 EQ PUSH2 0xE77 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1F4 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x1024 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x102C PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1068 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x2BE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BE JUMPI PUSH2 0x10A7 PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH2 0x10B0 PUSH2 0x196B JUMP JUMPDEST SWAP1 PUSH2 0x10B9 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x10C2 PUSH2 0x1955 JUMP JUMPDEST SWAP2 PUSH2 0x10CB PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 DUP2 SWAP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP9 AND DUP9 DUP3 SLOAD AND OR SWAP1 SSTORE AND DUP6 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE AND DUP4 PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE AND SWAP1 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x1178 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x1180 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x360 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x360 JUMPI PUSH2 0x11B8 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x1226 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x1F4 DUP4 GT PUSH2 0x1237 JUMPI POP POP PUSH1 0xD SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772072656C61796572206665652070657263656E7461676520697320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xDE40D0D2CED PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x2BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BE JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI PUSH2 0x12CD PUSH2 0x193F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x631 JUMPI PUSH2 0x12F1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x190B JUMP JUMPDEST SWAP2 PUSH2 0x12FA PUSH2 0x1955 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1315 DUP2 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x131D PUSH2 0x19FC JUMP JUMPDEST DUP7 GAS SWAP5 DUP11 DUP2 PUSH2 0x132C DUP9 GASPRICE PUSH2 0x1D65 JUMP JUMPDEST SWAP10 DUP6 PUSH1 0x8 SLOAD AND SWAP1 DUP14 PUSH2 0x1351 DUP13 MLOAD SWAP15 DUP16 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD PUSH2 0x1C96 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x1614 JUMPI DUP12 DUP1 SWAP10 DUP2 SWAP1 PUSH2 0x15CE JUMPI JUMPDEST DUP11 SWAP12 POP SWAP3 DUP11 SWAP5 SWAP3 DUP11 DUP8 SWAP6 SWAP4 PUSH2 0x138C SWAP12 SWAP11 SWAP10 SWAP9 SWAP5 PUSH1 0x20 SWAP13 DUP2 DUP15 DUP1 DUP1 SWAP5 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1CC2 JUMP JUMPDEST SWAP7 AND SWAP9 MLOAD SWAP16 ADD SWAP15 DUP16 KECCAK256 DUP2 MSTORE PUSH1 0x2 DUP13 MSTORE KECCAK256 SLOAD LT PUSH2 0x158B JUMPI SWAP1 PUSH2 0x13B4 DUP5 PUSH2 0x13BA SWAP5 SWAP4 AND DUP7 EQ PUSH2 0x1CE9 JUMP JUMPDEST EQ PUSH2 0x1D28 JUMP JUMPDEST DUP8 MLOAD DUP10 KECCAK256 DUP12 MSTORE PUSH1 0x3 DUP7 MSTORE DUP7 DUP12 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP12 MSTORE DUP6 MSTORE DUP3 DUP7 DUP12 KECCAK256 SLOAD LT PUSH2 0x1548 JUMPI SWAP2 DUP5 SWAP2 PUSH2 0x1438 SWAP4 DUP9 MLOAD DUP11 KECCAK256 DUP13 MSTORE PUSH1 0x3 DUP5 MSTORE DUP8 DUP13 KECCAK256 DUP3 DUP14 MSTORE DUP5 MSTORE DUP8 DUP13 KECCAK256 PUSH2 0x1400 DUP5 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 DUP13 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP14 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x153E JUMPI SWAP1 PUSH2 0x145F SWAP3 SWAP2 PUSH2 0x1521 JUMPI JUMPDEST POP PUSH2 0x145A GASPRICE SWAP2 GAS SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST SWAP4 PUSH2 0x2710 PUSH2 0x146F PUSH1 0xD SLOAD DUP8 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP6 DUP5 MLOAD DUP3 KECCAK256 DUP9 MSTORE PUSH1 0x2 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x1489 DUP9 DUP9 PUSH2 0x19D9 JUMP JUMPDEST GT PUSH2 0x14DE JUMPI DUP8 PUSH2 0x14D7 DUP2 DUP1 DUP1 DUP1 PUSH2 0x14C6 DUP14 DUP14 DUP14 PUSH2 0x14BF DUP15 PUSH1 0x2 DUP16 DUP16 PUSH2 0x14AE DUP9 DUP9 PUSH2 0x19D9 JUMP JUMPDEST SWAP6 MLOAD SWAP1 KECCAK256 DUP10 MSTORE MSTORE DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19D9 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x14D1 PUSH2 0x1D85 JUMP JUMPDEST POP PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220676173207573656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1537 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x5DF JUMPI PUSH2 0x5D0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST POP CODESIZE PUSH2 0x144D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E2062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP11 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682045544820666F722067617320726571756972656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP9 POP SWAP2 DUP4 PUSH2 0x138C SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 PUSH2 0x15F8 DUP11 SWAP13 DUP13 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x15F0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C23 JUMP JUMPDEST SWAP8 SWAP3 SWAP2 POP POP SWAP13 DUP14 SWAP13 DUP14 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP8 SWAP9 SWAP10 SWAP11 POP POP SWAP3 SWAP5 POP PUSH2 0x1366 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x291 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x635 JUMPI PUSH2 0x1654 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x190B JUMP JUMPDEST SWAP2 PUSH2 0x165D PUSH2 0x1929 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH2 0x16AA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP6 PUSH2 0x167C DUP8 PUSH1 0xC SLOAD AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x1684 PUSH2 0x19FC JUMP JUMPDEST DUP9 DUP2 GAS SWAP5 DUP9 DUP11 PUSH1 0x8 SLOAD AND SWAP2 DUP13 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP6 MSTORE DUP13 DUP6 ADD PUSH2 0x1C96 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x1876 JUMPI DUP10 SWAP3 DUP11 SWAP9 PUSH2 0x184E JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x13B4 PUSH2 0x16E7 SWAP4 PUSH2 0x16DC PUSH1 0x20 SWAP12 DUP13 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1CC2 JUMP JUMPDEST SWAP4 AND SWAP10 AND DUP10 EQ PUSH2 0x1CE9 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1715 PUSH2 0x1703 PUSH2 0x16FD DUP5 GASPRICE PUSH2 0x1D65 JUMP JUMPDEST DUP7 PUSH2 0x1D78 JUMP JUMPDEST DUP3 DUP11 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP11 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP9 KECCAK256 SLOAD ISZERO PUSH2 0x180B JUMPI SWAP1 PUSH2 0x176D SWAP2 PUSH2 0x1735 DUP6 ISZERO ISZERO PUSH2 0x1A9E JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH1 0x2 DUP8 MSTORE PUSH2 0x174B DUP6 DUP10 DUP12 KECCAK256 SLOAD LT ISZERO PUSH2 0x1B2B JUMP JUMPDEST DUP9 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP9 KECCAK256 PUSH2 0x175F DUP6 DUP3 SLOAD PUSH2 0x1D78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x145A GASPRICE SWAP2 GAS SWAP1 PUSH2 0x1D78 JUMP JUMPDEST SWAP4 PUSH2 0x2710 PUSH2 0x177D PUSH1 0xD SLOAD DUP8 PUSH2 0x1D65 JUMP JUMPDEST DIV SWAP6 PUSH2 0x1789 DUP8 DUP8 PUSH2 0x19D9 JUMP JUMPDEST DUP5 LT PUSH2 0x17CA JUMPI POP POP POP DUP5 PUSH2 0x14C6 DUP6 DUP6 PUSH2 0x17C5 DUP5 DUP1 DUP1 DUP1 DUP1 SWAP12 SWAP11 PUSH2 0x17BA PUSH2 0x14D7 SWAP15 PUSH2 0x17B5 DUP5 SWAP15 DUP6 SWAP15 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST SWAP1 GAS CALL PUSH2 0x8B7 PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x19D9 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220676173000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D69746D656E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1869 SWAP2 SWAP9 POP PUSH2 0x16E7 SWAP3 SWAP4 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x15F0 DUP2 DUP4 PUSH2 0x1880 JUMP JUMPDEST SWAP10 SWAP3 SWAP5 SWAP4 SWAP2 POP PUSH2 0x16BE SWAP1 POP JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18A2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x18E0 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP2 PUSH2 0x18EE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1880 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3C JUMPI DUP2 PUSH1 0x20 PUSH2 0x1926 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3C JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1995 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19E6 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1A0D JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A59 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1AA5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1AF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B32 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420656E6F7567682062616C616E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x3C JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1B8B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2737BA103932B630BCB2B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BD1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BC1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3C JUMPI DUP1 MLOAD PUSH2 0x1BF7 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1880 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3C JUMPI PUSH2 0x1926 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP4 DUP4 SUB SLT PUSH2 0x3C JUMPI DUP3 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 GT PUSH2 0x3C JUMPI DUP4 PUSH2 0x1C4E SWAP2 DUP7 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD MLOAD SWAP4 PUSH1 0x40 DUP3 ADD MLOAD SWAP4 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x3C JUMPI PUSH2 0x1926 SWAP3 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C8A DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x1CAE PUSH1 0x40 SWAP3 SWAP6 SWAP5 SWAP4 SWAP6 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x3C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3C JUMPI PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1CF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F742053616D652041646472657373 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F742053616D65204E6F6E6365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19E6 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19E6 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1D96 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP2 PUSH2 0x1DA4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1880 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1DBC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DFE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206661696C656420776974682067617300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP2 SWAP12 JUMPI STATICCALL 0x25 MLOAD 0xF9 PUSH5 0x7956E1D3C5 CREATE 0xEC 0x49 0xE2 PUSH1 0x3F 0xC5 0x1E SWAP2 DIV 0xC1 PUSH28 0x2B85219B881A64736F6C634300081300330000000000000000000000 ","sourceMap":"626:12653:11:-:0;;;;;;;;;;;-1:-1:-1;626:12653:11;;;;;;;;;;-1:-1:-1;626:12653:11;-1:-1:-1;626:12653:11;9835:11;626:12653;;-1:-1:-1;626:12653:11;9835:42;9868:9;626:12653;;9835:42;:::i;:::-;626:12653;;;;-1:-1:-1;626:12653:11;;;;;;;;;;;9604:33;;;;626:12653;;;;;;;;;;;9604:33;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;-1:-1:-1;;;;;626:12653:11;;;;2162:22:0;;626:12653:11;;-1:-1:-1;;626:12653:11;;-1:-1:-1;;;;;;626:12653:11;;;;;;;2566:40:0;626:12653:11;;2566:40:0;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;908:18;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;;;1019:30;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;-1:-1:-1;626:12653:11;;;;-1:-1:-1;;626:12653:11;;;;2227:103:1;;:::i;:::-;626:12653:11;;;2706:11;626:12653;;;;2706:42;2739:9;626:12653;;2706:42;:::i;:::-;626:12653;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;;13000:34;626:12653;;;13000:34;626:12653;;;;;;;;;;;;;;;;;;;;982:31;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1586:7;626:12653;-1:-1:-1;;;;;626:12653:11;;;1564:45;;626:12653;;1572:10;:21;1564:45;:::i;:::-;2227:103:1;;:::i;:::-;626:12653:11;;;;;;6858:25;;;;;626:12653;6858:25;;;626:12653;;;;;;;;;:::i;:::-;;;6858:25;;;;;;;:::i;:::-;626:12653;6848:36;;;626:12653;;6923:20;626:12653;;;;;6968:11;626:12653;;;;;;7013:10;;;626:12653;;;;;;;;;;;;;6968:11;626:12653;;;;;;;;7113:29;;;;;626:12653;7411:46;6919:477;;;626:12653;;;;;;;;;;;;;;;;:::i;:::-;;;;;7411:46;;;626:12653;;;;;7113:29;626:12653;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;6919:477;626:12653;;;;;;;;;;;;;;;;;;;;7237:10;;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7349:36:11;;-1:-1:-1;;;;;626:12653:11;;;7349:36;;;626:12653;;;;;;;;;;;;;;;;;7349:36;;;;;;;;;;;626:12653;7349:36;7411:46;7349:36;;;;6919:477;;;;7349:36;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;-1:-1:-1;626:12653:11;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;;12868:36;626:12653;;;12868:36;626:12653;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:45;626:12653;1586:7;626:12653;;1572:10;:21;1564:45;:::i;:::-;2227:103:1;;:::i;:::-;626:12653:11;;;;;10301:11;626:12653;;;;;;10365:21;;626:12653;;10426:3;626:12653;;;;;;;;;;;;;10419:36;;;;10373:4;10419:36;;;626:12653;10419:36;;;;;;;;;;;;;;;;;;;;;;626:12653;;;10496:4;626:12653;;;;10489:37;;;;;;;10373:4;10489:37;;;626:12653;10489:37;;;;;;;;;;;;626:12653;10585:9;;10561:34;10571:23;10585:9;10571:11;:23;:::i;:::-;10561:34;;:::i;:::-;10614:33;;;;626:12653;;10687:12;;;;;;;;;;;10839:17;;10835:316;10839:17;;;626:12653;;;;;;10886:40;;;;:::i;:::-;;10835:316;626:12653;;;11228:50;:22;;;;:::i;:::-;11254:23;11268:9;10571:11;11254:23;:::i;:::-;11228:50;;:::i;:::-;626:12653;11345:5;11311:30;11321:20;626:12653;11311:30;;:::i;:::-;626:12653;11402:20;;;;;:::i;:::-;-1:-1:-1;626:12653:11;;11516:21;;626:12653;;;;10426:3;626:12653;;;;11568:36;;;;;;;10373:4;11568:36;;;626:12653;11568:36;;;;;;;;;;;;;;;;;;;;;;10835:316;626:12653;;10496:4;626:12653;;;;11636:37;;;;;;;10373:4;11636:37;;;626:12653;11636:37;;;;;;;;;;;;;;;;;;;;;;10835:316;11765:25;12134:39;11765:25;;;;;;10301:11;11765:25;;;;12098:20;11765:25;;;;11761:217;;10835:316;12021:20;;;;;;:::i;:::-;626:12653;;;;;;;12098:20;:::i;:::-;1572:10;12066:57;;;;:::i;:::-;;12134:39;:::i;:::-;12188:25;;;12184:224;;10835:316;12422:27;;;;;12418:233;;10835:316;626:12653;;;;;;;;;;12418:233;12476:27;;;;:::i;:::-;12522:12;;;;:34;;;;12418:233;12518:123;;;12418:233;;;;12518:123;12576:50;626:12653;;;;;;;;;;10496:4;626:12653;;;;;;;;;;12576:50;:::i;:::-;626:12653;;12518:123;;;;;;;12522:34;12538:18;;;;12522:34;;;12184:224;12239:25;;;;:::i;:::-;12283:11;;;;:32;;;;12184:224;12279:119;;;12184:224;;;;12279:119;626:12653;;;;;;;;;;10426:3;626:12653;;;;;;12335:48;626:12653;;;;;;12335:48;:::i;:::-;626:12653;;12279:119;;;12283:32;12298:17;;;;12283:32;;;11761:217;11816:25;;;;:::i;:::-;11860:11;;;;:32;;;;11761:217;11856:112;;;11761:217;;;;11856:112;626:12653;;;;;;11912:41;626:12653;;;;;;11912:41;:::i;:::-;626:12653;;11856:112;;;11860:32;11875:17;;;;11860:32;;;11636:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;626:12653;;;;;;;;;;;;;;;;;;;;12134:39;11636:37;;626:12653;;;;11636:37;;;;;;626:12653;;;;;;;;;11568:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;626:12653;;;;;;;;;;;;;;;11568:36;;;;626:12653;;;;11568:36;;;;;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;-1:-1:-1;626:12653:11;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;10835:316;10961:11;;;;;;;;10957:184;10961:11;;;626:12653;;;;;;;;;;;;11013:19;;;;;;:::i;:::-;;10835:316;;10957:184;626:12653;;;;;;;;;;;;;11092:34;;;;;;:::i;626:12653::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;10489:37;;;;;;;;;;;;;;;;;:::i;:::-;;;626:12653;;;;;10489:37;;;;;626:12653;;;;10489:37;;;;;;626:12653;;;;;;;;;10419:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;626:12653;;;;;;;;;;;;;;;;10419:36;;;;;;;;;626:12653;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;932:19;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;1151:41;626:12653;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;626:12653:11;;;;3954:133;;3818:58;3826:20;;;3818:58;:::i;:::-;3887:56;3895:11;;;3887:56;:::i;:::-;626:12653;;;;3975:14;;:31;;;;;626:12653;3975:49;;;;626:12653;3975:67;;;;626:12653;3954:133;;:::i;:::-;626:12653;;-1:-1:-1;;;4245:54:11;;4264:10;4245:54;;;626:12653;4284:4;626:12653;;;;;;;;;;;;;;;;;4245:54;;;;;;;;;;;;;626:12653;;;;;;4422:50;626:12653;;;;;;;;;;;;;;;;;;;;;;4422:50;:::i;:::-;626:12653;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;4245:54;;;;;;;;;;;;;;:::i;:::-;;;;;626:12653;;;;;;;;;3975:67;626:12653;;4038:4;626:12653;;4028:14;;3975:67;;;:49;4020:4;626:12653;;;4010:14;;;-1:-1:-1;3975:49:11;;:31;4003:3;626:12653;;;3993:13;;;-1:-1:-1;3975:31:11;;626:12653;;;;;;;;;;;;;1063:62:0;;:::i;:::-;626:12653:11;;-1:-1:-1;;;;;;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;2566:40:0;626:12653:11;;2566:40:0;626:12653:11;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;626:12653:11;;;;2918:58;2926:20;;;2918:58;:::i;:::-;2986:56;2994:11;;;2986:56;:::i;:::-;626:12653;;;;3073:14;;:31;;;;626:12653;3073:49;;;;626:12653;3073:67;;;;626:12653;3052:133;;;:::i;:::-;626:12653;;;;;;;;;;;;;;;;;3195:115;626:12653;;;;;3216:50;;3195:115;:::i;:::-;626:12653;3363:15;626:12653;;;;;;;;3342:51;;626:12653;;;;;;;3342:51;;;;;626:12653;3342:51;;;;;;;;;;;626:12653;3342:91;;;;;626:12653;;;;;;;;-1:-1:-1;;;3646:29:11;;-1:-1:-1;;;;;626:12653:11;;;3646:29;;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;3646:29;;;;;;;;;;;;626:12653;;;3646:29;;;;;;-1:-1:-1;3646:29:11;;;;;;:::i;:::-;;;;626:12653;;;3646:29;626:12653;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;3342:91;3422:11;626:12653;;3413:20;;-1:-1:-1;3342:91:11;;;;:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;626:12653;;;;;;;;;3073:67;-1:-1:-1;3136:4:11;626:12653;;;3126:14;;3073:67;;:49;626:12653;;3118:4;626:12653;;3108:14;;3073:49;;:31;626:12653;;3101:3;626:12653;;3091:13;;3073:31;;626:12653;;;;;;;;;;;;;;;;;1251:3;626:12653;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;;12752:18;626:12653;;;12752:18;626:12653;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;1063:62:0;;;:::i;:::-;626:12653:11;;;;;;;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;2182:10;626:12653;;;2182:10;626:12653;;;2202:12;626:12653;;;2202:12;626:12653;;;2224:12;626:12653;;;2224:12;626:12653;;;;;;;;;;;;;;;;;957:19;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;1055:26;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;;13240:30;626:12653;;;13240:30;626:12653;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;626:12653:11;;;;;;-1:-1:-1;;;;;626:12653:11;;13122:26;626:12653;;;13122:26;626:12653;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;;;;;;9525:11;626:12653;;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;1063:62:0;;;:::i;:::-;1251:3:11;2373:54;;626:12653;;;;2501:47;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;1087:28;626:12653;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;1564:45;626:12653;1586:7;626:12653;;1572:10;:21;1564:45;:::i;:::-;2227:103:1;;:::i;:::-;7699:9:11;;7743:11;;;:24;:11;;:24;:::i;:::-;626:12653;;7911:16;626:12653;;;;7893:144;626:12653;;;;;;;;;;;;7893:144;;;;;:::i;:::-;;;;;;;;;;;;626:12653;;7893:144;;;626:12653;;;;;;;;;;;;8078:79;626:12653;;;;;;;;;;;;;8078:79;;;;;;:::i;:::-;626:12653;;;;;;8201:18;;;626:12653;;8189:11;626:12653;;;;8189:48;626:12653;;;8305:38;626:12653;8354:42;626:12653;;;8313:9;;8305:38;:::i;:::-;8362:15;8354:42;:::i;:::-;626:12653;;8539:18;;626:12653;;;;;;;;;;;;;;;;;;;;;8525:52;626:12653;;;;;8817:36;626:12653;;;8710:18;;626:12653;;;;;;;;;;;;;;;;8696:52;626:12653;;;8696:52;:::i;:::-;626:12653;;;;-1:-1:-1;;;8817:36:11;;-1:-1:-1;;;;;626:12653:11;;;8817:36;;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;8817:36;;;;;;;;;;8933:21;8817:36;;;;626:12653;7743:11;8882:22;7743:11;8895:9;;8882:22;;:::i;:::-;8933:21;:::i;:::-;626:12653;9021:5;8987:30;8997:20;626:12653;8987:30;;:::i;:::-;626:12653;;;;9070:18;;626:12653;;8189:11;626:12653;;;;;;9093:20;;;;:::i;:::-;-1:-1:-1;626:12653:11;;9216:20;9355:47;9216:20;;;;9297;9216;;;9181:55;9216:20;8189:11;9216:20;;;;;;:::i;:::-;626:12653;;9193:18;;626:12653;;;;;;;;9181:55;:::i;:::-;626:12653;;9297:20;:::i;:::-;1572:10;9265:79;;;;:::i;:::-;;9355:47;:::i;:::-;626:12653;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;8817:36;;;;;;;;;;;;;:::i;:::-;;;;;;626:12653;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;7893:144;;;;;;8078:79;7893:144;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;626:12653;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;4823:144;626:12653;;;;;;1564:45;626:12653;1586:7;626:12653;;1572:10;:21;1564:45;:::i;:::-;2227:103:1;;:::i;:::-;4688:9:11;;;626:12653;;;4841:16;626:12653;;;;;;;;;;;;;;;4823:144;;;;;;:::i;:::-;;;;;;;;;;;626:12653;;4823:144;;;626:12653;;;;5098:38;5147:42;626:12653;5008:79;626:12653;;;;;;5008:79;;;;;;:::i;:::-;626:12653;;;;5106:9;;5098:38;:::i;5147:42::-;626:12653;;;;;5227:18;5409:111;5324:41;5341:24;:11;;:24;:::i;:::-;5324:41;;:::i;:::-;626:12653;;;5430:11;626:12653;;;;;;5430:46;;5409:111;:::i;:::-;626:12653;;;5430:11;626:12653;;;;;;5614:33;626:12653;;5696:11;6076:21;5696:11;5688:56;5696:11;;;5688:56;:::i;:::-;626:12653;;;5430:11;626:12653;;5832:71;626:12653;;;;;5840:40;;5832:71;:::i;:::-;626:12653;;5430:11;626:12653;;;;;5956:40;626:12653;;;5956:40;:::i;:::-;626:12653;;6025:22;5341:11;6038:9;;6025:22;;:::i;6076:21::-;626:12653;6164:5;6130:30;6140:20;626:12653;6130:30;;:::i;:::-;626:12653;6199:20;;;;;:::i;:::-;6188:31;;626:12653;;6281:17;;;;6502:20;6281:17;;6389:38;6281:17;;;;;;;:30;6547:48;6281:17;;;;;;;:::i;:::-;:30;:::i;:::-;6340:38;;;;;:::i;6389:::-;6502:20;:::i;626:12653::-;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;-1:-1:-1;626:12653:11;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;4823:144;;;;;5147:42;4823:144;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;4823:144:11;;-1:-1:-1;4823:144:11;;626:12653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;626:12653:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;-1:-1:-1;;;;;626:12653:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;626:12653:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;626:12653:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;626:12653:11;;;;;;:::o;1359:130:0:-;1273:6;626:12653:11;-1:-1:-1;;;;;626:12653:11;719:10:6;1422:23:0;626:12653:11;;1359:130:0:o;626:12653:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2336:287:1;1759:1;2468:7;626:12653:11;2468:19:1;1759:1;;;2468:7;626:12653:11;2336:287:1:o;1759:1::-;626:12653:11;;-1:-1:-1;;;1759:1:1;;;;;;;;;;;626:12653:11;1759:1:1;626:12653:11;;;1759:1:1;;;;626:12653:11;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;-1:-1:-1;;626:12653:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;626:12653:11;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;626:12653:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;626:12653:11;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;626:12653:11;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;626:12653:11;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1560200","executionCost":"infinite","totalCost":"infinite"},"external":{"":"25086","DAI()":"2882","MAX_RELAYER_FEE_PERCENTAGE()":"425","MUSE()":"2464","USDC()":"2662","WETH()":"2752","approveTokenToFeed(address,uint256,address,bytes32)":"infinite","changeRelayerFee(uint256)":"24510","depositETH(bytes32)":"71365","depositToken(address,uint256,bytes32)":"infinite","execute(address,bytes,uint256,bytes32)":"infinite","factoryContract()":"2860","getEthDeposit(bytes32)":"2421","getTokenDeposit(address,bytes32)":"2707","mecenateBay()":"2442","mecenateUsers()":"2332","owner()":"2684","relayerFeePercentage()":"2619","renounceOwnership()":"28371","setFactoryContract(address)":"27152","setMecenateBay(address)":"26734","setMecenateUsers(address)":"26756","setRelayer(address)":"26866","setTokens(address,address,address,address)":"99731","setVerifierContract(address)":"27064","transferOwnership(address)":"28791","verifierContract()":"2794","withdrawETH(uint256,bytes,address,bytes32)":"infinite","withdrawToken(address,uint256,bytes,address,bytes32)":"infinite","withdrawWithSecret(string,address,bytes,address,bytes32)":"infinite"}},"methodIdentifiers":{"DAI()":"e0bab4c4","MAX_RELAYER_FEE_PERCENTAGE()":"6961b361","MUSE()":"5262712f","USDC()":"89a30271","WETH()":"ad5c4648","approveTokenToFeed(address,uint256,address,bytes32)":"6ff61585","changeRelayerFee(uint256)":"17d026e6","depositETH(bytes32)":"d68d9d4e","depositToken(address,uint256,bytes32)":"84abac95","execute(address,bytes,uint256,bytes32)":"9926ad87","factoryContract()":"de11c94a","getEthDeposit(bytes32)":"20491915","getTokenDeposit(address,bytes32)":"5e0cd92f","mecenateBay()":"3f16a3bb","mecenateUsers()":"139e3c54","owner()":"8da5cb5b","relayerFeePercentage()":"85e66df4","renounceOwnership()":"715018a6","setFactoryContract(address)":"d4241341","setMecenateBay(address)":"24ebc145","setMecenateUsers(address)":"2fe4f4c1","setRelayer(address)":"6548e9bc","setTokens(address,address,address,address)":"537820bf","setVerifierContract(address)":"a25da83c","transferOwnership(address)":"f2fde38b","verifierContract()":"cf695688","withdrawETH(uint256,bytes,address,bytes32)":"10d5700e","withdrawToken(address,uint256,bytes,address,bytes32)":"1378f5d9","withdrawWithSecret(string,address,bytes,address,bytes32)":"bda7193a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifierContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factoryContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bayContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usersContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"secret\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RELAYER_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MUSE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"approveTokenToFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRelayerFeePercentage\",\"type\":\"uint256\"}],\"name\":\"changeRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"getEthDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedVaultId\",\"type\":\"bytes32\"}],\"name\":\"getTokenDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateBay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mecenateUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryContract\",\"type\":\"address\"}],\"name\":\"setFactoryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateBay\",\"type\":\"address\"}],\"name\":\"setMecenateBay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mecenateUsers\",\"type\":\"address\"}],\"name\":\"setMecenateUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"}],\"name\":\"setRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DAI\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_MUSE\",\"type\":\"address\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifierContract\",\"type\":\"address\"}],\"name\":\"setVerifierContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifierContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_secret\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"withdrawWithSecret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MecenateVault.sol\":\"MecenateVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MecenateVault.sol\":{\"content\":\"/**\\n * @title MecenateVault\\n * @dev This contract allows users to deposit and withdraw ETH and ERC20 tokens, and pay ETH and ERC20 tokens to other addresses.\\n * It also keeps track of the deposited balances for each user using a commitment hash.\\n */\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"./interfaces/IMecenateVerifier.sol\\\";\\nimport \\\"./interfaces/IMecenateFeedFactory.sol\\\";\\n\\ncontract MecenateVault is Ownable, ReentrancyGuard {\\n    using Address for address;\\n    using Address for address payable;\\n\\n    mapping(bytes32 => uint256) private ethDeposits;\\n    mapping(bytes32 => mapping(address => uint256)) private tokenDeposits;\\n\\n    address public WETH;\\n    address public DAI;\\n    address public USDC;\\n    address public MUSE;\\n    address public verifierContract;\\n    address public factoryContract;\\n    address public mecenateBay;\\n    address public mecenateUsers;\\n    address private relayer;\\n\\n    uint256 public relayerFeePercentage = 200;\\n    uint256 public constant MAX_RELAYER_FEE_PERCENTAGE = 500;\\n\\n    event MetaTransactionExecuted(\\n        address userAddress,\\n        address relayerAddress,\\n        bytes functionSignature\\n    );\\n\\n    event Withdrawn(\\n        bytes32 indexed commitment,\\n        uint256 amount,\\n        string secret,\\n        address token\\n    );\\n\\n    modifier onlyRelayer() {\\n        require(msg.sender == relayer, \\\"Not relayer\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _verifierContract,\\n        address _factoryContract,\\n        address _bayContract,\\n        address _usersContract,\\n        address _relayer\\n    ) {\\n        verifierContract = _verifierContract;\\n        factoryContract = _factoryContract;\\n        mecenateBay = _bayContract;\\n        mecenateUsers = _usersContract;\\n        relayer = _relayer;\\n    }\\n\\n    function setTokens(\\n        address _WETH,\\n        address _DAI,\\n        address _USDC,\\n        address _MUSE\\n    ) external onlyOwner {\\n        WETH = _WETH;\\n        DAI = _DAI;\\n        USDC = _USDC;\\n        MUSE = _MUSE;\\n    }\\n\\n    function changeRelayerFee(\\n        uint256 _newRelayerFeePercentage\\n    ) external onlyOwner {\\n        require(\\n            _newRelayerFeePercentage <= MAX_RELAYER_FEE_PERCENTAGE,\\n            \\\"New relayer fee percentage is too high\\\"\\n        );\\n        relayerFeePercentage = _newRelayerFeePercentage;\\n    }\\n\\n    function depositETH(bytes32 encryptedVaultId) public payable nonReentrant {\\n        // 1. Add the deposit to the correct deposit mapping\\n        ethDeposits[encryptedVaultId] += msg.value;\\n    }\\n\\n    function approveTokenToFeed(\\n        address _token,\\n        uint256 _amount,\\n        address _feed,\\n        bytes32 encryptedVaultId\\n    ) public {\\n        require(_token != address(0), \\\"Token address cannot be 0\\\");\\n        require(_amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(\\n            _token == WETH || _token == DAI || _token == USDC || _token == MUSE,\\n            \\\"Token not supported\\\"\\n        );\\n        require(\\n            tokenDeposits[encryptedVaultId][_token] >= _amount,\\n            \\\"Not enough balance\\\"\\n        );\\n\\n        require(\\n            IMecenateFeedFactory(factoryContract).isFeed(_feed) ||\\n                _feed == mecenateBay,\\n            \\\"Not a feed\\\"\\n        );\\n\\n        // The user must first approve the token transfer\\n        // to this contract\\n        IERC20 token = IERC20(_token);\\n        // Approve the token to the feed\\n        token.approve(_feed, _amount);\\n    }\\n\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        bytes32 encryptedVaultId\\n    ) external {\\n        require(_token != address(0), \\\"Token address cannot be 0\\\");\\n\\n        require(_amount > 0, \\\"Amount must be greater than zero\\\");\\n\\n        require(\\n            _token == WETH || _token == DAI || _token == USDC || _token == MUSE,\\n            \\\"Token not supported\\\"\\n        );\\n\\n        // The user must first approve the token transfer\\n        // to this contract\\n        IERC20 token = IERC20(_token);\\n\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"Token transfer failed\\\"\\n        );\\n\\n        // Add the deposited amount to the tokenDeposits mapping\\n        tokenDeposits[encryptedVaultId][_token] += _amount;\\n    }\\n\\n    function withdrawETH(\\n        uint256 _amount,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public onlyRelayer nonReentrant {\\n        uint256 initialGas = gasleft();\\n\\n        (\\n            bytes memory vaultId,\\n            ,\\n            ,\\n            bytes memory signedMessage\\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\\n                sismoConnectResponse,\\n                _to,\\n                _nonce\\n            );\\n\\n        (address to, bytes32 nonce) = abi.decode(\\n            signedMessage,\\n            (address, bytes32)\\n        );\\n\\n        require(to == _to, \\\"Not Same Address\\\");\\n\\n        require(nonce == _nonce, \\\"Not Same Nonce\\\");\\n\\n        bytes32 encryptedVaultId = keccak256(vaultId);\\n\\n        uint256 totalRequired = _amount; // Initialize with _value\\n\\n        totalRequired -= tx.gasprice * initialGas; // Add maximum possible gas cost\\n\\n        require(\\n            ethDeposits[encryptedVaultId] >= totalRequired,\\n            \\\"Not enough balance\\\"\\n        );\\n\\n        // 1. Verify that the commitment exists and the amount is not zero\\n        require(ethDeposits[encryptedVaultId] > 0, \\\"Commitment does not exist\\\");\\n\\n        require(_amount > 0, \\\"Amount must be greater than zero\\\");\\n\\n        // 2. Verify that the commitment has enough balance to withdraw from\\n        require(ethDeposits[encryptedVaultId] >= _amount, \\\"Not enough balance\\\");\\n\\n        //decode signedMessage as address\\n        ethDeposits[encryptedVaultId] -= _amount;\\n\\n        uint256 gasUsed = initialGas - gasleft();\\n\\n        uint256 gasCost = gasUsed * tx.gasprice;\\n\\n        uint256 relayerFee = (gasCost * relayerFeePercentage) / 10000;\\n\\n        require(_amount >= gasCost + relayerFee, \\\"Not enough balance for gas\\\");\\n\\n        uint256 newAmount = _amount - gasCost - relayerFee;\\n\\n        (bool result, ) = payable(to).call{value: newAmount}(\\\"\\\");\\n\\n        require(result, \\\"ETH transfer failed\\\");\\n\\n        (bool result2, ) = payable(msg.sender).call{\\n            value: gasCost + relayerFee\\n        }(\\\"\\\");\\n\\n        require(result2, \\\"ETH transfer failed with gas\\\");\\n    }\\n\\n    function withdrawWithSecret(\\n        string memory _secret,\\n        address _token,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public onlyRelayer nonReentrant {\\n        bytes32 commitment = keccak256(abi.encodePacked(_secret));\\n        uint256 amount;\\n\\n        if (_token == address(0)) {\\n            amount = ethDeposits[commitment];\\n            require(amount > 0, \\\"No ETH deposit for this secret\\\");\\n            ethDeposits[commitment] = 0;\\n            payable(_to).transfer(amount);\\n        } else {\\n            amount = tokenDeposits[commitment][_token];\\n            require(amount > 0, \\\"No Token deposit for this secret\\\");\\n            tokenDeposits[commitment][_token] = 0;\\n            IERC20(_token).transfer(_to, amount);\\n        }\\n\\n        emit Withdrawn(commitment, amount, _secret, _token);\\n    }\\n\\n    function withdrawToken(\\n        address _token,\\n        uint256 _amount,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public onlyRelayer nonReentrant {\\n        uint256 initialGas = gasleft();\\n\\n        uint256 totalRequired = tx.gasprice * initialGas;\\n\\n        (\\n            bytes memory vaultId,\\n            ,\\n            ,\\n            bytes memory signedMessage\\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\\n                sismoConnectResponse,\\n                _to,\\n                _nonce\\n            );\\n\\n        (address to, bytes32 nonce) = abi.decode(\\n            signedMessage,\\n            (address, bytes32)\\n        );\\n\\n        require(\\n            ethDeposits[keccak256(vaultId)] >= totalRequired,\\n            \\\"Not enough ETH for gas required\\\"\\n        );\\n\\n        require(to == _to, \\\"Not Same Address\\\");\\n\\n        require(nonce == _nonce, \\\"Not Same Nonce\\\");\\n\\n        // Check if the commitment exists\\n        // and the amount is greater than the deposit.\\n        require(\\n            tokenDeposits[keccak256(vaultId)][_token] >= _amount,\\n            \\\"Not enough token balance\\\"\\n        );\\n\\n        // Decrease the token balance for the commitment.\\n        tokenDeposits[keccak256(vaultId)][_token] -= _amount;\\n\\n        // Transfer the tokens to msg.sender or operator.\\n        IERC20(_token).transfer(to, _amount);\\n\\n        uint256 gasUsed = initialGas - gasleft();\\n\\n        uint256 gasCost = gasUsed * tx.gasprice;\\n\\n        uint256 relayerFee = (gasCost * relayerFeePercentage) / 10000;\\n\\n        require(\\n            ethDeposits[keccak256(vaultId)] >= gasCost + relayerFee,\\n            \\\"Not enough balance for gas used\\\"\\n        );\\n\\n        ethDeposits[keccak256(vaultId)] -= gasCost + relayerFee;\\n\\n        (bool result, ) = payable(msg.sender).call{value: gasCost + relayerFee}(\\n            \\\"\\\"\\n        );\\n\\n        require(result, \\\"ETH transfer failed with gas\\\");\\n    }\\n\\n    function getEthDeposit(\\n        bytes32 encryptedVaultId\\n    ) public view returns (uint256) {\\n        return ethDeposits[encryptedVaultId];\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"Use depositETH function\\\");\\n    }\\n\\n    fallback() external payable {\\n        require(msg.data.length > 0, \\\"Data required for Sismo verification.\\\");\\n        bytes32 encryptedVaultId = abi.decode(msg.data, (bytes32));\\n        ethDeposits[encryptedVaultId] += msg.value;\\n    }\\n\\n    function getTokenDeposit(\\n        address _token,\\n        bytes32 encryptedVaultId\\n    ) public view returns (uint256) {\\n        return tokenDeposits[encryptedVaultId][_token];\\n    }\\n\\n    function execute(\\n        address _target,\\n        bytes calldata _data,\\n        uint256 _value,\\n        bytes32 _encryptedVaultId\\n    ) external onlyRelayer nonReentrant returns (bool) {\\n        uint256 availableBalance = ethDeposits[_encryptedVaultId];\\n\\n        uint256 ethBalanceB4 = address(this).balance;\\n        uint256 daiBalanceB4 = IERC20(DAI).balanceOf(address(this));\\n        uint256 museBalanceB4 = IERC20(MUSE).balanceOf(address(this));\\n\\n        uint256 totalRequired = _value + (tx.gasprice * gasleft());\\n\\n        require(availableBalance >= totalRequired, \\\"Insufficient ETH balance\\\");\\n\\n        bool success; // variabile per verificare il successo delle transazioni\\n        bytes memory retData; // dati di ritorno dalle transazioni\\n\\n        if (_data.length == 0) {\\n            (success, ) = payable(_target).call{value: _value}(\\\"\\\");\\n        } else {\\n            if (_value == 0) {\\n                (success, retData) = _target.call(_data);\\n            } else {\\n                (success, retData) = _target.call{value: _value}(_data);\\n            }\\n        }\\n\\n        require(success, \\\"Transaction failed\\\");\\n\\n        uint256 gasUsed = totalRequired - _value - (tx.gasprice * gasleft());\\n\\n        uint256 relayerFee = (gasUsed * relayerFeePercentage) / 10000;\\n\\n        require(\\n            availableBalance >= gasUsed + relayerFee,\\n            \\\"Insufficient balance for gas and fee\\\"\\n        );\\n\\n        uint256 ethBalance = address(this).balance;\\n        uint256 daiBalance = IERC20(DAI).balanceOf(address(this));\\n        uint256 museBalance = IERC20(MUSE).balanceOf(address(this));\\n\\n        uint256 diffEth;\\n        uint256 diffDai;\\n        uint256 diffMuse;\\n\\n        if (ethBalanceB4 > ethBalance) {\\n            diffEth = ethBalanceB4 - ethBalance;\\n\\n            if (diffEth > 0 && ethBalanceB4 != 0) {\\n                ethDeposits[_encryptedVaultId] -= diffEth;\\n            }\\n        }\\n\\n        ethDeposits[_encryptedVaultId] = gasUsed - relayerFee;\\n\\n        (success, ) = payable(msg.sender).call{value: gasUsed + relayerFee}(\\\"\\\");\\n\\n        require(success, \\\"ETH transfer failed\\\");\\n\\n        if (daiBalanceB4 > daiBalance) {\\n            diffDai = daiBalanceB4 - daiBalance;\\n\\n            if (diffDai > 0 && daiBalanceB4 != 0) {\\n                tokenDeposits[_encryptedVaultId][DAI] -= diffDai;\\n            }\\n        }\\n\\n        if (museBalanceB4 > museBalance) {\\n            diffMuse = museBalanceB4 - museBalance;\\n\\n            if (diffMuse > 0 && museBalanceB4 != 0) {\\n                tokenDeposits[_encryptedVaultId][MUSE] -= diffMuse;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    function setRelayer(address _relayer) external onlyOwner {\\n        relayer = _relayer;\\n    }\\n\\n    function setVerifierContract(address _verifierContract) external onlyOwner {\\n        verifierContract = _verifierContract;\\n    }\\n\\n    function setFactoryContract(address _factoryContract) external onlyOwner {\\n        factoryContract = _factoryContract;\\n    }\\n\\n    function setMecenateBay(address _mecenateBay) external onlyOwner {\\n        mecenateBay = _mecenateBay;\\n    }\\n\\n    function setMecenateUsers(address _mecenateUsers) external onlyOwner {\\n        mecenateUsers = _mecenateUsers;\\n    }\\n}\\n\",\"keccak256\":\"0xd315b97931b0a97537eb00cbb4e899d1a945b759df47d3129fc2626cfecfbd3b\",\"license\":\"MIT\"},\"contracts/interfaces/IMecenateFeedFactory.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\ninterface IMecenateFeedFactory {\\n    function owner() external view returns (address payable);\\n\\n    function treasuryContract() external view returns (address payable);\\n\\n    function identityContract() external view returns (address);\\n\\n    function feeds() external view returns (address[] memory);\\n\\n    function contractCounter() external view returns (uint256);\\n\\n    function isFeed(address _feed) external view returns (bool);\\n\\n    function museToken() external view returns (address);\\n\\n    function wethToken() external view returns (address);\\n\\n    function daiToken() external view returns (address);\\n\\n    function router() external view returns (address);\\n\\n    function getRouterFee(uint8 tokenId) external view returns (uint24);\\n\\n    function burnEnabled() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdd450940a0ca82107600cd8046bb8d0d20964660b42ba84fb0e26c4c0585a1ac\"},\"contracts/interfaces/IMecenateVerifier.sol\":{\"content\":\"pragma solidity 0.8.19;\\r\\n\\r\\ninterface IMecenateVerifier {\\r\\n    function sismoVerify(\\r\\n        bytes memory sismoConnectResponse,\\r\\n        address _to,\\r\\n        bytes32 _nonce\\r\\n    ) external view returns (bytes memory, uint256, uint256, bytes memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x46733b039d06e66a1f438c4fcc490eea06ed1ba2ddff7d5a0059d9e799f03d8d\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":123,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":2607,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"ethDeposits","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":2613,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"tokenDeposits","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"},{"astId":2615,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"WETH","offset":0,"slot":"4","type":"t_address"},{"astId":2617,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"DAI","offset":0,"slot":"5","type":"t_address"},{"astId":2619,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"USDC","offset":0,"slot":"6","type":"t_address"},{"astId":2621,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"MUSE","offset":0,"slot":"7","type":"t_address"},{"astId":2623,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"verifierContract","offset":0,"slot":"8","type":"t_address"},{"astId":2625,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"factoryContract","offset":0,"slot":"9","type":"t_address"},{"astId":2627,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"mecenateBay","offset":0,"slot":"10","type":"t_address"},{"astId":2629,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"mecenateUsers","offset":0,"slot":"11","type":"t_address"},{"astId":2631,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"relayer","offset":0,"slot":"12","type":"t_address"},{"astId":2634,"contract":"contracts/MecenateVault.sol:MecenateVault","label":"relayerFeePercentage","offset":0,"slot":"13","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateFeed.sol":{"IMecenateFeed":{"abi":[{"inputs":[{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"},{"internalType":"enum Structures.Tokens","name":"","type":"uint8"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"acceptPost","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBuyerStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPaymentRequested","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSellerStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeRequested","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStatus","outputs":[{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenId","outputs":[{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"postCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptPost(bytes,address,bytes32,uint8,uint256)":"200f852c","getBuyerStake()":"4c38d877","getPaymentRequested()":"d24e0c87","getSellerStake()":"5c63ed69","getStakeRequested()":"faeb5e17","getStatus()":"4e69d560","getTokenId()":"010a38f5","getTotalStaked()":"0917e776","owner()":"8da5cb5b","postCount()":"17906c2e","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"acceptPost\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentRequested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeRequested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"postCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateFeed.sol\":\"IMecenateFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce,\\n        Structures.Tokens,\\n        uint256 _amount\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function owner() external view returns (bytes32);\\n\\n    function version() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd8497a7a697e4a734c97d5342b085f7eb0d0d64379ae0ab87b8b600521e4c638\"},\"contracts/library/Structures.sol\":{\"content\":\"/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address router;\\n        bytes encodedSymKey;\\n        bytes lastMessageForBuyer;\\n        bytes lastMessageForSeller;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettingPrivate {\\n        bytes vaultIdSeller;\\n        uint256 sellerTwitterId;\\n        uint256 sellerTelegramId;\\n        bytes vaultIdBuyer;\\n        uint256 buyerTwitterId;\\n        uint256 buyerTelegramId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        bytes32 vaultId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        bytes32 operator;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes32 request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\\n     */\\n    struct BayRequestPrivate {\\n        bytes vaultIdSeller;\\n        bytes sellerResponse;\\n        bytes vaultIdBuyer;\\n        bytes buyerResponse;\\n        address buyerTo;\\n        bytes32 buyerNonce;\\n    }\\n}\\n\",\"keccak256\":\"0x8b2807cacc112844ce06aee7c3ab099d50703cfb88f550ddf563ff0065b60c07\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateFeedFactory.sol":{"IMecenateFeedFactory":{"abi":[{"inputs":[],"name":"burnEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeds","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"tokenId","type":"uint8"}],"name":"getRouterFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_feed","type":"address"}],"name":"isFeed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"museToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasuryContract","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burnEnabled()":"5dc96d16","contractCounter()":"067bd3b4","daiToken()":"be22f546","feeds()":"d63605b8","getRouterFee(uint8)":"d223a564","identityContract()":"67031bae","isFeed(address)":"e58fdd04","museToken()":"f77800e5","owner()":"8da5cb5b","router()":"f887ea40","treasuryContract()":"18da0011","wethToken()":"4b57b0be"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeds\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"name\":\"getRouterFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"}],\"name\":\"isFeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"museToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryContract\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateFeedFactory.sol\":\"IMecenateFeedFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateFeedFactory.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\ninterface IMecenateFeedFactory {\\n    function owner() external view returns (address payable);\\n\\n    function treasuryContract() external view returns (address payable);\\n\\n    function identityContract() external view returns (address);\\n\\n    function feeds() external view returns (address[] memory);\\n\\n    function contractCounter() external view returns (uint256);\\n\\n    function isFeed(address _feed) external view returns (bool);\\n\\n    function museToken() external view returns (address);\\n\\n    function wethToken() external view returns (address);\\n\\n    function daiToken() external view returns (address);\\n\\n    function router() external view returns (address);\\n\\n    function getRouterFee(uint8 tokenId) external view returns (uint24);\\n\\n    function burnEnabled() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdd450940a0ca82107600cd8046bb8d0d20964660b42ba84fb0e26c4c0585a1ac\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateUsers.sol":{"IMecenateUsers":{"abi":[{"inputs":[{"internalType":"bytes32","name":"vaultId","type":"bytes32"}],"name":"checkifUserExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getUserAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUserCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserData","outputs":[{"components":[{"internalType":"bytes32","name":"vaultId","type":"bytes32"}],"internalType":"struct Structures.User","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getUserVaultIdAt","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkifUserExist(bytes32)":"38aad32c","getUserAt(uint256)":"c6e064ad","getUserCount()":"b5cb15f7","getUserData(address)":"ffc9896b","getUserVaultIdAt(uint256)":"5b5cf50a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vaultId\",\"type\":\"bytes32\"}],\"name\":\"checkifUserExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserData\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vaultId\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structures.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserVaultIdAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateUsers.sol\":\"IMecenateUsers\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateUsers.sol\":{\"content\":\"pragma solidity 0.8.19;\\r\\nimport \\\"../library/Structures.sol\\\";\\r\\n\\r\\ninterface IMecenateUsers {\\r\\n    function checkifUserExist(bytes32 vaultId) external view returns (bool);\\r\\n\\r\\n    function getUserData(\\r\\n        address user\\r\\n    ) external view returns (Structures.User memory);\\r\\n\\r\\n    function getUserCount() external view returns (uint256);\\r\\n\\r\\n    function getUserAt(uint256 index) external view returns (address);\\r\\n\\r\\n    function getUserVaultIdAt(uint256 index) external view returns (bytes32);\\r\\n}\\r\\n\",\"keccak256\":\"0xcd2b91f5bebd5c880ac937b181771a0a722a9a71ff93c783da3c63137179a042\"},\"contracts/library/Structures.sol\":{\"content\":\"/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address router;\\n        bytes encodedSymKey;\\n        bytes lastMessageForBuyer;\\n        bytes lastMessageForSeller;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettingPrivate {\\n        bytes vaultIdSeller;\\n        uint256 sellerTwitterId;\\n        uint256 sellerTelegramId;\\n        bytes vaultIdBuyer;\\n        uint256 buyerTwitterId;\\n        uint256 buyerTelegramId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        bytes32 vaultId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        bytes32 operator;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes32 request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\\n     */\\n    struct BayRequestPrivate {\\n        bytes vaultIdSeller;\\n        bytes sellerResponse;\\n        bytes vaultIdBuyer;\\n        bytes buyerResponse;\\n        address buyerTo;\\n        bytes32 buyerNonce;\\n    }\\n}\\n\",\"keccak256\":\"0x8b2807cacc112844ce06aee7c3ab099d50703cfb88f550ddf563ff0065b60c07\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateVerifier.sol":{"IMecenateVerifier":{"abi":[{"inputs":[{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"sismoVerify","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"sismoVerify(bytes,address,bytes32)":"7276069d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"sismoVerify\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateVerifier.sol\":\"IMecenateVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateVerifier.sol\":{\"content\":\"pragma solidity 0.8.19;\\r\\n\\r\\ninterface IMecenateVerifier {\\r\\n    function sismoVerify(\\r\\n        bytes memory sismoConnectResponse,\\r\\n        address _to,\\r\\n        bytes32 _nonce\\r\\n    ) external view returns (bytes memory, uint256, uint256, bytes memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x46733b039d06e66a1f438c4fcc490eea06ed1ba2ddff7d5a0059d9e799f03d8d\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/layer/MecenateBay.sol":{"MecenateBay":{"abi":[{"inputs":[{"internalType":"address","name":"_usersMouduleContract","type":"address"},{"internalType":"address","name":"_verifierContract","type":"address"},{"internalType":"address","name":"_vaultContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"user","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"indexed":false,"internalType":"struct Structures.BayRequest","name":"","type":"tuple"},{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"}],"name":"RequestAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"user","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"indexed":false,"internalType":"struct Structures.BayRequest","name":"","type":"tuple"},{"indexed":true,"internalType":"uint256","name":"index","type":"uint256"}],"name":"RequestCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"_feed","type":"address"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"acceptRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allRequests","outputs":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allRequestsPrivate","outputs":[{"internalType":"bytes","name":"vaultIdSeller","type":"bytes"},{"internalType":"bytes","name":"sellerResponse","type":"bytes"},{"internalType":"bytes","name":"vaultIdBuyer","type":"bytes"},{"internalType":"bytes","name":"buyerResponse","type":"bytes"},{"internalType":"address","name":"buyerTo","type":"address"},{"internalType":"bytes32","name":"buyerNonce","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_daiToken","type":"address"}],"name":"changeDaiToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_museToken","type":"address"}],"name":"changeMuseToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_usersModule","type":"address"}],"name":"changeUsersModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"name":"changeVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_verifier","type":"address"}],"name":"changeVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"internalType":"struct Structures.BayRequest","name":"request","type":"tuple"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"createRequest","outputs":[{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"internalType":"struct Structures.BayRequest","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_user","type":"bytes32"}],"name":"getRequestForAddress","outputs":[{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"internalType":"struct Structures.BayRequest[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequests","outputs":[{"components":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"internalType":"struct Structures.BayRequest[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"museToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"sismoConnectResponse","type":"bytes"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_nonce","type":"bytes32"}],"name":"removeRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"requests","outputs":[{"internalType":"bytes32","name":"request","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"address","name":"postAddress","type":"address"},{"internalType":"bool","name":"accepted","type":"bool"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usersMouduleContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifierContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":258,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608034620000e757601f62002ce538819003918201601f19168301916001600160401b03831184841017620000ec57808492606094604052833981010312620000e7576200004d8162000102565b620000696040620000616020850162000102565b930162000102565b600080546001600160a01b03198082163390811784556040519691956001600160a01b0395948694859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3168560035416176003551683600454161760045516906005541617600555612bcd9081620001188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000e75756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163067bd3b414611c02575080630f3cd88814611bc25780632274346b14611b99578063346207b6146110a957806360e232a914611069578063715018a61461100f5780638416e30414610f4a5780638813ce1214610ea15780638da5cb5b14610e7a5780639655e6d814610e44578063979100361461095c5780639bf4ec2f146108f25780639c673fe5146108b2578063a357427d14610813578063b0413770146107ea578063be22f546146107c1578063c4bb77d014610781578063c81ac64614610272578063cf04fb9414610232578063cf69568814610209578063f2fde38b146101435763f77800e50361000f57346101405780600319360112610140576006546040516001600160a01b039091168152602090f35b80fd5b50346101405760203660031901126101405761015d611c1e565b610165611fe8565b6001600160a01b039081169081156101b557600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346101405780600319360112610140576004546040516001600160a01b039091168152602090f35b50346101405760203660031901126101405761024c611c1e565b610254611fe8565b60018060a01b03166001600160601b0360a01b600454161760045580f35b503660031901610140811261077d5760e013610140576040519061029582611c78565b6004358252602435602083015260443560408301526102b2611c34565b6060830152608435801515810361077d57608083015260a43560a083015260c435600381101561077d5760c083015260e4356001600160401b03811161077d57610300903690600401611cea565b90610104356001600160a01b0381169003610778576040519161032283611c78565b8183528160208401528160408401528160608401528160808401528160a08401528160c084015260c08401516003811015610764576106f957610366341515612040565b61037560208501511515612040565b6103866101243561010435836127d6565b5050509081516020830120916024602060018060a01b036003541660405192838092630e2ab4cb60e21b82528860048301525afa9081156106ee5785916106bf575b50156106845760408601511561063f576103e760208701513414612040565b6103f660208701511515612040565b8284526008602052604084208054600160401b8110156106295761041f91600182018155611dbd565b61061357865181556020870151600182015560408701516002820155606087015160038201805460808a015160ff60a01b90151560a01b166001600160a01b039093166001600160a81b03199091161791909117905560a0870151600482015560c087015160038110156105fd57600561049992016120a4565b600154600160401b811015610629578060016104b89201600155611d31565b92909261061357865183556020870151600184015560408701516002840155606087015160038401805460808a015160ff60a01b90151560a01b166001600160a01b039093166001600160a81b03199091161791909117905560a0870151600484015560c08701519260038410156105fd5761058893600561053a92016120a4565b6040519161054783611c4a565b61054f6120bc565b83526105596120bc565b602084015260408301526060820152610104356001600160a01b031660808201526101243560a0820152612138565b610593600954612491565b6009556001546000198101929083116105e957507fe9a2b6f068c8e156e02b1fa5a51213d9f1811ceb25dc05211a1df6b0f0f5110260e080956105d96040518092611f0e565ba36105e76040518092611f0e565bf35b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f4241593a7374616b65206973206e6f7420656e6f7567680000000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b6106e1915060203d6020116106e7575b6106d98183611cae565b81019061208c565b386103c8565b503d6106cf565b6040513d87823e3d90fd5b60c084015160038110156107645760020361073157600754602085015161072c91309033906001600160a01b03166124b6565b610366565b60c084015160038110156107645760010361036657600654602085015161072c91309033906001600160a01b03166124b6565b634e487b7160e01b83526021600452602483fd5b600080fd5b5080fd5b50346101405760203660031901126101405761079b611c1e565b6107a3611fe8565b60018060a01b03166001600160601b0360a01b600354161760035580f35b50346101405780600319360112610140576007546040516001600160a01b039091168152602090f35b50346101405780600319360112610140576003546040516001600160a01b039091168152602090f35b50346101405760208060031936011261077d5760043582526008815260408220918254906001600160401b03821161089e579260405192610859818460051b0185611cae565b82845280840191855280852094915b838310610881576040518061087d8782611f60565b0390f35b60068260019261089089612923565b815201960192019194610868565b634e487b7160e01b81526041600452602490fd5b5034610140576020366003190112610140576108cc611c1e565b6108d4611fe8565b60018060a01b03166001600160601b0360a01b600754161760075580f35b50346101405760203660031901126101405760043560015481101561077d5761091a90611d31565b50805461087d600183015491600284015493600381015460ff60056004840154930154169260405196879660ff8460a01c169360018060a01b03169288611fa8565b5034610140576080366003190112610140576004356024356001600160401b038111610e4057610990903690600401611cea565b6044356001600160a01b0381168103610778576109b19060643590836127d6565b50505060208151910120916109d160026109ca83611d82565b5001611e13565b602081519101208303610dfb5760ff60036109eb83611d31565b50015460a01c16610db6578380610a0a610a0484611d31565b50612923565b60055460208281015187519397909101916001600160a01b03165af1610a2e6125e6565b5015610d79576001546000198101908111610c1057808210610d5d575b506001548015610bc15760001901610a6281611d31565b61061357600581600080935582600182015582600282015582600382015582600482015501556001556002546000198101908111610c1057808210610cd0575b50506002548015610cbc57610aba6000198201611d82565b610ca857600581610acc600093612aeb565b610ad860018201612aeb565b610ae460028201612aeb565b610af060038201612aeb565b866004820155015560001901600255825b828452600880602052604085208054831015610ca057610b2383600192611dbd565b50015460208401511480610c7b575b80610c49575b80610c24575b610b515750610b4c90612491565b610b01565b928092508452826020526040842054906000198201918211610c1057818110610bd7575b505082526020526040812080548015610bc1576000190190610b978282611dbd565b61061357600581600080935582600182015582600282015582600382015582600482015501555580f35b634e487b7160e01b600052603160045260246000fd5b610c03610bf1610c09938588528660205260408820611dbd565b50918487528560205260408720611dbd565b90612986565b3880610b75565b634e487b7160e01b85526011600452602485fd5b50838552806020526004610c3b8360408820611dbd565b50015460a084015114610b3e565b5083855280602052610c5e8260408720611dbd565b506003015460608401516001600160a01b03908116911614610b38565b50838552806020526002610c928360408820611dbd565b500154604084015114610b32565b505050505080f35b634e487b7160e01b85526004859052602485fd5b634e487b7160e01b84526031600452602484fd5b610cdc610ce391611d82565b5091611d82565b919091610ca857818114610aa257600581610cff829385612a13565b610d0f6001820160018601612a13565b610d1f6002820160028601612a13565b610d2f6003820160038601612a13565b6004840160018060a01b036004830154166001600160601b0360a01b82541617905501549101553880610aa2565b610d69610d7391611d31565b50610c0383611d31565b38610a4b565b60405162461bcd60e51b81526020600482015260156024820152741090564e95985d5b1d0818d85b1b0819985a5b1959605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4241593a7265717565737420697320616c7265616479206163636570746564006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4241593a796f7520617265206e6f7420746865206275796572000000000000006044820152606490fd5b8280fd5b50346101405760403660031901126101405760243560043582526008602052604082208054821015610e405761091a9250611dbd565b5034610140578060031936011261014057546040516001600160a01b039091168152602090f35b503461014057806003193601126101405760019081546001600160401b038111610f3657604051916020610eda818460051b0185611cae565b8284528482527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68185015b848410610f1a576040518061087d8882611f60565b6006838892610f2885612923565b815201920193019290610f05565b634e487b7160e01b82526041600452602482fd5b5034610140576020366003190112610140576004359060025482101561014057610fd6610f7683611d82565b50610f8081611e13565b90610f8d60018201611e13565b611000610f9c60028401611e13565b610ff2610fab60038601611e13565b91610fe4600560018060a01b0360048901541697015495604051998a9960c08b5260c08b0190611edc565b9089820360208b0152611edc565b908782036040890152611edc565b908582036060870152611edc565b91608084015260a08301520390f35b5034610140578060031936011261014057611028611fe8565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461014057602036600319011261014057611083611c1e565b61108b611fe8565b60018060a01b03166001600160601b0360a01b600554161760055580f35b50346101405760a0366003190112610140576024356001600160a01b038116810361077d576044356001600160401b038111610e40576110ed903690600401611cea565b906111036110f9611c34565b60843590846127d6565b5050508051602082012092611116612b34565b5061111f612b34565b6001600160a01b038416808252604051638da5cb5b60e01b815291939190602090829060049082905afa908115611898578791611b67575b50602084810191909152604051635c63ed6960e01b815290816004816001600160a01b0389165afa908115611898578791611b35575b5060408481019190915251634c38d87760e01b81526020816004816001600160a01b0389165afa908115611898578791611b03575b50606084015260405163048bf3bb60e11b81526020816004816001600160a01b0389165afa908115611898578791611ad1575b506080840152604051630bc8361760e11b81526020816004816001600160a01b0389165afa908115611898578791611a9f575b5060a084015260405163d24e0c8760e01b81526020816004816001600160a01b0389165afa908115611898578791611a6d575b5060c084015260405163faeb5e1760e01b81526020816004816001600160a01b0389165afa908115611898578791611a3b575b5060e08401526040516302734eab60e51b81526020816004816001600160a01b0389165afa908115611898578791611a00575b5060088110156119ec5761010084015260405163010a38f560e01b81526020816004816001600160a01b0389165afa80156118985787906119ab575b61130c91506101208501612917565b60405163054fd4d560e41b815286816004816001600160a01b0389165afa90811561189857879161194b575b50610140840152600161134c600435611d31565b50015460c0840151116118f65760e0830151600261136b600435611d31565b500154116118a357600354604051630e2ab4cb60e21b81526004810187905290602090829060249082906001600160a01b03165afa908115611898578791611879575b501561183457611441916113c3600435611d82565b5061142d60036113d4600435611d82565b5061142260026113e5600435611d82565b506004908101546001600160a01b031696906005906114049035611d82565b50015497604051996114158b611c4a565b8a5260208a015201611e13565b604087015201611e13565b6060840152608083015260a0820152612138565b60ff6005611450600435611d31565b50015416600381101561174057156117545760ff6005611471600435611d31565b500154166003811015611740576002036116c75760075484906020906114d4906001600160a01b031660016114a7600435611d31565b50015460405163095ea7b360e01b8152336004820152602481019190915293849283919082906044820190565b03925af180156106ee576116a8575b505b836114f1600435611d82565b506114fd600435611d82565b506004908101546001600160a01b0316919060059061151c9035611d82565b5001549060ff600561152f600435611d31565b50015416906001611541600435611d31565b500154926001600160a01b0388163b156116a457859360039361157a926040519788968796630803e14b60e21b885201600487016126b3565b0381836001600160a01b0389165af1801561169957611681575b505060a0915b60036115a7600435611d31565b50016001841b60ff851b1982541617905560036115c5600435611d31565b500190600180851b03166001600160601b03841b825416179055015160046115ed8135611d31565b5001556115fb600435611d31565b509061165660ff60056040519480548652600181015460208701526002810154604087015282600382015460018060a01b038116606089015260a01c1615156080870152600481015460a087015201541660c0840190611f01565b7f83c2cca80e93944a5016ae3e3f51bd5e9275d6459dfdbfdad3fe85d918d92f3360e060043593a380f35b61168a90611c65565b611695578338611594565b8380fd5b6040513d84823e3d90fd5b8580fd5b6116c09060203d6020116106e7576106d98183611cae565b50386114e3565b60ff60056116d6600435611d31565b500154166003811015611740576001036114e557600654849060209061170c906001600160a01b031660016114a7600435611d31565b03925af180156106ee57611721575b506114e5565b6117399060203d6020116106e7576106d98183611cae565b503861171b565b634e487b7160e01b85526021600452602485fd5b906001611762600435611d31565b50015484611771600435611d82565b509161177e600435611d82565b506004908101546001600160a01b0316919060059061179d9035611d82565b5001549360ff60056117b0600435611d31565b500154169060016117c2600435611d31565b500154916001600160a01b0388163b156116a4576003926117fb9160405198899788968796630803e14b60e21b885201600487016126b3565b03916001600160a01b0387165af180156106ee5761181e575b509060a09161159a565b9361182c60a0939295611c65565b939091611814565b60405162461bcd60e51b815260206004820152601760248201527f4241593a7573657220646f6573206e6f742065786973740000000000000000006044820152606490fd5b611892915060203d6020116106e7576106d98183611cae565b386113ae565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602560248201527f4241593a7374616b65206973206e6f74207468652073616d65206f6620746865604482015264081999595960da1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f4241593a7061796d656e74206973206e6f74207468652073616d65206f6620746044820152661a19481999595960ca1b6064820152608490fd5b3d91508188823e61195c8282611cae565b60208183810103126119a7578051906001600160401b0382116119a357828101601f8383010112156119a357602061199d9382019280830151920101612784565b38611338565b8880fd5b8780fd5b506020813d6020116119e4575b816119c560209383611cae565b810103126119e0575160038110156119e05761130c906112fd565b8680fd5b3d91506119b8565b634e487b7160e01b87526021600452602487fd5b90506020813d602011611a33575b81611a1b60209383611cae565b810103126119e0575160088110156119e057386112c1565b3d9150611a0e565b90506020813d602011611a65575b81611a5660209383611cae565b810103126119e057513861128e565b3d9150611a49565b90506020813d602011611a97575b81611a8860209383611cae565b810103126119e057513861125b565b3d9150611a7b565b90506020813d602011611ac9575b81611aba60209383611cae565b810103126119e0575138611228565b3d9150611aad565b90506020813d602011611afb575b81611aec60209383611cae565b810103126119e05751386111f5565b3d9150611adf565b90506020813d602011611b2d575b81611b1e60209383611cae565b810103126119e05751386111c2565b3d9150611b11565b90506020813d602011611b5f575b81611b5060209383611cae565b810103126119e057513861118d565b3d9150611b43565b90506020813d602011611b91575b81611b8260209383611cae565b810103126119e0575138611157565b3d9150611b75565b50346101405780600319360112610140576005546040516001600160a01b039091168152602090f35b503461014057602036600319011261014057611bdc611c1e565b611be4611fe8565b60018060a01b03166001600160601b0360a01b600654161760065580f35b90503461077d578160031936011261077d576020906009548152f35b600435906001600160a01b038216820361077857565b606435906001600160a01b038216820361077857565b60c081019081106001600160401b0382111761062957604052565b6001600160401b03811161062957604052565b60e081019081106001600160401b0382111761062957604052565b604081019081106001600160401b0382111761062957604052565b90601f801991011681019081106001600160401b0382111761062957604052565b6001600160401b03811161062957601f01601f191660200190565b81601f8201121561077857803590611d0182611ccf565b92611d0f6040519485611cae565b8284526020838301011161077857816000926020809301838601378301015290565b600154811015611d6c576006906001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b600254811015611d6c576006906002600052027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b8054821015611d6c576000526006602060002091020190600090565b90600182811c92168015611e09575b6020831014611df357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611de8565b9060405191826000825492611e2784611dd9565b908184526001948581169081600014611e965750600114611e53575b5050611e5192500383611cae565b565b9093915060005260209081600020936000915b818310611e7e575050611e5193508201013880611e43565b85548884018501529485019487945091830191611e66565b915050611e5194506020925060ff191682840152151560051b8201013880611e43565b60005b838110611ecc5750506000910152565b8181015183820152602001611ebc565b90602091611ef581518092818552858086019101611eb9565b601f01601f1916010190565b9060038210156105fd5752565b9060c080611e519380518452602081015160208501526040810151604085015260018060a01b03606082015116606085015260808101511515608085015260a081015160a08501520151910190611f01565b6020908160408183019282815285518094520193019160005b828110611f87575050505090565b909192938260e082611f9c6001948951611f0e565b01950193929101611f79565b929360c094611e519793999896929960e086019a86526020860152604085015260018060a01b031660608401521515608083015260a08201520190611f01565b6000546001600160a01b03163303611ffc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561204757565b60405162461bcd60e51b815260206004820152601960248201527f4241593a7061796d656e74206973206e6f7420656e6f756768000000000000006044820152606490fd5b90816020910312610778575180151581036107785790565b9060038110156105fd5760ff80198354169116179055565b604051906120c982611c93565b60048252630307830360e41b6020830152565b8181106120e7575050565b600081556001016120dc565b9190601f811161210257505050565b611e51926000526020600020906020601f840160051c8301931061212e575b601f0160051c01906120dc565b9091508190612121565b60025490600160401b82101561062957612159600192838101600255611d82565b92909261061357815180516001600160401b039182821161062957819061218a826121848954611dd9565b896120f3565b602090601f831160011461242e57600092612423575b5050600019600383901b1c191690831b1784555b81840160208401518051908382116106295781906121dc826121d68654611dd9565b866120f3565b602090601f83116001146123c0576000926123b5575b5050600019600383901b1c191690841b1790555b600284016040840151805190838211610629578190612229826121d68654611dd9565b602090601f831160011461235257600092612347575b5050600019600383901b1c191690841b1790555b60038401916060840151805192831161062957612274836121d68654611dd9565b602090601f84116001146122da57928060a095938193600598966000946122cf575b50501b916000199060031b1c19161790555b60048401600180841b036080830151166001600160601b03841b8254161790550151910155565b015192503880612296565b90601f9392931983169185600052816000209260005b8181106123315750916005979593918560a098969410612318575b505050811b0190556122a8565b015160001960f88460031b161c1916905538808061230b565b82840151855593860193602093840193016122f0565b01519050388061223f565b90869350601f1983169185600052816000209260005b81811061239d57508411612384575b505050811b019055612253565b015160001960f88460031b161c19169055388080612377565b82840151855589969094019360209384019301612368565b0151905038806121f2565b90869350601f1983169185600052816000209260005b81811061240b575084116123f2575b505050811b019055612206565b015160001960f88460031b161c191690553880806123e5565b828401518555899690940193602093840193016123d6565b0151905038806121a0565b90859350601f1983169188600052816000209260005b81811061247957508411612460575b505050811b0184556121b4565b015160001960f88460031b161c19169055388080612453565b82840151855588969094019360209384019301612444565b60001981146124a05760010190565b634e487b7160e01b600052601160045260246000fd5b6040516323b872dd60e01b602082019081526001600160a01b0393841660248301529383166044820152606480820195909552938452919260a08101929091906001600160401b038411838510176106295761255e94600092839286604052169361252086611c93565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af16125586125e6565b91612616565b80519081159182156125cc575b50501561257457565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6125df925060208091830101910161208c565b388061256b565b3d15612611573d906125f782611ccf565b916126056040519384611cae565b82523d6000602084013e565b606090565b91929015612678575081511561262a575090565b3b156126335790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561268b5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906126af906024830190611edc565b0390fd5b9290959493919560a0845260009080546126cc81611dd9565b918260a088015260019182811690816000146127595750600114612719575b5050506001600160a01b039096166020840152604083015260809190612715906060830190611f01565b0152565b909250600052602080600020926000935b8385106127455750505050830160c0018160806127156126eb565b805488860160c0015293820193810161272a565b60ff191660c0808a019190915293151560051b880190930193508492506080915061271590506126eb565b9092919261279181611ccf565b9161279f6040519384611cae565b829482845282820111610778576020611e51930190611eb9565b9080601f830112156107785781516127d392602001612784565b90565b9291909161281260018060a01b0394859485600454169160409283519788958693637276069d60e01b8552606060048601526064850190611edc565b9316602483015286604483015281600095869403915afa93841561290c578280978197829761289b575b50838780518101031261077d5760208701519081160361014057508185015103612867575093929190565b5162461bcd60e51b815260206004820152600e60248201526d4e6f742053616d65204e6f6e636560901b6044820152606490fd5b98509550925094503d8083883e6128b28188611cae565b860194608087870312610e40578651926001600160401b039384811161077d57876128de918a016127b9565b96602089015194848a0151996060810151918211611695576129019291016127b9565b96939796953861283c565b5051903d90823e3d90fd5b60038210156105fd5752565b90611e5160405161293381611c78565b60c060ff6005839680548552600181015460208601526002810154604086015282600382015460018060a01b038116606088015260a01c1615156080860152600481015460a08601520154169101612917565b9061061357818103612996575050565b600560ff8184611e519554855560018101546001860155600281015460028601556129ff60038601846003840160018060a01b038154166001600160601b0360a01b8454161783555460a01c1681549060ff60a01b90151560a01b169060ff60a01b1916179055565b6004810154600486015501541691016120a4565b90808214612ae757612a258154611dd9565b906001600160401b038211610629578190612a44826121d68654611dd9565b600090601f8311600114612a7b57600092612a70575b50508160011b916000199060031b1c1916179055565b015490503880612a5a565b81526020808220858352818320935090601f1985169083905b828210612ace575050908460019594939210612ab5575b505050811b019055565b015460001960f88460031b161c19169055388080612aab565b8495819295850154815560018091019601940190612a94565b5050565b612af58154611dd9565b9081612aff575050565b81601f60009311600114612b11575055565b908083918252612b30601f60208420940160051c8401600185016120dc565b5555565b6040519061016082018281106001600160401b0382111761062957604052606061014083600080825280602083015280604083015280848301528060808301528060a08301528060c08301528060e083015280610100830152610120820152015256fea264697066735822122081028ca90052881e43aab9f3abdb35822805f26cacaf7e064720024d6d42c7e364736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0xE7 JUMPI PUSH1 0x1F PUSH3 0x2CE5 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0xEC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0xE7 JUMPI PUSH3 0x4D DUP2 PUSH3 0x102 JUMP JUMPDEST PUSH3 0x69 PUSH1 0x40 PUSH3 0x61 PUSH1 0x20 DUP6 ADD PUSH3 0x102 JUMP JUMPDEST SWAP4 ADD PUSH3 0x102 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP7 SWAP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP5 DUP7 SWAP5 DUP6 SWAP4 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 AND DUP6 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH2 0x2BCD SWAP1 DUP2 PUSH3 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xE7 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x67BD3B4 EQ PUSH2 0x1C02 JUMPI POP DUP1 PUSH4 0xF3CD888 EQ PUSH2 0x1BC2 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x1B99 JUMPI DUP1 PUSH4 0x346207B6 EQ PUSH2 0x10A9 JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x1069 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x100F JUMPI DUP1 PUSH4 0x8416E304 EQ PUSH2 0xF4A JUMPI DUP1 PUSH4 0x8813CE12 EQ PUSH2 0xEA1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7A JUMPI DUP1 PUSH4 0x9655E6D8 EQ PUSH2 0xE44 JUMPI DUP1 PUSH4 0x97910036 EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x9BF4EC2F EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x9C673FE5 EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0xA357427D EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xB0413770 EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0xC4BB77D0 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xC81AC646 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xCF04FB94 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xCF695688 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x143 JUMPI PUSH4 0xF77800E5 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x15D PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x24C PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x254 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST POP CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x140 DUP2 SLT PUSH2 0x77D JUMPI PUSH1 0xE0 SGT PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x295 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2B2 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x77D JUMPI PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI PUSH2 0x300 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST SWAP1 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x322 DUP4 PUSH2 0x1C78 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x60 DUP5 ADD MSTORE DUP2 PUSH1 0x80 DUP5 ADD MSTORE DUP2 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH2 0x6F9 JUMPI PUSH2 0x366 CALLVALUE ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x375 PUSH1 0x20 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x386 PUSH2 0x124 CALLDATALOAD PUSH2 0x104 CALLDATALOAD DUP4 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP SWAP1 DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 SWAP2 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xE2AB4CB PUSH1 0xE2 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6EE JUMPI DUP6 SWAP2 PUSH2 0x6BF JUMPI JUMPDEST POP ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 DUP7 ADD MLOAD ISZERO PUSH2 0x63F JUMPI PUSH2 0x3E7 PUSH1 0x20 DUP8 ADD MLOAD CALLVALUE EQ PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x20 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x629 JUMPI PUSH2 0x41F SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x613 JUMPI DUP7 MLOAD DUP2 SSTORE PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x5 PUSH2 0x499 SWAP3 ADD PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x629 JUMPI DUP1 PUSH1 0x1 PUSH2 0x4B8 SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x1D31 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x613 JUMPI DUP7 MLOAD DUP4 SSTORE PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x5FD JUMPI PUSH2 0x588 SWAP4 PUSH1 0x5 PUSH2 0x53A SWAP3 ADD PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x547 DUP4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x54F PUSH2 0x20BC JUMP JUMPDEST DUP4 MSTORE PUSH2 0x559 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x593 PUSH1 0x9 SLOAD PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x5E9 JUMPI POP PUSH32 0xE9A2B6F068C8E156E02B1FA5A51213D9F1811CEB25DC05211A1DF6B0F0F51102 PUSH1 0xE0 DUP1 SWAP6 PUSH2 0x5D9 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST LOG3 PUSH2 0x5E7 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7374616B65206973206E6F7420656E6F756768000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D5CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x208C JUMP JUMPDEST CODESIZE PUSH2 0x3C8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x2 SUB PUSH2 0x731 JUMPI PUSH1 0x7 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x72C SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x1 SUB PUSH2 0x366 JUMPI PUSH1 0x6 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x72C SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x79B PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77D JUMPI PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x89E JUMPI SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x859 DUP2 DUP5 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x87D DUP8 DUP3 PUSH2 0x1F60 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x890 DUP10 PUSH2 0x2923 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x868 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x8CC PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x8D4 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH2 0x91A SWAP1 PUSH2 0x1D31 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x87D PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP9 PUSH2 0x1FA8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE40 JUMPI PUSH2 0x990 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x778 JUMPI PUSH2 0x9B1 SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 DUP4 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 PUSH2 0x9D1 PUSH1 0x2 PUSH2 0x9CA DUP4 PUSH2 0x1D82 JUMP JUMPDEST POP ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP4 SUB PUSH2 0xDFB JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0x9EB DUP4 PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xDB6 JUMPI DUP4 DUP1 PUSH2 0xA0A PUSH2 0xA04 DUP5 PUSH2 0x1D31 JUMP JUMPDEST POP PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP8 MLOAD SWAP4 SWAP8 SWAP1 SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0xA2E PUSH2 0x25E6 JUMP JUMPDEST POP ISZERO PUSH2 0xD79 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC10 JUMPI DUP1 DUP3 LT PUSH2 0xD5D JUMPI JUMPDEST POP PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 NOT ADD PUSH2 0xA62 DUP2 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x5 DUP2 PUSH1 0x0 DUP1 SWAP4 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC10 JUMPI DUP1 DUP3 LT PUSH2 0xCD0 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0xCBC JUMPI PUSH2 0xABA PUSH1 0x0 NOT DUP3 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x5 DUP2 PUSH2 0xACC PUSH1 0x0 SWAP4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x1 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAE4 PUSH1 0x2 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAF0 PUSH1 0x3 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST DUP7 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x0 NOT ADD PUSH1 0x2 SSTORE DUP3 JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x8 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xB23 DUP4 PUSH1 0x1 SWAP3 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0x20 DUP5 ADD MLOAD EQ DUP1 PUSH2 0xC7B JUMPI JUMPDEST DUP1 PUSH2 0xC49 JUMPI JUMPDEST DUP1 PUSH2 0xC24 JUMPI JUMPDEST PUSH2 0xB51 JUMPI POP PUSH2 0xB4C SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST SWAP3 DUP1 SWAP3 POP DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0xC10 JUMPI DUP2 DUP2 LT PUSH2 0xBD7 JUMPI JUMPDEST POP POP DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xB97 DUP3 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x5 DUP2 PUSH1 0x0 DUP1 SWAP4 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC03 PUSH2 0xBF1 PUSH2 0xC09 SWAP4 DUP6 DUP9 MSTORE DUP7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP SWAP2 DUP5 DUP8 MSTORE DUP6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 PUSH2 0x2986 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0xB75 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH2 0xC3B DUP4 PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 DUP5 ADD MLOAD EQ PUSH2 0xB3E JUMP JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xC5E DUP3 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB38 JUMP JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH2 0xC92 DUP4 PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0x40 DUP5 ADD MLOAD EQ PUSH2 0xB32 JUMP JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xCDC PUSH2 0xCE3 SWAP2 PUSH2 0x1D82 JUMP JUMPDEST POP SWAP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xCA8 JUMPI DUP2 DUP2 EQ PUSH2 0xAA2 JUMPI PUSH1 0x5 DUP2 PUSH2 0xCFF DUP3 SWAP4 DUP6 PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD0F PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD1F PUSH1 0x2 DUP3 ADD PUSH1 0x2 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD2F PUSH1 0x3 DUP3 ADD PUSH1 0x3 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP4 ADD SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD SLOAD SWAP2 ADD SSTORE CODESIZE DUP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xD69 PUSH2 0xD73 SWAP2 PUSH2 0x1D31 JUMP JUMPDEST POP PUSH2 0xC03 DUP4 PUSH2 0x1D31 JUMP JUMPDEST CODESIZE PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1090564E95985D5B1D0818D85B1B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7265717565737420697320616C726561647920616363657074656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A796F7520617265206E6F742074686520627579657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE40 JUMPI PUSH2 0x91A SWAP3 POP PUSH2 0x1DBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x1 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 PUSH2 0xEDA DUP2 DUP5 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE DUP5 DUP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP2 DUP6 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x87D DUP9 DUP3 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x6 DUP4 DUP9 SWAP3 PUSH2 0xF28 DUP6 PUSH2 0x2923 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x140 JUMPI PUSH2 0xFD6 PUSH2 0xF76 DUP4 PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0xF80 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 PUSH2 0xF8D PUSH1 0x1 DUP3 ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0x1000 PUSH2 0xF9C PUSH1 0x2 DUP5 ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFAB PUSH1 0x3 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 PUSH2 0xFE4 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1028 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1083 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x108B PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x77D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE40 JUMPI PUSH2 0x10ED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST SWAP1 PUSH2 0x1103 PUSH2 0x10F9 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP5 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 SWAP3 PUSH2 0x1116 PUSH2 0x2B34 JUMP JUMPDEST POP PUSH2 0x111F PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP1 DUP3 MSTORE PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B67 JUMPI JUMPDEST POP PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x5C63ED69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B35 JUMPI JUMPDEST POP PUSH1 0x40 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH4 0x4C38D877 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B03 JUMPI JUMPDEST POP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x48BF3BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1AD1 JUMPI JUMPDEST POP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xBC83617 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A9F JUMPI JUMPDEST POP PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xD24E0C87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A6D JUMPI JUMPDEST POP PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xFAEB5E17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A3B JUMPI JUMPDEST POP PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x2734EAB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A00 JUMPI JUMPDEST POP PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x10A38F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP1 PUSH2 0x19AB JUMPI JUMPDEST PUSH2 0x130C SWAP2 POP PUSH2 0x120 DUP6 ADD PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54FD4D5 PUSH1 0xE4 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x194B JUMPI JUMPDEST POP PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH2 0x134C PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0xC0 DUP5 ADD MLOAD GT PUSH2 0x18F6 JUMPI PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x2 PUSH2 0x136B PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD GT PUSH2 0x18A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2AB4CB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1879 JUMPI JUMPDEST POP ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1441 SWAP2 PUSH2 0x13C3 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x142D PUSH1 0x3 PUSH2 0x13D4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x1422 PUSH1 0x2 PUSH2 0x13E5 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x1404 SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1415 DUP12 PUSH2 0x1C4A JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2138 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH2 0x1450 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI ISZERO PUSH2 0x1754 JUMPI PUSH1 0xFF PUSH1 0x5 PUSH2 0x1471 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x2 SUB PUSH2 0x16C7 JUMPI PUSH1 0x7 SLOAD DUP5 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x14D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x14A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x16A8 JUMPI JUMPDEST POP JUMPDEST DUP4 PUSH2 0x14F1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x14FD PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x151C SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH2 0x152F PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x1 PUSH2 0x1541 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EXTCODESIZE ISZERO PUSH2 0x16A4 JUMPI DUP6 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x157A SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x803E14B PUSH1 0xE2 SHL DUP9 MSTORE ADD PUSH1 0x4 DUP8 ADD PUSH2 0x26B3 JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x1699 JUMPI PUSH2 0x1681 JUMPI JUMPDEST POP POP PUSH1 0xA0 SWAP2 JUMPDEST PUSH1 0x3 PUSH2 0x15A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD PUSH1 0x1 DUP5 SHL PUSH1 0xFF DUP6 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 PUSH2 0x15C5 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SWAP1 PUSH1 0x1 DUP1 DUP6 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD MLOAD PUSH1 0x4 PUSH2 0x15ED DUP2 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x15FB PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP SWAP1 PUSH2 0x1656 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 MLOAD SWAP5 DUP1 SLOAD DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE DUP3 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE ADD SLOAD AND PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH32 0x83C2CCA80E93944A5016AE3E3F51BD5E9275D6459DFDBFDAD3FE85D918D92F33 PUSH1 0xE0 PUSH1 0x4 CALLDATALOAD SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH2 0x168A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1695 JUMPI DUP4 CODESIZE PUSH2 0x1594 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x16C0 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST POP CODESIZE PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH2 0x16D6 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x1 SUB PUSH2 0x14E5 JUMPI PUSH1 0x6 SLOAD DUP5 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x170C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x14A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x1721 JUMPI JUMPDEST POP PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x1739 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST POP CODESIZE PUSH2 0x171B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH2 0x1762 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD DUP5 PUSH2 0x1771 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP SWAP2 PUSH2 0x177E PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x179D SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x5 PUSH2 0x17B0 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x1 PUSH2 0x17C2 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EXTCODESIZE ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x3 SWAP3 PUSH2 0x17FB SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x803E14B PUSH1 0xE2 SHL DUP9 MSTORE ADD PUSH1 0x4 DUP8 ADD PUSH2 0x26B3 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x181E JUMPI JUMPDEST POP SWAP1 PUSH1 0xA0 SWAP2 PUSH2 0x159A JUMP JUMPDEST SWAP4 PUSH2 0x182C PUSH1 0xA0 SWAP4 SWAP3 SWAP6 PUSH2 0x1C65 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7573657220646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1892 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST CODESIZE PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7374616B65206973206E6F74207468652073616D65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x819995959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7061796D656E74206973206E6F74207468652073616D65206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1A194819995959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP DUP2 DUP9 DUP3 RETURNDATACOPY PUSH2 0x195C DUP3 DUP3 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 DUP2 ADD SUB SLT PUSH2 0x19A7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x19A3 JUMPI DUP3 DUP2 ADD PUSH1 0x1F DUP4 DUP4 ADD ADD SLT ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x20 PUSH2 0x199D SWAP4 DUP3 ADD SWAP3 DUP1 DUP4 ADD MLOAD SWAP3 ADD ADD PUSH2 0x2784 JUMP JUMPDEST CODESIZE PUSH2 0x1338 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19E4 JUMPI JUMPDEST DUP2 PUSH2 0x19C5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x130C SWAP1 PUSH2 0x12FD JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A33 JUMPI JUMPDEST DUP2 PUSH2 0x1A1B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x19E0 JUMPI CODESIZE PUSH2 0x12C1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A65 JUMPI JUMPDEST DUP2 PUSH2 0x1A56 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x128E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A49 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A97 JUMPI JUMPDEST DUP2 PUSH2 0x1A88 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x125B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AC9 JUMPI JUMPDEST DUP2 PUSH2 0x1ABA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x1228 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AFB JUMPI JUMPDEST DUP2 PUSH2 0x1AEC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x11F5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B2D JUMPI JUMPDEST DUP2 PUSH2 0x1B1E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x11C2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B5F JUMPI JUMPDEST DUP2 PUSH2 0x1B50 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x118D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B91 JUMPI JUMPDEST DUP2 PUSH2 0x1B82 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x1157 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B75 JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1BDC PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x77D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x778 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x778 JUMPI JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x629 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x778 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1D01 DUP3 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 PUSH2 0x1D0F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x778 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x6 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE MUL PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E09 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DF3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1E27 DUP5 PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E96 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E53 JUMPI JUMPDEST POP POP PUSH2 0x1E51 SWAP3 POP SUB DUP4 PUSH2 0x1CAE JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1E7E JUMPI POP POP PUSH2 0x1E51 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1E43 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E51 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1ECC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EBC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1EF5 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5FD JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x1E51 SWAP4 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F87 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0xE0 DUP3 PUSH2 0x1F9C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x1F0E JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1F79 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0xC0 SWAP5 PUSH2 0x1E51 SWAP8 SWAP4 SWAP10 SWAP9 SWAP7 SWAP3 SWAP10 PUSH1 0xE0 DUP7 ADD SWAP11 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1FFC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2047 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7061796D656E74206973206E6F7420656E6F75676800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x778 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x778 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x20C9 DUP3 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x20E7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20DC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x2102 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1E51 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x212E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x20DC JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x629 JUMPI PUSH2 0x2159 PUSH1 0x1 SWAP3 DUP4 DUP2 ADD PUSH1 0x2 SSTORE PUSH2 0x1D82 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x613 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x218A DUP3 PUSH2 0x2184 DUP10 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST DUP10 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x242E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2423 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP5 SSTORE JUMPDEST DUP2 DUP5 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x21DC DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST DUP7 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x23C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x23B5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x2229 DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2352 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2347 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0x629 JUMPI PUSH2 0x2274 DUP4 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x22DA JUMPI SWAP3 DUP1 PUSH1 0xA0 SWAP6 SWAP4 DUP2 SWAP4 PUSH1 0x5 SWAP9 SWAP7 PUSH1 0x0 SWAP5 PUSH2 0x22CF JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 DUP5 SHL SUB PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x2296 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2331 JUMPI POP SWAP2 PUSH1 0x5 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0xA0 SWAP9 SWAP7 SWAP5 LT PUSH2 0x2318 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x22A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x230B JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x22F0 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x223F JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x239D JUMPI POP DUP5 GT PUSH2 0x2384 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2253 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2377 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2368 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x240B JUMPI POP DUP5 GT PUSH2 0x23F2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2206 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23E5 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x23D6 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP9 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2479 JUMPI POP DUP5 GT PUSH2 0x2460 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x21B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2453 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x24A0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0xA0 DUP2 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x629 JUMPI PUSH2 0x255E SWAP5 PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP7 PUSH1 0x40 MSTORE AND SWAP4 PUSH2 0x2520 DUP7 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x20 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0xC0 DUP3 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0x2558 PUSH2 0x25E6 JUMP JUMPDEST SWAP2 PUSH2 0x2616 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x25CC JUMPI JUMPDEST POP POP ISZERO PUSH2 0x2574 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x25DF SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x208C JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x256B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2611 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x25F7 DUP3 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 PUSH2 0x2605 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CAE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2678 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2633 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x268B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x26AF SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP6 SWAP5 SWAP4 SWAP2 SWAP6 PUSH1 0xA0 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP1 SLOAD PUSH2 0x26CC DUP2 PUSH2 0x1DD9 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2759 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2719 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 SWAP2 SWAP1 PUSH2 0x2715 SWAP1 PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x2745 JUMPI POP POP POP POP DUP4 ADD PUSH1 0xC0 ADD DUP2 PUSH1 0x80 PUSH2 0x2715 PUSH2 0x26EB JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD PUSH1 0xC0 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xC0 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH1 0x80 SWAP2 POP PUSH2 0x2715 SWAP1 POP PUSH2 0x26EB JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2791 DUP2 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 PUSH2 0x279F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CAE JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x778 JUMPI PUSH1 0x20 PUSH2 0x1E51 SWAP4 ADD SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x778 JUMPI DUP2 MLOAD PUSH2 0x27D3 SWAP3 PUSH1 0x20 ADD PUSH2 0x2784 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2812 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 SWAP5 DUP6 PUSH1 0x4 SLOAD AND SWAP2 PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP4 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x60 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SWAP4 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 PUSH1 0x44 DUP4 ADD MSTORE DUP2 PUSH1 0x0 SWAP6 DUP7 SWAP5 SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x290C JUMPI DUP3 DUP1 SWAP8 DUP2 SWAP8 DUP3 SWAP8 PUSH2 0x289B JUMPI JUMPDEST POP DUP4 DUP8 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH1 0x20 DUP8 ADD MLOAD SWAP1 DUP2 AND SUB PUSH2 0x140 JUMPI POP DUP2 DUP6 ADD MLOAD SUB PUSH2 0x2867 JUMPI POP SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F742053616D65204E6F6E6365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP9 POP SWAP6 POP SWAP3 POP SWAP5 POP RETURNDATASIZE DUP1 DUP4 DUP9 RETURNDATACOPY PUSH2 0x28B2 DUP2 DUP9 PUSH2 0x1CAE JUMP JUMPDEST DUP7 ADD SWAP5 PUSH1 0x80 DUP8 DUP8 SUB SLT PUSH2 0xE40 JUMPI DUP7 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x77D JUMPI DUP8 PUSH2 0x28DE SWAP2 DUP11 ADD PUSH2 0x27B9 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP10 ADD MLOAD SWAP5 DUP5 DUP11 ADD MLOAD SWAP10 PUSH1 0x60 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x1695 JUMPI PUSH2 0x2901 SWAP3 SWAP2 ADD PUSH2 0x27B9 JUMP JUMPDEST SWAP7 SWAP4 SWAP8 SWAP7 SWAP6 CODESIZE PUSH2 0x283C JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5FD JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1E51 PUSH1 0x40 MLOAD PUSH2 0x2933 DUP2 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP7 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE DUP3 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 ADD PUSH2 0x2917 JUMP JUMPDEST SWAP1 PUSH2 0x613 JUMPI DUP2 DUP2 SUB PUSH2 0x2996 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF DUP2 DUP5 PUSH2 0x1E51 SWAP6 SLOAD DUP6 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH2 0x29FF PUSH1 0x3 DUP7 ADD DUP5 PUSH1 0x3 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE SLOAD PUSH1 0xA0 SHR AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x4 DUP7 ADD SSTORE ADD SLOAD AND SWAP2 ADD PUSH2 0x20A4 JUMP JUMPDEST SWAP1 DUP1 DUP3 EQ PUSH2 0x2AE7 JUMPI PUSH2 0x2A25 DUP2 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x2A44 DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A7B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2A70 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE DUP2 DUP4 KECCAK256 SWAP4 POP SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2ACE JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x2AB5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2AAB JUMP JUMPDEST DUP5 SWAP6 DUP2 SWAP3 SWAP6 DUP6 ADD SLOAD DUP2 SSTORE PUSH1 0x1 DUP1 SWAP2 ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x2A94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2AFF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x2B11 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x2B30 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x20DC JUMP JUMPDEST SSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP5 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MSTORE DUP1 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 MUL DUP13 0xA9 STOP MSTORE DUP9 0x1E NUMBER 0xAA 0xB9 RETURN 0xAB 0xDB CALLDATALOAD DUP3 0x28 SDIV CALLCODE PUSH13 0xACAF7E064720024D6D42C7E364 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"635:10001:16:-:0;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;635:10001:16;;-1:-1:-1;;;;;;635:10001:16;;;719:10:6;635:10001:16;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;719:10:6;635:10001:16;;;;2566:40:0;;-1:-1:-1;2566:40:0;635:10001:16;;1555:44;635:10001;;;1555:44;635:10001;;;1609:36;635:10001;;;1609:36;635:10001;;;1655:30;635:10001;;;1655:30;635:10001;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;-1:-1:-1;635:10001:16;;;;;-1:-1:-1;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7220,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24890":{"entryPoint":7198,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes_fromMemory":{"entryPoint":10116,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":7402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_fromMemory":{"entryPoint":10169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_BayRequest_dyn":{"entryPoint":8032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":7900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_uint256_uint256_address_bool_uint256_enum_Tokens":{"entryPoint":8104,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes_storage_address_bytes32_enum_Tokens_uint256":{"entryPoint":9907,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_enum_Tokens":{"entryPoint":7937,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_BayRequest":{"entryPoint":7950,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_struct_struct_Feed":{"entryPoint":11060,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7375,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_BayRequestPrivate_to_array_struct_BayRequestPrivate_storage_dyn_ptr":{"entryPoint":8504,"id":null,"parameterSlots":1,"returnSlots":0},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":8435,"id":null,"parameterSlots":3,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":8412,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_bytes":{"entryPoint":7699,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_bytes_to_bytes":{"entryPoint":10771,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4":{"entryPoint":8380,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7865,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7641,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":9702,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":7342,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_24899":{"entryPoint":7242,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24908":{"entryPoint":7269,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24944":{"entryPoint":7288,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_44787":{"entryPoint":7315,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8168,"id":54,"parameterSlots":0,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":9398,"id":351,"parameterSlots":4,"returnSlots":0},"fun_sismoVerify":{"entryPoint":10198,"id":4633,"parameterSlots":3,"returnSlots":4},"fun_verifyCallResultFromTarget":{"entryPoint":9750,"id":952,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":9361,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_BayRequest":{"entryPoint":10531,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_6c17":{"entryPoint":8256,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_BayRequestPrivate_dyn":{"entryPoint":7613,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_BayRequestPrivate_dyn_24893":{"entryPoint":7473,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_BayRequestPrivate_dyn_24895":{"entryPoint":7554,"id":null,"parameterSlots":1,"returnSlots":2},"storage_set_to_zero_bytes":{"entryPoint":10987,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_Tokens_to_enum_Tokens":{"entryPoint":8356,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_BayRequest_to_struct_BayRequest":{"entryPoint":10630,"id":null,"parameterSlots":3,"returnSlots":0},"write_to_memory_enum_Tokens":{"entryPoint":10519,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x67BD3B4 EQ PUSH2 0x1C02 JUMPI POP DUP1 PUSH4 0xF3CD888 EQ PUSH2 0x1BC2 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x1B99 JUMPI DUP1 PUSH4 0x346207B6 EQ PUSH2 0x10A9 JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x1069 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x100F JUMPI DUP1 PUSH4 0x8416E304 EQ PUSH2 0xF4A JUMPI DUP1 PUSH4 0x8813CE12 EQ PUSH2 0xEA1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7A JUMPI DUP1 PUSH4 0x9655E6D8 EQ PUSH2 0xE44 JUMPI DUP1 PUSH4 0x97910036 EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x9BF4EC2F EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x9C673FE5 EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0xA357427D EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xB0413770 EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0xC4BB77D0 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xC81AC646 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xCF04FB94 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xCF695688 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x143 JUMPI PUSH4 0xF77800E5 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x15D PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x24C PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x254 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST POP CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x140 DUP2 SLT PUSH2 0x77D JUMPI PUSH1 0xE0 SGT PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x295 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2B2 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x77D JUMPI PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x77D JUMPI PUSH2 0x300 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST SWAP1 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x322 DUP4 PUSH2 0x1C78 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x60 DUP5 ADD MSTORE DUP2 PUSH1 0x80 DUP5 ADD MSTORE DUP2 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH2 0x6F9 JUMPI PUSH2 0x366 CALLVALUE ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x375 PUSH1 0x20 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x386 PUSH2 0x124 CALLDATALOAD PUSH2 0x104 CALLDATALOAD DUP4 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP SWAP1 DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 SWAP2 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xE2AB4CB PUSH1 0xE2 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6EE JUMPI DUP6 SWAP2 PUSH2 0x6BF JUMPI JUMPDEST POP ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 DUP7 ADD MLOAD ISZERO PUSH2 0x63F JUMPI PUSH2 0x3E7 PUSH1 0x20 DUP8 ADD MLOAD CALLVALUE EQ PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x20 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x2040 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x629 JUMPI PUSH2 0x41F SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x613 JUMPI DUP7 MLOAD DUP2 SSTORE PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x5 PUSH2 0x499 SWAP3 ADD PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x629 JUMPI DUP1 PUSH1 0x1 PUSH2 0x4B8 SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x1D31 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x613 JUMPI DUP7 MLOAD DUP4 SSTORE PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xC0 DUP8 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x5FD JUMPI PUSH2 0x588 SWAP4 PUSH1 0x5 PUSH2 0x53A SWAP3 ADD PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x547 DUP4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x54F PUSH2 0x20BC JUMP JUMPDEST DUP4 MSTORE PUSH2 0x559 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x593 PUSH1 0x9 SLOAD PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x5E9 JUMPI POP PUSH32 0xE9A2B6F068C8E156E02B1FA5A51213D9F1811CEB25DC05211A1DF6B0F0F51102 PUSH1 0xE0 DUP1 SWAP6 PUSH2 0x5D9 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST LOG3 PUSH2 0x5E7 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7374616B65206973206E6F7420656E6F756768000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D5CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x208C JUMP JUMPDEST CODESIZE PUSH2 0x3C8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x2 SUB PUSH2 0x731 JUMPI PUSH1 0x7 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x72C SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x1 SUB PUSH2 0x366 JUMPI PUSH1 0x6 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x72C SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x79B PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77D JUMPI PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x89E JUMPI SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x859 DUP2 DUP5 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x87D DUP8 DUP3 PUSH2 0x1F60 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x890 DUP10 PUSH2 0x2923 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x868 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x8CC PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x8D4 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH2 0x91A SWAP1 PUSH2 0x1D31 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x87D PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP9 PUSH2 0x1FA8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE40 JUMPI PUSH2 0x990 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x778 JUMPI PUSH2 0x9B1 SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 DUP4 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 PUSH2 0x9D1 PUSH1 0x2 PUSH2 0x9CA DUP4 PUSH2 0x1D82 JUMP JUMPDEST POP ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP4 SUB PUSH2 0xDFB JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0x9EB DUP4 PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xDB6 JUMPI DUP4 DUP1 PUSH2 0xA0A PUSH2 0xA04 DUP5 PUSH2 0x1D31 JUMP JUMPDEST POP PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP8 MLOAD SWAP4 SWAP8 SWAP1 SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0xA2E PUSH2 0x25E6 JUMP JUMPDEST POP ISZERO PUSH2 0xD79 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC10 JUMPI DUP1 DUP3 LT PUSH2 0xD5D JUMPI JUMPDEST POP PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 NOT ADD PUSH2 0xA62 DUP2 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x5 DUP2 PUSH1 0x0 DUP1 SWAP4 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC10 JUMPI DUP1 DUP3 LT PUSH2 0xCD0 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0xCBC JUMPI PUSH2 0xABA PUSH1 0x0 NOT DUP3 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x5 DUP2 PUSH2 0xACC PUSH1 0x0 SWAP4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x1 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAE4 PUSH1 0x2 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xAF0 PUSH1 0x3 DUP3 ADD PUSH2 0x2AEB JUMP JUMPDEST DUP7 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x0 NOT ADD PUSH1 0x2 SSTORE DUP3 JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x8 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xB23 DUP4 PUSH1 0x1 SWAP3 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0x20 DUP5 ADD MLOAD EQ DUP1 PUSH2 0xC7B JUMPI JUMPDEST DUP1 PUSH2 0xC49 JUMPI JUMPDEST DUP1 PUSH2 0xC24 JUMPI JUMPDEST PUSH2 0xB51 JUMPI POP PUSH2 0xB4C SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST SWAP3 DUP1 SWAP3 POP DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0xC10 JUMPI DUP2 DUP2 LT PUSH2 0xBD7 JUMPI JUMPDEST POP POP DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xB97 DUP3 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x5 DUP2 PUSH1 0x0 DUP1 SWAP4 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC03 PUSH2 0xBF1 PUSH2 0xC09 SWAP4 DUP6 DUP9 MSTORE DUP7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP SWAP2 DUP5 DUP8 MSTORE DUP6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 PUSH2 0x2986 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0xB75 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH2 0xC3B DUP4 PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 DUP5 ADD MLOAD EQ PUSH2 0xB3E JUMP JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xC5E DUP3 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB38 JUMP JUMPDEST POP DUP4 DUP6 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH2 0xC92 DUP4 PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x1DBD JUMP JUMPDEST POP ADD SLOAD PUSH1 0x40 DUP5 ADD MLOAD EQ PUSH2 0xB32 JUMP JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xCDC PUSH2 0xCE3 SWAP2 PUSH2 0x1D82 JUMP JUMPDEST POP SWAP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xCA8 JUMPI DUP2 DUP2 EQ PUSH2 0xAA2 JUMPI PUSH1 0x5 DUP2 PUSH2 0xCFF DUP3 SWAP4 DUP6 PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD0F PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD1F PUSH1 0x2 DUP3 ADD PUSH1 0x2 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0xD2F PUSH1 0x3 DUP3 ADD PUSH1 0x3 DUP7 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP4 ADD SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD SLOAD SWAP2 ADD SSTORE CODESIZE DUP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xD69 PUSH2 0xD73 SWAP2 PUSH2 0x1D31 JUMP JUMPDEST POP PUSH2 0xC03 DUP4 PUSH2 0x1D31 JUMP JUMPDEST CODESIZE PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1090564E95985D5B1D0818D85B1B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7265717565737420697320616C726561647920616363657074656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A796F7520617265206E6F742074686520627579657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE40 JUMPI PUSH2 0x91A SWAP3 POP PUSH2 0x1DBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x1 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 PUSH2 0xEDA DUP2 DUP5 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE DUP5 DUP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP2 DUP6 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x87D DUP9 DUP3 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x6 DUP4 DUP9 SWAP3 PUSH2 0xF28 DUP6 PUSH2 0x2923 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x140 JUMPI PUSH2 0xFD6 PUSH2 0xF76 DUP4 PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0xF80 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 PUSH2 0xF8D PUSH1 0x1 DUP3 ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0x1000 PUSH2 0xF9C PUSH1 0x2 DUP5 ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFAB PUSH1 0x3 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 PUSH2 0xFE4 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1EDC JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1028 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1083 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x108B PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x77D JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE40 JUMPI PUSH2 0x10ED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CEA JUMP JUMPDEST SWAP1 PUSH2 0x1103 PUSH2 0x10F9 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP5 PUSH2 0x27D6 JUMP JUMPDEST POP POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 SWAP3 PUSH2 0x1116 PUSH2 0x2B34 JUMP JUMPDEST POP PUSH2 0x111F PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP1 DUP3 MSTORE PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B67 JUMPI JUMPDEST POP PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x5C63ED69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B35 JUMPI JUMPDEST POP PUSH1 0x40 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH4 0x4C38D877 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1B03 JUMPI JUMPDEST POP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x48BF3BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1AD1 JUMPI JUMPDEST POP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xBC83617 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A9F JUMPI JUMPDEST POP PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xD24E0C87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A6D JUMPI JUMPDEST POP PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xFAEB5E17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A3B JUMPI JUMPDEST POP PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x2734EAB PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1A00 JUMPI JUMPDEST POP PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x10A38F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP1 PUSH2 0x19AB JUMPI JUMPDEST PUSH2 0x130C SWAP2 POP PUSH2 0x120 DUP6 ADD PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x54FD4D5 PUSH1 0xE4 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x194B JUMPI JUMPDEST POP PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH2 0x134C PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0xC0 DUP5 ADD MLOAD GT PUSH2 0x18F6 JUMPI PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x2 PUSH2 0x136B PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD GT PUSH2 0x18A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2AB4CB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1898 JUMPI DUP8 SWAP2 PUSH2 0x1879 JUMPI JUMPDEST POP ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1441 SWAP2 PUSH2 0x13C3 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x142D PUSH1 0x3 PUSH2 0x13D4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x1422 PUSH1 0x2 PUSH2 0x13E5 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x1404 SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1415 DUP12 PUSH2 0x1C4A JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE ADD PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2138 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH2 0x1450 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI ISZERO PUSH2 0x1754 JUMPI PUSH1 0xFF PUSH1 0x5 PUSH2 0x1471 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x2 SUB PUSH2 0x16C7 JUMPI PUSH1 0x7 SLOAD DUP5 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x14D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x14A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x16A8 JUMPI JUMPDEST POP JUMPDEST DUP4 PUSH2 0x14F1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x14FD PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x151C SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 PUSH2 0x152F PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x1 PUSH2 0x1541 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EXTCODESIZE ISZERO PUSH2 0x16A4 JUMPI DUP6 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x157A SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x803E14B PUSH1 0xE2 SHL DUP9 MSTORE ADD PUSH1 0x4 DUP8 ADD PUSH2 0x26B3 JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x1699 JUMPI PUSH2 0x1681 JUMPI JUMPDEST POP POP PUSH1 0xA0 SWAP2 JUMPDEST PUSH1 0x3 PUSH2 0x15A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD PUSH1 0x1 DUP5 SHL PUSH1 0xFF DUP6 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 PUSH2 0x15C5 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SWAP1 PUSH1 0x1 DUP1 DUP6 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD MLOAD PUSH1 0x4 PUSH2 0x15ED DUP2 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x15FB PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP SWAP1 PUSH2 0x1656 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 MLOAD SWAP5 DUP1 SLOAD DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE DUP3 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE ADD SLOAD AND PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH32 0x83C2CCA80E93944A5016AE3E3F51BD5E9275D6459DFDBFDAD3FE85D918D92F33 PUSH1 0xE0 PUSH1 0x4 CALLDATALOAD SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH2 0x168A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1695 JUMPI DUP4 CODESIZE PUSH2 0x1594 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x16C0 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST POP CODESIZE PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH2 0x16D6 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x1 SUB PUSH2 0x14E5 JUMPI PUSH1 0x6 SLOAD DUP5 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x170C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x14A7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x1721 JUMPI JUMPDEST POP PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x1739 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST POP CODESIZE PUSH2 0x171B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH2 0x1762 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD DUP5 PUSH2 0x1771 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP SWAP2 PUSH2 0x177E PUSH1 0x4 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0x179D SWAP1 CALLDATALOAD PUSH2 0x1D82 JUMP JUMPDEST POP ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x5 PUSH2 0x17B0 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD AND SWAP1 PUSH1 0x1 PUSH2 0x17C2 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D31 JUMP JUMPDEST POP ADD SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EXTCODESIZE ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x3 SWAP3 PUSH2 0x17FB SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x803E14B PUSH1 0xE2 SHL DUP9 MSTORE ADD PUSH1 0x4 DUP8 ADD PUSH2 0x26B3 JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH2 0x181E JUMPI JUMPDEST POP SWAP1 PUSH1 0xA0 SWAP2 PUSH2 0x159A JUMP JUMPDEST SWAP4 PUSH2 0x182C PUSH1 0xA0 SWAP4 SWAP3 SWAP6 PUSH2 0x1C65 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7573657220646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1892 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6E7 JUMPI PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST CODESIZE PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7374616B65206973206E6F74207468652073616D65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x819995959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7061796D656E74206973206E6F74207468652073616D65206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1A194819995959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP DUP2 DUP9 DUP3 RETURNDATACOPY PUSH2 0x195C DUP3 DUP3 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 DUP2 ADD SUB SLT PUSH2 0x19A7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x19A3 JUMPI DUP3 DUP2 ADD PUSH1 0x1F DUP4 DUP4 ADD ADD SLT ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x20 PUSH2 0x199D SWAP4 DUP3 ADD SWAP3 DUP1 DUP4 ADD MLOAD SWAP3 ADD ADD PUSH2 0x2784 JUMP JUMPDEST CODESIZE PUSH2 0x1338 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19E4 JUMPI JUMPDEST DUP2 PUSH2 0x19C5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x130C SWAP1 PUSH2 0x12FD JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A33 JUMPI JUMPDEST DUP2 PUSH2 0x1A1B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x19E0 JUMPI CODESIZE PUSH2 0x12C1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A65 JUMPI JUMPDEST DUP2 PUSH2 0x1A56 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x128E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A49 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A97 JUMPI JUMPDEST DUP2 PUSH2 0x1A88 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x125B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AC9 JUMPI JUMPDEST DUP2 PUSH2 0x1ABA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x1228 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AFB JUMPI JUMPDEST DUP2 PUSH2 0x1AEC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x11F5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B2D JUMPI JUMPDEST DUP2 PUSH2 0x1B1E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x11C2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B5F JUMPI JUMPDEST DUP2 PUSH2 0x1B50 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x118D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B91 JUMPI JUMPDEST DUP2 PUSH2 0x1B82 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1CAE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E0 JUMPI MLOAD CODESIZE PUSH2 0x1157 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B75 JUMP JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x140 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x140 JUMPI PUSH2 0x1BDC PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x77D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x778 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x778 JUMPI JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x629 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x778 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1D01 DUP3 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 PUSH2 0x1D0F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CAE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x778 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x6 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE MUL PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E09 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DF3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1E27 DUP5 PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E96 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E53 JUMPI JUMPDEST POP POP PUSH2 0x1E51 SWAP3 POP SUB DUP4 PUSH2 0x1CAE JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1E7E JUMPI POP POP PUSH2 0x1E51 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1E43 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E51 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1ECC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EBC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1EF5 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5FD JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x1E51 SWAP4 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F87 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0xE0 DUP3 PUSH2 0x1F9C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x1F0E JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1F79 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0xC0 SWAP5 PUSH2 0x1E51 SWAP8 SWAP4 SWAP10 SWAP9 SWAP7 SWAP3 SWAP10 PUSH1 0xE0 DUP7 ADD SWAP11 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1FFC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2047 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4241593A7061796D656E74206973206E6F7420656E6F75676800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x778 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x778 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x20C9 DUP3 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x20E7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20DC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x2102 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1E51 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x212E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x20DC JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x629 JUMPI PUSH2 0x2159 PUSH1 0x1 SWAP3 DUP4 DUP2 ADD PUSH1 0x2 SSTORE PUSH2 0x1D82 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x613 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x218A DUP3 PUSH2 0x2184 DUP10 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST DUP10 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x242E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2423 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP5 SSTORE JUMPDEST DUP2 DUP5 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x21DC DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST DUP7 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x23C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x23B5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x2229 DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2352 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2347 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0x629 JUMPI PUSH2 0x2274 DUP4 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x22DA JUMPI SWAP3 DUP1 PUSH1 0xA0 SWAP6 SWAP4 DUP2 SWAP4 PUSH1 0x5 SWAP9 SWAP7 PUSH1 0x0 SWAP5 PUSH2 0x22CF JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 DUP5 SHL SUB PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x2296 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2331 JUMPI POP SWAP2 PUSH1 0x5 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0xA0 SWAP9 SWAP7 SWAP5 LT PUSH2 0x2318 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x22A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x230B JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x22F0 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x223F JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x239D JUMPI POP DUP5 GT PUSH2 0x2384 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2253 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2377 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2368 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x21F2 JUMP JUMPDEST SWAP1 DUP7 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x240B JUMPI POP DUP5 GT PUSH2 0x23F2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2206 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23E5 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x23D6 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP9 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2479 JUMPI POP DUP5 GT PUSH2 0x2460 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x21B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2453 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x24A0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0xA0 DUP2 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x629 JUMPI PUSH2 0x255E SWAP5 PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP7 PUSH1 0x40 MSTORE AND SWAP4 PUSH2 0x2520 DUP7 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x20 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0xC0 DUP3 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0x2558 PUSH2 0x25E6 JUMP JUMPDEST SWAP2 PUSH2 0x2616 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x25CC JUMPI JUMPDEST POP POP ISZERO PUSH2 0x2574 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x25DF SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x208C JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x256B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2611 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x25F7 DUP3 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 PUSH2 0x2605 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CAE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2678 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2633 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x268B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x26AF SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP6 SWAP5 SWAP4 SWAP2 SWAP6 PUSH1 0xA0 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP1 SLOAD PUSH2 0x26CC DUP2 PUSH2 0x1DD9 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2759 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2719 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 SWAP2 SWAP1 PUSH2 0x2715 SWAP1 PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x1F01 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x2745 JUMPI POP POP POP POP DUP4 ADD PUSH1 0xC0 ADD DUP2 PUSH1 0x80 PUSH2 0x2715 PUSH2 0x26EB JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD PUSH1 0xC0 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xC0 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH1 0x80 SWAP2 POP PUSH2 0x2715 SWAP1 POP PUSH2 0x26EB JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2791 DUP2 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 PUSH2 0x279F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CAE JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x778 JUMPI PUSH1 0x20 PUSH2 0x1E51 SWAP4 ADD SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x778 JUMPI DUP2 MLOAD PUSH2 0x27D3 SWAP3 PUSH1 0x20 ADD PUSH2 0x2784 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2812 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 SWAP5 DUP6 PUSH1 0x4 SLOAD AND SWAP2 PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP4 PUSH4 0x7276069D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x60 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x1EDC JUMP JUMPDEST SWAP4 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 PUSH1 0x44 DUP4 ADD MSTORE DUP2 PUSH1 0x0 SWAP6 DUP7 SWAP5 SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x290C JUMPI DUP3 DUP1 SWAP8 DUP2 SWAP8 DUP3 SWAP8 PUSH2 0x289B JUMPI JUMPDEST POP DUP4 DUP8 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x77D JUMPI PUSH1 0x20 DUP8 ADD MLOAD SWAP1 DUP2 AND SUB PUSH2 0x140 JUMPI POP DUP2 DUP6 ADD MLOAD SUB PUSH2 0x2867 JUMPI POP SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F742053616D65204E6F6E6365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP9 POP SWAP6 POP SWAP3 POP SWAP5 POP RETURNDATASIZE DUP1 DUP4 DUP9 RETURNDATACOPY PUSH2 0x28B2 DUP2 DUP9 PUSH2 0x1CAE JUMP JUMPDEST DUP7 ADD SWAP5 PUSH1 0x80 DUP8 DUP8 SUB SLT PUSH2 0xE40 JUMPI DUP7 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x77D JUMPI DUP8 PUSH2 0x28DE SWAP2 DUP11 ADD PUSH2 0x27B9 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP10 ADD MLOAD SWAP5 DUP5 DUP11 ADD MLOAD SWAP10 PUSH1 0x60 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x1695 JUMPI PUSH2 0x2901 SWAP3 SWAP2 ADD PUSH2 0x27B9 JUMP JUMPDEST SWAP7 SWAP4 SWAP8 SWAP7 SWAP6 CODESIZE PUSH2 0x283C JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5FD JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1E51 PUSH1 0x40 MLOAD PUSH2 0x2933 DUP2 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x5 DUP4 SWAP7 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE DUP3 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 ADD PUSH2 0x2917 JUMP JUMPDEST SWAP1 PUSH2 0x613 JUMPI DUP2 DUP2 SUB PUSH2 0x2996 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF DUP2 DUP5 PUSH2 0x1E51 SWAP6 SLOAD DUP6 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH2 0x29FF PUSH1 0x3 DUP7 ADD DUP5 PUSH1 0x3 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE SLOAD PUSH1 0xA0 SHR AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x4 DUP7 ADD SSTORE ADD SLOAD AND SWAP2 ADD PUSH2 0x20A4 JUMP JUMPDEST SWAP1 DUP1 DUP3 EQ PUSH2 0x2AE7 JUMPI PUSH2 0x2A25 DUP2 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x629 JUMPI DUP2 SWAP1 PUSH2 0x2A44 DUP3 PUSH2 0x21D6 DUP7 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A7B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2A70 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A5A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE DUP2 DUP4 KECCAK256 SWAP4 POP SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2ACE JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x2AB5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2AAB JUMP JUMPDEST DUP5 SWAP6 DUP2 SWAP3 SWAP6 DUP6 ADD SLOAD DUP2 SSTORE PUSH1 0x1 DUP1 SWAP2 ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x2A94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 SLOAD PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2AFF JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x2B11 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x2B30 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x20DC JUMP JUMPDEST SSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x629 JUMPI PUSH1 0x40 MSTORE PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP5 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MSTORE DUP1 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 MUL DUP13 0xA9 STOP MSTORE DUP9 0x1E NUMBER 0xAA 0xB9 RETURN 0xAB 0xDB CALLDATALOAD DUP3 0x28 SDIV CALLCODE PUSH13 0xACAF7E064720024D6D42C7E364 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"635:10001:16:-:0;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:24;635:10001;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;635:10001:16;;;;2162:22:0;;635:10001:16;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;2566:40:0;635:10001:16;2566:40:0;;635:10001:16;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;-1:-1:-1;635:10001:16;-1:-1:-1;;635:10001:16;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:40;;2199:51;2207:9;:13;;2199:51;:::i;:::-;2705:57;635:10001;;;;2713:19;;2705:57;:::i;:::-;2804:93;635:10001;;;;2804:93;;:::i;:::-;635:10001;;;;;;;;;2935:18;635:10001;;;;;;;;;;;;;;;;;;;;2985:103;;;635:10001;2985:103;;635:10001;2985:103;;;;;;;;;;;2139:556;635:10001;;;;;;;;3152:17;635:10001;;3208:66;635:10001;;;;3235:9;3216:28;3208:66;:::i;:::-;3285:57;635:10001;;;;3293:19;;3285:57;:::i;:::-;635:10001;;;3353:8;635:10001;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;;-1:-1:-1;;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;;-1:-1:-1;;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3440:328;635:10001;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;3477:281;;635:10001;;3477:281;;635:10001;;3477:281;;635:10001;;;-1:-1:-1;;;;;635:10001:16;;3477:281;;635:10001;;;;3477:281;;635:10001;3440:328;:::i;:::-;3779:17;;635:10001;3779:17;:::i;:::-;;635:10001;;;-1:-1:-1;;635:10001:16;;;;;;;;;3812:65;635:10001;;;;;;;;;:::i;:::-;3812:65;635:10001;;;;;;:::i;:::-;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;2985:103;;;;635:10001;2985:103;635:10001;2985:103;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;635:10001;;;;;;;;;2139:556;635:10001;;;;;;;;;;2290:21;2271:40;2290:21;;2334:8;635:10001;;;;;2437:15;;2414:4;;2378:10;;-1:-1:-1;;;;;635:10001:16;2437:15;:::i;:::-;2139:556;;2267:428;635:10001;;;;;;;;;;;2487:41;2139:556;2483:212;2551:9;635:10001;;;;;2655:15;;2632:4;;2596:10;;-1:-1:-1;;;;;635:10001:16;2655:15;:::i;635:10001::-;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;976:23;635:10001;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;7703:8;635:10001;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;1879:20;635:10001;;;1879:20;635:10001;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;;718:42;;;;;;;;:::i;:::-;635:10001;;;;;718:42;;635:10001;718:42;;;;635:10001;718:42;635:10001;718:42;;635:10001;;718:42;635:10001;718:42;;635:10001;718:42;;635:10001;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;635:10001:16;;;;;;8140:47;635:10001;;;8140:47;;;:::i;:::-;635:10001;;;;;;;;8225:18;8321:25;635:10001;8321:18;:25;;;:::i;:::-;:38;;635:10001;:::i;:::-;;;;;;8311:49;8275:85;;635:10001;;;;8443:18;;;:::i;:::-;:27;;635:10001;;;;;;8594:18;;635:10001;8594:18;;;:::i;:::-;635:10001;;:::i;:::-;8689:13;635:10001;;8715:23;;;635:10001;8689:94;;8715:23;;8689:94;;;;-1:-1:-1;;;;;635:10001:16;8689:94;;;;:::i;:::-;;635:10001;;;;;-1:-1:-1;;635:10001:16;;;;;;;8943:17;;;8939:91;;635:10001;;;;;;;;-1:-1:-1;;635:10001:16;;;;:::i;:::-;;;8689:13;635:10001;;;;;;;;;;;8321:18;635:10001;;;;;;;;;;;;;;;;;8321:18;635:10001;;;;;;;;;;9185:24;;;9181:119;;635:10001;;;8321:18;635:10001;;;;;;-1:-1:-1;;635:10001:16;;;:::i;:::-;;;8689:13;635:10001;;;;;:::i;:::-;;;;;;:::i;:::-;;8321:18;635:10001;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;8321:18;635:10001;9389:13;9443:3;635:10001;;;9408:8;635:10001;;;;;;;;9404:37;;;;;9483:29;;635:10001;9483:29;;:::i;:::-;:37;;635:10001;;8715:23;;635:10001;9483:80;:160;;;9443:3;9483:268;;;9443:3;9483:372;;;9443:3;9462:781;;9443:3;;;;:::i;:::-;9389:13;;9462:781;635:10001;;;;;;;;;;;;;;;;;;;;;;;9973:19;;;9969:187;;9462:781;635:10001;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;;;8689:13;635:10001;;;;;;;;;;;8321:18;635:10001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9969:187;10016:29;10048:89;10016:121;635:10001;;;;;;;;;;10048:89;:::i;:::-;635:10001;;;;;;;;;;;10016:29;:::i;:::-;:121;;:::i;:::-;9969:187;;;;635:10001;-1:-1:-1;;;635:10001:16;;;;;;;;9483:372;635:10001;;;;;;;;9771:29;635:10001;;;;9771:29;:::i;:::-;:39;;635:10001;;9830:25;;635:10001;9771:84;9483:372;;:268;635:10001;;;;;;;9663:29;635:10001;;;;9663:29;:::i;:::-;-1:-1:-1;635:10001:16;9663:41;635:10001;;9724:27;;635:10001;-1:-1:-1;;;;;635:10001:16;;;;;9663:88;9483:268;;:160;635:10001;;;;;;;8321:18;9583:29;635:10001;;;;9583:29;:::i;:::-;:35;;635:10001;;9622:21;;635:10001;9583:60;9483:160;;9404:37;;;;;;635:10001;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;9181:119;9253:36;9225:25;9253:36;;:::i;:::-;9225:25;;;:::i;:::-;635:10001;;;;;;;;9181:119;635:10001;8689:13;635:10001;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8321:18;635:10001;;8321:18;635:10001;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;9181:119;;8939:91;8997:22;8976:43;8997:22;;:::i;:::-;8976:18;;;;:::i;:43::-;8939:91;;;635:10001;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;;;;1006:59;635:10001;;;;;;;1006:59;;;;;;;;;:::i;635:10001::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;7550:11;635:10001;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;767:56;635:10001;767:56;;;;;635:10001;767:56;;;:::i;:::-;;;;;:::i;:::-;;;635:10001;767:56;;;:::i;:::-;635:10001;767:56;;;;;:::i;:::-;635:10001;767:56;635:10001;767:56;;;:::i;:::-;635:10001;;767:56;635:10001;;;;;;767:56;;635:10001;;767:56;;635:10001;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;635:10001:16;;;-1:-1:-1;;;;;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;2566:40:0;635:10001:16;;2566:40:0;635:10001:16;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;10331:22;635:10001;;;10331:22;635:10001;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;:::i;:::-;;4101:93;635:10001;;:::i;:::-;;;4101:93;;;:::i;:::-;635:10001;;;;;;;;4232:18;635:10001;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;635:10001:16;;;;;;;-1:-1:-1;;;410:20:18;;635:10001:16;;;;;;;;;;;;410:20:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;397:10:18;;;635:10001:16;;;;;;-1:-1:-1;;;456:29:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;456:29:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;440:13:18;;;635:10001:16;;;;;-1:-1:-1;;;510:28:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;510:28:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;495:12:18;;635:10001:16;;;-1:-1:-1;;;563:29:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;563:29:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;548:12:18;;635:10001:16;;;-1:-1:-1;;;616:24:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;616:24:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;602:11:18;;635:10001:16;;;-1:-1:-1;;;671:34:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;671:34:18;;;;;;;;;;;635:10001:16;-1:-1:-1;650:18:18;;;635:10001:16;;;-1:-1:-1;;;734:32:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;734:32:18;;;;;;;;;;;635:10001:16;-1:-1:-1;635:10001:16;715:16:18;;635:10001:16;;;-1:-1:-1;;;787:24:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;787:24:18;;;;;;;;;;;635:10001:16;;;;;;;;776:8:18;;;635:10001:16;;;-1:-1:-1;;;833:25:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;833:25:18;;;;;;;;;;635:10001:16;821:37:18;:9;;;;;:37;:::i;:::-;635:10001:16;;-1:-1:-1;;;880:22:18;;635:10001:16;;;;-1:-1:-1;;;;;635:10001:16;;880:22:18;;;;;;;;;;;635:10001:16;868:9:18;;;;:34;635:10001:16;4342:18;635:10001;;4342:18;:::i;:::-;:26;;635:10001;650:18:18;;;635:10001:16;-1:-1:-1;635:10001:16;;;715:16:18;;635:10001:16;4513:24;:18;635:10001;;4513:18;:::i;:::-;:24;;635:10001;-1:-1:-1;635:10001:16;;;;;;-1:-1:-1;;;4632:101:16;;635:10001;4632:101;;635:10001;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;4632:101;;;;;;;;;;;635:10001;;;;;4793:453;635:10001;4985:25;635:10001;;4985:25;:::i;:::-;635:10001;;;5056:25;635:10001;;5056:25;:::i;:::-;635:10001;;4513:24;5122:25;635:10001;;5122:25;:::i;:::-;-1:-1:-1;635:10001:16;5122:33;;;635:10001;-1:-1:-1;;;;;635:10001:16;;;5185:36;;:25;;635:10001;5185:25;:::i;:::-;:36;;635:10001;;;;;;;;:::i;:::-;;;;4830:406;;635:10001;4985:38;635:10001;:::i;:::-;;4830:406;;635:10001;5056:39;635:10001;:::i;:::-;;4830:406;;635:10001;;4830:406;;635:10001;;4830:406;;635:10001;4793:453;:::i;:::-;635:10001;5185:36;5261:18;635:10001;;5261:18;:::i;:::-;:26;;635:10001;;;;;;;;5261:51;;;635:10001;5185:36;5332:18;635:10001;;5332:18;:::i;:::-;:26;;635:10001;;;;;;;;4513:24;5332:51;4513:24;;5410:8;635:10001;;;;;5403:122;;-1:-1:-1;;;;;635:10001:16;;5481:18;635:10001;;5481:18;:::i;:::-;-1:-1:-1;5481:26:16;635:10001;;;-1:-1:-1;;;5403:122:16;;5449:10;635:10001;5403:122;;635:10001;;;;;;;;;;;;;;;;;;;;;5403:122;;;;;;;;;;;5328:432;;;635:10001;5833:25;635:10001;;5833:25;:::i;:::-;635:10001;5890:25;635:10001;;5890:25;:::i;:::-;-1:-1:-1;635:10001:16;5890:33;;;635:10001;-1:-1:-1;;;;;635:10001:16;;;5185:36;;5941:25;;635:10001;5941:25;:::i;:::-;:36;;635:10001;;;5185:36;5995:18;635:10001;;5995:18;:::i;:::-;:26;;635:10001;;;;6039:18;635:10001;;6039:18;:::i;:::-;-1:-1:-1;6039:26:16;635:10001;;-1:-1:-1;;;;;635:10001:16;;5774:305;;;;635:10001;;;;5774:305;635:10001;;;;;;;;;;;5774:305;;5833:39;635:10001;5774:305;;;:::i;:::-;;635:10001;;-1:-1:-1;;;;;635:10001:16;;5774:305;;;;;;;;5328:432;5257:1194;;635:10001;5257:1194;;635:10001;6461:18;635:10001;;6461:18;:::i;:::-;:27;;635:10001;;;;;;;;;;;;;;6506:18;635:10001;;6506:18;:::i;:::-;:30;;635:10001;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;602:11:18;635:10001:16;;6555:18;635:10001;;6555:18;:::i;:::-;:28;;635:10001;6650:18;635:10001;;6650:18;:::i;:::-;635:10001;;;;5185:36;635:10001;;;;;;;;;;;;;;;4513:24;635:10001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:18:18;635:10001:16;;;;:::i;:::-;6616:60;635:10001;;;6616:60;;635:10001;;5774:305;;;;:::i;:::-;635:10001;;5774:305;;;;635:10001;;;;5774:305;635:10001;;;;;;;;;5774:305;635:10001;;;5403:122;;;635:10001;5403:122;635:10001;5403:122;;;;;;;:::i;:::-;;;;;5328:432;635:10001;5185:36;5550:18;635:10001;;5550:18;:::i;:::-;:26;;635:10001;;;;;;;;;5550:52;5328:432;5546:214;5629:9;635:10001;;;;;5622:123;;-1:-1:-1;;;;;635:10001:16;;5701:18;635:10001;;5701:18;:::i;5622:123::-;;;;;;;;;;;5546:214;;5328:432;;5622:123;;;635:10001;5622:123;635:10001;5622:123;;;;;;;:::i;:::-;;;;;635:10001;-1:-1:-1;;;635:10001:16;;;;;;;;5257:1194;635:10001;;6149:18;635:10001;;6149:18;:::i;:::-;:26;;635:10001;;6194:25;635:10001;;6194:25;:::i;:::-;635:10001;;6251:25;635:10001;;6251:25;:::i;:::-;-1:-1:-1;635:10001:16;6251:33;;;635:10001;-1:-1:-1;;;;;635:10001:16;;;5185:36;;6302:25;;635:10001;6302:25;:::i;:::-;:36;;635:10001;;;5185:36;6356:18;635:10001;;6356:18;:::i;:::-;:26;;635:10001;;;;6400:18;635:10001;;6400:18;:::i;:::-;-1:-1:-1;6400:26:16;635:10001;;-1:-1:-1;;;;;635:10001:16;;6110:330;;;;635:10001;;6110:330;635:10001;;;;;;;;;;;;;6110:330;;6194:39;635:10001;6110:330;;;:::i;:::-;;;-1:-1:-1;;;;;635:10001:16;;6110:330;;;;;;;;5257:1194;;;635:10001;5257:1194;;;6110:330;;;635:10001;6110:330;;;;:::i;:::-;;;;;;635:10001;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;4632:101;;;;635:10001;4632:101;635:10001;4632:101;;;;;;;:::i;:::-;;;;;635:10001;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;880:22:18;;;-1:-1:-1;880:22:18;;;;;;;;:::i;:::-;635:10001:16;880:22:18;;;;635:10001:16;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;880:22:18;;;635:10001:16;;;;;;;;;;;880:22:18;;;635:10001:16;;;;;;;;;:::i;:::-;880:22:18;;;635:10001:16;;;;;;;;833:25:18;;635:10001:16;833:25:18;;635:10001:16;833:25:18;;;;;;635:10001:16;833:25:18;;;:::i;:::-;;;635:10001:16;;;;;;;;;;;821:37:18;833:25;;;635:10001:16;;;;833:25:18;;;-1:-1:-1;833:25:18;;635:10001:16;-1:-1:-1;;;635:10001:16;;;;;;;;787:24:18;;;635:10001:16;787:24:18;;635:10001:16;787:24:18;;;;;;635:10001:16;787:24:18;;;:::i;:::-;;;635:10001:16;;;;;;;;;;;787:24:18;;;;;;-1:-1:-1;787:24:18;;734:32;;;635:10001:16;734:32:18;;635:10001:16;734:32:18;;;;;;635:10001:16;734:32:18;;;:::i;:::-;;;635:10001:16;;;;;734:32:18;;;;;;-1:-1:-1;734:32:18;;671:34;;;635:10001:16;671:34:18;;635:10001:16;671:34:18;;;;;;635:10001:16;671:34:18;;;:::i;:::-;;;635:10001:16;;;;;671:34:18;;;;;;-1:-1:-1;671:34:18;;616:24;;;635:10001:16;616:24:18;;635:10001:16;616:24:18;;;;;;635:10001:16;616:24:18;;;:::i;:::-;;;635:10001:16;;;;;616:24:18;;;;;;-1:-1:-1;616:24:18;;563:29;;;635:10001:16;563:29:18;;635:10001:16;563:29:18;;;;;;635:10001:16;563:29:18;;;:::i;:::-;;;635:10001:16;;;;;563:29:18;;;;;;-1:-1:-1;563:29:18;;510:28;;;635:10001:16;510:28:18;;635:10001:16;510:28:18;;;;;;635:10001:16;510:28:18;;;:::i;:::-;;;635:10001:16;;;;;510:28:18;;;;;;-1:-1:-1;510:28:18;;456:29;;;635:10001:16;456:29:18;;635:10001:16;456:29:18;;;;;;635:10001:16;456:29:18;;;:::i;:::-;;;635:10001:16;;;;;456:29:18;;;;;;-1:-1:-1;456:29:18;;410:20;;;635:10001:16;410:20:18;;635:10001:16;410:20:18;;;;;;635:10001:16;410:20:18;;;:::i;:::-;;;635:10001:16;;;;;410:20:18;;;;;;-1:-1:-1;410:20:18;;635:10001:16;;;;;;;;;;;;;910:28;635:10001;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;635:10001:16;;;;;;-1:-1:-1;;;;;635:10001:16;;1772:22;635:10001;;;1772:22;635:10001;;;;;;;;;;;;;;;;;;;1072:30;635:10001;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;635:10001:16;;;;;;:::o;:::-;650:18:18;635:10001:16;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;:::o;:::-;-1:-1:-1;;;;;635:10001:16;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;:::o;:::-;-1:-1:-1;;;;;635:10001:16;;;;;;-1:-1:-1;;635:10001:16;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;:::o;:::-;4342:11;635:10001;;;;;;;;4342:11;-1:-1:-1;635:10001:16;;;;;-1:-1:-1;635:10001:16;:::o;:::-;;;;;;;;;;;;;4513:24;635:10001;;;;;;;;4513:24;-1:-1:-1;635:10001:16;;;;;-1:-1:-1;635:10001:16;:::o;:::-;;;;;;;;-1:-1:-1;635:10001:16;;;-1:-1:-1;635:10001:16;;;;;-1:-1:-1;635:10001:16;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;635:10001:16;;;;-1:-1:-1;635:10001:16;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;635:10001:16;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:0:-;1273:6;635:10001:16;-1:-1:-1;;;;;635:10001:16;719:10:6;1422:23:0;635:10001:16;;1359:130:0:o;635:10001:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;635:10001:16;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;635:10001:16;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;635:10001:16;;;;;4513:24;635:10001;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;4513:24;635:10001;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;635:10001:16;;;;;;;;;;;;;;4513:24;635:10001;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;:::o;:::-;;;;;;;;;;;;1355:203:4;635:10001:16;;-1:-1:-1;;;1482:68:4;;;;;;-1:-1:-1;;;;;635:10001:16;;;1482:68:4;;;635:10001:16;;;;;;;;;;;;;;;;1482:68:4;;;;;635:10001:16;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;5535:69:5;635:10001:16;-1:-1:-1;635:10001:16;;;;;;;;;;;:::i;:::-;1482:68:4;635:10001:16;;;;;;;5487:31:5;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;635:10001:16;;5728:22:4;;;:56;;;;;1355:203;635:10001:16;;;;;1355:203:4:o;635:10001:16:-;;;-1:-1:-1;;;635:10001:16;;1482:68:4;635:10001:16;;;;;1482:68:4;635:10001:16;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;5728:56:4;5754:30;;;1482:68;5754:30;;;;;;;;:::i;:::-;5728:56;;;;635:10001:16;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;635:10001:16;;;;:::o;:::-;;;:::o;7671:628:5:-;;;;7875:418;;;635:10001:16;;;7906:22:5;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;635:10001:16;;8201:17:5;:::o;635:10001:16:-;;;-1:-1:-1;;;635:10001:16;;;;;;;;;;;;;;;;;;;;7875:418:5;635:10001:16;;;;-1:-1:-1;8980:21:5;:17;;9152:142;;;;;;;8976:379;635:10001:16;;-1:-1:-1;;;9324:20:5;;635:10001:16;9324:20:5;;;635:10001:16;;;;;;;;;;;:::i;:::-;9324:20:5;;;635:10001:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;635:10001:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;;-1:-1:-1;635:10001:16;;-1:-1:-1;635:10001:16;;-1:-1:-1;635:10001:16;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;6689:734::-;;;;;635:10001;;;;;;;;;;7052:16;635:10001;;;;;;;;;;;;;;;7034:144;;635:10001;7052:16;7034:144;;635:10001;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;7034:144:16;;;;;;;;;;;;;-1:-1:-1;;;;;7034:144:16;;;6689:734;635:10001;;;;;7219:79;;635:10001;;;;;7219:79;;635:10001;;;;;;;;;;;;7317:15;635:10001;;7362:54;;;;6689:734;:::o;635:10001::-;;-1:-1:-1;;;635:10001:16;;;7052:16;635:10001;;;;;;;;-1:-1:-1;;;635:10001:16;;;;;;;7034:144;;;;;;;;;;;;;;;;;;:::i;:::-;;;635:10001;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7034:144;;;;;;;;;635:10001;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;-1:-1:-1;635:10001:16;-1:-1:-1;;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;635:10001:16;;;;;;;;;;-1:-1:-1;635:10001:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2242600","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptRequest(uint256,address,bytes,address,bytes32)":"infinite","allRequests(uint256)":"17672","allRequestsPrivate(uint256)":"infinite","changeDaiToken(address)":"26893","changeMuseToken(address)":"26651","changeUsersModule(address)":"26981","changeVault(address)":"26717","changeVerifier(address)":"27025","contractCounter()":"2261","createRequest((bytes32,uint256,uint256,address,bool,uint256,uint8),bytes,address,bytes32)":"infinite","daiToken()":"2620","getRequestForAddress(bytes32)":"infinite","getRequests()":"infinite","museToken()":"2746","owner()":"2463","removeRequest(uint256,bytes,address,bytes32)":"infinite","renounceOwnership()":"28175","requests(bytes32,uint256)":"17735","transferOwnership(address)":"28615","usersMouduleContract()":"2598","vaultContract()":"2334","verifierContract()":"2708"},"internal":{"_sismoVerify(bytes memory,address,bytes32)":"infinite"}},"methodIdentifiers":{"acceptRequest(uint256,address,bytes,address,bytes32)":"346207b6","allRequests(uint256)":"9bf4ec2f","allRequestsPrivate(uint256)":"8416e304","changeDaiToken(address)":"9c673fe5","changeMuseToken(address)":"0f3cd888","changeUsersModule(address)":"c4bb77d0","changeVault(address)":"60e232a9","changeVerifier(address)":"cf04fb94","contractCounter()":"067bd3b4","createRequest((bytes32,uint256,uint256,address,bool,uint256,uint8),bytes,address,bytes32)":"c81ac646","daiToken()":"be22f546","getRequestForAddress(bytes32)":"a357427d","getRequests()":"8813ce12","museToken()":"f77800e5","owner()":"8da5cb5b","removeRequest(uint256,bytes,address,bytes32)":"97910036","renounceOwnership()":"715018a6","requests(bytes32,uint256)":"9655e6d8","transferOwnership(address)":"f2fde38b","usersMouduleContract()":"b0413770","vaultContract()":"2274346b","verifierContract()":"cf695688"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usersMouduleContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifierContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"user\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Structures.BayRequest\",\"name\":\"\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"RequestAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"user\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Structures.BayRequest\",\"name\":\"\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"acceptRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRequests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRequestsPrivate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"vaultIdSeller\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sellerResponse\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"vaultIdBuyer\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"buyerTo\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"buyerNonce\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daiToken\",\"type\":\"address\"}],\"name\":\"changeDaiToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_museToken\",\"type\":\"address\"}],\"name\":\"changeMuseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usersModule\",\"type\":\"address\"}],\"name\":\"changeUsersModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"changeVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"internalType\":\"struct Structures.BayRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"createRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"internalType\":\"struct Structures.BayRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_user\",\"type\":\"bytes32\"}],\"name\":\"getRequestForAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"internalType\":\"struct Structures.BayRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"internalType\":\"struct Structures.BayRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"museToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sismoConnectResponse\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"}],\"name\":\"removeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"request\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"postAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersMouduleContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifierContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/layer/MecenateBay.sol\":\"MecenateBay\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\",\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce,\\n        Structures.Tokens,\\n        uint256 _amount\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function owner() external view returns (bytes32);\\n\\n    function version() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd8497a7a697e4a734c97d5342b085f7eb0d0d64379ae0ab87b8b600521e4c638\"},\"contracts/interfaces/IMecenateUsers.sol\":{\"content\":\"pragma solidity 0.8.19;\\r\\nimport \\\"../library/Structures.sol\\\";\\r\\n\\r\\ninterface IMecenateUsers {\\r\\n    function checkifUserExist(bytes32 vaultId) external view returns (bool);\\r\\n\\r\\n    function getUserData(\\r\\n        address user\\r\\n    ) external view returns (Structures.User memory);\\r\\n\\r\\n    function getUserCount() external view returns (uint256);\\r\\n\\r\\n    function getUserAt(uint256 index) external view returns (address);\\r\\n\\r\\n    function getUserVaultIdAt(uint256 index) external view returns (bytes32);\\r\\n}\\r\\n\",\"keccak256\":\"0xcd2b91f5bebd5c880ac937b181771a0a722a9a71ff93c783da3c63137179a042\"},\"contracts/interfaces/IMecenateVerifier.sol\":{\"content\":\"pragma solidity 0.8.19;\\r\\n\\r\\ninterface IMecenateVerifier {\\r\\n    function sismoVerify(\\r\\n        bytes memory sismoConnectResponse,\\r\\n        address _to,\\r\\n        bytes32 _nonce\\r\\n    ) external view returns (bytes memory, uint256, uint256, bytes memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x46733b039d06e66a1f438c4fcc490eea06ed1ba2ddff7d5a0059d9e799f03d8d\"},\"contracts/layer/MecenateBay.sol\":{\"content\":\"/**\\n * @title MecenateBay\\n * @dev This contract manages the creation and acceptance of requests for Mecenate feeds. It also verifies user identity using the Sismo protocol.\\n */\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/IMecenateVerifier.sol\\\";\\nimport \\\"../library/Structures.sol\\\";\\nimport \\\"../modules/FeedViewer.sol\\\";\\nimport \\\"../interfaces/IMecenateUsers.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract MecenateBay is Ownable, FeedViewer {\\n    using SafeERC20 for IERC20;\\n\\n    Structures.BayRequest[] public allRequests;\\n\\n    Structures.BayRequestPrivate[] public allRequestsPrivate;\\n\\n    address public usersMouduleContract;\\n\\n    address public verifierContract;\\n\\n    address public vaultContract;\\n\\n    address public museToken;\\n\\n    address public daiToken;\\n\\n    mapping(bytes32 => Structures.BayRequest[]) public requests;\\n\\n    uint256 public contractCounter;\\n\\n    mapping(uint256 => bytes) private sismoResponseMapping;\\n\\n    event RequestCreated(\\n        bytes32 indexed user,\\n        Structures.BayRequest,\\n        uint256 indexed index\\n    );\\n\\n    event RequestAccepted(\\n        bytes32 indexed user,\\n        Structures.BayRequest,\\n        uint256 indexed index\\n    );\\n\\n    constructor(\\n        address _usersMouduleContract,\\n        address _verifierContract,\\n        address _vaultContract\\n    ) {\\n        usersMouduleContract = _usersMouduleContract;\\n        verifierContract = _verifierContract;\\n        vaultContract = _vaultContract;\\n    }\\n\\n    function changeMuseToken(address _museToken) external onlyOwner {\\n        museToken = _museToken;\\n    }\\n\\n    function changeDaiToken(address _daiToken) external onlyOwner {\\n        daiToken = _daiToken;\\n    }\\n\\n    function createRequest(\\n        Structures.BayRequest memory request,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public payable returns (Structures.BayRequest memory) {\\n        if (request.tokenId == Structures.Tokens.NaN) {\\n            require(msg.value > 0, \\\"BAY:payment is not enough\\\");\\n        } else if (request.tokenId == Structures.Tokens.DAI) {\\n            IERC20(daiToken).safeTransferFrom(\\n                msg.sender,\\n                address(this),\\n                request.payment\\n            );\\n        } else if (request.tokenId == Structures.Tokens.MUSE) {\\n            IERC20(museToken).safeTransferFrom(\\n                msg.sender,\\n                address(this),\\n                request.payment\\n            );\\n        }\\n\\n        require(request.payment > 0, \\\"BAY:payment is not enough\\\");\\n\\n        (bytes memory vaultId, , , ) = _sismoVerify(\\n            sismoConnectResponse,\\n            _to,\\n            _nonce\\n        );\\n\\n        bytes32 encryptedVaultId = keccak256(vaultId);\\n\\n        require(\\n            IMecenateUsers(usersMouduleContract).checkifUserExist(\\n                keccak256(vaultId)\\n            ),\\n            \\\"user does not exist\\\"\\n        );\\n\\n        require(request.stake > 0, \\\"BAY:stake is not enough\\\");\\n\\n        require(request.payment == msg.value, \\\"BAY:payment is not enough\\\");\\n\\n        require(request.payment > 0, \\\"BAY:payment is not enough\\\");\\n\\n        requests[encryptedVaultId].push(request);\\n\\n        allRequests.push(request);\\n\\n        allRequestsPrivate.push(\\n            Structures.BayRequestPrivate({\\n                vaultIdSeller: \\\"0x00\\\",\\n                sellerResponse: \\\"0x00\\\",\\n                vaultIdBuyer: vaultId,\\n                buyerResponse: sismoConnectResponse,\\n                buyerTo: _to,\\n                buyerNonce: _nonce\\n            })\\n        );\\n\\n        contractCounter++;\\n\\n        emit RequestCreated(encryptedVaultId, request, allRequests.length - 1);\\n    }\\n\\n    function acceptRequest(\\n        uint256 index,\\n        address _feed,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public {\\n        (bytes memory vaultId, , , ) = _sismoVerify(\\n            sismoConnectResponse,\\n            _to,\\n            _nonce\\n        );\\n\\n        bytes32 encryptedVaultId = keccak256(vaultId);\\n\\n        Structures.Feed memory feed = _getFeedInfo(_feed);\\n\\n        require(\\n            allRequests[index].payment >= feed.paymentRequested,\\n            \\\"BAY:payment is not the same of the feed\\\"\\n        );\\n\\n        require(\\n            feed.stakeRequested >= allRequests[index].stake,\\n            \\\"BAY:stake is not the same of the feed\\\"\\n        );\\n\\n        require(\\n            IMecenateUsers(usersMouduleContract).checkifUserExist(\\n                encryptedVaultId\\n            ),\\n            \\\"BAY:user does not exist\\\"\\n        );\\n\\n        allRequestsPrivate.push(\\n            Structures.BayRequestPrivate({\\n                vaultIdSeller: vaultId,\\n                sellerResponse: sismoConnectResponse,\\n                vaultIdBuyer: allRequestsPrivate[index].vaultIdBuyer,\\n                buyerResponse: allRequestsPrivate[index].buyerResponse,\\n                buyerTo: allRequestsPrivate[index].buyerTo,\\n                buyerNonce: allRequestsPrivate[index].buyerNonce\\n            })\\n        );\\n\\n        if (allRequests[index].tokenId != Structures.Tokens.NaN) {\\n            if (allRequests[index].tokenId == Structures.Tokens.DAI) {\\n                IERC20(daiToken).approve(\\n                    msg.sender,\\n                    allRequests[index].payment\\n                );\\n            } else if (allRequests[index].tokenId == Structures.Tokens.MUSE) {\\n                IERC20(museToken).approve(\\n                    msg.sender,\\n                    allRequests[index].payment\\n                );\\n            }\\n\\n            IMecenateFeed(_feed).acceptPost{value: 0}(\\n                allRequestsPrivate[index].buyerResponse,\\n                allRequestsPrivate[index].buyerTo,\\n                allRequestsPrivate[index].buyerNonce,\\n                allRequests[index].tokenId,\\n                allRequests[index].payment\\n            );\\n        } else {\\n            IMecenateFeed(_feed).acceptPost{value: allRequests[index].payment}(\\n                allRequestsPrivate[index].buyerResponse,\\n                allRequestsPrivate[index].buyerTo,\\n                allRequestsPrivate[index].buyerNonce,\\n                allRequests[index].tokenId,\\n                allRequests[index].payment\\n            );\\n        }\\n\\n        allRequests[index].accepted = true;\\n\\n        allRequests[index].postAddress = _feed;\\n\\n        allRequests[index].postCount = feed.postCount;\\n\\n        emit RequestAccepted(encryptedVaultId, allRequests[index], index);\\n    }\\n\\n    function _sismoVerify(\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) internal view returns (bytes memory, uint256, uint256, bytes memory) {\\n        (\\n            bytes memory vaultId,\\n            uint256 twitterId,\\n            uint256 telegramId,\\n            bytes memory signedMessage\\n        ) = IMecenateVerifier(verifierContract).sismoVerify(\\n                sismoConnectResponse,\\n                _to,\\n                _nonce\\n            );\\n\\n        (address to, bytes32 nonce) = abi.decode(\\n            signedMessage,\\n            (address, bytes32)\\n        );\\n\\n        require(_nonce == nonce, \\\"Not Same Nonce\\\");\\n\\n        return (vaultId, twitterId, telegramId, signedMessage);\\n    }\\n\\n    function getRequests()\\n        public\\n        view\\n        returns (Structures.BayRequest[] memory)\\n    {\\n        return allRequests;\\n    }\\n\\n    function getRequestForAddress(\\n        bytes32 _user\\n    ) public view returns (Structures.BayRequest[] memory) {\\n        return requests[_user];\\n    }\\n\\n    // remov\\u00e9the request and refund the user delete the array and move the last element to the index\\n    function removeRequest(\\n        uint256 index,\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce\\n    ) public {\\n        (\\n            bytes memory vaultId,\\n            uint256 twitterId,\\n            uint256 telegramId,\\n            bytes memory signedMessage\\n        ) = _sismoVerify(sismoConnectResponse, _to, _nonce);\\n\\n        bytes32 encryptedVaultId = keccak256(vaultId);\\n\\n        require(\\n            encryptedVaultId ==\\n                keccak256(allRequestsPrivate[index].vaultIdBuyer),\\n            \\\"BAY:you are not the buyer\\\"\\n        );\\n\\n        require(\\n            allRequests[index].accepted == false,\\n            \\\"BAY:request is already accepted\\\"\\n        );\\n\\n        Structures.BayRequest memory requestToRemove = allRequests[index];\\n\\n        //  send eth with data to the vaultctx\\n        (bool _result, ) = vaultContract.call{value: requestToRemove.payment}(\\n            sismoConnectResponse\\n        );\\n\\n        require(_result, \\\"BAY:Vault call failed\\\");\\n\\n        // Remove from allRequests array\\n        uint256 lastIndex = allRequests.length - 1;\\n        if (index < lastIndex) {\\n            allRequests[index] = allRequests[lastIndex];\\n        }\\n        allRequests.pop();\\n\\n        // Remove from allRequestsPrivate array\\n        uint256 lastIndexPrivate = allRequestsPrivate.length - 1;\\n        if (index < lastIndexPrivate) {\\n            allRequestsPrivate[index] = allRequestsPrivate[lastIndexPrivate];\\n        }\\n        allRequestsPrivate.pop();\\n\\n        // Remove from requests mapping\\n        for (uint256 i = 0; i < requests[encryptedVaultId].length; i++) {\\n            if (\\n                requests[encryptedVaultId][i].payment ==\\n                requestToRemove.payment &&\\n                requests[encryptedVaultId][i].stake == requestToRemove.stake &&\\n                requests[encryptedVaultId][i].postAddress ==\\n                requestToRemove.postAddress &&\\n                requests[encryptedVaultId][i].postCount ==\\n                requestToRemove.postCount\\n            ) {\\n                uint256 lastIndexSender = requests[encryptedVaultId].length - 1;\\n                if (i < lastIndexSender) {\\n                    requests[encryptedVaultId][i] = requests[encryptedVaultId][\\n                        lastIndexSender\\n                    ];\\n                }\\n                requests[encryptedVaultId].pop();\\n                break;\\n            }\\n        }\\n    }\\n\\n    function changeVault(address _vault) external onlyOwner {\\n        vaultContract = _vault;\\n    }\\n\\n    function changeVerifier(address _verifier) external onlyOwner {\\n        verifierContract = _verifier;\\n    }\\n\\n    function changeUsersModule(address _usersModule) external onlyOwner {\\n        usersMouduleContract = _usersModule;\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xf260a1bb62ae57620d016ded8f81337fbdbeeb415c465ee699912f5740aaf958\",\"license\":\"MIT\"},\"contracts/library/Structures.sol\":{\"content\":\"/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address router;\\n        bytes encodedSymKey;\\n        bytes lastMessageForBuyer;\\n        bytes lastMessageForSeller;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettingPrivate {\\n        bytes vaultIdSeller;\\n        uint256 sellerTwitterId;\\n        uint256 sellerTelegramId;\\n        bytes vaultIdBuyer;\\n        uint256 buyerTwitterId;\\n        uint256 buyerTelegramId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        bytes32 vaultId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        bytes32 operator;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes32 request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\\n     */\\n    struct BayRequestPrivate {\\n        bytes vaultIdSeller;\\n        bytes sellerResponse;\\n        bytes vaultIdBuyer;\\n        bytes buyerResponse;\\n        address buyerTo;\\n        bytes32 buyerNonce;\\n    }\\n}\\n\",\"keccak256\":\"0x8b2807cacc112844ce06aee7c3ab099d50703cfb88f550ddf563ff0065b60c07\"},\"contracts/modules/FeedViewer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../library/Structures.sol\\\";\\nimport \\\"../interfaces/IMecenateFeed.sol\\\";\\n\\ncontract FeedViewer {\\n    function _getFeedInfo(\\n        address feed\\n    ) internal view returns (Structures.Feed memory) {\\n        Structures.Feed memory f;\\n\\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\\n\\n        f.contractAddress = feed;\\n        f.operator = mecenateFeed.owner();\\n        f.sellerStake = mecenateFeed.getSellerStake();\\n        f.buyerStake = mecenateFeed.getBuyerStake();\\n        f.totalStake = mecenateFeed.getTotalStaked();\\n        f.postCount = mecenateFeed.postCount();\\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\\n        f.stakeRequested = mecenateFeed.getStakeRequested();\\n        f.status = mecenateFeed.getStatus();\\n        f.tokenId = mecenateFeed.getTokenId();\\n        f.version = mecenateFeed.version();\\n\\n        return f;\\n    }\\n\\n    function _getFeedsInfo(\\n        address[] memory _feeds\\n    ) internal view returns (Structures.Feed[] memory) {\\n        uint256 len = _feeds.length;\\n        Structures.Feed[] memory f = new Structures.Feed[](len);\\n\\n        for (uint256 i = 0; i < len; i++) {\\n            f[i] = _getFeedInfo(_feeds[i]);\\n        }\\n\\n        return f;\\n    }\\n}\\n\",\"keccak256\":\"0xc1fc8c5999cb6aadf168b958d93d67755858f33e45d839f4b2a73c3fe31e4978\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":4068,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"allRequests","offset":0,"slot":"1","type":"t_array(t_struct(BayRequest)5088_storage)dyn_storage"},{"astId":4072,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"allRequestsPrivate","offset":0,"slot":"2","type":"t_array(t_struct(BayRequestPrivate)5101_storage)dyn_storage"},{"astId":4074,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"usersMouduleContract","offset":0,"slot":"3","type":"t_address"},{"astId":4076,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"verifierContract","offset":0,"slot":"4","type":"t_address"},{"astId":4078,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"vaultContract","offset":0,"slot":"5","type":"t_address"},{"astId":4080,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"museToken","offset":0,"slot":"6","type":"t_address"},{"astId":4082,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"daiToken","offset":0,"slot":"7","type":"t_address"},{"astId":4088,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"requests","offset":0,"slot":"8","type":"t_mapping(t_bytes32,t_array(t_struct(BayRequest)5088_storage)dyn_storage)"},{"astId":4090,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"contractCounter","offset":0,"slot":"9","type":"t_uint256"},{"astId":4094,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"sismoResponseMapping","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_bytes_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(BayRequest)5088_storage)dyn_storage":{"base":"t_struct(BayRequest)5088_storage","encoding":"dynamic_array","label":"struct Structures.BayRequest[]","numberOfBytes":"32"},"t_array(t_struct(BayRequestPrivate)5101_storage)dyn_storage":{"base":"t_struct(BayRequestPrivate)5101_storage","encoding":"dynamic_array","label":"struct Structures.BayRequestPrivate[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_enum(Tokens)4930":{"encoding":"inplace","label":"enum Structures.Tokens","numberOfBytes":"1"},"t_mapping(t_bytes32,t_array(t_struct(BayRequest)5088_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct Structures.BayRequest[])","numberOfBytes":"32","value":"t_array(t_struct(BayRequest)5088_storage)dyn_storage"},"t_mapping(t_uint256,t_bytes_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_struct(BayRequest)5088_storage":{"encoding":"inplace","label":"struct Structures.BayRequest","members":[{"astId":5074,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"request","offset":0,"slot":"0","type":"t_bytes32"},{"astId":5076,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"payment","offset":0,"slot":"1","type":"t_uint256"},{"astId":5078,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"stake","offset":0,"slot":"2","type":"t_uint256"},{"astId":5080,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"postAddress","offset":0,"slot":"3","type":"t_address"},{"astId":5082,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"accepted","offset":20,"slot":"3","type":"t_bool"},{"astId":5084,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"postCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":5087,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"tokenId","offset":0,"slot":"5","type":"t_enum(Tokens)4930"}],"numberOfBytes":"192"},"t_struct(BayRequestPrivate)5101_storage":{"encoding":"inplace","label":"struct Structures.BayRequestPrivate","members":[{"astId":5090,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"vaultIdSeller","offset":0,"slot":"0","type":"t_bytes_storage"},{"astId":5092,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"sellerResponse","offset":0,"slot":"1","type":"t_bytes_storage"},{"astId":5094,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"vaultIdBuyer","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":5096,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"buyerResponse","offset":0,"slot":"3","type":"t_bytes_storage"},{"astId":5098,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"buyerTo","offset":0,"slot":"4","type":"t_address"},{"astId":5100,"contract":"contracts/layer/MecenateBay.sol:MecenateBay","label":"buyerNonce","offset":0,"slot":"5","type":"t_bytes32"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/library/Structures.sol":{"Structures":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220630be5f40e3f1d5e54cfe8c97df4d7ed42625d03ee6ac2950e5e12dc9a63daff64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xBE5F40E EXTCODEHASH SAR 0x5E SLOAD 0xCF 0xE8 0xC9 PUSH30 0xF4D7ED42625D03EE6AC2950E5E12DC9A63DAFF64736F6C63430008130033 ","sourceMap":"138:3741:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220630be5f40e3f1d5e54cfe8c97df4d7ed42625d03ee6ac2950e5e12dc9a63daff64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xBE5F40E EXTCODEHASH SAR 0x5E SLOAD 0xCF 0xE8 0xC9 PUSH30 0xF4D7ED42625D03EE6AC2950E5E12DC9A63DAFF64736F6C63430008130033 ","sourceMap":"138:3741:17:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/library/Structures.sol\":\"Structures\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/library/Structures.sol\":{\"content\":\"/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address router;\\n        bytes encodedSymKey;\\n        bytes lastMessageForBuyer;\\n        bytes lastMessageForSeller;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettingPrivate {\\n        bytes vaultIdSeller;\\n        uint256 sellerTwitterId;\\n        uint256 sellerTelegramId;\\n        bytes vaultIdBuyer;\\n        uint256 buyerTwitterId;\\n        uint256 buyerTelegramId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        bytes32 vaultId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        bytes32 operator;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes32 request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\\n     */\\n    struct BayRequestPrivate {\\n        bytes vaultIdSeller;\\n        bytes sellerResponse;\\n        bytes vaultIdBuyer;\\n        bytes buyerResponse;\\n        address buyerTo;\\n        bytes32 buyerNonce;\\n    }\\n}\\n\",\"keccak256\":\"0x8b2807cacc112844ce06aee7c3ab099d50703cfb88f550ddf563ff0065b60c07\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/modules/FeedViewer.sol":{"FeedViewer":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea264697066735822122030c29d3381bada0b4ea16bb837bc1b42940d60c010e7d69a0966af7c96f9ada164736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xC2 SWAP14 CALLER DUP2 0xBA 0xDA SIGNEXTEND 0x4E LOG1 PUSH12 0xB837BC1B42940D60C010E7D6 SWAP11 MULMOD PUSH7 0xAF7C96F9ADA164 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"136:1138:18:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122030c29d3381bada0b4ea16bb837bc1b42940d60c010e7d69a0966af7c96f9ada164736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xC2 SWAP14 CALLER DUP2 0xBA 0xDA SIGNEXTEND 0x4E LOG1 PUSH12 0xB837BC1B42940D60C010E7D6 SWAP11 MULMOD PUSH7 0xAF7C96F9ADA164 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"136:1138:18:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"69","totalCost":"11669"},"internal":{"_getFeedInfo(address)":"infinite","_getFeedsInfo(address[] memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/FeedViewer.sol\":\"FeedViewer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        bytes memory sismoConnectResponse,\\n        address _to,\\n        bytes32 _nonce,\\n        Structures.Tokens,\\n        uint256 _amount\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function owner() external view returns (bytes32);\\n\\n    function version() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd8497a7a697e4a734c97d5342b085f7eb0d0d64379ae0ab87b8b600521e4c638\"},\"contracts/library/Structures.sol\":{\"content\":\"/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address router;\\n        bytes encodedSymKey;\\n        bytes lastMessageForBuyer;\\n        bytes lastMessageForSeller;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address verifierContract;\\n        address vaultContract;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettingPrivate {\\n        bytes vaultIdSeller;\\n        uint256 sellerTwitterId;\\n        uint256 sellerTelegramId;\\n        bytes vaultIdBuyer;\\n        uint256 buyerTwitterId;\\n        uint256 buyerTelegramId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        bytes32 vaultId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        bytes32 operator;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes32 request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the private settings of a bay request on the Mecenate platform.\\n     */\\n    struct BayRequestPrivate {\\n        bytes vaultIdSeller;\\n        bytes sellerResponse;\\n        bytes vaultIdBuyer;\\n        bytes buyerResponse;\\n        address buyerTo;\\n        bytes32 buyerNonce;\\n    }\\n}\\n\",\"keccak256\":\"0x8b2807cacc112844ce06aee7c3ab099d50703cfb88f550ddf563ff0065b60c07\"},\"contracts/modules/FeedViewer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../library/Structures.sol\\\";\\nimport \\\"../interfaces/IMecenateFeed.sol\\\";\\n\\ncontract FeedViewer {\\n    function _getFeedInfo(\\n        address feed\\n    ) internal view returns (Structures.Feed memory) {\\n        Structures.Feed memory f;\\n\\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\\n\\n        f.contractAddress = feed;\\n        f.operator = mecenateFeed.owner();\\n        f.sellerStake = mecenateFeed.getSellerStake();\\n        f.buyerStake = mecenateFeed.getBuyerStake();\\n        f.totalStake = mecenateFeed.getTotalStaked();\\n        f.postCount = mecenateFeed.postCount();\\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\\n        f.stakeRequested = mecenateFeed.getStakeRequested();\\n        f.status = mecenateFeed.getStatus();\\n        f.tokenId = mecenateFeed.getTokenId();\\n        f.version = mecenateFeed.version();\\n\\n        return f;\\n    }\\n\\n    function _getFeedsInfo(\\n        address[] memory _feeds\\n    ) internal view returns (Structures.Feed[] memory) {\\n        uint256 len = _feeds.length;\\n        Structures.Feed[] memory f = new Structures.Feed[](len);\\n\\n        for (uint256 i = 0; i < len; i++) {\\n            f[i] = _getFeedInfo(_feeds[i]);\\n        }\\n\\n        return f;\\n    }\\n}\\n\",\"keccak256\":\"0xc1fc8c5999cb6aadf168b958d93d67755858f33e45d839f4b2a73c3fe31e4978\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}