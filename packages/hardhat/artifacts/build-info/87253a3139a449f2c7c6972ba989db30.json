{"id":"87253a3139a449f2c7c6972ba989db30","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n// edited by Mecenate\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\nimport \"./IPoolInitializer.sol\";\nimport \"./IERC721Permit.sol\";\nimport \"./IPeripheryPayments.sol\";\nimport \"./IPeripheryImmutableState.sol\";\nimport \"../libraries/PoolAddress.sol\";\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(\n        uint256 indexed tokenId,\n        uint128 liquidity,\n        uint256 amount0,\n        uint256 amount1\n    );\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(\n        uint256 indexed tokenId,\n        uint128 liquidity,\n        uint256 amount0,\n        uint256 amount1\n    );\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(\n        uint256 indexed tokenId,\n        address recipient,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(\n        uint256 tokenId\n    )\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(\n        MintParams calldata params\n    )\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(\n        IncreaseLiquidityParams calldata params\n    )\n        external\n        payable\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(\n        DecreaseLiquidityParams calldata params\n    ) external payable returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        CollectParams calldata params\n    ) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n// edited by Mecenate\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH =\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(\n        address factory,\n        PoolKey memory key\n    ) internal pure returns (address payable pool) {\n        require(key.token0 < key.token1);\n        pool = payable( // Aggiunta di \"payable\" qui\n            address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                hex\"ff\",\n                                factory,\n                                keccak256(\n                                    abi.encode(key.token0, key.token1, key.fee)\n                                ),\n                                POOL_INIT_CODE_HASH\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    }\n}\n"},"contracts/factories/MecenateFeedFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"../interfaces/IMecenateUsers.sol\";\nimport \"../interfaces/IMecenateTreasury.sol\";\nimport \"../modules/FeedViewer.sol\";\n\ncontract MecenateFeedFactory is Ownable, FeedViewer {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    EnumerableSet.AddressSet internal feeds;\n\n    Structures.FactorySettings internal settings;\n\n    bytes internal feedByteCode;\n\n    mapping(uint8 => uint24) internal routerFee;\n\n    mapping(address => EnumerableSet.AddressSet) internal feedStore;\n\n    mapping(address => bool) internal createdContracts;\n\n    bool public burnEnabled = false;\n\n    uint256 public contractCounter;\n\n    event FeedCreated(address indexed addr);\n\n    uint8 public major;\n    uint8 public minor;\n    uint8 public patch;\n\n    function treasuryContract() external view returns (address) {\n        return settings.treasuryContract;\n    }\n\n    function easSchema() external view returns (bytes32) {\n        return settings.easSchema;\n    }\n\n    function easContract() external view returns (address) {\n        return settings.easContract;\n    }\n\n    function daiToken() external view returns (address) {\n        return settings.daiToken;\n    }\n\n    function wethToken() external view returns (address) {\n        return settings.wethToken;\n    }\n\n    function museToken() external view returns (address) {\n        return settings.museToken;\n    }\n\n    function router() external view returns (address) {\n        return settings.router;\n    }\n\n    function getRouterFee(uint8 tokenId) external view returns (uint24) {\n        return routerFee[tokenId];\n    }\n\n    function setRouterFee(uint8 tokenId, uint24 fee) external onlyOwner {\n        routerFee[tokenId] = fee;\n    }\n\n    function setBurnEnabled(bool newBurnEnabled) external onlyOwner {\n        burnEnabled = newBurnEnabled;\n    }\n\n    function isFeed(address newFeed) external view returns (bool) {\n        return createdContracts[newFeed];\n    }\n\n    function changeMultipleSettings(\n        address treasury,\n        address usersModule,\n        address newEasContract,\n        bytes32 newEasSchema,\n        address wethTokenAddr,\n        address museTokenAddr,\n        address daiTokenAddr,\n        address routerAddr\n    ) external onlyOwner {\n        settings.treasuryContract = treasury;\n        settings.usersModuleContract = usersModule;\n        settings.easContract = newEasContract;\n        settings.easSchema = newEasSchema;\n        settings.wethToken = wethTokenAddr;\n        settings.museToken = museTokenAddr;\n        settings.daiToken = daiTokenAddr;\n        settings.router = routerAddr;\n    }\n\n    function setFeedByteCode(\n        bytes memory newByteCode,\n        uint8 newMajor,\n        uint8 newMinor,\n        uint8 newPatch\n    ) external onlyOwner {\n        major = newMajor;\n        minor = newMinor;\n        patch = newPatch;\n        feedByteCode = newByteCode;\n    }\n\n    function buildFeed() external payable returns (address) {\n        bytes memory constructorArguments = abi.encode(\n            msg.sender,\n            settings.usersModuleContract,\n            address(this),\n            major,\n            minor,\n            patch\n        );\n\n        require(\n            IMecenateUsers(settings.usersModuleContract).checkifUserExist(\n                msg.sender\n            ),\n            \"user does not exist\"\n        );\n\n        require(msg.value >= getCreationFee(), \"NOT_ENOUGH_FEE\");\n\n        (bool _result, ) = payable(settings.treasuryContract).call{\n            value: msg.value\n        }(\"\");\n\n        require(_result, \"CALL_FAILED\");\n\n        contractCounter++;\n\n        address addr;\n\n        bytes memory tempByteCode = feedByteCode; // Carico la variabile di storage in una variabile locale\n\n        // Concatena il bytecode e gli argomenti del costruttore\n        bytes memory bytecodeWithConstructor = abi.encodePacked(\n            tempByteCode,\n            constructorArguments\n        );\n\n        // Deploy del contratto con gli argomenti del costruttore\n        assembly {\n            addr := create(\n                0,\n                add(bytecodeWithConstructor, 0x20),\n                mload(bytecodeWithConstructor)\n            )\n            if iszero(extcodesize(addr)) {\n                revert(0, 0)\n            }\n        }\n\n        address feed = addr;\n\n        feeds.add(address(feed));\n\n        feedStore[msg.sender].add(address(feed));\n\n        createdContracts[address(feed)] = true;\n\n        emit FeedCreated(address(feed));\n\n        return address(feed);\n    }\n\n    function getFeeds() external view returns (address[] memory) {\n        return feeds.values();\n    }\n\n    function getFeedsOwned(\n        address user\n    ) external view returns (address[] memory) {\n        return feedStore[user].values();\n    }\n\n    function getFeedsInfoOwned(\n        address user\n    ) external view returns (Structures.Feed[] memory) {\n        return _getFeedsInfo(feedStore[user].values());\n    }\n\n    function getFeedInfo(\n        address user\n    ) external view returns (Structures.Feed memory) {\n        return _getFeedInfo(user);\n    }\n\n    function getFeedsInfo() external view returns (Structures.Feed[] memory) {\n        return _getFeedsInfo(feeds.values());\n    }\n\n    function isContractCreated(\n        address contractAddress\n    ) external view returns (bool) {\n        return createdContracts[contractAddress];\n    }\n\n    function getCreationFee() internal view returns (uint256) {\n        return IMecenateTreasury(settings.treasuryContract).fixedFee();\n    }\n}\n"},"contracts/interfaces/IMecenateFeed.sol":{"content":"pragma solidity 0.8.19;\n\nimport \"../library/Structures.sol\";\n\ninterface IMecenateFeed {\n    function getPost() external view returns (Structures.Post memory);\n\n    function getTotalStaked() external view returns (uint256);\n\n    function postCount() external view returns (uint256);\n\n    function acceptPost(\n        Structures.Tokens,\n        uint256 _amount,\n        address _funder,\n        address _buyer\n    ) external payable;\n\n    function getSellerStake() external view returns (uint256);\n\n    function getBuyerStake() external view returns (uint256);\n\n    function getPaymentRequested() external view returns (uint256);\n\n    function getStakeRequested() external view returns (uint256);\n\n    function getStatus() external view returns (Structures.PostStatus status);\n\n    function getTokenId() external view returns (Structures.Tokens tokenId);\n\n    function getPostId() external view returns (bytes32);\n\n    function getAllPostIds() external view returns (bytes32[] memory);\n\n    function getPostTimestamp(\n        bytes32 postId\n    ) external view returns (Structures.PostTimestamp memory);\n\n    function owner() external view returns (address);\n\n    function version() external view returns (string memory);\n\n    function getEncryptedPost() external view returns (bytes memory);\n}\n"},"contracts/interfaces/IMecenateTreasury.sol":{"content":"pragma solidity 0.8.19;\n\ninterface IMecenateTreasury {\n    function globalFee() external view returns (uint256);\n\n    function fixedFee() external view returns (uint256);\n}\n"},"contracts/interfaces/IMecenateUsers.sol":{"content":"// SPDX-License-Identifier: MIT\n\nimport \"../library/Structures.sol\";\n\ninterface IMecenateUsers {\n    function registerUser(bytes memory metadata) external;\n\n    function getUsers() external view returns (address[] memory);\n\n    function getUserCount() external view returns (uint256);\n\n    function getUserAt(uint256 index) external view returns (address);\n\n    function checkifUserExist(address userAddress) external view returns (bool);\n\n    function getPaginatedUsers(\n        uint256 startIndex,\n        uint256 endIndex\n    ) external view returns (address[] memory);\n\n    function getUserMetadata(\n        address userAddress\n    ) external view returns (Structures.User memory);\n\n    function getUserPublicKey(\n        address userAddress\n    ) external view returns (bytes memory);\n}\n"},"contracts/interfaces/IMUSE.sol":{"content":"pragma solidity 0.8.19;\n\n// import IERC20 from openzeppelin\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IMUSE is IERC20 {\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) external returns (bool);\n\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    ) external returns (bool);\n\n    function mint(uint256 amount) external;\n\n    function burn(uint256 amount) external;\n}\n"},"contracts/library/Structures.sol":{"content":"// SPDX-License-Identifier: MIT\n\n/**\n * @title Structures\n * @dev This library defines various data structures used in the Mecenate platform.\n */\npragma solidity 0.8.19;\n\nlibrary Structures {\n    enum PostStatus {\n        Waiting,\n        Proposed,\n        Accepted,\n        Submitted,\n        Finalized,\n        Punished,\n        Revealed,\n        Renounced\n    }\n\n    enum PostResult {\n        None,\n        Valid,\n        Punished\n    }\n\n    enum Tokens {\n        NaN,\n        MUSE,\n        DAI\n    }\n\n    enum PostType {\n        Text,\n        Image,\n        Video,\n        Audio,\n        File\n    }\n    enum PostDuration {\n        OneDay,\n        ThreeDays,\n        OneWeek,\n        TwoWeeks,\n        OneMonth\n    }\n\n    struct PostTimestamp {\n        PostResult postResult;\n        uint256 creationTimeStamp;\n        uint256 endTimeStamp;\n    }\n\n    struct FeedSettings {\n        uint256 punishmentRatio;\n        uint256 postCount;\n        address usersModuleContract;\n        address factoryContract;\n        address router;\n        string version;\n    }\n\n    struct FactorySettings {\n        address treasuryContract;\n        address usersModuleContract;\n        address easContract;\n        bytes32 easSchema;\n        address museToken;\n        address daiToken;\n        address wethToken;\n        address router;\n    }\n\n    /**\n     * @dev Struct representing a post on the Mecenate platform.\n     */\n    struct Post {\n        User creator;\n        PostData postdata;\n    }\n\n    /**\n     * @dev Struct representing the data of a post on the Mecenate platform.\n     */\n    struct PostData {\n        PostSettings settings;\n        PostEscrow escrow;\n        PostEncryptedData data;\n    }\n\n    /**\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\n     */\n    struct PostEncryptedData {\n        bytes encryptedData;\n        bytes encryptedKey;\n        bytes decryptedData;\n    }\n\n    /**\n     * @dev Struct representing the settings of a post on the Mecenate platform.\n     */\n    struct PostSettings {\n        PostStatus status;\n        PostType postType;\n        uint256 creationTimeStamp;\n        uint256 endTimeStamp;\n        uint256 duration;\n        Tokens tokenId;\n        bytes32 postId;\n    }\n\n    /**\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\n     */\n    struct PostEscrow {\n        address buyer;\n        address seller;\n        uint256 stake;\n        uint256 payment;\n        uint256 punishment;\n        uint256 penalty;\n    }\n\n    /**\n     * @dev Struct representing a user on the Mecenate platform.\n     */\n    struct User {\n        address evmAddress;\n        bytes sismoVaultId;\n        bytes publicKey;\n    }\n\n    /**\n     * @dev Struct representing a feed on the Mecenate platform.\n     */\n    struct Feed {\n        address contractAddress;\n        address owner;\n        uint256 sellerStake;\n        uint256 buyerStake;\n        uint256 totalStake;\n        uint256 postCount;\n        uint256 paymentRequested;\n        uint256 stakeRequested;\n        PostStatus status;\n        Tokens tokenId;\n        string version;\n        bytes32 postId;\n    }\n\n    /**\n     * @dev Struct representing a bay request on the Mecenate platform.\n     */\n    struct BayRequest {\n        bytes request;\n        uint256 payment;\n        uint256 stake;\n        address postAddress;\n        bool accepted;\n        uint256 postCount;\n        Tokens tokenId;\n        address buyerAddress;\n        bytes32 postId;\n    }\n}\n"},"contracts/modules/FeedViewer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"../library/Structures.sol\";\nimport \"../interfaces/IMecenateFeed.sol\";\n\ncontract FeedViewer {\n    function _getFeedInfo(\n        address feed\n    ) internal view returns (Structures.Feed memory) {\n        Structures.Feed memory f;\n\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\n\n        f.contractAddress = feed;\n        f.owner = mecenateFeed.owner();\n        f.sellerStake = mecenateFeed.getSellerStake();\n        f.buyerStake = mecenateFeed.getBuyerStake();\n        f.totalStake = mecenateFeed.getTotalStaked();\n        f.postCount = mecenateFeed.postCount();\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\n        f.stakeRequested = mecenateFeed.getStakeRequested();\n        f.status = mecenateFeed.getStatus();\n        f.tokenId = mecenateFeed.getTokenId();\n        f.version = mecenateFeed.version();\n        f.postId = mecenateFeed.getPostId();\n\n        return f;\n    }\n\n    function _getFeedsInfo(\n        address[] memory _feeds\n    ) internal view returns (Structures.Feed[] memory) {\n        uint256 len = _feeds.length;\n        Structures.Feed[] memory f = new Structures.Feed[](len);\n\n        for (uint256 i = 0; i < len; i++) {\n            f[i] = _getFeedInfo(_feeds[i]);\n        }\n\n        return f;\n    }\n}\n"},"contracts/modules/Swapper.sol":{"content":"/**\n * @title Swapper\n * @dev This contract provides functions for swapping tokens on PancakeSwap and adding liquidity to a token pair.\n */\n// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\";\n\nabstract contract Swapper is Ownable {\n    bool public splitLiquidity;\n\n    ISwapRouter public swapRouter;\n    INonfungiblePositionManager public positionManager;\n    address public native;\n\n    function _giveAllowances() internal {\n        IERC20(address(native)).approve(address(swapRouter), 0);\n        IERC20(address(native)).approve(\n            address(swapRouter),\n            uint256(2 ** 256 - 1)\n        );\n    }\n\n    function customApprove(address token, uint256 amount) external onlyOwner {\n        IERC20(token).approve(address(swapRouter), amount);\n        IERC20(address(token)).approve(\n            address(swapRouter),\n            uint256(2 ** 256 - 1)\n        );\n    }\n\n    function configLiquidityProvider(\n        address nativeAddr,\n        ISwapRouter swapRouterAddr\n    ) external onlyOwner {\n        native = nativeAddr;\n        swapRouter = swapRouterAddr;\n        splitLiquidity = true;\n        _giveAllowances();\n    }\n\n    function setSplitLiqudity(\n        bool _splitLiquidity\n    ) external onlyOwner returns (bool) {\n        splitLiquidity = _splitLiquidity;\n        return true;\n    }\n\n    function swapTokensForTokens(\n        address token1,\n        address token2,\n        uint256 amount,\n        uint24 fee,\n        address receiver\n    ) external onlyOwner returns (uint256) {\n        return _swapTokensForTokens(token1, token2, fee, amount, receiver);\n    }\n\n    function swapTxT(\n        address token1,\n        address token2,\n        uint256 amount,\n        address receiver\n    ) external onlyOwner returns (uint256) {\n        return _swapTokensForTokens(token1, token2, 3000, amount, receiver);\n    }\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint24 fee,\n        uint256 amountA,\n        uint256 amountB,\n        int24 tickLower,\n        int24 tickUpper\n    ) public onlyOwner {\n        _addLiquidity(\n            tokenA,\n            tokenB,\n            fee,\n            amountA,\n            amountB,\n            tickLower,\n            tickUpper\n        );\n    }\n\n    function _swapTokenToETH(\n        address token,\n        uint256 amountIn,\n        uint24 fee\n    ) private returns (uint256) {\n        // Approve tokens for the swap\n        IERC20(token).approve(address(swapRouter), amountIn);\n\n        // Params for the swap\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams(\n                token, // tokenIn\n                native, // tokenOut\n                fee, // fee\n                address(this), // recipient\n                block.timestamp + 10, // deadline\n                amountIn, // amountIn\n                0, // amountOutMinimum\n                0 // sqrtPriceLimitX96\n            );\n\n        // Perform the swap and return the amount received\n        uint256 amountOut = swapRouter.exactInputSingle(params);\n        return amountOut;\n    }\n\n    function _addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint24 fee,\n        uint256 amountA,\n        uint256 amountB,\n        int24 tickLower,\n        int24 tickUpper\n    ) internal {\n        // Approve amounts to positionManager\n        IERC20(tokenA).approve(address(positionManager), amountA);\n        IERC20(tokenB).approve(address(positionManager), amountB);\n\n        // Parameters for adding liquidity\n        INonfungiblePositionManager.MintParams\n            memory params = INonfungiblePositionManager.MintParams(\n                tokenA,\n                tokenB,\n                fee,\n                tickLower,\n                tickUpper,\n                amountA,\n                amountB,\n                0, // amount0Min\n                0, // amount1Min\n                address(this),\n                block.timestamp // Deadline\n            );\n\n        // Add liquidity\n        positionManager.mint(params);\n    }\n\n    function _swapTokensForTokens(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        address receiver\n    ) internal returns (uint256) {\n        // Approve amount to swapRouter\n        IERC20(tokenIn).approve(address(swapRouter), amountIn);\n\n        // Parameters for the swap\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams(\n                tokenIn,\n                tokenOut,\n                fee,\n                receiver,\n                block.timestamp + 10, // Deadline\n                amountIn, // amountIn\n                0, // amountOutMinimum\n                0 // sqrtPriceLimitX96\n            );\n\n        // Perform the swap\n        uint256 amountOut = swapRouter.exactInputSingle(params);\n\n        return amountOut;\n    }\n}\n"},"contracts/treasury/MecenateTreasury.sol":{"content":"/**\n * @title MecenateTreasury\n * @dev This contract handles the treasury of the Mecenate platform, which is responsible for distributing funds to users and collecting fees.\n */\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"../modules/Swapper.sol\";\nimport \"../interfaces/IMecenateUsers.sol\";\nimport \"../interfaces/IMUSE.sol\";\n\ncontract MecenateTreasury is Ownable, Swapper {\n    using SafeERC20 for IERC20;\n\n    uint256 public globalFee = 100;\n\n    uint256 public fixedFee = 0.01 ether;\n\n    uint256 public lastDistributed;\n\n    uint256 public distributableBalance;\n\n    uint256 public ownerFee;\n\n    mapping(address => uint256) public userReward;\n    mapping(address => mapping(address => uint256)) public userRewardERC20;\n    mapping(address => uint256) public distributableERC20Balance;\n\n    function addFunds() external payable {\n        // Aggiungi fondi al contratto e aggiorna il saldo distribuibile\n        distributableBalance += msg.value;\n    }\n\n    function setGlobalFee(uint256 _globalFee) external onlyOwner {\n        globalFee = _globalFee;\n    }\n\n    function setFixedFee(uint256 _fixedFee) external onlyOwner {\n        fixedFee = _fixedFee;\n    }\n\n    function addERC20Funds(address token, uint256 amount) external onlyOwner {\n        distributableERC20Balance[token] += amount;\n    }\n\n    function distribute(address usersContract) external {\n        require(\n            block.timestamp - lastDistributed >= 1 days,\n            \"Can only distribute once a day\"\n        );\n        require(distributableBalance > 0, \"No distributable balance\");\n\n        uint256 fee = (distributableBalance * globalFee) / 10000;\n\n        ownerFee += fee;\n\n        uint256 total = distributableBalance - fee;\n        uint256 userCount = IMecenateUsers(usersContract).getUserCount();\n\n        require(userCount > 0, \"No users to distribute to\");\n\n        uint256 perIdentity = total / userCount;\n\n        for (uint256 i = 0; i < userCount; i++) {\n            address user = IMecenateUsers(usersContract).getUserAt(i);\n            userReward[user] += perIdentity;\n        }\n\n        // Aggiorna le variabili di stato\n        lastDistributed = block.timestamp;\n        distributableBalance = 0; // Azzera il saldo distribuibile\n    }\n\n    function distributeERC20(address token, address usersContract) external {\n        require(\n            distributableERC20Balance[token] > 0,\n            \"No distributable balance\"\n        );\n\n        uint256 fee = (distributableERC20Balance[token] * globalFee) / 10000;\n        ownerFee += fee; // Assuming ownerFee can hold ERC20 as well\n\n        uint256 total = distributableERC20Balance[token] - fee;\n        uint256 userCount = IMecenateUsers(usersContract).getUserCount();\n\n        require(userCount > 0, \"No users to distribute to\");\n\n        uint256 perIdentity = total / userCount;\n\n        for (uint256 i = 0; i < userCount; i++) {\n            address user = IMecenateUsers(usersContract).getUserAt(i);\n            // Implement logic to distribute perIdentity ERC20 tokens to each user\n            // For example: IERC20(token).safeTransfer(userAddress, perIdentity);\n            userRewardERC20[user][token] += perIdentity;\n        }\n\n        // Reset the distributable balance for the token\n        distributableERC20Balance[token] = 0;\n    }\n\n    function setSwapRouter(ISwapRouter swapRouterAddress) external onlyOwner {\n        swapRouter = swapRouterAddress;\n    }\n\n    function takeReward(address receiver) external returns (uint256) {\n        uint256 amountToSend = userReward[msg.sender];\n\n        userReward[msg.sender] = 0;\n\n        // send eth weith data\n        (bool success, ) = payable(receiver).call{value: amountToSend}(\"\");\n\n        require(success, \"Transfer failed.\");\n\n        return amountToSend;\n    }\n\n    function takeRewardERC20(\n        address token,\n        address receiver\n    ) external returns (uint256) {\n        // Similar verification logic as your current takeReward for ETH\n\n        address _user = msg.sender;\n\n        uint256 amountToSend = userRewardERC20[_user][token]; // assuming userReward is now a double mapping\n\n        require(amountToSend > 0, \"No reward available\");\n\n        userRewardERC20[_user][token] = 0; // reset the user's reward to 0\n\n        IERC20(token).safeTransfer(receiver, amountToSend);\n\n        return amountToSend;\n    }\n\n    function getReward(address user) external view returns (uint256) {\n        return userReward[user];\n    }\n\n    function getRewardERC20(\n        address token,\n        address user\n    ) external view returns (uint256) {\n        return userRewardERC20[user][token]; // assuming userReward is now a double mapping\n    }\n\n    // swap token0 to token1 and burn token1\n    function swapAndBurn(\n        address token0,\n        address token1,\n        address token2,\n        uint24 fee,\n        uint24 fee2\n    ) external onlyOwner {\n        uint256 amount = IERC20(token0).balanceOf(address(this));\n        // Approva il token\n        require(\n            IERC20(token0).approve(address(swapRouter), amount),\n            \"Approve failed\"\n        );\n\n        // swap token0 to token1\n        uint256 tokens_bought = _swapTokensForTokens(\n            token0,\n            token1,\n            fee,\n            amount,\n            address(this)\n        );\n\n        require(tokens_bought > 0, \"No tokens bought\");\n\n        // swap token1 to token2\n\n        require(\n            IERC20(token1).approve(address(swapRouter), tokens_bought),\n            \"Approve failed\"\n        );\n\n        uint256 tokens_sold_to_muse = _swapTokensForTokens(\n            token1,\n            token2,\n            fee2,\n            tokens_bought,\n            address(this)\n        );\n\n        IMUSE(token2).burn(tokens_sold_to_muse);\n    }\n\n    function getDistributionBalance() external view returns (uint256) {\n        return distributableBalance;\n    }\n\n    function getDistributionERC20Balance(\n        address token\n    ) external view returns (uint256) {\n        return distributableERC20Balance[token];\n    }\n\n    receive() external payable {\n        // Aggiungi fondi al contratto e aggiorna il saldo distribuibile\n        distributableBalance += msg.value;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMUSE.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMUSE.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateFeed.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateFeed.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IMecenateTreasury.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateTreasury.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/interfaces/IMecenateUsers.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMecenateUsers.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1740],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1741,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1740,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1740],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1740],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":1741,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nameLocations":["1550:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1740,"src":"1550:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1550:7:1"},{"baseName":{"id":121,"name":"IERC20","nameLocations":["1559:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1559:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1559:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nameLocations":["1567:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1567:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1567:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1301:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,1740],"name":"ERC20","nameLocation":"1541:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1588:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1640:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":132,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1714:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1749:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1775:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2036:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2054:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2046:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2079:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2069:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1804:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2006:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1992:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2013:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2036:0:1"},"scope":699,"src":"1980:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2227:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2244:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2237:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2099:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2171:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2212:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:1"},"scope":699,"src":"2158:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2440:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2457:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2450:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2262:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2384:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2425:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:1"},"scope":699,"src":"2369:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3169:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3179:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2477:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3121:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3162:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:1"},"scope":699,"src":"3104:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3325:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3342:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3335:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3201:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3275:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3316:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:1"},"scope":699,"src":"3255:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3502:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3519:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3512:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3367:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3446:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3438:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:1"},"scope":699,"src":"3419:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3825:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3843:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3835:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3883:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3890:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3894:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3873:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3911:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3550:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3766:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3758:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3778:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3770:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":699,"src":"3740:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4085:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4102:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4114:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4095:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3935:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4014:5:1","nodeType":"VariableDeclaration","scope":254,"src":"4006:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:1"},"scope":699,"src":"3987:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4533:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4551:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4543:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4559:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4597:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4606:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4581:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4581:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4623:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4142:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4469:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4461:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4486:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4527:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:1"},"scope":699,"src":"4444:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5306:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5324:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5316:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"5334:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5378:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5387:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5356:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5356:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5414:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5420:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5424:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5404:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5404:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5441:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4647:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5233:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5247:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5239:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5259:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5251:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:1"},"scope":699,"src":"5203:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5948:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5966:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"5974:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6005:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6012:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6031:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6038:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6049:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5996:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"5996:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6070:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5465:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5889:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:1"},"scope":699,"src":"5854:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6674:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6692:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"6700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6722:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6749:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6792:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6812:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6784:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6879:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6912:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6919:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6928:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6947:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6903:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6903:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"6984:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6094:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6610:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6668:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:1"},"scope":699,"src":"6575:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7534:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7544:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7630:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7622:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7718:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7697:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7697:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7746:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7768:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7778:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7816:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7793:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7875:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7909:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7917:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7931:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7899:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8114:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8114:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8172:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8178:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8163:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8158:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8220:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8200:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8200:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7008:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7483:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7475:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7497:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7489:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7509:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7534:0:1"},"scope":699,"src":"7456:788:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8585:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8595:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8671:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8731:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8731:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8763:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8909:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8921:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8899:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8973:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8982:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8952:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8947:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9041:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9000:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9000:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8250:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8543:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8535:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8560:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8552:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8585:0:1"},"scope":699,"src":"8520:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9440:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9458:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9450:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9549:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9528:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9588:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9613:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9623:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9649:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9641:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9722:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9746:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9767:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9784:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9746:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9883:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9899:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9883:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9940:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9961:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9931:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9926:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10020:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9979:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"9979:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9061:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9398:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9390:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9415:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9407:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9440:0:1"},"scope":699,"src":"9375:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10540:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10558:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10550:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10628:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10707:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10719:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10737:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10707:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10767:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10774:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10758:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10753:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10040:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10483:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10475:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10498:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10540:0:1"},"scope":699,"src":"10457:340:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11168:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11178:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11215:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11222:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11205:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11244:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:1","memberName":"max","nodeType":"MemberAccess","src":"11264:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11240:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11283:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11305:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11325:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11297:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11379:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11416:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11423:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11432:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11451:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11407:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11407:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10803:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11111:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11103:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11126:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11143:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11135:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11168:0:1"},"scope":699,"src":"11078:411:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12162:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11495:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12111:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12103:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12125:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12117:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12137:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12129:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12162:0:1"},"scope":699,"src":"12073:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"12840:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12170:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12789:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12803:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12795:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12815:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12807:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"12840:0:1"},"scope":699,"src":"12752:90:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1532:11312:1","usedErrors":[]}],"src":"105:12740:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":777,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[838]},"id":839,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"148:480:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":838,"linearizedBaseContracts":[838],"name":"IERC20Permit","nameLocation":"639:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"658:792:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:4","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"1488:5:4","nodeType":"VariableDeclaration","scope":823,"src":"1480:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"1511:7:4","nodeType":"VariableDeclaration","scope":823,"src":"1503:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"1536:5:4","nodeType":"VariableDeclaration","scope":823,"src":"1528:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:4","nodeType":"VariableDeclaration","scope":823,"src":"1551:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"v","nameLocation":"1583:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1577:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":815,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"r","nameLocation":"1602:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1594:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"s","nameLocation":"1621:1:4","nodeType":"VariableDeclaration","scope":823,"src":"1613:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"1637:0:4"},"scope":838,"src":"1455:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1644:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":831,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:4","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"owner","nameLocation":"1967:5:4","nodeType":"VariableDeclaration","scope":831,"src":"1959:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:4"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"1997:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:4"},"scope":838,"src":"1943:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2012:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":837,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:4","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"2223:2:4"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":837,"src":"2249:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:4"},"scope":838,"src":"2198:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":839,"src":"629:1631:4","usedErrors":[]}],"src":"123:2138:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1718],"IERC20":[777],"IERC20Permit":[838],"SafeERC20":[1214]},"id":1215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":840,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":778,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":839,"src":"164:40:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1719,"src":"205:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"243:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1214,"linearizedBaseContracts":[1214],"name":"SafeERC20","nameLocation":"709:9:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":847,"libraryName":{"id":845,"name":"Address","nameLocations":["731:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1718,"src":"731:7:5"},"nodeType":"UsingForDirective","src":"725:26:5","typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":870,"nodeType":"Block","src":"1013:103:5","statements":[{"expression":{"arguments":[{"id":859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1043:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1073:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":744,"src":"1073:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":858,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1023:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"1023:86:5"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"757:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:5","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"token","nameLocation":"970:5:5","nodeType":"VariableDeclaration","scope":871,"src":"963:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":850,"nodeType":"UserDefinedTypeName","pathNode":{"id":849,"name":"IERC20","nameLocations":["963:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"963:6:5"},"referencedDeclaration":777,"src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"to","nameLocation":"985:2:5","nodeType":"VariableDeclaration","scope":871,"src":"977:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"value","nameLocation":"997:5:5","nodeType":"VariableDeclaration","scope":871,"src":"989:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:5"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"1013:0:5"},"scope":1214,"src":"941:175:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":897,"nodeType":"Block","src":"1445:113:5","statements":[{"expression":{"arguments":[{"id":885,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1475:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":888,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1505:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":776,"src":"1505:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1534:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"1540:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1544:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":886,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":884,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1455:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"1455:96:5"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1122:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":898,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:5","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"token","nameLocation":"1388:5:5","nodeType":"VariableDeclaration","scope":898,"src":"1381:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":874,"nodeType":"UserDefinedTypeName","pathNode":{"id":873,"name":"IERC20","nameLocations":["1381:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1381:6:5"},"referencedDeclaration":777,"src":"1381:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"from","nameLocation":"1403:4:5","nodeType":"VariableDeclaration","scope":898,"src":"1395:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"to","nameLocation":"1417:2:5","nodeType":"VariableDeclaration","scope":898,"src":"1409:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"value","nameLocation":"1429:5:5","nodeType":"VariableDeclaration","scope":898,"src":"1421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"1445:0:5"},"scope":1214,"src":"1355:203:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"1894:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2143:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":918,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:5","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2190:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":914,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2159:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"2159:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"2121:163:5"},{"expression":{"arguments":[{"id":930,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2314:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2344:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"2344:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2368:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2377:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":931,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":929,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2294:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"2294:90:5"}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"1564:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"token","nameLocation":"1846:5:5","nodeType":"VariableDeclaration","scope":942,"src":"1839:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"IERC20","nameLocations":["1839:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1839:6:5"},"referencedDeclaration":777,"src":"1839:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"spender","nameLocation":"1861:7:5","nodeType":"VariableDeclaration","scope":942,"src":"1853:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"value","nameLocation":"1878:5:5","nodeType":"VariableDeclaration","scope":942,"src":"1870:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:5"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"1894:0:5"},"scope":1214,"src":"1818:573:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":978,"nodeType":"Block","src":"2668:194:5","statements":[{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:5","nodeType":"VariableDeclaration","scope":978,"src":"2678:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":963,"initialValue":{"arguments":[{"arguments":[{"id":959,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:5","typeDescriptions":{}}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2732:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2701:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"2701:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:5"},{"expression":{"arguments":[{"id":965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2770:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":968,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2800:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"2800:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2824:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2833:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":966,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":964,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2750:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"2750:105:5"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"2397:180:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":979,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:5","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"token","nameLocation":"2620:5:5","nodeType":"VariableDeclaration","scope":979,"src":"2613:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":945,"nodeType":"UserDefinedTypeName","pathNode":{"id":944,"name":"IERC20","nameLocations":["2613:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2613:6:5"},"referencedDeclaration":777,"src":"2613:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"spender","nameLocation":"2635:7:5","nodeType":"VariableDeclaration","scope":979,"src":"2627:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"value","nameLocation":"2652:5:5","nodeType":"VariableDeclaration","scope":979,"src":"2644:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:5"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"2668:0:5"},"scope":1214,"src":"2582:280:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"3139:321:5","statements":[{"id":1022,"nodeType":"UncheckedBlock","src":"3149:305:5","statements":[{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:5","nodeType":"VariableDeclaration","scope":1022,"src":"3173:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"arguments":[{"id":996,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1214","typeString":"library SafeERC20"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:5","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3227:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3196:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":754,"src":"3196:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3257:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3273:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"3249:75:5"},{"expression":{"arguments":[{"id":1009,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1012,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3388:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:5","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1015,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3412:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3421:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3436:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1010,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1008,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3338:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"3338:105:5"}]}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2868:180:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:5","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"token","nameLocation":"3091:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"3084:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":982,"nodeType":"UserDefinedTypeName","pathNode":{"id":981,"name":"IERC20","nameLocations":["3084:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"3084:6:5"},"referencedDeclaration":777,"src":"3084:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"spender","nameLocation":"3106:7:5","nodeType":"VariableDeclaration","scope":1024,"src":"3098:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"value","nameLocation":"3123:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"3115:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:5"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"3139:0:5"},"scope":1214,"src":"3053:407:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"3856:333:5","statements":[{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:5","nodeType":"VariableDeclaration","scope":1070,"src":"3866:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"expression":{"expression":{"id":1039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3917:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3917:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:5","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1042,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3941:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3950:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1037,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:5"},{"condition":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:5","subExpression":{"arguments":[{"id":1047,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3996:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":1048,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4003:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1046,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3972:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1069,"nodeType":"IfStatement","src":"3967:216:5","trueBody":{"id":1068,"nodeType":"Block","src":"4018:165:5","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4052:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4082:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"4082:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:5","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4106:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4032:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"4032:86:5"},{"expression":{"arguments":[{"id":1064,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4152:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":1065,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4159:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1063,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4132:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"4132:40:5"}]}}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"3466:308:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:5","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"token","nameLocation":"3808:5:5","nodeType":"VariableDeclaration","scope":1071,"src":"3801:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1027,"nodeType":"UserDefinedTypeName","pathNode":{"id":1026,"name":"IERC20","nameLocations":["3801:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"3801:6:5"},"referencedDeclaration":777,"src":"3801:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"spender","nameLocation":"3823:7:5","nodeType":"VariableDeclaration","scope":1071,"src":"3815:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"value","nameLocation":"3840:5:5","nodeType":"VariableDeclaration","scope":1071,"src":"3832:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"3856:0:5"},"scope":1214,"src":"3779:410:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"4556:257:5","statements":[{"assignments":[1093],"declarations":[{"constant":false,"id":1093,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:5","nodeType":"VariableDeclaration","scope":1127,"src":"4566:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"arguments":[{"id":1096,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4601:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1094,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4588:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":831,"src":"4588:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:5"},{"expression":{"arguments":[{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4630:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4637:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4646:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1105,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4653:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1106,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4663:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"4666:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1108,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4669:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1099,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4617:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:5","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":823,"src":"4617:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"4617:54:5"},{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:5","nodeType":"VariableDeclaration","scope":1127,"src":"4681:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4715:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1113,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4702:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":831,"src":"4702:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4739:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4753:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"4731:75:5"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"4195:141:5","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:5","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"token","nameLocation":"4383:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4370:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"},"typeName":{"id":1074,"nodeType":"UserDefinedTypeName","pathNode":{"id":1073,"name":"IERC20Permit","nameLocations":["4370:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":838,"src":"4370:12:5"},"referencedDeclaration":838,"src":"4370:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$838","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"4406:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4398:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"spender","nameLocation":"4429:7:5","nodeType":"VariableDeclaration","scope":1128,"src":"4421:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"value","nameLocation":"4454:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"4446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:5","nodeType":"VariableDeclaration","scope":1128,"src":"4469:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"v","nameLocation":"4501:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4495:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1084,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"r","nameLocation":"4520:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4512:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"s","nameLocation":"4539:1:5","nodeType":"VariableDeclaration","scope":1128,"src":"4531:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:5"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"4556:0:5"},"scope":1214,"src":"4341:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1164,"nodeType":"Block","src":"5266:572:5","statements":[{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:5","nodeType":"VariableDeclaration","scope":1164,"src":"5615:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[{"id":1144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5669:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1141,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5649:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:5","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:5","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"5641:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1149,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5728:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:5","memberName":"length","nodeType":"MemberAccess","src":"5728:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5765:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:5","typeDescriptions":{}}}],"id":1158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1153,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:5","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"5720:111:5"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"4819:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:5","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"token","nameLocation":"5232:5:5","nodeType":"VariableDeclaration","scope":1165,"src":"5225:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1131,"nodeType":"UserDefinedTypeName","pathNode":{"id":1130,"name":"IERC20","nameLocations":["5225:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"5225:6:5"},"referencedDeclaration":777,"src":"5225:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"data","nameLocation":"5252:4:5","nodeType":"VariableDeclaration","scope":1165,"src":"5239:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1133,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"5266:0:5"},"scope":1214,"src":"5196:642:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1212,"nodeType":"Block","src":"6428:505:5","statements":[{"assignments":[1177,1179],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"success","nameLocation":"6729:7:5","nodeType":"VariableDeclaration","scope":1212,"src":"6724:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:5","nodeType":"VariableDeclaration","scope":1212,"src":"6738:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1178,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[{"id":1185,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6785:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1182,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6773:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:5","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:5","memberName":"call","nodeType":"MemberAccess","src":"6765:19:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"6819:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1189,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6831:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:5","memberName":"length","nodeType":"MemberAccess","src":"6831:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1195,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6868:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1196,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:5","typeDescriptions":{}}}],"id":1198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1193,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:5","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1207,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6919:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:5","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1203,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6892:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1718_$","typeString":"type(library Address)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"6892:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1175,"id":1211,"nodeType":"Return","src":"6800:126:5"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"5844:490:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:5","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"token","nameLocation":"6379:5:5","nodeType":"VariableDeclaration","scope":1213,"src":"6372:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":1168,"nodeType":"UserDefinedTypeName","pathNode":{"id":1167,"name":"IERC20","nameLocations":["6372:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"6372:6:5"},"referencedDeclaration":777,"src":"6372:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"6399:4:5","nodeType":"VariableDeclaration","scope":1213,"src":"6386:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:5"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"6422:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:5"},"scope":1214,"src":"6339:594:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1215,"src":"701:6234:5","usedErrors":[]}],"src":"115:6821:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1752],"IERC721":[1330]},"id":1331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1331,"sourceUnit":1753,"src":"133:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1219,"name":"IERC165","nameLocations":["271:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1752,"src":"271:7:6"},"id":1220,"nodeType":"InheritanceSpecifier","src":"271:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"182:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1330,"linearizedBaseContracts":[1330,1752],"name":"IERC721","nameLocation":"260:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"285:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1229,"name":"Transfer","nameLocation":"384:8:6","nodeType":"EventDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:6","nodeType":"VariableDeclaration","scope":1229,"src":"393:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:6","nodeType":"VariableDeclaration","scope":1229,"src":"415:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:6","nodeType":"VariableDeclaration","scope":1229,"src":"435:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:6"},"src":"378:82:6"},{"anonymous":false,"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"466:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1238,"name":"Approval","nameLocation":"571:8:6","nodeType":"EventDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:6","nodeType":"VariableDeclaration","scope":1238,"src":"580:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:6","nodeType":"VariableDeclaration","scope":1238,"src":"603:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:6","nodeType":"VariableDeclaration","scope":1238,"src":"629:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:6"},"src":"565:89:6"},{"anonymous":false,"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"660:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1247,"name":"ApprovalForAll","nameLocation":"788:14:6","nodeType":"EventDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:6","nodeType":"VariableDeclaration","scope":1247,"src":"803:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:6","nodeType":"VariableDeclaration","scope":1247,"src":"826:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:6","nodeType":"VariableDeclaration","scope":1247,"src":"852:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:6"},"src":"782:85:6"},{"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"873:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:6","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"owner","nameLocation":"981:5:6","nodeType":"VariableDeclaration","scope":1255,"src":"973:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:6"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"balance","nameLocation":"1019:7:6","nodeType":"VariableDeclaration","scope":1255,"src":"1011:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:6"},"scope":1330,"src":"954:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1034:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1263,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:6","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:6","nodeType":"VariableDeclaration","scope":1263,"src":"1187:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:6"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"owner","nameLocation":"1235:5:6","nodeType":"VariableDeclaration","scope":1263,"src":"1227:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:6"},"scope":1330,"src":"1170:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"1248:556:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:6","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"from","nameLocation":"1843:4:6","nodeType":"VariableDeclaration","scope":1275,"src":"1835:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"to","nameLocation":"1857:2:6","nodeType":"VariableDeclaration","scope":1275,"src":"1849:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:6","nodeType":"VariableDeclaration","scope":1275,"src":"1861:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"data","nameLocation":"1893:4:6","nodeType":"VariableDeclaration","scope":1275,"src":"1878:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:6"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"1907:0:6"},"scope":1330,"src":"1809:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"1914:687:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1285,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:6","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"from","nameLocation":"2640:4:6","nodeType":"VariableDeclaration","scope":1285,"src":"2632:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"to","nameLocation":"2654:2:6","nodeType":"VariableDeclaration","scope":1285,"src":"2646:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:6","nodeType":"VariableDeclaration","scope":1285,"src":"2658:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:6"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"2683:0:6"},"scope":1330,"src":"2606:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"2690:732:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1295,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:6","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"from","nameLocation":"3457:4:6","nodeType":"VariableDeclaration","scope":1295,"src":"3449:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"to","nameLocation":"3471:2:6","nodeType":"VariableDeclaration","scope":1295,"src":"3463:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:6","nodeType":"VariableDeclaration","scope":1295,"src":"3475:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:6"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"3500:0:6"},"scope":1330,"src":"3427:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"3507:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:6","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3989:2:6","nodeType":"VariableDeclaration","scope":1303,"src":"3981:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:6","nodeType":"VariableDeclaration","scope":1303,"src":"3993:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:6"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"4018:0:6"},"scope":1330,"src":"3964:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"4025:309:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1311,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:6","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"operator","nameLocation":"4374:8:6","nodeType":"VariableDeclaration","scope":1311,"src":"4366:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"approved","nameLocation":"4389:8:6","nodeType":"VariableDeclaration","scope":1311,"src":"4384:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:6"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[],"src":"4407:0:6"},"scope":1330,"src":"4339:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"4414:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:6","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:6","nodeType":"VariableDeclaration","scope":1319,"src":"4579:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:6"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"operator","nameLocation":"4627:8:6","nodeType":"VariableDeclaration","scope":1319,"src":"4619:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:6"},"scope":1330,"src":"4558:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"4643:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1329,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:6","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"owner","nameLocation":"4820:5:6","nodeType":"VariableDeclaration","scope":1329,"src":"4812:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"operator","nameLocation":"4835:8:6","nodeType":"VariableDeclaration","scope":1329,"src":"4827:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:6"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"4868:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:6"},"scope":1330,"src":"4786:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1331,"src":"250:4626:6","usedErrors":[]}],"src":"108:4769:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[1752],"IERC721":[1330],"IERC721Enumerable":[1361]},"id":1362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1332,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1362,"sourceUnit":1331,"src":"154:24:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1335,"name":"IERC721","nameLocations":["348:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1330,"src":"348:7:7"},"id":1336,"nodeType":"InheritanceSpecifier","src":"348:7:7"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"180:136:7","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1361,"linearizedBaseContracts":[1361,1330,1752],"name":"IERC721Enumerable","nameLocation":"327:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"362:82:7","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:7","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"469:2:7"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"495:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:7"},"scope":1361,"src":"449:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"510:171:7","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1352,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:7","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"owner","nameLocation":"723:5:7","nodeType":"VariableDeclaration","scope":1352,"src":"715:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"index","nameLocation":"738:5:7","nodeType":"VariableDeclaration","scope":1352,"src":"730:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:7"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"768:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:7"},"scope":1361,"src":"686:91:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"783:164:7","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:7","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"index","nameLocation":"982:5:7","nodeType":"VariableDeclaration","scope":1360,"src":"974:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:7"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"1012:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:7"},"scope":1361,"src":"952:69:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1362,"src":"317:706:7","usedErrors":[]}],"src":"129:895:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1752],"IERC721":[1330],"IERC721Metadata":[1388]},"id":1389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":1331,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1366,"name":"IERC721","nameLocations":["326:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1330,"src":"326:7:8"},"id":1367,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1388,"linearizedBaseContracts":[1388,1330,1752],"name":"IERC721Metadata","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1373,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:8","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1370,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":1388,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:8","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1376,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":1388,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1387,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:8","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:8","nodeType":"VariableDeclaration","scope":1387,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1384,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":1388,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1389,"src":"297:463:8","usedErrors":[]}],"src":"112:649:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1718]},"id":1719,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1390,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1718,"linearizedBaseContracts":[1718],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1405,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1399,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:9","memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:9","memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1398,"id":1404,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:9","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"account","nameLocation":"1440:7:9","nodeType":"VariableDeclaration","scope":1406,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1396,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":1718,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1439,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1417,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1718","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1718","typeString":"library Address"}],"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1420,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[1426,null],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"success","nameLocation":"2818:7:9","nodeType":"VariableDeclaration","scope":1439,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1425,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1433,"initialValue":{"arguments":[{"hexValue":"","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1427,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:9","memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":1435,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1438,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1440,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:9","nodeType":"VariableDeclaration","scope":1440,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"amount","nameLocation":"2701:6:9","nodeType":"VariableDeclaration","scope":1440,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":1718,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1451,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1450,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1498,1542],"referencedDeclaration":1542,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1449,"id":1456,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:9","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"target","nameLocation":"3731:6:9","nodeType":"VariableDeclaration","scope":1458,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"data","nameLocation":"3752:4:9","nodeType":"VariableDeclaration","scope":1458,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1444,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":1718,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":1471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1472,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1474,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1470,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1498,1542],"referencedDeclaration":1542,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1469,"id":1476,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:9","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"target","nameLocation":"4147:6:9","nodeType":"VariableDeclaration","scope":1478,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"data","nameLocation":"4176:4:9","nodeType":"VariableDeclaration","scope":1478,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:9","nodeType":"VariableDeclaration","scope":1478,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1464,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":1718,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":1491,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1490,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1498,1542],"referencedDeclaration":1542,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1489,"id":1496,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:9","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"target","nameLocation":"4732:6:9","nodeType":"VariableDeclaration","scope":1498,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"data","nameLocation":"4753:4:9","nodeType":"VariableDeclaration","scope":1498,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1482,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"value","nameLocation":"4767:5:9","nodeType":"VariableDeclaration","scope":1498,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1487,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1718,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1718","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1718","typeString":"library Address"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[1524,1526],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"success","nameLocation":"5451:7:9","nodeType":"VariableDeclaration","scope":1541,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:9","nodeType":"VariableDeclaration","scope":1541,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1525,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1533,"initialValue":{"arguments":[{"id":1531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1527,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:9","memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":1535,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1537,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1538,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1534,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1511,"id":1540,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:9","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"target","nameLocation":"5213:6:9","nodeType":"VariableDeclaration","scope":1542,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nameLocation":"5242:4:9","nodeType":"VariableDeclaration","scope":1542,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"5264:5:9","nodeType":"VariableDeclaration","scope":1542,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:9","nodeType":"VariableDeclaration","scope":1542,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":1718,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1558,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":1553,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1554,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1552,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1559,1588],"referencedDeclaration":1588,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1551,"id":1557,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1559,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:9","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"target","nameLocation":"5824:6:9","nodeType":"VariableDeclaration","scope":1559,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"data","nameLocation":"5845:4:9","nodeType":"VariableDeclaration","scope":1559,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1549,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":1718,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[1572,1574],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"success","nameLocation":"6343:7:9","nodeType":"VariableDeclaration","scope":1587,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1571,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:9","nodeType":"VariableDeclaration","scope":1587,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1573,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1579,"initialValue":{"arguments":[{"id":1577,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1575,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":1581,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1583,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1584,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1580,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1570,"id":1586,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:9","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"target","nameLocation":"6214:6:9","nodeType":"VariableDeclaration","scope":1588,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"data","nameLocation":"6243:4:9","nodeType":"VariableDeclaration","scope":1588,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:9","nodeType":"VariableDeclaration","scope":1588,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1565,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1568,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":1718,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":1599,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1600,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1598,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1605,1634],"referencedDeclaration":1634,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1597,"id":1603,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:9","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"target","nameLocation":"6712:6:9","nodeType":"VariableDeclaration","scope":1605,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"data","nameLocation":"6733:4:9","nodeType":"VariableDeclaration","scope":1605,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1592,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1595,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":1718,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[1618,1620],"declarations":[{"constant":false,"id":1618,"mutability":"mutable","name":"success","nameLocation":"7229:7:9","nodeType":"VariableDeclaration","scope":1633,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1617,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:9","nodeType":"VariableDeclaration","scope":1633,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1619,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1625,"initialValue":{"arguments":[{"id":1623,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1621,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":1627,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1628,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1629,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1630,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1626,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1616,"id":1632,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:9","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"target","nameLocation":"7105:6:9","nodeType":"VariableDeclaration","scope":1634,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"data","nameLocation":"7134:4:9","nodeType":"VariableDeclaration","scope":1634,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1609,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:9","nodeType":"VariableDeclaration","scope":1634,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1614,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":1718,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1672,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":1648,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1670,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":1666,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1667,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1665,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":1671,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":1664,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1649,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:9","memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":1660,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1655,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":1662,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1647,"id":1663,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:9","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"target","nameLocation":"7724:6:9","nodeType":"VariableDeclaration","scope":1673,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"success","nameLocation":"7745:7:9","nodeType":"VariableDeclaration","scope":1673,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:9","nodeType":"VariableDeclaration","scope":1673,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:9","nodeType":"VariableDeclaration","scope":1673,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1642,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1645,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":1718,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":1685,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1694,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":1690,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1691,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1689,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":1695,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":1688,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":1686,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1684,"id":1687,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:9","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"success","nameLocation":"8560:7:9","nodeType":"VariableDeclaration","scope":1697,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1675,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:9","nodeType":"VariableDeclaration","scope":1697,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:9","nodeType":"VariableDeclaration","scope":1697,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1679,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":1718,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1704,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:9","memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1714,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":1711,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1710,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":1715,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":1709,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:9"},"nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:9"},"nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:9"},"nodeType":"YulFunctionCall","src":"9236:44:9"},"nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1699,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":1708,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:9","nodeType":"VariableDeclaration","scope":1717,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:9","nodeType":"VariableDeclaration","scope":1717,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1700,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":1718,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1719,"src":"194:9169:9","usedErrors":[]}],"src":"101:9263:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1740]},"id":1741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1720,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1740,"linearizedBaseContracts":[1740],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1729,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1725,"id":1728,"nodeType":"Return","src":"712:17:10"}]},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1740,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1734,"id":1737,"nodeType":"Return","src":"819:15:10"}]},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1740,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1741,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1752]},"id":1753,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1742,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"125:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1752,"linearizedBaseContracts":[1752],"name":"IERC165","nameLocation":"415:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"429:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:11","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:11","nodeType":"VariableDeclaration","scope":1751,"src":"801:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1745,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:11"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"844:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1748,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:11"},"scope":1752,"src":"774:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1753,"src":"405:447:11","usedErrors":[]}],"src":"100:753:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2365]},"id":2366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1754,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"230:1098:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2365,"linearizedBaseContracts":[2365],"name":"EnumerableSet","nameLocation":"1337:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1763,"members":[{"constant":false,"id":1758,"mutability":"mutable","name":"_values","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":1763,"src":"1851:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1757,"nodeType":"ArrayTypeName","src":"1851:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:12","nodeType":"VariableDeclaration","scope":1763,"src":"2001:36:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1761,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:12","nodeType":"StructDefinition","scope":2365,"src":"1797:247:12","visibility":"public"},{"body":{"id":1804,"nodeType":"Block","src":"2283:335:12","statements":[{"condition":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:12","subExpression":{"arguments":[{"id":1775,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2308:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"2313:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1774,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2298:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1802,"nodeType":"Block","src":"2575:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1773,"id":1801,"nodeType":"Return","src":"2589:12:12"}]},"id":1803,"nodeType":"IfStatement","src":"2293:319:12","trueBody":{"id":1799,"nodeType":"Block","src":"2321:248:12","statements":[{"expression":{"arguments":[{"id":1784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"2352:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1779,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2335:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"2335:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:12","memberName":"push","nodeType":"MemberAccess","src":"2335:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"2335:23:12"},{"expression":{"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2493:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"2493:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1791,"indexExpression":{"id":1789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"2506:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1792,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2515:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"2515:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:12","memberName":"length","nodeType":"MemberAccess","src":"2515:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1796,"nodeType":"ExpressionStatement","src":"2493:40:12"},{"expression":{"hexValue":"74727565","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1773,"id":1798,"nodeType":"Return","src":"2547:11:12"}]}}]},"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"2050:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:12","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"set","nameLocation":"2240:3:12","nodeType":"VariableDeclaration","scope":1805,"src":"2228:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1766,"nodeType":"UserDefinedTypeName","pathNode":{"id":1765,"name":"Set","nameLocations":["2228:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"2228:3:12"},"referencedDeclaration":1763,"src":"2228:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"value","nameLocation":"2253:5:12","nodeType":"VariableDeclaration","scope":1805,"src":"2245:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:12"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"2277:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1771,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:12"},"scope":2365,"src":"2214:404:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1888,"nodeType":"Block","src":"2858:1316:12","statements":[{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:12","nodeType":"VariableDeclaration","scope":1888,"src":"2968:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1822,"initialValue":{"baseExpression":{"expression":{"id":1818,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2989:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"2989:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1821,"indexExpression":{"id":1820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3002:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3023:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1886,"nodeType":"Block","src":"4131:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1815,"id":1885,"nodeType":"Return","src":"4145:12:12"}]},"id":1887,"nodeType":"IfStatement","src":"3019:1149:12","trueBody":{"id":1883,"nodeType":"Block","src":"3040:1085:12","statements":[{"assignments":[1827],"declarations":[{"constant":false,"id":1827,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:12","nodeType":"VariableDeclaration","scope":1883,"src":"3392:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3416:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:12"},{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:12","nodeType":"VariableDeclaration","scope":1883,"src":"3444:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1839,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1834,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3464:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"3464:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:12","memberName":"length","nodeType":"MemberAccess","src":"3464:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1840,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3505:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1841,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"3518:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1867,"nodeType":"IfStatement","src":"3501:398:12","trueBody":{"id":1866,"nodeType":"Block","src":"3533:366:12","statements":[{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:12","nodeType":"VariableDeclaration","scope":1866,"src":"3551:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1849,"initialValue":{"baseExpression":{"expression":{"id":1845,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3571:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"3571:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1848,"indexExpression":{"id":1847,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3583:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:12"},{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1850,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3693:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"3693:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1854,"indexExpression":{"id":1852,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"3705:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1855,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3722:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1857,"nodeType":"ExpressionStatement","src":"3693:38:12"},{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1858,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3805:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"3805:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1862,"indexExpression":{"id":1860,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3818:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1863,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3831:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"nodeType":"ExpressionStatement","src":"3805:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1868,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3977:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"3977:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:12","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"3977:17:12"},{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:12","subExpression":{"baseExpression":{"expression":{"id":1875,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4069:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"4069:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1878,"indexExpression":{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4082:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"ExpressionStatement","src":"4062:26:12"},{"expression":{"hexValue":"74727565","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1815,"id":1882,"nodeType":"Return","src":"4103:11:12"}]}}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"2624:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:12","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"set","nameLocation":"2815:3:12","nodeType":"VariableDeclaration","scope":1889,"src":"2803:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1808,"nodeType":"UserDefinedTypeName","pathNode":{"id":1807,"name":"Set","nameLocations":["2803:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"2803:3:12"},"referencedDeclaration":1763,"src":"2803:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"value","nameLocation":"2828:5:12","nodeType":"VariableDeclaration","scope":1889,"src":"2820:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:12"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"2852:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1813,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:12"},"scope":2365,"src":"2786:1388:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1907,"nodeType":"Block","src":"4334:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1900,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"4351:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"4351:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1903,"indexExpression":{"id":1902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"4364:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1899,"id":1906,"nodeType":"Return","src":"4344:31:12"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"4180:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:12","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"set","nameLocation":"4286:3:12","nodeType":"VariableDeclaration","scope":1908,"src":"4274:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1892,"nodeType":"UserDefinedTypeName","pathNode":{"id":1891,"name":"Set","nameLocations":["4274:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"4274:3:12"},"referencedDeclaration":1763,"src":"4274:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"value","nameLocation":"4299:5:12","nodeType":"VariableDeclaration","scope":1908,"src":"4291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:12"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"4328:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:12"},"scope":2365,"src":"4255:127:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1921,"nodeType":"Block","src":"4528:42:12","statements":[{"expression":{"expression":{"expression":{"id":1917,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4545:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"4545:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:12","memberName":"length","nodeType":"MemberAccess","src":"4545:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1916,"id":1920,"nodeType":"Return","src":"4538:25:12"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"4388:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:12","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"set","nameLocation":"4492:3:12","nodeType":"VariableDeclaration","scope":1922,"src":"4480:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"Set","nameLocations":["4480:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"4480:3:12"},"referencedDeclaration":1763,"src":"4480:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:12"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"4519:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:12"},"scope":2365,"src":"4463:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1938,"nodeType":"Block","src":"4988:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":1933,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"5005:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"5005:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1936,"indexExpression":{"id":1935,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5017:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1932,"id":1937,"nodeType":"Return","src":"4998:25:12"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"4576:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:12","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"set","nameLocation":"4937:3:12","nodeType":"VariableDeclaration","scope":1939,"src":"4925:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"Set","nameLocations":["4925:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"4925:3:12"},"referencedDeclaration":1763,"src":"4925:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"index","nameLocation":"4950:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"4942:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:12"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"4979:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:12"},"scope":2365,"src":"4912:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1952,"nodeType":"Block","src":"5644:35:12","statements":[{"expression":{"expression":{"id":1949,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"5661:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"5661:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1948,"id":1951,"nodeType":"Return","src":"5654:18:12"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"5036:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:12","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"set","nameLocation":"5599:3:12","nodeType":"VariableDeclaration","scope":1953,"src":"5587:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"Set","nameLocations":["5587:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"5587:3:12"},"referencedDeclaration":1763,"src":"5587:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:12"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"5626:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1946,"nodeType":"ArrayTypeName","src":"5626:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:12"},"scope":2365,"src":"5570:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1957,"members":[{"constant":false,"id":1956,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:12","nodeType":"VariableDeclaration","scope":1957,"src":"5732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"Set","nameLocations":["5732:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"5732:3:12"},"referencedDeclaration":1763,"src":"5732:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:12","nodeType":"StructDefinition","scope":2365,"src":"5704:45:12","visibility":"public"},{"body":{"id":1974,"nodeType":"Block","src":"5995:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":1969,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"6017:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"6017:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1968,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"6012:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1967,"id":1973,"nodeType":"Return","src":"6005:30:12"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"5755:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1975,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:12","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"set","nameLocation":"5951:3:12","nodeType":"VariableDeclaration","scope":1975,"src":"5932:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"Bytes32Set","nameLocations":["5932:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"5932:10:12"},"referencedDeclaration":1957,"src":"5932:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"5964:5:12","nodeType":"VariableDeclaration","scope":1975,"src":"5956:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:12"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1975,"src":"5989:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:12"},"scope":2365,"src":"5919:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1992,"nodeType":"Block","src":"6289:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":1987,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6314:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"6314:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"6326:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1986,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"6306:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1985,"id":1991,"nodeType":"Return","src":"6299:33:12"}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"6048:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:12","nodeType":"FunctionDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"set","nameLocation":"6245:3:12","nodeType":"VariableDeclaration","scope":1993,"src":"6226:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"Bytes32Set","nameLocations":["6226:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"6226:10:12"},"referencedDeclaration":1957,"src":"6226:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"value","nameLocation":"6258:5:12","nodeType":"VariableDeclaration","scope":1993,"src":"6250:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:12"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"6283:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1983,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:12"},"scope":2365,"src":"6210:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"6506:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":2005,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"6533:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"6533:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"6545:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2004,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"6523:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2003,"id":2009,"nodeType":"Return","src":"6516:35:12"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"6345:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:12","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"set","nameLocation":"6457:3:12","nodeType":"VariableDeclaration","scope":2011,"src":"6438:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1996,"nodeType":"UserDefinedTypeName","pathNode":{"id":1995,"name":"Bytes32Set","nameLocations":["6438:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"6438:10:12"},"referencedDeclaration":1957,"src":"6438:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"value","nameLocation":"6470:5:12","nodeType":"VariableDeclaration","scope":2011,"src":"6462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:12"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"6500:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2001,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:12"},"scope":2365,"src":"6420:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"6711:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2021,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"6736:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"6736:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2020,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6728:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2019,"id":2024,"nodeType":"Return","src":"6721:26:12"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"6564:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:12","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"set","nameLocation":"6674:3:12","nodeType":"VariableDeclaration","scope":2026,"src":"6655:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"Bytes32Set","nameLocations":["6655:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"6655:10:12"},"referencedDeclaration":1957,"src":"6655:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:12"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"6702:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:12"},"scope":2365,"src":"6639:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2043,"nodeType":"Block","src":"7179:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":2038,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7200:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"7200:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2040,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7212:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2037,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"7196:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2036,"id":2042,"nodeType":"Return","src":"7189:29:12"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"6760:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:12","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"set","nameLocation":"7127:3:12","nodeType":"VariableDeclaration","scope":2044,"src":"7108:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2029,"nodeType":"UserDefinedTypeName","pathNode":{"id":2028,"name":"Bytes32Set","nameLocations":["7108:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"7108:10:12"},"referencedDeclaration":1957,"src":"7108:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"index","nameLocation":"7140:5:12","nodeType":"VariableDeclaration","scope":2044,"src":"7132:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:12"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"7170:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:12"},"scope":2365,"src":"7096:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2073,"nodeType":"Block","src":"7846:219:12","statements":[{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"store","nameLocation":"7873:5:12","nodeType":"VariableDeclaration","scope":2073,"src":"7856:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2057,"nodeType":"ArrayTypeName","src":"7856:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2063,"initialValue":{"arguments":[{"expression":{"id":2060,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"7889:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"7889:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2059,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7881:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:12"},{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"result","nameLocation":"7927:6:12","nodeType":"VariableDeclaration","scope":2073,"src":"7910:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2067,"nodeType":"ArrayTypeName","src":"7910:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2069,"nodeType":"VariableDeclarationStatement","src":"7910:23:12"},{"AST":{"nodeType":"YulBlock","src":"7996:39:12","statements":[{"nodeType":"YulAssignment","src":"8010:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2068,"isOffset":false,"isSlot":false,"src":"8010:6:12","valueSize":1},{"declaration":2058,"isOffset":false,"isSlot":false,"src":"8020:5:12","valueSize":1}],"id":2070,"nodeType":"InlineAssembly","src":"7987:48:12"},{"expression":{"id":2071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"8052:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2053,"id":2072,"nodeType":"Return","src":"8045:13:12"}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"7231:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:12","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"set","nameLocation":"7800:3:12","nodeType":"VariableDeclaration","scope":2074,"src":"7781:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"Bytes32Set","nameLocations":["7781:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"7781:10:12"},"referencedDeclaration":1957,"src":"7781:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1957_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:12"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2074,"src":"7828:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2051,"nodeType":"ArrayTypeName","src":"7828:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:12"},"scope":2365,"src":"7765:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2078,"members":[{"constant":false,"id":2077,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:12","nodeType":"VariableDeclaration","scope":2078,"src":"8118:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"Set","nameLocations":["8118:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"8118:3:12"},"referencedDeclaration":1763,"src":"8118:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:12","nodeType":"StructDefinition","scope":2365,"src":"8090:45:12","visibility":"public"},{"body":{"id":2104,"nodeType":"Block","src":"8381:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":2090,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8403:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"8403:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"8439:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2096,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:12","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:12","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:12","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2089,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8398:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2088,"id":2103,"nodeType":"Return","src":"8391:57:12"}]},"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"8141:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:12","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"set","nameLocation":"8337:3:12","nodeType":"VariableDeclaration","scope":2105,"src":"8318:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2081,"nodeType":"UserDefinedTypeName","pathNode":{"id":2080,"name":"AddressSet","nameLocations":["8318:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"8318:10:12"},"referencedDeclaration":2078,"src":"8318:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"value","nameLocation":"8350:5:12","nodeType":"VariableDeclaration","scope":2105,"src":"8342:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:12"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"8375:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2086,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:12"},"scope":2365,"src":"8305:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2131,"nodeType":"Block","src":"8702:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":2117,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"8727:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"8727:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"8763:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2123,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:12","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:12","typeDescriptions":{}}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:12","typeDescriptions":{}}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2116,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"8719:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2115,"id":2130,"nodeType":"Return","src":"8712:60:12"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"8461:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:12","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"set","nameLocation":"8658:3:12","nodeType":"VariableDeclaration","scope":2132,"src":"8639:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"AddressSet","nameLocations":["8639:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"8639:10:12"},"referencedDeclaration":2078,"src":"8639:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"8671:5:12","nodeType":"VariableDeclaration","scope":2132,"src":"8663:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:12"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"8696:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2113,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:12"},"scope":2365,"src":"8623:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"8946:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":2144,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8973:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"8973:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"9009:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2150,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:12","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:12","typeDescriptions":{}}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:12","typeDescriptions":{}}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2143,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"8963:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2142,"id":2157,"nodeType":"Return","src":"8956:62:12"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"8785:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:12","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"set","nameLocation":"8897:3:12","nodeType":"VariableDeclaration","scope":2159,"src":"8878:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2135,"nodeType":"UserDefinedTypeName","pathNode":{"id":2134,"name":"AddressSet","nameLocations":["8878:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"8878:10:12"},"referencedDeclaration":2078,"src":"8878:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"value","nameLocation":"8910:5:12","nodeType":"VariableDeclaration","scope":2159,"src":"8902:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:12"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"8940:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2140,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:12"},"scope":2365,"src":"8860:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"9178:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2169,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"9203:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"9203:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2168,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"9195:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2167,"id":2172,"nodeType":"Return","src":"9188:26:12"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"9031:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:12","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"set","nameLocation":"9141:3:12","nodeType":"VariableDeclaration","scope":2174,"src":"9122:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2162,"nodeType":"UserDefinedTypeName","pathNode":{"id":2161,"name":"AddressSet","nameLocations":["9122:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"9122:10:12"},"referencedDeclaration":2078,"src":"9122:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:12"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"9169:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:12"},"scope":2365,"src":"9106:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"9646:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2192,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9691:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"9691:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2194,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"9703:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2191,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"9687:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:12","typeDescriptions":{}}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2187,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:12","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:12","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2184,"id":2199,"nodeType":"Return","src":"9656:56:12"}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"9227:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:12","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"set","nameLocation":"9594:3:12","nodeType":"VariableDeclaration","scope":2201,"src":"9575:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"AddressSet","nameLocations":["9575:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"9575:10:12"},"referencedDeclaration":2078,"src":"9575:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"index","nameLocation":"9607:5:12","nodeType":"VariableDeclaration","scope":2201,"src":"9599:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:12"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2201,"src":"9637:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:12"},"scope":2365,"src":"9563:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"10340:219:12","statements":[{"assignments":[2215],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"store","nameLocation":"10367:5:12","nodeType":"VariableDeclaration","scope":2230,"src":"10350:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2214,"nodeType":"ArrayTypeName","src":"10350:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2220,"initialValue":{"arguments":[{"expression":{"id":2217,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"10383:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"10383:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2216,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"10375:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:12"},{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"result","nameLocation":"10421:6:12","nodeType":"VariableDeclaration","scope":2230,"src":"10404:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2224,"nodeType":"ArrayTypeName","src":"10404:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2226,"nodeType":"VariableDeclarationStatement","src":"10404:23:12"},{"AST":{"nodeType":"YulBlock","src":"10490:39:12","statements":[{"nodeType":"YulAssignment","src":"10504:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2225,"isOffset":false,"isSlot":false,"src":"10504:6:12","valueSize":1},{"declaration":2215,"isOffset":false,"isSlot":false,"src":"10514:5:12","valueSize":1}],"id":2227,"nodeType":"InlineAssembly","src":"10481:48:12"},{"expression":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"10546:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2210,"id":2229,"nodeType":"Return","src":"10539:13:12"}]},"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"9725:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:12","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"set","nameLocation":"10294:3:12","nodeType":"VariableDeclaration","scope":2231,"src":"10275:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2204,"nodeType":"UserDefinedTypeName","pathNode":{"id":2203,"name":"AddressSet","nameLocations":["10275:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"10275:10:12"},"referencedDeclaration":2078,"src":"10275:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:12"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2231,"src":"10322:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2208,"nodeType":"ArrayTypeName","src":"10322:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:12"},"scope":2365,"src":"10259:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2235,"members":[{"constant":false,"id":2234,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:12","nodeType":"VariableDeclaration","scope":2235,"src":"10606:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2233,"nodeType":"UserDefinedTypeName","pathNode":{"id":2232,"name":"Set","nameLocations":["10606:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1763,"src":"10606:3:12"},"referencedDeclaration":1763,"src":"10606:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:12","nodeType":"StructDefinition","scope":2365,"src":"10581:42:12","visibility":"public"},{"body":{"id":2255,"nodeType":"Block","src":"10866:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":2247,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"10888:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"10888:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10908:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:12","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2246,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"10883:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2245,"id":2254,"nodeType":"Return","src":"10876:39:12"}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"10629:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:12","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"set","nameLocation":"10822:3:12","nodeType":"VariableDeclaration","scope":2256,"src":"10806:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2238,"nodeType":"UserDefinedTypeName","pathNode":{"id":2237,"name":"UintSet","nameLocations":["10806:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"10806:7:12"},"referencedDeclaration":2235,"src":"10806:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"10835:5:12","nodeType":"VariableDeclaration","scope":2256,"src":"10827:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:12"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"10860:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2243,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:12"},"scope":2365,"src":"10793:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"11166:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":2268,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"11191:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"11191:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"11211:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:12","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2267,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"11183:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2266,"id":2275,"nodeType":"Return","src":"11176:42:12"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"10928:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:12","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"set","nameLocation":"11122:3:12","nodeType":"VariableDeclaration","scope":2277,"src":"11106:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2259,"nodeType":"UserDefinedTypeName","pathNode":{"id":2258,"name":"UintSet","nameLocations":["11106:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"11106:7:12"},"referencedDeclaration":2235,"src":"11106:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"value","nameLocation":"11135:5:12","nodeType":"VariableDeclaration","scope":2277,"src":"11127:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:12"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"11160:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:12"},"scope":2365,"src":"11090:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2297,"nodeType":"Block","src":"11389:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":2289,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11416:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"11416:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"11436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:12","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2288,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"11406:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2287,"id":2296,"nodeType":"Return","src":"11399:44:12"}]},"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"11231:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:12","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"set","nameLocation":"11340:3:12","nodeType":"VariableDeclaration","scope":2298,"src":"11324:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2280,"nodeType":"UserDefinedTypeName","pathNode":{"id":2279,"name":"UintSet","nameLocations":["11324:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"11324:7:12"},"referencedDeclaration":2235,"src":"11324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"value","nameLocation":"11353:5:12","nodeType":"VariableDeclaration","scope":2298,"src":"11345:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:12"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2298,"src":"11383:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2285,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:12"},"scope":2365,"src":"11306:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"11600:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2308,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11625:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"11625:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2307,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11617:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2306,"id":2311,"nodeType":"Return","src":"11610:26:12"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"11456:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:12","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"set","nameLocation":"11563:3:12","nodeType":"VariableDeclaration","scope":2313,"src":"11547:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2301,"nodeType":"UserDefinedTypeName","pathNode":{"id":2300,"name":"UintSet","nameLocations":["11547:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"11547:7:12"},"referencedDeclaration":2235,"src":"11547:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:12"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"11591:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:12"},"scope":2365,"src":"11531:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"12065:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2327,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12094:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"12094:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2329,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"12106:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2326,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"12090:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:12","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2323,"id":2332,"nodeType":"Return","src":"12075:38:12"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"11649:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:12","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"set","nameLocation":"12013:3:12","nodeType":"VariableDeclaration","scope":2334,"src":"11997:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2316,"nodeType":"UserDefinedTypeName","pathNode":{"id":2315,"name":"UintSet","nameLocations":["11997:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"11997:7:12"},"referencedDeclaration":2235,"src":"11997:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"index","nameLocation":"12026:5:12","nodeType":"VariableDeclaration","scope":2334,"src":"12018:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:12"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"12056:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:12"},"scope":2365,"src":"11985:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2363,"nodeType":"Block","src":"12738:219:12","statements":[{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"store","nameLocation":"12765:5:12","nodeType":"VariableDeclaration","scope":2363,"src":"12748:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2347,"nodeType":"ArrayTypeName","src":"12748:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2353,"initialValue":{"arguments":[{"expression":{"id":2350,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"12781:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"12781:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1763_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2349,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"12773:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1763_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:12"},{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"result","nameLocation":"12819:6:12","nodeType":"VariableDeclaration","scope":2363,"src":"12802:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2359,"nodeType":"VariableDeclarationStatement","src":"12802:23:12"},{"AST":{"nodeType":"YulBlock","src":"12888:39:12","statements":[{"nodeType":"YulAssignment","src":"12902:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2358,"isOffset":false,"isSlot":false,"src":"12902:6:12","valueSize":1},{"declaration":2348,"isOffset":false,"isSlot":false,"src":"12912:5:12","valueSize":1}],"id":2360,"nodeType":"InlineAssembly","src":"12879:48:12"},{"expression":{"id":2361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"12944:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2343,"id":2362,"nodeType":"Return","src":"12937:13:12"}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"12126:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:12","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"set","nameLocation":"12692:3:12","nodeType":"VariableDeclaration","scope":2364,"src":"12676:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2337,"nodeType":"UserDefinedTypeName","pathNode":{"id":2336,"name":"UintSet","nameLocations":["12676:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"12676:7:12"},"referencedDeclaration":2235,"src":"12676:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2235_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:12"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2364,"src":"12720:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ArrayTypeName","src":"12720:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:12"},"scope":2365,"src":"12660:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2366,"src":"1329:11630:12","usedErrors":[]}],"src":"205:12755:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[2379]},"id":2380,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2367,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"71:144:13","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2379,"linearizedBaseContracts":[2379],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"254:898:13","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":2378,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:13","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:13","nodeType":"VariableDeclaration","scope":2378,"src":"1197:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2370,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:13","nodeType":"VariableDeclaration","scope":2378,"src":"1226:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2372,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"data","nameLocation":"1270:4:13","nodeType":"VariableDeclaration","scope":2378,"src":"1255:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:13"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"1289:0:13"},"scope":2379,"src":"1157:133:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2380,"src":"215:1077:13","usedErrors":[]}],"src":"45:1248:13"},"id":13},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol","exportedSymbols":{"IERC165":[1752],"IERC721":[1330],"IERC721Permit":[2414]},"id":2415,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2381,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":1331,"src":"71:58:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2384,"name":"IERC721","nameLocations":["282:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1330,"src":"282:7:14"},"id":2385,"nodeType":"InheritanceSpecifier","src":"282:7:14"}],"canonicalName":"IERC721Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"131:124:14","text":"@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"},"fullyImplemented":false,"id":2414,"linearizedBaseContracts":[2414,1330,1752],"name":"IERC721Permit","nameLocation":"265:13:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"296:104:14","text":"@notice The permit typehash used in the permit signature\n @return The typehash for the permit"},"functionSelector":"30adf81f","id":2391,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nameLocation":"414:15:14","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"429:2:14"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2391,"src":"455:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"454:9:14"},"scope":2414,"src":"405:59:14","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"470:135:14","text":"@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"},"functionSelector":"3644e515","id":2397,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"619:16:14","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[],"src":"635:2:14"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"661:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"661:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"660:9:14"},"scope":2414,"src":"610:60:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"676:605:14","text":"@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"},"functionSelector":"7ac2ff7b","id":2413,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1295:6:14","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"spender","nameLocation":"1319:7:14","nodeType":"VariableDeclaration","scope":2413,"src":"1311:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"tokenId","nameLocation":"1344:7:14","nodeType":"VariableDeclaration","scope":2413,"src":"1336:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"deadline","nameLocation":"1369:8:14","nodeType":"VariableDeclaration","scope":2413,"src":"1361:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1361:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"v","nameLocation":"1393:1:14","nodeType":"VariableDeclaration","scope":2413,"src":"1387:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2405,"name":"uint8","nodeType":"ElementaryTypeName","src":"1387:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"r","nameLocation":"1412:1:14","nodeType":"VariableDeclaration","scope":2413,"src":"1404:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1404:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"s","nameLocation":"1431:1:14","nodeType":"VariableDeclaration","scope":2413,"src":"1423:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1423:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1301:137:14"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[],"src":"1455:0:14"},"scope":2414,"src":"1286:170:14","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2415,"src":"255:1203:14","usedErrors":[]}],"src":"45:1414:14"},"id":14},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","exportedSymbols":{"IERC165":[1752],"IERC721":[1330],"IERC721Enumerable":[1361],"IERC721Metadata":[1388],"IERC721Permit":[2414],"INonfungiblePositionManager":[2613],"IPeripheryImmutableState":[2629],"IPeripheryPayments":[2655],"IPoolInitializer":[2674],"PoolAddress":[2874]},"id":2614,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2416,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:15"},{"id":2417,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":2418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":1389,"src":"114:77:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":2419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":1362,"src":"192:79:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol","file":"./IPoolInitializer.sol","id":2420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2675,"src":"273:32:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol","file":"./IERC721Permit.sol","id":2421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2415,"src":"306:29:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol","file":"./IPeripheryPayments.sol","id":2422,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2656,"src":"336:34:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","file":"./IPeripheryImmutableState.sol","id":2423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2630,"src":"371:40:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol","file":"../libraries/PoolAddress.sol","id":2424,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2875,"src":"412:38:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2426,"name":"IPoolInitializer","nameLocations":["674:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":2674,"src":"674:16:15"},"id":2427,"nodeType":"InheritanceSpecifier","src":"674:16:15"},{"baseName":{"id":2428,"name":"IPeripheryPayments","nameLocations":["696:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":2655,"src":"696:18:15"},"id":2429,"nodeType":"InheritanceSpecifier","src":"696:18:15"},{"baseName":{"id":2430,"name":"IPeripheryImmutableState","nameLocations":["720:24:15"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"720:24:15"},"id":2431,"nodeType":"InheritanceSpecifier","src":"720:24:15"},{"baseName":{"id":2432,"name":"IERC721Metadata","nameLocations":["750:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1388,"src":"750:15:15"},"id":2433,"nodeType":"InheritanceSpecifier","src":"750:15:15"},{"baseName":{"id":2434,"name":"IERC721Enumerable","nameLocations":["771:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"771:17:15"},"id":2435,"nodeType":"InheritanceSpecifier","src":"771:17:15"},{"baseName":{"id":2436,"name":"IERC721Permit","nameLocations":["794:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"794:13:15"},"id":2437,"nodeType":"InheritanceSpecifier","src":"794:13:15"}],"canonicalName":"INonfungiblePositionManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"452:177:15","text":"@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."},"fullyImplemented":false,"id":2613,"linearizedBaseContracts":[2613,2414,1361,1388,1330,1752,2629,2655,2674],"name":"INonfungiblePositionManager","nameLocation":"639:27:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"814:458:15","text":"@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"},"eventSelector":"3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f","id":2448,"name":"IncreaseLiquidity","nameLocation":"1283:17:15","nodeType":"EventDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1326:7:15","nodeType":"VariableDeclaration","scope":2448,"src":"1310:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2442,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"1351:9:15","nodeType":"VariableDeclaration","scope":2448,"src":"1343:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2441,"name":"uint128","nodeType":"ElementaryTypeName","src":"1343:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2444,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1378:7:15","nodeType":"VariableDeclaration","scope":2448,"src":"1370:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2446,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1403:7:15","nodeType":"VariableDeclaration","scope":2448,"src":"1395:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:116:15"},"src":"1277:140:15"},{"anonymous":false,"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"1422:419:15","text":"@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"},"eventSelector":"26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4","id":2459,"name":"DecreaseLiquidity","nameLocation":"1852:17:15","nodeType":"EventDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:15","nodeType":"VariableDeclaration","scope":2459,"src":"1879:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2453,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"1920:9:15","nodeType":"VariableDeclaration","scope":2459,"src":"1912:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2452,"name":"uint128","nodeType":"ElementaryTypeName","src":"1912:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2455,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1947:7:15","nodeType":"VariableDeclaration","scope":2459,"src":"1939:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2457,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1972:7:15","nodeType":"VariableDeclaration","scope":2459,"src":"1964:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1869:116:15"},"src":"1846:140:15"},{"anonymous":false,"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"1991:522:15","text":"@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"},"eventSelector":"40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01","id":2470,"name":"Collect","nameLocation":"2524:7:15","nodeType":"EventDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2557:7:15","nodeType":"VariableDeclaration","scope":2470,"src":"2541:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2582:9:15","nodeType":"VariableDeclaration","scope":2470,"src":"2574:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"2574:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2466,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2609:7:15","nodeType":"VariableDeclaration","scope":2470,"src":"2601:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2468,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2634:7:15","nodeType":"VariableDeclaration","scope":2470,"src":"2626:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2531:116:15"},"src":"2518:130:15"},{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"2654:1157:15","text":"@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"},"functionSelector":"99fbab88","id":2500,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"3825:9:15","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"tokenId","nameLocation":"3852:7:15","nodeType":"VariableDeclaration","scope":2500,"src":"3844:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3844:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3834:31:15"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"nonce","nameLocation":"3933:5:15","nodeType":"VariableDeclaration","scope":2500,"src":"3926:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2475,"name":"uint96","nodeType":"ElementaryTypeName","src":"3926:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"operator","nameLocation":"3960:8:15","nodeType":"VariableDeclaration","scope":2500,"src":"3952:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"token0","nameLocation":"3990:6:15","nodeType":"VariableDeclaration","scope":2500,"src":"3982:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"3982:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"token1","nameLocation":"4018:6:15","nodeType":"VariableDeclaration","scope":2500,"src":"4010:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"fee","nameLocation":"4045:3:15","nodeType":"VariableDeclaration","scope":2500,"src":"4038:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2483,"name":"uint24","nodeType":"ElementaryTypeName","src":"4038:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"tickLower","nameLocation":"4068:9:15","nodeType":"VariableDeclaration","scope":2500,"src":"4062:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2485,"name":"int24","nodeType":"ElementaryTypeName","src":"4062:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"tickUpper","nameLocation":"4097:9:15","nodeType":"VariableDeclaration","scope":2500,"src":"4091:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2487,"name":"int24","nodeType":"ElementaryTypeName","src":"4091:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"liquidity","nameLocation":"4128:9:15","nodeType":"VariableDeclaration","scope":2500,"src":"4120:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2489,"name":"uint128","nodeType":"ElementaryTypeName","src":"4120:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"4159:24:15","nodeType":"VariableDeclaration","scope":2500,"src":"4151:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"4151:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"4205:24:15","nodeType":"VariableDeclaration","scope":2500,"src":"4197:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"tokensOwed0","nameLocation":"4251:11:15","nodeType":"VariableDeclaration","scope":2500,"src":"4243:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2495,"name":"uint128","nodeType":"ElementaryTypeName","src":"4243:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"tokensOwed1","nameLocation":"4284:11:15","nodeType":"VariableDeclaration","scope":2500,"src":"4276:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2497,"name":"uint128","nodeType":"ElementaryTypeName","src":"4276:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3912:393:15"},"scope":2613,"src":"3816:490:15","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.MintParams","id":2523,"members":[{"constant":false,"id":2502,"mutability":"mutable","name":"token0","nameLocation":"4348:6:15","nodeType":"VariableDeclaration","scope":2523,"src":"4340:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"4340:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"token1","nameLocation":"4372:6:15","nodeType":"VariableDeclaration","scope":2523,"src":"4364:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"fee","nameLocation":"4395:3:15","nodeType":"VariableDeclaration","scope":2523,"src":"4388:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2505,"name":"uint24","nodeType":"ElementaryTypeName","src":"4388:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"tickLower","nameLocation":"4414:9:15","nodeType":"VariableDeclaration","scope":2523,"src":"4408:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2507,"name":"int24","nodeType":"ElementaryTypeName","src":"4408:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"tickUpper","nameLocation":"4439:9:15","nodeType":"VariableDeclaration","scope":2523,"src":"4433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2509,"name":"int24","nodeType":"ElementaryTypeName","src":"4433:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"amount0Desired","nameLocation":"4466:14:15","nodeType":"VariableDeclaration","scope":2523,"src":"4458:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4458:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"amount1Desired","nameLocation":"4498:14:15","nodeType":"VariableDeclaration","scope":2523,"src":"4490:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"amount0Min","nameLocation":"4530:10:15","nodeType":"VariableDeclaration","scope":2523,"src":"4522:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"amount1Min","nameLocation":"4558:10:15","nodeType":"VariableDeclaration","scope":2523,"src":"4550:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"recipient","nameLocation":"4586:9:15","nodeType":"VariableDeclaration","scope":2523,"src":"4578:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"4578:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"deadline","nameLocation":"4613:8:15","nodeType":"VariableDeclaration","scope":2523,"src":"4605:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MintParams","nameLocation":"4319:10:15","nodeType":"StructDefinition","scope":2613,"src":"4312:316:15","visibility":"public"},{"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"4634:586:15","text":"@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"},"functionSelector":"88316456","id":2538,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"5234:4:15","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"params","nameLocation":"5268:6:15","nodeType":"VariableDeclaration","scope":2538,"src":"5248:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_calldata_ptr","typeString":"struct INonfungiblePositionManager.MintParams"},"typeName":{"id":2526,"nodeType":"UserDefinedTypeName","pathNode":{"id":2525,"name":"MintParams","nameLocations":["5248:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2523,"src":"5248:10:15"},"referencedDeclaration":2523,"src":"5248:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_storage_ptr","typeString":"struct INonfungiblePositionManager.MintParams"}},"visibility":"internal"}],"src":"5238:42:15"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"tokenId","nameLocation":"5352:7:15","nodeType":"VariableDeclaration","scope":2538,"src":"5344:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"liquidity","nameLocation":"5381:9:15","nodeType":"VariableDeclaration","scope":2538,"src":"5373:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2531,"name":"uint128","nodeType":"ElementaryTypeName","src":"5373:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"amount0","nameLocation":"5412:7:15","nodeType":"VariableDeclaration","scope":2538,"src":"5404:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"amount1","nameLocation":"5441:7:15","nodeType":"VariableDeclaration","scope":2538,"src":"5433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5330:128:15"},"scope":2613,"src":"5225:234:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.IncreaseLiquidityParams","id":2551,"members":[{"constant":false,"id":2540,"mutability":"mutable","name":"tokenId","nameLocation":"5514:7:15","nodeType":"VariableDeclaration","scope":2551,"src":"5506:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"amount0Desired","nameLocation":"5539:14:15","nodeType":"VariableDeclaration","scope":2551,"src":"5531:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5531:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"amount1Desired","nameLocation":"5571:14:15","nodeType":"VariableDeclaration","scope":2551,"src":"5563:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5563:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"amount0Min","nameLocation":"5603:10:15","nodeType":"VariableDeclaration","scope":2551,"src":"5595:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5595:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"amount1Min","nameLocation":"5631:10:15","nodeType":"VariableDeclaration","scope":2551,"src":"5623:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"deadline","nameLocation":"5659:8:15","nodeType":"VariableDeclaration","scope":2551,"src":"5651:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5651:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"IncreaseLiquidityParams","nameLocation":"5472:23:15","nodeType":"StructDefinition","scope":2613,"src":"5465:209:15","visibility":"public"},{"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"5680:821:15","text":"@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"},"functionSelector":"219f5d17","id":2564,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLiquidity","nameLocation":"6515:17:15","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"params","nameLocation":"6575:6:15","nodeType":"VariableDeclaration","scope":2564,"src":"6542:39:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_IncreaseLiquidityParams_$2551_calldata_ptr","typeString":"struct INonfungiblePositionManager.IncreaseLiquidityParams"},"typeName":{"id":2554,"nodeType":"UserDefinedTypeName","pathNode":{"id":2553,"name":"IncreaseLiquidityParams","nameLocations":["6542:23:15"],"nodeType":"IdentifierPath","referencedDeclaration":2551,"src":"6542:23:15"},"referencedDeclaration":2551,"src":"6542:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_IncreaseLiquidityParams_$2551_storage_ptr","typeString":"struct INonfungiblePositionManager.IncreaseLiquidityParams"}},"visibility":"internal"}],"src":"6532:55:15"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"liquidity","nameLocation":"6646:9:15","nodeType":"VariableDeclaration","scope":2564,"src":"6638:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2557,"name":"uint128","nodeType":"ElementaryTypeName","src":"6638:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"amount0","nameLocation":"6665:7:15","nodeType":"VariableDeclaration","scope":2564,"src":"6657:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"6657:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"amount1","nameLocation":"6682:7:15","nodeType":"VariableDeclaration","scope":2564,"src":"6674:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6674:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6637:53:15"},"scope":2613,"src":"6506:185:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.DecreaseLiquidityParams","id":2575,"members":[{"constant":false,"id":2566,"mutability":"mutable","name":"tokenId","nameLocation":"6746:7:15","nodeType":"VariableDeclaration","scope":2575,"src":"6738:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"liquidity","nameLocation":"6771:9:15","nodeType":"VariableDeclaration","scope":2575,"src":"6763:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2567,"name":"uint128","nodeType":"ElementaryTypeName","src":"6763:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"amount0Min","nameLocation":"6798:10:15","nodeType":"VariableDeclaration","scope":2575,"src":"6790:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"amount1Min","nameLocation":"6826:10:15","nodeType":"VariableDeclaration","scope":2575,"src":"6818:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"deadline","nameLocation":"6854:8:15","nodeType":"VariableDeclaration","scope":2575,"src":"6846:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"6846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DecreaseLiquidityParams","nameLocation":"6704:23:15","nodeType":"StructDefinition","scope":2613,"src":"6697:172:15","visibility":"public"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"6875:702:15","text":"@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"},"functionSelector":"0c49ccbe","id":2586,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseLiquidity","nameLocation":"7591:17:15","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"params","nameLocation":"7651:6:15","nodeType":"VariableDeclaration","scope":2586,"src":"7618:39:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2575_calldata_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams"},"typeName":{"id":2578,"nodeType":"UserDefinedTypeName","pathNode":{"id":2577,"name":"DecreaseLiquidityParams","nameLocations":["7618:23:15"],"nodeType":"IdentifierPath","referencedDeclaration":2575,"src":"7618:23:15"},"referencedDeclaration":2575,"src":"7618:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2575_storage_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams"}},"visibility":"internal"}],"src":"7608:55:15"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"amount0","nameLocation":"7698:7:15","nodeType":"VariableDeclaration","scope":2586,"src":"7690:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"7690:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"amount1","nameLocation":"7715:7:15","nodeType":"VariableDeclaration","scope":2586,"src":"7707:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"7707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7689:34:15"},"scope":2613,"src":"7582:142:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.CollectParams","id":2595,"members":[{"constant":false,"id":2588,"mutability":"mutable","name":"tokenId","nameLocation":"7769:7:15","nodeType":"VariableDeclaration","scope":2595,"src":"7761:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"recipient","nameLocation":"7794:9:15","nodeType":"VariableDeclaration","scope":2595,"src":"7786:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"7786:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"amount0Max","nameLocation":"7821:10:15","nodeType":"VariableDeclaration","scope":2595,"src":"7813:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2591,"name":"uint128","nodeType":"ElementaryTypeName","src":"7813:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"amount1Max","nameLocation":"7849:10:15","nodeType":"VariableDeclaration","scope":2595,"src":"7841:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2593,"name":"uint128","nodeType":"ElementaryTypeName","src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"CollectParams","nameLocation":"7737:13:15","nodeType":"StructDefinition","scope":2613,"src":"7730:136:15","visibility":"public"},{"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"7872:489:15","text":"@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"fc6f7865","id":2606,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"8375:7:15","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"params","nameLocation":"8415:6:15","nodeType":"VariableDeclaration","scope":2606,"src":"8392:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CollectParams_$2595_calldata_ptr","typeString":"struct INonfungiblePositionManager.CollectParams"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"CollectParams","nameLocations":["8392:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2595,"src":"8392:13:15"},"referencedDeclaration":2595,"src":"8392:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_CollectParams_$2595_storage_ptr","typeString":"struct INonfungiblePositionManager.CollectParams"}},"visibility":"internal"}],"src":"8382:45:15"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"amount0","nameLocation":"8462:7:15","nodeType":"VariableDeclaration","scope":2606,"src":"8454:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"amount1","nameLocation":"8479:7:15","nodeType":"VariableDeclaration","scope":2606,"src":"8471:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8453:34:15"},"scope":2613,"src":"8366:122:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"8494:213:15","text":"@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"},"functionSelector":"42966c68","id":2612,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"8721:4:15","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"tokenId","nameLocation":"8734:7:15","nodeType":"VariableDeclaration","scope":2612,"src":"8726:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"8726:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8725:17:15"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[],"src":"8759:0:15"},"scope":2613,"src":"8712:48:15","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2614,"src":"629:8133:15","usedErrors":[]}],"src":"45:8718:15"},"id":15},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","exportedSymbols":{"IPeripheryImmutableState":[2629]},"id":2630,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2615,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IPeripheryImmutableState","contractDependencies":[],"contractKind":"interface","documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"71:91:16","text":"@title Immutable state\n @notice Functions that return immutable state of the router"},"fullyImplemented":false,"id":2629,"linearizedBaseContracts":[2629],"name":"IPeripheryImmutableState","nameLocation":"172:24:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"203:57:16","text":"@return Returns the address of the Uniswap V3 factory"},"functionSelector":"c45a0155","id":2622,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"274:7:16","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[],"src":"281:2:16"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"307:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"306:9:16"},"scope":2629,"src":"265:51:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"322:40:16","text":"@return Returns the address of WETH9"},"functionSelector":"4aa4a4fc","id":2628,"implemented":false,"kind":"function","modifiers":[],"name":"WETH9","nameLocation":"376:5:16","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"381:2:16"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"407:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:9:16"},"scope":2629,"src":"367:49:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2630,"src":"162:256:16","usedErrors":[]}],"src":"45:374:16"},"id":16},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol","exportedSymbols":{"IPeripheryPayments":[2655]},"id":2656,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2631,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IPeripheryPayments","contractDependencies":[],"contractKind":"interface","documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"71:92:17","text":"@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"},"fullyImplemented":false,"id":2655,"linearizedBaseContracts":[2655],"name":"IPeripheryPayments","nameLocation":"173:18:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"198:302:17","text":"@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"},"functionSelector":"49404b7c","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"unwrapWETH9","nameLocation":"514:11:17","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"amountMinimum","nameLocation":"534:13:17","nodeType":"VariableDeclaration","scope":2640,"src":"526:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"recipient","nameLocation":"557:9:17","nodeType":"VariableDeclaration","scope":2640,"src":"549:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:42:17"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[],"src":"584:0:17"},"scope":2655,"src":"505:80:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"591:225:17","text":"@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"},"functionSelector":"12210e8a","id":2644,"implemented":false,"kind":"function","modifiers":[],"name":"refundETH","nameLocation":"830:9:17","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"839:2:17"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"858:0:17"},"scope":2655,"src":"821:38:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"865:427:17","text":"@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"},"functionSelector":"df2ab5bb","id":2654,"implemented":false,"kind":"function","modifiers":[],"name":"sweepToken","nameLocation":"1306:10:17","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"token","nameLocation":"1334:5:17","nodeType":"VariableDeclaration","scope":2654,"src":"1326:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"amountMinimum","nameLocation":"1357:13:17","nodeType":"VariableDeclaration","scope":2654,"src":"1349:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"recipient","nameLocation":"1388:9:17","nodeType":"VariableDeclaration","scope":2654,"src":"1380:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1316:87:17"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[],"src":"1420:0:17"},"scope":2655,"src":"1297:124:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2656,"src":"163:1260:17","usedErrors":[]}],"src":"45:1379:17"},"id":17},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol","exportedSymbols":{"IPoolInitializer":[2674]},"id":2675,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2657,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:18"},{"id":2658,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolInitializer","contractDependencies":[],"contractKind":"interface","documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"91:194:18","text":"@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."},"fullyImplemented":false,"id":2674,"linearizedBaseContracts":[2674],"name":"IPoolInitializer","nameLocation":"295:16:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"318:648:18","text":"@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"},"functionSelector":"13ead562","id":2673,"implemented":false,"kind":"function","modifiers":[],"name":"createAndInitializePoolIfNecessary","nameLocation":"980:34:18","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"token0","nameLocation":"1032:6:18","nodeType":"VariableDeclaration","scope":2673,"src":"1024:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"token1","nameLocation":"1056:6:18","nodeType":"VariableDeclaration","scope":2673,"src":"1048:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"fee","nameLocation":"1079:3:18","nodeType":"VariableDeclaration","scope":2673,"src":"1072:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2665,"name":"uint24","nodeType":"ElementaryTypeName","src":"1072:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1100:12:18","nodeType":"VariableDeclaration","scope":2673,"src":"1092:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2667,"name":"uint160","nodeType":"ElementaryTypeName","src":"1092:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1014:104:18"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"pool","nameLocation":"1153:4:18","nodeType":"VariableDeclaration","scope":2673,"src":"1145:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1144:14:18"},"scope":2674,"src":"971:188:18","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2675,"src":"285:876:18","usedErrors":[]}],"src":"45:1117:18"},"id":18},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[2774],"IUniswapV3SwapCallback":[2379]},"id":2775,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2676,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:19"},{"id":2677,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:19"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2775,"sourceUnit":2380,"src":"91:83:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2680,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:19"],"nodeType":"IdentifierPath","referencedDeclaration":2379,"src":"305:22:19"},"id":2681,"nodeType":"InheritanceSpecifier","src":"305:22:19"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"176:104:19","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":2774,"linearizedBaseContracts":[2774,2379],"name":"ISwapRouter","nameLocation":"290:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2698,"members":[{"constant":false,"id":2683,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:19","nodeType":"VariableDeclaration","scope":2698,"src":"374:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:19","nodeType":"VariableDeclaration","scope":2698,"src":"399:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"fee","nameLocation":"432:3:19","nodeType":"VariableDeclaration","scope":2698,"src":"425:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2686,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"recipient","nameLocation":"453:9:19","nodeType":"VariableDeclaration","scope":2698,"src":"445:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"deadline","nameLocation":"480:8:19","nodeType":"VariableDeclaration","scope":2698,"src":"472:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2693,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:19","nodeType":"VariableDeclaration","scope":2698,"src":"498:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:19","nodeType":"VariableDeclaration","scope":2698,"src":"524:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:19","nodeType":"VariableDeclaration","scope":2698,"src":"558:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2696,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:19","nodeType":"StructDefinition","scope":2774,"src":"334:256:19","visibility":"public"},{"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"596:250:19","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2707,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:19","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"params","nameLocation":"909:6:19","nodeType":"VariableDeclaration","scope":2707,"src":"877:38:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2701,"nodeType":"UserDefinedTypeName","pathNode":{"id":2700,"name":"ExactInputSingleParams","nameLocations":["877:22:19"],"nodeType":"IdentifierPath","referencedDeclaration":2698,"src":"877:22:19"},"referencedDeclaration":2698,"src":"877:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:19"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:19","nodeType":"VariableDeclaration","scope":2707,"src":"943:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:19"},"scope":2774,"src":"851:111:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2718,"members":[{"constant":false,"id":2709,"mutability":"mutable","name":"path","nameLocation":"1008:4:19","nodeType":"VariableDeclaration","scope":2718,"src":"1002:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2708,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:19","nodeType":"VariableDeclaration","scope":2718,"src":"1022:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:19","nodeType":"VariableDeclaration","scope":2718,"src":"1049:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:19","nodeType":"VariableDeclaration","scope":2718,"src":"1075:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:19","nodeType":"VariableDeclaration","scope":2718,"src":"1101:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:19","nodeType":"StructDefinition","scope":2774,"src":"968:164:19","visibility":"public"},{"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"1138:273:19","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2727,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:19","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"params","nameLocation":"1462:6:19","nodeType":"VariableDeclaration","scope":2727,"src":"1436:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2718_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"ExactInputParams","nameLocations":["1436:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":2718,"src":"1436:16:19"},"referencedDeclaration":2718,"src":"1436:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2718_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:19"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:19","nodeType":"VariableDeclaration","scope":2727,"src":"1496:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:19"},"scope":2774,"src":"1416:99:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":2744,"members":[{"constant":false,"id":2729,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:19","nodeType":"VariableDeclaration","scope":2744,"src":"1562:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:19","nodeType":"VariableDeclaration","scope":2744,"src":"1587:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"fee","nameLocation":"1620:3:19","nodeType":"VariableDeclaration","scope":2744,"src":"1613:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2732,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:19","nodeType":"VariableDeclaration","scope":2744,"src":"1633:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:19","nodeType":"VariableDeclaration","scope":2744,"src":"1660:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:19","nodeType":"VariableDeclaration","scope":2744,"src":"1686:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:19","nodeType":"VariableDeclaration","scope":2744,"src":"1713:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:19","nodeType":"VariableDeclaration","scope":2744,"src":"1746:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2742,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:19","nodeType":"StructDefinition","scope":2774,"src":"1521:257:19","visibility":"public"},{"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"1784:250:19","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":2753,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:19","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"params","nameLocation":"2099:6:19","nodeType":"VariableDeclaration","scope":2753,"src":"2066:39:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2744_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":2747,"nodeType":"UserDefinedTypeName","pathNode":{"id":2746,"name":"ExactOutputSingleParams","nameLocations":["2066:23:19"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"2066:23:19"},"referencedDeclaration":2744,"src":"2066:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2744_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:19"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:19","nodeType":"VariableDeclaration","scope":2753,"src":"2133:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:19"},"scope":2774,"src":"2039:112:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":2764,"members":[{"constant":false,"id":2755,"mutability":"mutable","name":"path","nameLocation":"2198:4:19","nodeType":"VariableDeclaration","scope":2764,"src":"2192:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2754,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:19","nodeType":"VariableDeclaration","scope":2764,"src":"2212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:19","nodeType":"VariableDeclaration","scope":2764,"src":"2239:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:19","nodeType":"VariableDeclaration","scope":2764,"src":"2265:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:19","nodeType":"VariableDeclaration","scope":2764,"src":"2292:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:19","nodeType":"StructDefinition","scope":2774,"src":"2157:165:19","visibility":"public"},{"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"2328:284:19","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":2773,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:19","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"params","nameLocation":"2665:6:19","nodeType":"VariableDeclaration","scope":2773,"src":"2638:33:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2764_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"ExactOutputParams","nameLocations":["2638:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"2638:17:19"},"referencedDeclaration":2764,"src":"2638:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2764_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:19"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:19","nodeType":"VariableDeclaration","scope":2773,"src":"2699:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:19"},"scope":2774,"src":"2617:100:19","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2775,"src":"280:2439:19","usedErrors":[]}],"src":"45:2675:19"},"id":19},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol","exportedSymbols":{"PoolAddress":[2874]},"id":2875,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2776,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"PoolAddress","contractDependencies":[],"contractKind":"library","documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"94:96:20","text":"@title Provides functions for deriving a pool address from the factory, tokens, and the fee"},"fullyImplemented":true,"id":2874,"linearizedBaseContracts":[2874],"name":"PoolAddress","nameLocation":"198:11:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2780,"mutability":"constant","name":"POOL_INIT_CODE_HASH","nameLocation":"242:19:20","nodeType":"VariableDeclaration","scope":2874,"src":"216:122:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"216:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"272:66:20","typeDescriptions":{"typeIdentifier":"t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1","typeString":"int_const 1028...(70 digits omitted)...6276"},"value":"0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"},"visibility":"internal"},{"canonicalName":"PoolAddress.PoolKey","id":2787,"members":[{"constant":false,"id":2782,"mutability":"mutable","name":"token0","nameLocation":"426:6:20","nodeType":"VariableDeclaration","scope":2787,"src":"418:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"token1","nameLocation":"450:6:20","nodeType":"VariableDeclaration","scope":2787,"src":"442:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"fee","nameLocation":"473:3:20","nodeType":"VariableDeclaration","scope":2787,"src":"466:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2785,"name":"uint24","nodeType":"ElementaryTypeName","src":"466:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"PoolKey","nameLocation":"400:7:20","nodeType":"StructDefinition","scope":2874,"src":"393:90:20","visibility":"public"},{"body":{"id":2818,"nodeType":"Block","src":"948:141:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"962:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2801,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"971:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"962:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2811,"nodeType":"IfStatement","src":"958:56:20","trueBody":{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2803,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"980:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2804,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"988:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2805,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"979:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2806,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"999:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2807,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"1007:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"998:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"979:35:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2810,"nodeType":"ExpressionStatement","src":"979:35:20"}},{"expression":{"arguments":[{"id":2813,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"1048:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2814,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"1064:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2815,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"1077:3:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":2812,"name":"PoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1031:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolKey_$2787_storage_ptr_$","typeString":"type(struct PoolAddress.PoolKey storage pointer)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1040:6:20","1056:6:20","1072:3:20"],"names":["token0","token1","fee"],"nodeType":"FunctionCall","src":"1031:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"functionReturnParameters":2799,"id":2817,"nodeType":"Return","src":"1024:58:20"}]},"documentation":{"id":2788,"nodeType":"StructuredDocumentation","src":"489:321:20","text":"@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolKey","nameLocation":"824:10:20","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"tokenA","nameLocation":"852:6:20","nodeType":"VariableDeclaration","scope":2819,"src":"844:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"tokenB","nameLocation":"876:6:20","nodeType":"VariableDeclaration","scope":2819,"src":"868:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"fee","nameLocation":"899:3:20","nodeType":"VariableDeclaration","scope":2819,"src":"892:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2793,"name":"uint24","nodeType":"ElementaryTypeName","src":"892:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"834:74:20"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2819,"src":"932:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"PoolKey","nameLocations":["932:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"932:7:20"},"referencedDeclaration":2787,"src":"932:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"931:16:20"},"scope":2874,"src":"815:274:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"1464:671:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2831,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1482:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1486:6:20","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":2782,"src":"1482:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2833,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1495:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1499:6:20","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"1495:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1482:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1474:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"ExpressionStatement","src":"1474:32:20"},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2838,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1516:4:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1749:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":2851,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"1790:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":2855,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1889:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1893:6:20","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":2782,"src":"1889:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2857,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1901:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1905:6:20","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"1901:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2859,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1913:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1917:3:20","memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"1913:7:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":2853,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1878:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1882:6:20","memberName":"encode","nodeType":"MemberAccess","src":"1878:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2852,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1831:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1831:124:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2863,"name":"POOL_INIT_CODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"1989:19:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1699:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1703:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"1699:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1699:339:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2847,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1660:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1660:404:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1627:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1627:7:20","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1627:459:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1598:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2843,"name":"uint160","nodeType":"ElementaryTypeName","src":"1598:7:20","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1598:506:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1573:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:20","typeDescriptions":{}}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:545:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1523:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"1523:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:605:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1516:612:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2871,"nodeType":"ExpressionStatement","src":"1516:612:20"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"1095:236:20","text":"@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1345:14:20","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"factory","nameLocation":"1377:7:20","nodeType":"VariableDeclaration","scope":2873,"src":"1369:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"key","nameLocation":"1409:3:20","nodeType":"VariableDeclaration","scope":2873,"src":"1394:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"PoolKey","nameLocations":["1394:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"1394:7:20"},"referencedDeclaration":2787,"src":"1394:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2787_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"1359:59:20"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"pool","nameLocation":"1458:4:20","nodeType":"VariableDeclaration","scope":2873,"src":"1442:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"1442:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1441:22:20"},"scope":2874,"src":"1336:799:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2875,"src":"190:1947:20","usedErrors":[]}],"src":"45:2093:20"},"id":20},"contracts/factories/MecenateFeedFactory.sol":{"ast":{"absolutePath":"contracts/factories/MecenateFeedFactory.sol","exportedSymbols":{"Context":[1740],"EnumerableSet":[2365],"FeedViewer":[3922],"IMecenateFeed":[3496],"IMecenateTreasury":[3509],"IMecenateUsers":[3567],"MecenateFeedFactory":[3364],"Ownable":[112],"Structures":[3746]},"id":3365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2876,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":113,"src":"57:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":2878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":2366,"src":"110:65:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateUsers.sol","file":"../interfaces/IMecenateUsers.sol","id":2879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":3568,"src":"176:42:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateTreasury.sol","file":"../interfaces/IMecenateTreasury.sol","id":2880,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":3510,"src":"219:45:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/modules/FeedViewer.sol","file":"../modules/FeedViewer.sol","id":2881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":3923,"src":"265:35:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2882,"name":"Ownable","nameLocations":["334:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"334:7:21"},"id":2883,"nodeType":"InheritanceSpecifier","src":"334:7:21"},{"baseName":{"id":2884,"name":"FeedViewer","nameLocations":["343:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"343:10:21"},"id":2885,"nodeType":"InheritanceSpecifier","src":"343:10:21"}],"canonicalName":"MecenateFeedFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3364,"linearizedBaseContracts":[3364,3922,112,1740],"name":"MecenateFeedFactory","nameLocation":"311:19:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2889,"libraryName":{"id":2886,"name":"EnumerableSet","nameLocations":["366:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"366:13:21"},"nodeType":"UsingForDirective","src":"360:49:21","typeName":{"id":2888,"nodeType":"UserDefinedTypeName","pathNode":{"id":2887,"name":"EnumerableSet.AddressSet","nameLocations":["384:13:21","398:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"384:24:21"},"referencedDeclaration":2078,"src":"384:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":2892,"mutability":"mutable","name":"feeds","nameLocation":"449:5:21","nodeType":"VariableDeclaration","scope":3364,"src":"415:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2891,"nodeType":"UserDefinedTypeName","pathNode":{"id":2890,"name":"EnumerableSet.AddressSet","nameLocations":["415:13:21","429:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"415:24:21"},"referencedDeclaration":2078,"src":"415:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"settings","nameLocation":"497:8:21","nodeType":"VariableDeclaration","scope":3364,"src":"461:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings"},"typeName":{"id":2894,"nodeType":"UserDefinedTypeName","pathNode":{"id":2893,"name":"Structures.FactorySettings","nameLocations":["461:10:21","472:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":3636,"src":"461:26:21"},"referencedDeclaration":3636,"src":"461:26:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage_ptr","typeString":"struct Structures.FactorySettings"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"feedByteCode","nameLocation":"527:12:21","nodeType":"VariableDeclaration","scope":3364,"src":"512:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":2896,"name":"bytes","nodeType":"ElementaryTypeName","src":"512:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"routerFee","nameLocation":"580:9:21","nodeType":"VariableDeclaration","scope":3364,"src":"546:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint24_$","typeString":"mapping(uint8 => uint24)"},"typeName":{"id":2900,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2898,"name":"uint8","nodeType":"ElementaryTypeName","src":"554:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Mapping","src":"546:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint24_$","typeString":"mapping(uint8 => uint24)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2899,"name":"uint24","nodeType":"ElementaryTypeName","src":"563:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"feedStore","nameLocation":"650:9:21","nodeType":"VariableDeclaration","scope":3364,"src":"596:63:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$2078_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet)"},"typeName":{"id":2905,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"596:44:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$2078_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2904,"nodeType":"UserDefinedTypeName","pathNode":{"id":2903,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:21","629:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"615:24:21"},"referencedDeclaration":2078,"src":"615:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"createdContracts","nameLocation":"700:16:21","nodeType":"VariableDeclaration","scope":3364,"src":"666:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2909,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"666:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"685:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"functionSelector":"5dc96d16","id":2913,"mutability":"mutable","name":"burnEnabled","nameLocation":"735:11:21","nodeType":"VariableDeclaration","scope":3364,"src":"723:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"723:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"749:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"constant":false,"functionSelector":"067bd3b4","id":2915,"mutability":"mutable","name":"contractCounter","nameLocation":"776:15:21","nodeType":"VariableDeclaration","scope":3364,"src":"761:30:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b658664a46408e6670a38ec7ea8b7614c9e2916184dff2fad99d3a7a3491ca7d","id":2919,"name":"FeedCreated","nameLocation":"804:11:21","nodeType":"EventDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"indexed":true,"mutability":"mutable","name":"addr","nameLocation":"832:4:21","nodeType":"VariableDeclaration","scope":2919,"src":"816:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"815:22:21"},"src":"798:40:21"},{"constant":false,"functionSelector":"f86d0b38","id":2921,"mutability":"mutable","name":"major","nameLocation":"857:5:21","nodeType":"VariableDeclaration","scope":3364,"src":"844:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2920,"name":"uint8","nodeType":"ElementaryTypeName","src":"844:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"bb834b0e","id":2923,"mutability":"mutable","name":"minor","nameLocation":"881:5:21","nodeType":"VariableDeclaration","scope":3364,"src":"868:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2922,"name":"uint8","nodeType":"ElementaryTypeName","src":"868:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"49975235","id":2925,"mutability":"mutable","name":"patch","nameLocation":"905:5:21","nodeType":"VariableDeclaration","scope":3364,"src":"892:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2924,"name":"uint8","nodeType":"ElementaryTypeName","src":"892:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"body":{"id":2933,"nodeType":"Block","src":"977:49:21","statements":[{"expression":{"expression":{"id":2930,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"994:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1003:16:21","memberName":"treasuryContract","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"994:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2929,"id":2932,"nodeType":"Return","src":"987:32:21"}]},"functionSelector":"18da0011","id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"treasuryContract","nameLocation":"926:16:21","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[],"src":"942:2:21"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"968:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:9:21"},"scope":3364,"src":"917:109:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2942,"nodeType":"Block","src":"1085:42:21","statements":[{"expression":{"expression":{"id":2939,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1102:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1111:9:21","memberName":"easSchema","nodeType":"MemberAccess","referencedDeclaration":3627,"src":"1102:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2938,"id":2941,"nodeType":"Return","src":"1095:25:21"}]},"functionSelector":"3ec4f23d","id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"easSchema","nameLocation":"1041:9:21","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[],"src":"1050:2:21"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"1076:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1076:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1075:9:21"},"scope":3364,"src":"1032:95:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2951,"nodeType":"Block","src":"1188:44:21","statements":[{"expression":{"expression":{"id":2948,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1205:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1214:11:21","memberName":"easContract","nodeType":"MemberAccess","referencedDeclaration":3625,"src":"1205:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2947,"id":2950,"nodeType":"Return","src":"1198:27:21"}]},"functionSelector":"cd77b52c","id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"easContract","nameLocation":"1142:11:21","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[],"src":"1153:2:21"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"1179:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2945,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1178:9:21"},"scope":3364,"src":"1133:99:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2960,"nodeType":"Block","src":"1290:41:21","statements":[{"expression":{"expression":{"id":2957,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1307:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1316:8:21","memberName":"daiToken","nodeType":"MemberAccess","referencedDeclaration":3631,"src":"1307:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2956,"id":2959,"nodeType":"Return","src":"1300:24:21"}]},"functionSelector":"be22f546","id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"daiToken","nameLocation":"1247:8:21","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[],"src":"1255:2:21"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"1281:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1280:9:21"},"scope":3364,"src":"1238:93:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2969,"nodeType":"Block","src":"1390:42:21","statements":[{"expression":{"expression":{"id":2966,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1407:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1416:9:21","memberName":"wethToken","nodeType":"MemberAccess","referencedDeclaration":3633,"src":"1407:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2965,"id":2968,"nodeType":"Return","src":"1400:25:21"}]},"functionSelector":"4b57b0be","id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"wethToken","nameLocation":"1346:9:21","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[],"src":"1355:2:21"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"1381:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1380:9:21"},"scope":3364,"src":"1337:95:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2978,"nodeType":"Block","src":"1491:42:21","statements":[{"expression":{"expression":{"id":2975,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1508:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1517:9:21","memberName":"museToken","nodeType":"MemberAccess","referencedDeclaration":3629,"src":"1508:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2974,"id":2977,"nodeType":"Return","src":"1501:25:21"}]},"functionSelector":"f77800e5","id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"museToken","nameLocation":"1447:9:21","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[],"src":"1456:2:21"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2979,"src":"1482:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1481:9:21"},"scope":3364,"src":"1438:95:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2987,"nodeType":"Block","src":"1589:39:21","statements":[{"expression":{"expression":{"id":2984,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"1606:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":2985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1615:6:21","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":3635,"src":"1606:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2983,"id":2986,"nodeType":"Return","src":"1599:22:21"}]},"functionSelector":"f887ea40","id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"router","nameLocation":"1548:6:21","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"1554:2:21"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2988,"src":"1580:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:9:21"},"scope":3364,"src":"1539:89:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2999,"nodeType":"Block","src":"1702:42:21","statements":[{"expression":{"baseExpression":{"id":2995,"name":"routerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1719:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint24_$","typeString":"mapping(uint8 => uint24)"}},"id":2997,"indexExpression":{"id":2996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1729:7:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1719:18:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2994,"id":2998,"nodeType":"Return","src":"1712:25:21"}]},"functionSelector":"d223a564","id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"getRouterFee","nameLocation":"1643:12:21","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"tokenId","nameLocation":"1662:7:21","nodeType":"VariableDeclaration","scope":3000,"src":"1656:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2989,"name":"uint8","nodeType":"ElementaryTypeName","src":"1656:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1655:15:21"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3000,"src":"1694:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2992,"name":"uint24","nodeType":"ElementaryTypeName","src":"1694:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1693:8:21"},"scope":3364,"src":"1634:110:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3015,"nodeType":"Block","src":"1818:41:21","statements":[{"expression":{"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3009,"name":"routerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1828:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint24_$","typeString":"mapping(uint8 => uint24)"}},"id":3011,"indexExpression":{"id":3010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1838:7:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1828:18:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3012,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1849:3:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1828:24:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3014,"nodeType":"ExpressionStatement","src":"1828:24:21"}]},"functionSelector":"e9318b47","id":3016,"implemented":true,"kind":"function","modifiers":[{"id":3007,"kind":"modifierInvocation","modifierName":{"id":3006,"name":"onlyOwner","nameLocations":["1808:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1808:9:21"},"nodeType":"ModifierInvocation","src":"1808:9:21"}],"name":"setRouterFee","nameLocation":"1759:12:21","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"tokenId","nameLocation":"1778:7:21","nodeType":"VariableDeclaration","scope":3016,"src":"1772:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3001,"name":"uint8","nodeType":"ElementaryTypeName","src":"1772:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"fee","nameLocation":"1794:3:21","nodeType":"VariableDeclaration","scope":3016,"src":"1787:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3003,"name":"uint24","nodeType":"ElementaryTypeName","src":"1787:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1771:27:21"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"1818:0:21"},"scope":3364,"src":"1750:109:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3027,"nodeType":"Block","src":"1929:45:21","statements":[{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3023,"name":"burnEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"1939:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3024,"name":"newBurnEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"1953:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1939:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3026,"nodeType":"ExpressionStatement","src":"1939:28:21"}]},"functionSelector":"7b2c835f","id":3028,"implemented":true,"kind":"function","modifiers":[{"id":3021,"kind":"modifierInvocation","modifierName":{"id":3020,"name":"onlyOwner","nameLocations":["1919:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1919:9:21"},"nodeType":"ModifierInvocation","src":"1919:9:21"}],"name":"setBurnEnabled","nameLocation":"1874:14:21","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"newBurnEnabled","nameLocation":"1894:14:21","nodeType":"VariableDeclaration","scope":3028,"src":"1889:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3017,"name":"bool","nodeType":"ElementaryTypeName","src":"1889:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1888:21:21"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[],"src":"1929:0:21"},"scope":3364,"src":"1865:109:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3039,"nodeType":"Block","src":"2042:49:21","statements":[{"expression":{"baseExpression":{"id":3035,"name":"createdContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2059:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3037,"indexExpression":{"id":3036,"name":"newFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"2076:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2059:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3034,"id":3038,"nodeType":"Return","src":"2052:32:21"}]},"functionSelector":"e58fdd04","id":3040,"implemented":true,"kind":"function","modifiers":[],"name":"isFeed","nameLocation":"1989:6:21","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"newFeed","nameLocation":"2004:7:21","nodeType":"VariableDeclaration","scope":3040,"src":"1996:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1995:17:21"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3040,"src":"2036:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"2036:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2035:6:21"},"scope":3364,"src":"1980:111:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3109,"nodeType":"Block","src":"2391:363:21","statements":[{"expression":{"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3061,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2401:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2410:16:21","memberName":"treasuryContract","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"2401:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3064,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2429:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2401:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3066,"nodeType":"ExpressionStatement","src":"2401:36:21"},{"expression":{"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3067,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2447:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2456:19:21","memberName":"usersModuleContract","nodeType":"MemberAccess","referencedDeclaration":3623,"src":"2447:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3070,"name":"usersModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2478:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2447:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3072,"nodeType":"ExpressionStatement","src":"2447:42:21"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3073,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2499:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2508:11:21","memberName":"easContract","nodeType":"MemberAccess","referencedDeclaration":3625,"src":"2499:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3076,"name":"newEasContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"2522:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2499:37:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3078,"nodeType":"ExpressionStatement","src":"2499:37:21"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3079,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2546:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2555:9:21","memberName":"easSchema","nodeType":"MemberAccess","referencedDeclaration":3627,"src":"2546:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3082,"name":"newEasSchema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"2567:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2546:33:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3084,"nodeType":"ExpressionStatement","src":"2546:33:21"},{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3085,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2589:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2598:9:21","memberName":"wethToken","nodeType":"MemberAccess","referencedDeclaration":3633,"src":"2589:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3088,"name":"wethTokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2610:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2589:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3090,"nodeType":"ExpressionStatement","src":"2589:34:21"},{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3091,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2633:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2642:9:21","memberName":"museToken","nodeType":"MemberAccess","referencedDeclaration":3629,"src":"2633:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3094,"name":"museTokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2654:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2633:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3096,"nodeType":"ExpressionStatement","src":"2633:34:21"},{"expression":{"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3097,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2677:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2686:8:21","memberName":"daiToken","nodeType":"MemberAccess","referencedDeclaration":3631,"src":"2677:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3100,"name":"daiTokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"2697:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2677:32:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3102,"nodeType":"ExpressionStatement","src":"2677:32:21"},{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3103,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2719:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2728:6:21","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":3635,"src":"2719:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3106,"name":"routerAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"2737:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2719:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3108,"nodeType":"ExpressionStatement","src":"2719:28:21"}]},"functionSelector":"9496d7f1","id":3110,"implemented":true,"kind":"function","modifiers":[{"id":3059,"kind":"modifierInvocation","modifierName":{"id":3058,"name":"onlyOwner","nameLocations":["2381:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2381:9:21"},"nodeType":"ModifierInvocation","src":"2381:9:21"}],"name":"changeMultipleSettings","nameLocation":"2106:22:21","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"treasury","nameLocation":"2146:8:21","nodeType":"VariableDeclaration","scope":3110,"src":"2138:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"usersModule","nameLocation":"2172:11:21","nodeType":"VariableDeclaration","scope":3110,"src":"2164:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"newEasContract","nameLocation":"2201:14:21","nodeType":"VariableDeclaration","scope":3110,"src":"2193:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"2193:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"newEasSchema","nameLocation":"2233:12:21","nodeType":"VariableDeclaration","scope":3110,"src":"2225:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"wethTokenAddr","nameLocation":"2263:13:21","nodeType":"VariableDeclaration","scope":3110,"src":"2255:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"museTokenAddr","nameLocation":"2294:13:21","nodeType":"VariableDeclaration","scope":3110,"src":"2286:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3051,"name":"address","nodeType":"ElementaryTypeName","src":"2286:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"daiTokenAddr","nameLocation":"2325:12:21","nodeType":"VariableDeclaration","scope":3110,"src":"2317:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3053,"name":"address","nodeType":"ElementaryTypeName","src":"2317:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"routerAddr","nameLocation":"2355:10:21","nodeType":"VariableDeclaration","scope":3110,"src":"2347:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2128:243:21"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"2391:0:21"},"scope":3364,"src":"2097:657:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3139,"nodeType":"Block","src":"2916:121:21","statements":[{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2926:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3124,"name":"newMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2934:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2926:16:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3126,"nodeType":"ExpressionStatement","src":"2926:16:21"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"minor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2952:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3128,"name":"newMinor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"2960:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2952:16:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3130,"nodeType":"ExpressionStatement","src":"2952:16:21"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"patch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2978:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3132,"name":"newPatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2986:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2978:16:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3134,"nodeType":"ExpressionStatement","src":"2978:16:21"},{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"feedByteCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3004:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3136,"name":"newByteCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"3019:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3004:26:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3138,"nodeType":"ExpressionStatement","src":"3004:26:21"}]},"functionSelector":"9407aeea","id":3140,"implemented":true,"kind":"function","modifiers":[{"id":3121,"kind":"modifierInvocation","modifierName":{"id":3120,"name":"onlyOwner","nameLocations":["2906:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2906:9:21"},"nodeType":"ModifierInvocation","src":"2906:9:21"}],"name":"setFeedByteCode","nameLocation":"2769:15:21","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"newByteCode","nameLocation":"2807:11:21","nodeType":"VariableDeclaration","scope":3140,"src":"2794:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"2794:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"newMajor","nameLocation":"2834:8:21","nodeType":"VariableDeclaration","scope":3140,"src":"2828:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3113,"name":"uint8","nodeType":"ElementaryTypeName","src":"2828:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"newMinor","nameLocation":"2858:8:21","nodeType":"VariableDeclaration","scope":3140,"src":"2852:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3115,"name":"uint8","nodeType":"ElementaryTypeName","src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"newPatch","nameLocation":"2882:8:21","nodeType":"VariableDeclaration","scope":3140,"src":"2876:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3117,"name":"uint8","nodeType":"ElementaryTypeName","src":"2876:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2784:112:21"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"2916:0:21"},"scope":3364,"src":"2760:277:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3266,"nodeType":"Block","src":"3099:1566:21","statements":[{"assignments":[3146],"declarations":[{"constant":false,"id":3146,"mutability":"mutable","name":"constructorArguments","nameLocation":"3122:20:21","nodeType":"VariableDeclaration","scope":3266,"src":"3109:33:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3145,"name":"bytes","nodeType":"ElementaryTypeName","src":"3109:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3161,"initialValue":{"arguments":[{"expression":{"id":3149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3169:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3173:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3169:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3151,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3193:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3202:19:21","memberName":"usersModuleContract","nodeType":"MemberAccess","referencedDeclaration":3623,"src":"3193:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3155,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3243:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateFeedFactory_$3364","typeString":"contract MecenateFeedFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateFeedFactory_$3364","typeString":"contract MecenateFeedFactory"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3235:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"3235:7:21","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3157,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"3262:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3158,"name":"minor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3281:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3159,"name":"patch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3300:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3147,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3145:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3149:6:21","memberName":"encode","nodeType":"MemberAccess","src":"3145:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3145:170:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3109:206:21"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3426:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3430:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3426:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":3164,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3362:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3371:19:21","memberName":"usersModuleContract","nodeType":"MemberAccess","referencedDeclaration":3623,"src":"3362:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3163,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"3347:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$3567_$","typeString":"type(contract IMecenateUsers)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$3567","typeString":"contract IMecenateUsers"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3392:16:21","memberName":"checkifUserExist","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"3347:61:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:103:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7573657220646f6573206e6f74206578697374","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3464:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18","typeString":"literal_string \"user does not exist\""},"value":"user does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18","typeString":"literal_string \"user does not exist\""}],"id":3162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3326:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:169:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"3326:169:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3514:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3518:5:21","memberName":"value","nodeType":"MemberAccess","src":"3514:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3177,"name":"getCreationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"3527:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3527:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3514:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f545f454e4f5547485f464545","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3545:16:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ebe5d23cbaee1bcc28a4b16bfe7d25d68ce2c424c78fe83bbebdfd0983c24e1","typeString":"literal_string \"NOT_ENOUGH_FEE\""},"value":"NOT_ENOUGH_FEE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ebe5d23cbaee1bcc28a4b16bfe7d25d68ce2c424c78fe83bbebdfd0983c24e1","typeString":"literal_string \"NOT_ENOUGH_FEE\""}],"id":3174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3506:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"ExpressionStatement","src":"3506:56:21"},{"assignments":[3184,null],"declarations":[{"constant":false,"id":3184,"mutability":"mutable","name":"_result","nameLocation":"3579:7:21","nodeType":"VariableDeclaration","scope":3266,"src":"3574:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3183,"name":"bool","nodeType":"ElementaryTypeName","src":"3574:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3196,"initialValue":{"arguments":[{"hexValue":"","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3672:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3187,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3600:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3609:16:21","memberName":"treasuryContract","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"3600:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3592:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"3592:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3592:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3627:4:21","memberName":"call","nodeType":"MemberAccess","src":"3592:39:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3652:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:5:21","memberName":"value","nodeType":"MemberAccess","src":"3652:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3592:79:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3592:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3573:102:21"},{"expression":{"arguments":[{"id":3198,"name":"_result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3694:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43414c4c5f4641494c4544","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3703:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3432607971be3e819458f2225636489dcaafd232f467570b81899b0f48540f3","typeString":"literal_string \"CALL_FAILED\""},"value":"CALL_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3432607971be3e819458f2225636489dcaafd232f467570b81899b0f48540f3","typeString":"literal_string \"CALL_FAILED\""}],"id":3197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3686:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"ExpressionStatement","src":"3686:31:21"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3728:17:21","subExpression":{"id":3202,"name":"contractCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3728:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"3728:17:21"},{"assignments":[3206],"declarations":[{"constant":false,"id":3206,"mutability":"mutable","name":"addr","nameLocation":"3764:4:21","nodeType":"VariableDeclaration","scope":3266,"src":"3756:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3207,"nodeType":"VariableDeclarationStatement","src":"3756:12:21"},{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"tempByteCode","nameLocation":"3792:12:21","nodeType":"VariableDeclaration","scope":3266,"src":"3779:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3208,"name":"bytes","nodeType":"ElementaryTypeName","src":"3779:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3211,"initialValue":{"id":3210,"name":"feedByteCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3807:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3779:40:21"},{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"bytecodeWithConstructor","nameLocation":"3966:23:21","nodeType":"VariableDeclaration","scope":3266,"src":"3953:36:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"3953:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3219,"initialValue":{"arguments":[{"id":3216,"name":"tempByteCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"4022:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3217,"name":"constructorArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"4048:20:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3214,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3992:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3996:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"3992:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3992:86:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3953:125:21"},{"AST":{"nodeType":"YulBlock","src":"4164:257:21","statements":[{"nodeType":"YulAssignment","src":"4178:147:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4210:1:21","type":"","value":"0"},{"arguments":[{"name":"bytecodeWithConstructor","nodeType":"YulIdentifier","src":"4233:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4258:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4229:3:21"},"nodeType":"YulFunctionCall","src":"4229:34:21"},{"arguments":[{"name":"bytecodeWithConstructor","nodeType":"YulIdentifier","src":"4287:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4281:5:21"},"nodeType":"YulFunctionCall","src":"4281:30:21"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"4186:6:21"},"nodeType":"YulFunctionCall","src":"4186:139:21"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4178:4:21"}]},{"body":{"nodeType":"YulBlock","src":"4367:44:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4392:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4395:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4385:6:21"},"nodeType":"YulFunctionCall","src":"4385:12:21"},"nodeType":"YulExpressionStatement","src":"4385:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"4360:4:21"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"4348:11:21"},"nodeType":"YulFunctionCall","src":"4348:17:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4341:6:21"},"nodeType":"YulFunctionCall","src":"4341:25:21"},"nodeType":"YulIf","src":"4338:73:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3206,"isOffset":false,"isSlot":false,"src":"4178:4:21","valueSize":1},{"declaration":3206,"isOffset":false,"isSlot":false,"src":"4360:4:21","valueSize":1},{"declaration":3213,"isOffset":false,"isSlot":false,"src":"4233:23:21","valueSize":1},{"declaration":3213,"isOffset":false,"isSlot":false,"src":"4287:23:21","valueSize":1}],"id":3220,"nodeType":"InlineAssembly","src":"4155:266:21"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"feed","nameLocation":"4439:4:21","nodeType":"VariableDeclaration","scope":3266,"src":"4431:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"4431:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3224,"initialValue":{"id":3223,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4446:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4431:19:21"},{"expression":{"arguments":[{"arguments":[{"id":3230,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4479:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4471:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"4471:7:21","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3225,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4461:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4467:3:21","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2105,"src":"4461:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2078_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"ExpressionStatement","src":"4461:24:21"},{"expression":{"arguments":[{"arguments":[{"id":3241,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4530:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4522:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"4522:7:21","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4522:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3234,"name":"feedStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"4496:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$2078_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":3237,"indexExpression":{"expression":{"id":3235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4506:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4510:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4506:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4496:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4518:3:21","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2105,"src":"4496:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2078_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4496:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"ExpressionStatement","src":"4496:40:21"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3245,"name":"createdContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"4547:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3250,"indexExpression":{"arguments":[{"id":3248,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4572:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"4564:7:21","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4547:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4581:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4547:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3253,"nodeType":"ExpressionStatement","src":"4547:38:21"},{"eventCall":{"arguments":[{"arguments":[{"id":3257,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4621:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"4613:7:21","typeDescriptions":{}}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3254,"name":"FeedCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4601:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4601:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3260,"nodeType":"EmitStatement","src":"4596:31:21"},{"expression":{"arguments":[{"id":3263,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4653:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"4645:7:21","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3144,"id":3265,"nodeType":"Return","src":"4638:20:21"}]},"functionSelector":"ca5b4e5c","id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"buildFeed","nameLocation":"3052:9:21","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"3061:2:21"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"3090:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3089:9:21"},"scope":3364,"src":"3043:1622:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3277,"nodeType":"Block","src":"4732:38:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3273,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4749:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4755:6:21","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"4749:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2078_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3272,"id":3276,"nodeType":"Return","src":"4742:21:21"}]},"functionSelector":"7fe955d4","id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeds","nameLocation":"4680:8:21","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"4688:2:21"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"4714:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"4714:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3270,"nodeType":"ArrayTypeName","src":"4714:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4713:18:21"},"scope":3364,"src":"4671:99:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3292,"nodeType":"Block","src":"4868:48:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3286,"name":"feedStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"4885:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$2078_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":3288,"indexExpression":{"id":3287,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"4895:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4885:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4901:6:21","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"4885:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2078_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4885:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3285,"id":3291,"nodeType":"Return","src":"4878:31:21"}]},"functionSelector":"b2a2e9ca","id":3293,"implemented":true,"kind":"function","modifiers":[],"name":"getFeedsOwned","nameLocation":"4785:13:21","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"user","nameLocation":"4816:4:21","nodeType":"VariableDeclaration","scope":3293,"src":"4808:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4798:28:21"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"4850:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3283,"nodeType":"ArrayTypeName","src":"4850:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4849:18:21"},"scope":3364,"src":"4776:140:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3310,"nodeType":"Block","src":"5026:63:21","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3303,"name":"feedStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"5057:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AddressSet_$2078_storage_$","typeString":"mapping(address => struct EnumerableSet.AddressSet storage ref)"}},"id":3305,"indexExpression":{"id":3304,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5067:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5057:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5073:6:21","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"5057:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2078_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5057:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3302,"name":"_getFeedsInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5043:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address[] memory) view returns (struct Structures.Feed memory[] memory)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"functionReturnParameters":3301,"id":3309,"nodeType":"Return","src":"5036:46:21"}]},"functionSelector":"ad861324","id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"getFeedsInfoOwned","nameLocation":"4931:17:21","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"user","nameLocation":"4966:4:21","nodeType":"VariableDeclaration","scope":3311,"src":"4958:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4948:28:21"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"5000:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":3298,"nodeType":"UserDefinedTypeName","pathNode":{"id":3297,"name":"Structures.Feed","nameLocations":["5000:10:21","5011:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"5000:15:21"},"referencedDeclaration":3725,"src":"5000:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"id":3299,"nodeType":"ArrayTypeName","src":"5000:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"src":"4999:26:21"},"scope":3364,"src":"4922:167:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3323,"nodeType":"Block","src":"5191:42:21","statements":[{"expression":{"arguments":[{"id":3320,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"5221:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3319,"name":"_getFeedInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"5208:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Feed_$3725_memory_ptr_$","typeString":"function (address) view returns (struct Structures.Feed memory)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5208:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"functionReturnParameters":3318,"id":3322,"nodeType":"Return","src":"5201:25:21"}]},"functionSelector":"d570a66d","id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"getFeedInfo","nameLocation":"5104:11:21","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"user","nameLocation":"5133:4:21","nodeType":"VariableDeclaration","scope":3324,"src":"5125:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"5125:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:28:21"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"5167:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":3316,"nodeType":"UserDefinedTypeName","pathNode":{"id":3315,"name":"Structures.Feed","nameLocations":["5167:10:21","5178:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"5167:15:21"},"referencedDeclaration":3725,"src":"5167:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"src":"5166:24:21"},"scope":3364,"src":"5095:138:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3337,"nodeType":"Block","src":"5312:53:21","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3332,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"5343:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2078_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5349:6:21","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"5343:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2078_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$2078_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3331,"name":"_getFeedsInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5329:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address[] memory) view returns (struct Structures.Feed memory[] memory)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5329:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"functionReturnParameters":3330,"id":3336,"nodeType":"Return","src":"5322:36:21"}]},"functionSelector":"e86ef353","id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"getFeedsInfo","nameLocation":"5248:12:21","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"5260:2:21"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3338,"src":"5286:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":3327,"nodeType":"UserDefinedTypeName","pathNode":{"id":3326,"name":"Structures.Feed","nameLocations":["5286:10:21","5297:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"5286:15:21"},"referencedDeclaration":3725,"src":"5286:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"id":3328,"nodeType":"ArrayTypeName","src":"5286:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"src":"5285:26:21"},"scope":3364,"src":"5239:126:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3349,"nodeType":"Block","src":"5466:57:21","statements":[{"expression":{"baseExpression":{"id":3345,"name":"createdContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"5483:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3347,"indexExpression":{"id":3346,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"5500:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5483:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3344,"id":3348,"nodeType":"Return","src":"5476:40:21"}]},"functionSelector":"cedf3ba2","id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"isContractCreated","nameLocation":"5380:17:21","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"contractAddress","nameLocation":"5415:15:21","nodeType":"VariableDeclaration","scope":3350,"src":"5407:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3339,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5397:39:21"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3350,"src":"5460:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"5460:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5459:6:21"},"scope":3364,"src":"5371:152:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3362,"nodeType":"Block","src":"5587:79:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":3356,"name":"settings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"5622:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_FactorySettings_$3636_storage","typeString":"struct Structures.FactorySettings storage ref"}},"id":3357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5631:16:21","memberName":"treasuryContract","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"5622:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3355,"name":"IMecenateTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5604:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateTreasury_$3509_$","typeString":"type(contract IMecenateTreasury)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5604:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateTreasury_$3509","typeString":"contract IMecenateTreasury"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5649:8:21","memberName":"fixedFee","nodeType":"MemberAccess","referencedDeclaration":3508,"src":"5604:53:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5604:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3354,"id":3361,"nodeType":"Return","src":"5597:62:21"}]},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"getCreationFee","nameLocation":"5538:14:21","nodeType":"FunctionDefinition","parameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"5552:2:21"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"5578:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5578:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5577:9:21"},"scope":3364,"src":"5529:137:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3365,"src":"302:5366:21","usedErrors":[]}],"src":"32:5637:21"},"id":21},"contracts/interfaces/IMUSE.sol":{"ast":{"absolutePath":"contracts/interfaces/IMUSE.sol","exportedSymbols":{"IERC20":[777],"IMUSE":[3398]},"id":3399,"nodeType":"SourceUnit","nodes":[{"id":3366,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3399,"sourceUnit":778,"src":"60:56:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3368,"name":"IERC20","nameLocations":["137:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"137:6:22"},"id":3369,"nodeType":"InheritanceSpecifier","src":"137:6:22"}],"canonicalName":"IMUSE","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3398,"linearizedBaseContracts":[3398,777],"name":"IMUSE","nameLocation":"128:5:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"39509351","id":3378,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"159:17:22","nodeType":"FunctionDefinition","parameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"spender","nameLocation":"194:7:22","nodeType":"VariableDeclaration","scope":3378,"src":"186:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"186:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"addedValue","nameLocation":"219:10:22","nodeType":"VariableDeclaration","scope":3378,"src":"211:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176:59:22"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"254:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3375,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:6:22"},"scope":3398,"src":"150:110:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a457c2d7","id":3387,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"275:17:22","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"spender","nameLocation":"310:7:22","nodeType":"VariableDeclaration","scope":3387,"src":"302:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"subtractedValue","nameLocation":"335:15:22","nodeType":"VariableDeclaration","scope":3387,"src":"327:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"292:64:22"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3387,"src":"375:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3384,"name":"bool","nodeType":"ElementaryTypeName","src":"375:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"374:6:22"},"scope":3398,"src":"266:115:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a0712d68","id":3392,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"396:4:22","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"amount","nameLocation":"409:6:22","nodeType":"VariableDeclaration","scope":3392,"src":"401:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:16:22"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[],"src":"425:0:22"},"scope":3398,"src":"387:39:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42966c68","id":3397,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"441:4:22","nodeType":"FunctionDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"amount","nameLocation":"454:6:22","nodeType":"VariableDeclaration","scope":3397,"src":"446:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"445:16:22"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[],"src":"470:0:22"},"scope":3398,"src":"432:39:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3399,"src":"118:355:22","usedErrors":[]}],"src":"0:474:22"},"id":22},"contracts/interfaces/IMecenateFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateFeed.sol","exportedSymbols":{"IMecenateFeed":[3496],"Structures":[3746]},"id":3497,"nodeType":"SourceUnit","nodes":[{"id":3400,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:23"},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":3401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3747,"src":"25:35:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateFeed","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3496,"linearizedBaseContracts":[3496],"name":"IMecenateFeed","nameLocation":"72:13:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8c6838ba","id":3407,"implemented":false,"kind":"function","modifiers":[],"name":"getPost","nameLocation":"101:7:23","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[],"src":"108:2:23"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3407,"src":"134:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Post_$3643_memory_ptr","typeString":"struct Structures.Post"},"typeName":{"id":3404,"nodeType":"UserDefinedTypeName","pathNode":{"id":3403,"name":"Structures.Post","nameLocations":["134:10:23","145:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"134:15:23"},"referencedDeclaration":3643,"src":"134:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_Post_$3643_storage_ptr","typeString":"struct Structures.Post"}},"visibility":"internal"}],"src":"133:24:23"},"scope":3496,"src":"92:66:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0917e776","id":3412,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalStaked","nameLocation":"173:14:23","nodeType":"FunctionDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[],"src":"187:2:23"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3412,"src":"213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"213:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"212:9:23"},"scope":3496,"src":"164:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"17906c2e","id":3417,"implemented":false,"kind":"function","modifiers":[],"name":"postCount","nameLocation":"237:9:23","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[],"src":"246:2:23"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"272:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"271:9:23"},"scope":3496,"src":"228:53:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"07388dba","id":3429,"implemented":false,"kind":"function","modifiers":[],"name":"acceptPost","nameLocation":"296:10:23","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"316:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"},"typeName":{"id":3419,"nodeType":"UserDefinedTypeName","pathNode":{"id":3418,"name":"Structures.Tokens","nameLocations":["316:10:23","327:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"316:17:23"},"referencedDeclaration":3586,"src":"316:17:23","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"_amount","nameLocation":"351:7:23","nodeType":"VariableDeclaration","scope":3429,"src":"343:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"_funder","nameLocation":"376:7:23","nodeType":"VariableDeclaration","scope":3429,"src":"368:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"_buyer","nameLocation":"401:6:23","nodeType":"VariableDeclaration","scope":3429,"src":"393:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"306:107:23"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[],"src":"430:0:23"},"scope":3496,"src":"287:144:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5c63ed69","id":3434,"implemented":false,"kind":"function","modifiers":[],"name":"getSellerStake","nameLocation":"446:14:23","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[],"src":"460:2:23"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"486:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"486:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"485:9:23"},"scope":3496,"src":"437:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4c38d877","id":3439,"implemented":false,"kind":"function","modifiers":[],"name":"getBuyerStake","nameLocation":"510:13:23","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[],"src":"523:2:23"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"549:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"548:9:23"},"scope":3496,"src":"501:57:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d24e0c87","id":3444,"implemented":false,"kind":"function","modifiers":[],"name":"getPaymentRequested","nameLocation":"573:19:23","nodeType":"FunctionDefinition","parameters":{"id":3440,"nodeType":"ParameterList","parameters":[],"src":"592:2:23"},"returnParameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"618:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"617:9:23"},"scope":3496,"src":"564:63:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"faeb5e17","id":3449,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeRequested","nameLocation":"642:17:23","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[],"src":"659:2:23"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"685:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"684:9:23"},"scope":3496,"src":"633:61:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4e69d560","id":3455,"implemented":false,"kind":"function","modifiers":[],"name":"getStatus","nameLocation":"709:9:23","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[],"src":"718:2:23"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"status","nameLocation":"766:6:23","nodeType":"VariableDeclaration","scope":3455,"src":"744:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"},"typeName":{"id":3452,"nodeType":"UserDefinedTypeName","pathNode":{"id":3451,"name":"Structures.PostStatus","nameLocations":["744:10:23","755:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3578,"src":"744:21:23"},"referencedDeclaration":3578,"src":"744:21:23","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"visibility":"internal"}],"src":"743:30:23"},"scope":3496,"src":"700:74:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"010a38f5","id":3461,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"789:10:23","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[],"src":"799:2:23"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"tokenId","nameLocation":"843:7:23","nodeType":"VariableDeclaration","scope":3461,"src":"825:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"},"typeName":{"id":3458,"nodeType":"UserDefinedTypeName","pathNode":{"id":3457,"name":"Structures.Tokens","nameLocations":["825:10:23","836:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"825:17:23"},"referencedDeclaration":3586,"src":"825:17:23","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"visibility":"internal"}],"src":"824:27:23"},"scope":3496,"src":"780:72:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"32946a87","id":3466,"implemented":false,"kind":"function","modifiers":[],"name":"getPostId","nameLocation":"867:9:23","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[],"src":"876:2:23"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3466,"src":"902:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"902:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"901:9:23"},"scope":3496,"src":"858:53:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e25df9e","id":3472,"implemented":false,"kind":"function","modifiers":[],"name":"getAllPostIds","nameLocation":"926:13:23","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[],"src":"939:2:23"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"965:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"965:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3469,"nodeType":"ArrayTypeName","src":"965:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"964:18:23"},"scope":3496,"src":"917:66:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"825821fb","id":3480,"implemented":false,"kind":"function","modifiers":[],"name":"getPostTimestamp","nameLocation":"998:16:23","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"postId","nameLocation":"1032:6:23","nodeType":"VariableDeclaration","scope":3480,"src":"1024:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1024:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1014:30:23"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3480,"src":"1068:31:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PostTimestamp_$3606_memory_ptr","typeString":"struct Structures.PostTimestamp"},"typeName":{"id":3477,"nodeType":"UserDefinedTypeName","pathNode":{"id":3476,"name":"Structures.PostTimestamp","nameLocations":["1068:10:23","1079:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3606,"src":"1068:24:23"},"referencedDeclaration":3606,"src":"1068:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_PostTimestamp_$3606_storage_ptr","typeString":"struct Structures.PostTimestamp"}},"visibility":"internal"}],"src":"1067:33:23"},"scope":3496,"src":"989:112:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":3485,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1116:5:23","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[],"src":"1121:2:23"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3485,"src":"1147:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1146:9:23"},"scope":3496,"src":"1107:49:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":3490,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"1171:7:23","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[],"src":"1178:2:23"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"1204:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3487,"name":"string","nodeType":"ElementaryTypeName","src":"1204:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1203:15:23"},"scope":3496,"src":"1162:57:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"729e2eb1","id":3495,"implemented":false,"kind":"function","modifiers":[],"name":"getEncryptedPost","nameLocation":"1234:16:23","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[],"src":"1250:2:23"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"1276:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3492,"name":"bytes","nodeType":"ElementaryTypeName","src":"1276:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1275:14:23"},"scope":3496,"src":"1225:65:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3497,"src":"62:1230:23","usedErrors":[]}],"src":"0:1293:23"},"id":23},"contracts/interfaces/IMecenateTreasury.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateTreasury.sol","exportedSymbols":{"IMecenateTreasury":[3509]},"id":3510,"nodeType":"SourceUnit","nodes":[{"id":3498,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"0:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateTreasury","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3509,"linearizedBaseContracts":[3509],"name":"IMecenateTreasury","nameLocation":"35:17:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"808fc206","id":3503,"implemented":false,"kind":"function","modifiers":[],"name":"globalFee","nameLocation":"68:9:24","nodeType":"FunctionDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[],"src":"77:2:24"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3503,"src":"103:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"103:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102:9:24"},"scope":3509,"src":"59:53:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"91792d5b","id":3508,"implemented":false,"kind":"function","modifiers":[],"name":"fixedFee","nameLocation":"127:8:24","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[],"src":"135:2:24"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"161:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"160:9:24"},"scope":3509,"src":"118:52:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3510,"src":"25:147:24","usedErrors":[]}],"src":"0:173:24"},"id":24},"contracts/interfaces/IMecenateUsers.sol":{"ast":{"absolutePath":"contracts/interfaces/IMecenateUsers.sol","exportedSymbols":{"IMecenateUsers":[3567],"Structures":[3746]},"id":3568,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":3511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3568,"sourceUnit":3747,"src":"33:35:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMecenateUsers","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3567,"linearizedBaseContracts":[3567],"name":"IMecenateUsers","nameLocation":"80:14:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0a38178c","id":3516,"implemented":false,"kind":"function","modifiers":[],"name":"registerUser","nameLocation":"110:12:25","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"metadata","nameLocation":"136:8:25","nodeType":"VariableDeclaration","scope":3516,"src":"123:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3512,"name":"bytes","nodeType":"ElementaryTypeName","src":"123:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"122:23:25"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[],"src":"154:0:25"},"scope":3567,"src":"101:54:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00ce8e3e","id":3522,"implemented":false,"kind":"function","modifiers":[],"name":"getUsers","nameLocation":"170:8:25","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"178:2:25"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3522,"src":"204:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3519,"nodeType":"ArrayTypeName","src":"204:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"203:18:25"},"scope":3567,"src":"161:61:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5cb15f7","id":3527,"implemented":false,"kind":"function","modifiers":[],"name":"getUserCount","nameLocation":"237:12:25","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"249:2:25"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"275:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"275:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"274:9:25"},"scope":3567,"src":"228:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6e064ad","id":3534,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAt","nameLocation":"299:9:25","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"index","nameLocation":"317:5:25","nodeType":"VariableDeclaration","scope":3534,"src":"309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"308:15:25"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"347:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"347:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"346:9:25"},"scope":3567,"src":"290:66:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"48990fcc","id":3541,"implemented":false,"kind":"function","modifiers":[],"name":"checkifUserExist","nameLocation":"371:16:25","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"userAddress","nameLocation":"396:11:25","nodeType":"VariableDeclaration","scope":3541,"src":"388:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:21:25"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"432:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3538,"name":"bool","nodeType":"ElementaryTypeName","src":"432:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"431:6:25"},"scope":3567,"src":"362:76:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf5caa12","id":3551,"implemented":false,"kind":"function","modifiers":[],"name":"getPaginatedUsers","nameLocation":"453:17:25","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"startIndex","nameLocation":"488:10:25","nodeType":"VariableDeclaration","scope":3551,"src":"480:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"endIndex","nameLocation":"516:8:25","nodeType":"VariableDeclaration","scope":3551,"src":"508:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:60:25"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3551,"src":"554:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3548,"nodeType":"ArrayTypeName","src":"554:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"553:18:25"},"scope":3567,"src":"444:128:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ef2a8764","id":3559,"implemented":false,"kind":"function","modifiers":[],"name":"getUserMetadata","nameLocation":"587:15:25","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"userAddress","nameLocation":"620:11:25","nodeType":"VariableDeclaration","scope":3559,"src":"612:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3552,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"602:35:25"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3559,"src":"661:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$3698_memory_ptr","typeString":"struct Structures.User"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"Structures.User","nameLocations":["661:10:25","672:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":3698,"src":"661:15:25"},"referencedDeclaration":3698,"src":"661:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_User_$3698_storage_ptr","typeString":"struct Structures.User"}},"visibility":"internal"}],"src":"660:24:25"},"scope":3567,"src":"578:107:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"11231fe0","id":3566,"implemented":false,"kind":"function","modifiers":[],"name":"getUserPublicKey","nameLocation":"700:16:25","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"userAddress","nameLocation":"734:11:25","nodeType":"VariableDeclaration","scope":3566,"src":"726:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"716:35:25"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3566,"src":"775:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3563,"name":"bytes","nodeType":"ElementaryTypeName","src":"775:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"774:14:25"},"scope":3567,"src":"691:98:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3568,"src":"70:721:25","usedErrors":[]}],"src":"33:759:25"},"id":25},"contracts/library/Structures.sol":{"ast":{"absolutePath":"contracts/library/Structures.sol","exportedSymbols":{"Structures":[3746]},"id":3747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3569,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"146:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Structures","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3746,"linearizedBaseContracts":[3746],"name":"Structures","nameLocation":"179:10:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Structures.PostStatus","id":3578,"members":[{"id":3570,"name":"Waiting","nameLocation":"222:7:26","nodeType":"EnumValue","src":"222:7:26"},{"id":3571,"name":"Proposed","nameLocation":"239:8:26","nodeType":"EnumValue","src":"239:8:26"},{"id":3572,"name":"Accepted","nameLocation":"257:8:26","nodeType":"EnumValue","src":"257:8:26"},{"id":3573,"name":"Submitted","nameLocation":"275:9:26","nodeType":"EnumValue","src":"275:9:26"},{"id":3574,"name":"Finalized","nameLocation":"294:9:26","nodeType":"EnumValue","src":"294:9:26"},{"id":3575,"name":"Punished","nameLocation":"313:8:26","nodeType":"EnumValue","src":"313:8:26"},{"id":3576,"name":"Revealed","nameLocation":"331:8:26","nodeType":"EnumValue","src":"331:8:26"},{"id":3577,"name":"Renounced","nameLocation":"349:9:26","nodeType":"EnumValue","src":"349:9:26"}],"name":"PostStatus","nameLocation":"201:10:26","nodeType":"EnumDefinition","src":"196:168:26"},{"canonicalName":"Structures.PostResult","id":3582,"members":[{"id":3579,"name":"None","nameLocation":"396:4:26","nodeType":"EnumValue","src":"396:4:26"},{"id":3580,"name":"Valid","nameLocation":"410:5:26","nodeType":"EnumValue","src":"410:5:26"},{"id":3581,"name":"Punished","nameLocation":"425:8:26","nodeType":"EnumValue","src":"425:8:26"}],"name":"PostResult","nameLocation":"375:10:26","nodeType":"EnumDefinition","src":"370:69:26"},{"canonicalName":"Structures.Tokens","id":3586,"members":[{"id":3583,"name":"NaN","nameLocation":"467:3:26","nodeType":"EnumValue","src":"467:3:26"},{"id":3584,"name":"MUSE","nameLocation":"480:4:26","nodeType":"EnumValue","src":"480:4:26"},{"id":3585,"name":"DAI","nameLocation":"494:3:26","nodeType":"EnumValue","src":"494:3:26"}],"name":"Tokens","nameLocation":"450:6:26","nodeType":"EnumDefinition","src":"445:58:26"},{"canonicalName":"Structures.PostType","id":3592,"members":[{"id":3587,"name":"Text","nameLocation":"533:4:26","nodeType":"EnumValue","src":"533:4:26"},{"id":3588,"name":"Image","nameLocation":"547:5:26","nodeType":"EnumValue","src":"547:5:26"},{"id":3589,"name":"Video","nameLocation":"562:5:26","nodeType":"EnumValue","src":"562:5:26"},{"id":3590,"name":"Audio","nameLocation":"577:5:26","nodeType":"EnumValue","src":"577:5:26"},{"id":3591,"name":"File","nameLocation":"592:4:26","nodeType":"EnumValue","src":"592:4:26"}],"name":"PostType","nameLocation":"514:8:26","nodeType":"EnumDefinition","src":"509:93:26"},{"canonicalName":"Structures.PostDuration","id":3598,"members":[{"id":3593,"name":"OneDay","nameLocation":"635:6:26","nodeType":"EnumValue","src":"635:6:26"},{"id":3594,"name":"ThreeDays","nameLocation":"651:9:26","nodeType":"EnumValue","src":"651:9:26"},{"id":3595,"name":"OneWeek","nameLocation":"670:7:26","nodeType":"EnumValue","src":"670:7:26"},{"id":3596,"name":"TwoWeeks","nameLocation":"687:8:26","nodeType":"EnumValue","src":"687:8:26"},{"id":3597,"name":"OneMonth","nameLocation":"705:8:26","nodeType":"EnumValue","src":"705:8:26"}],"name":"PostDuration","nameLocation":"612:12:26","nodeType":"EnumDefinition","src":"607:112:26"},{"canonicalName":"Structures.PostTimestamp","id":3606,"members":[{"constant":false,"id":3601,"mutability":"mutable","name":"postResult","nameLocation":"767:10:26","nodeType":"VariableDeclaration","scope":3606,"src":"756:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostResult_$3582","typeString":"enum Structures.PostResult"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"PostResult","nameLocations":["756:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3582,"src":"756:10:26"},"referencedDeclaration":3582,"src":"756:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_PostResult_$3582","typeString":"enum Structures.PostResult"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"creationTimeStamp","nameLocation":"795:17:26","nodeType":"VariableDeclaration","scope":3606,"src":"787:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"endTimeStamp","nameLocation":"830:12:26","nodeType":"VariableDeclaration","scope":3606,"src":"822:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PostTimestamp","nameLocation":"732:13:26","nodeType":"StructDefinition","scope":3746,"src":"725:124:26","visibility":"public"},{"canonicalName":"Structures.FeedSettings","id":3619,"members":[{"constant":false,"id":3608,"mutability":"mutable","name":"punishmentRatio","nameLocation":"893:15:26","nodeType":"VariableDeclaration","scope":3619,"src":"885:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"postCount","nameLocation":"926:9:26","nodeType":"VariableDeclaration","scope":3619,"src":"918:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"usersModuleContract","nameLocation":"953:19:26","nodeType":"VariableDeclaration","scope":3619,"src":"945:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"factoryContract","nameLocation":"990:15:26","nodeType":"VariableDeclaration","scope":3619,"src":"982:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"router","nameLocation":"1023:6:26","nodeType":"VariableDeclaration","scope":3619,"src":"1015:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3615,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"version","nameLocation":"1046:7:26","nodeType":"VariableDeclaration","scope":3619,"src":"1039:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3617,"name":"string","nodeType":"ElementaryTypeName","src":"1039:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"FeedSettings","nameLocation":"862:12:26","nodeType":"StructDefinition","scope":3746,"src":"855:205:26","visibility":"public"},{"canonicalName":"Structures.FactorySettings","id":3636,"members":[{"constant":false,"id":3621,"mutability":"mutable","name":"treasuryContract","nameLocation":"1107:16:26","nodeType":"VariableDeclaration","scope":3636,"src":"1099:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"1099:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"usersModuleContract","nameLocation":"1141:19:26","nodeType":"VariableDeclaration","scope":3636,"src":"1133:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"easContract","nameLocation":"1178:11:26","nodeType":"VariableDeclaration","scope":3636,"src":"1170:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"1170:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"easSchema","nameLocation":"1207:9:26","nodeType":"VariableDeclaration","scope":3636,"src":"1199:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1199:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"museToken","nameLocation":"1234:9:26","nodeType":"VariableDeclaration","scope":3636,"src":"1226:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"daiToken","nameLocation":"1261:8:26","nodeType":"VariableDeclaration","scope":3636,"src":"1253:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"wethToken","nameLocation":"1287:9:26","nodeType":"VariableDeclaration","scope":3636,"src":"1279:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3632,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"router","nameLocation":"1314:6:26","nodeType":"VariableDeclaration","scope":3636,"src":"1306:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3634,"name":"address","nodeType":"ElementaryTypeName","src":"1306:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FactorySettings","nameLocation":"1073:15:26","nodeType":"StructDefinition","scope":3746,"src":"1066:261:26","visibility":"public"},{"canonicalName":"Structures.Post","id":3643,"members":[{"constant":false,"id":3639,"mutability":"mutable","name":"creator","nameLocation":"1441:7:26","nodeType":"VariableDeclaration","scope":3643,"src":"1436:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_User_$3698_storage_ptr","typeString":"struct Structures.User"},"typeName":{"id":3638,"nodeType":"UserDefinedTypeName","pathNode":{"id":3637,"name":"User","nameLocations":["1436:4:26"],"nodeType":"IdentifierPath","referencedDeclaration":3698,"src":"1436:4:26"},"referencedDeclaration":3698,"src":"1436:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_User_$3698_storage_ptr","typeString":"struct Structures.User"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"postdata","nameLocation":"1467:8:26","nodeType":"VariableDeclaration","scope":3643,"src":"1458:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostData_$3653_storage_ptr","typeString":"struct Structures.PostData"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"PostData","nameLocations":["1458:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"1458:8:26"},"referencedDeclaration":3653,"src":"1458:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_PostData_$3653_storage_ptr","typeString":"struct Structures.PostData"}},"visibility":"internal"}],"name":"Post","nameLocation":"1421:4:26","nodeType":"StructDefinition","scope":3746,"src":"1414:68:26","visibility":"public"},{"canonicalName":"Structures.PostData","id":3653,"members":[{"constant":false,"id":3646,"mutability":"mutable","name":"settings","nameLocation":"1620:8:26","nodeType":"VariableDeclaration","scope":3653,"src":"1607:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostSettings_$3678_storage_ptr","typeString":"struct Structures.PostSettings"},"typeName":{"id":3645,"nodeType":"UserDefinedTypeName","pathNode":{"id":3644,"name":"PostSettings","nameLocations":["1607:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"1607:12:26"},"referencedDeclaration":3678,"src":"1607:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_PostSettings_$3678_storage_ptr","typeString":"struct Structures.PostSettings"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"escrow","nameLocation":"1649:6:26","nodeType":"VariableDeclaration","scope":3653,"src":"1638:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostEscrow_$3691_storage_ptr","typeString":"struct Structures.PostEscrow"},"typeName":{"id":3648,"nodeType":"UserDefinedTypeName","pathNode":{"id":3647,"name":"PostEscrow","nameLocations":["1638:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3691,"src":"1638:10:26"},"referencedDeclaration":3691,"src":"1638:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_PostEscrow_$3691_storage_ptr","typeString":"struct Structures.PostEscrow"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"data","nameLocation":"1683:4:26","nodeType":"VariableDeclaration","scope":3653,"src":"1665:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PostEncryptedData_$3660_storage_ptr","typeString":"struct Structures.PostEncryptedData"},"typeName":{"id":3651,"nodeType":"UserDefinedTypeName","pathNode":{"id":3650,"name":"PostEncryptedData","nameLocations":["1665:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":3660,"src":"1665:17:26"},"referencedDeclaration":3660,"src":"1665:17:26","typeDescriptions":{"typeIdentifier":"t_struct$_PostEncryptedData_$3660_storage_ptr","typeString":"struct Structures.PostEncryptedData"}},"visibility":"internal"}],"name":"PostData","nameLocation":"1588:8:26","nodeType":"StructDefinition","scope":3746,"src":"1581:113:26","visibility":"public"},{"canonicalName":"Structures.PostEncryptedData","id":3660,"members":[{"constant":false,"id":3655,"mutability":"mutable","name":"encryptedData","nameLocation":"1844:13:26","nodeType":"VariableDeclaration","scope":3660,"src":"1838:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3654,"name":"bytes","nodeType":"ElementaryTypeName","src":"1838:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"encryptedKey","nameLocation":"1873:12:26","nodeType":"VariableDeclaration","scope":3660,"src":"1867:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3656,"name":"bytes","nodeType":"ElementaryTypeName","src":"1867:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"decryptedData","nameLocation":"1901:13:26","nodeType":"VariableDeclaration","scope":3660,"src":"1895:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3658,"name":"bytes","nodeType":"ElementaryTypeName","src":"1895:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PostEncryptedData","nameLocation":"1810:17:26","nodeType":"StructDefinition","scope":3746,"src":"1803:118:26","visibility":"public"},{"canonicalName":"Structures.PostSettings","id":3678,"members":[{"constant":false,"id":3663,"mutability":"mutable","name":"status","nameLocation":"2065:6:26","nodeType":"VariableDeclaration","scope":3678,"src":"2054:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"},"typeName":{"id":3662,"nodeType":"UserDefinedTypeName","pathNode":{"id":3661,"name":"PostStatus","nameLocations":["2054:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3578,"src":"2054:10:26"},"referencedDeclaration":3578,"src":"2054:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"postType","nameLocation":"2090:8:26","nodeType":"VariableDeclaration","scope":3678,"src":"2081:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostType_$3592","typeString":"enum Structures.PostType"},"typeName":{"id":3665,"nodeType":"UserDefinedTypeName","pathNode":{"id":3664,"name":"PostType","nameLocations":["2081:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"2081:8:26"},"referencedDeclaration":3592,"src":"2081:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_PostType_$3592","typeString":"enum Structures.PostType"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"creationTimeStamp","nameLocation":"2116:17:26","nodeType":"VariableDeclaration","scope":3678,"src":"2108:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"endTimeStamp","nameLocation":"2151:12:26","nodeType":"VariableDeclaration","scope":3678,"src":"2143:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"duration","nameLocation":"2181:8:26","nodeType":"VariableDeclaration","scope":3678,"src":"2173:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2173:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"tokenId","nameLocation":"2206:7:26","nodeType":"VariableDeclaration","scope":3678,"src":"2199:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"},"typeName":{"id":3674,"nodeType":"UserDefinedTypeName","pathNode":{"id":3673,"name":"Tokens","nameLocations":["2199:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"2199:6:26"},"referencedDeclaration":3586,"src":"2199:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"postId","nameLocation":"2231:6:26","nodeType":"VariableDeclaration","scope":3678,"src":"2223:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"PostSettings","nameLocation":"2031:12:26","nodeType":"StructDefinition","scope":3746,"src":"2024:220:26","visibility":"public"},{"canonicalName":"Structures.PostEscrow","id":3691,"members":[{"constant":false,"id":3680,"mutability":"mutable","name":"buyer","nameLocation":"2381:5:26","nodeType":"VariableDeclaration","scope":3691,"src":"2373:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"seller","nameLocation":"2404:6:26","nodeType":"VariableDeclaration","scope":3691,"src":"2396:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"stake","nameLocation":"2428:5:26","nodeType":"VariableDeclaration","scope":3691,"src":"2420:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"payment","nameLocation":"2451:7:26","nodeType":"VariableDeclaration","scope":3691,"src":"2443:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2443:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"punishment","nameLocation":"2476:10:26","nodeType":"VariableDeclaration","scope":3691,"src":"2468:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"penalty","nameLocation":"2504:7:26","nodeType":"VariableDeclaration","scope":3691,"src":"2496:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PostEscrow","nameLocation":"2352:10:26","nodeType":"StructDefinition","scope":3746,"src":"2345:173:26","visibility":"public"},{"canonicalName":"Structures.User","id":3698,"members":[{"constant":false,"id":3693,"mutability":"mutable","name":"evmAddress","nameLocation":"2635:10:26","nodeType":"VariableDeclaration","scope":3698,"src":"2627:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3692,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"sismoVaultId","nameLocation":"2661:12:26","nodeType":"VariableDeclaration","scope":3698,"src":"2655:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3694,"name":"bytes","nodeType":"ElementaryTypeName","src":"2655:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"publicKey","nameLocation":"2689:9:26","nodeType":"VariableDeclaration","scope":3698,"src":"2683:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3696,"name":"bytes","nodeType":"ElementaryTypeName","src":"2683:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"User","nameLocation":"2612:4:26","nodeType":"StructDefinition","scope":3746,"src":"2605:100:26","visibility":"public"},{"canonicalName":"Structures.Feed","id":3725,"members":[{"constant":false,"id":3700,"mutability":"mutable","name":"contractAddress","nameLocation":"2822:15:26","nodeType":"VariableDeclaration","scope":3725,"src":"2814:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"2814:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"owner","nameLocation":"2855:5:26","nodeType":"VariableDeclaration","scope":3725,"src":"2847:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"sellerStake","nameLocation":"2878:11:26","nodeType":"VariableDeclaration","scope":3725,"src":"2870:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2870:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"buyerStake","nameLocation":"2907:10:26","nodeType":"VariableDeclaration","scope":3725,"src":"2899:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"totalStake","nameLocation":"2935:10:26","nodeType":"VariableDeclaration","scope":3725,"src":"2927:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2927:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"postCount","nameLocation":"2963:9:26","nodeType":"VariableDeclaration","scope":3725,"src":"2955:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"paymentRequested","nameLocation":"2990:16:26","nodeType":"VariableDeclaration","scope":3725,"src":"2982:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"stakeRequested","nameLocation":"3024:14:26","nodeType":"VariableDeclaration","scope":3725,"src":"3016:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"status","nameLocation":"3059:6:26","nodeType":"VariableDeclaration","scope":3725,"src":"3048:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"},"typeName":{"id":3716,"nodeType":"UserDefinedTypeName","pathNode":{"id":3715,"name":"PostStatus","nameLocations":["3048:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3578,"src":"3048:10:26"},"referencedDeclaration":3578,"src":"3048:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"visibility":"internal"},{"constant":false,"id":3720,"mutability":"mutable","name":"tokenId","nameLocation":"3082:7:26","nodeType":"VariableDeclaration","scope":3725,"src":"3075:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"Tokens","nameLocations":["3075:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"3075:6:26"},"referencedDeclaration":3586,"src":"3075:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"version","nameLocation":"3106:7:26","nodeType":"VariableDeclaration","scope":3725,"src":"3099:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3721,"name":"string","nodeType":"ElementaryTypeName","src":"3099:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"postId","nameLocation":"3131:6:26","nodeType":"VariableDeclaration","scope":3725,"src":"3123:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3123:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Feed","nameLocation":"2799:4:26","nodeType":"StructDefinition","scope":3746,"src":"2792:352:26","visibility":"public"},{"canonicalName":"Structures.BayRequest","id":3745,"members":[{"constant":false,"id":3727,"mutability":"mutable","name":"request","nameLocation":"3272:7:26","nodeType":"VariableDeclaration","scope":3745,"src":"3266:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3726,"name":"bytes","nodeType":"ElementaryTypeName","src":"3266:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"payment","nameLocation":"3297:7:26","nodeType":"VariableDeclaration","scope":3745,"src":"3289:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3289:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"stake","nameLocation":"3322:5:26","nodeType":"VariableDeclaration","scope":3745,"src":"3314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"postAddress","nameLocation":"3345:11:26","nodeType":"VariableDeclaration","scope":3745,"src":"3337:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3732,"name":"address","nodeType":"ElementaryTypeName","src":"3337:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"accepted","nameLocation":"3371:8:26","nodeType":"VariableDeclaration","scope":3745,"src":"3366:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"3366:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"postCount","nameLocation":"3397:9:26","nodeType":"VariableDeclaration","scope":3745,"src":"3389:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"3389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"tokenId","nameLocation":"3423:7:26","nodeType":"VariableDeclaration","scope":3745,"src":"3416:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"},"typeName":{"id":3739,"nodeType":"UserDefinedTypeName","pathNode":{"id":3738,"name":"Tokens","nameLocations":["3416:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"3416:6:26"},"referencedDeclaration":3586,"src":"3416:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"buyerAddress","nameLocation":"3448:12:26","nodeType":"VariableDeclaration","scope":3745,"src":"3440:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"3440:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"postId","nameLocation":"3478:6:26","nodeType":"VariableDeclaration","scope":3745,"src":"3470:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3470:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"BayRequest","nameLocation":"3245:10:26","nodeType":"StructDefinition","scope":3746,"src":"3238:253:26","visibility":"public"}],"scope":3747,"src":"171:3322:26","usedErrors":[]}],"src":"146:3348:26"},"id":26},"contracts/modules/FeedViewer.sol":{"ast":{"absolutePath":"contracts/modules/FeedViewer.sol","exportedSymbols":{"FeedViewer":[3922],"IMecenateFeed":[3496],"Structures":[3746]},"id":3923,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3748,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:27"},{"absolutePath":"contracts/library/Structures.sol","file":"../library/Structures.sol","id":3749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3923,"sourceUnit":3747,"src":"57:35:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateFeed.sol","file":"../interfaces/IMecenateFeed.sol","id":3750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3923,"sourceUnit":3497,"src":"93:41:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FeedViewer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3922,"linearizedBaseContracts":[3922],"name":"FeedViewer","nameLocation":"145:10:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":3867,"nodeType":"Block","src":"259:711:27","statements":[{"assignments":[3762],"declarations":[{"constant":false,"id":3762,"mutability":"mutable","name":"f","nameLocation":"292:1:27","nodeType":"VariableDeclaration","scope":3867,"src":"269:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":3761,"nodeType":"UserDefinedTypeName","pathNode":{"id":3760,"name":"Structures.Feed","nameLocations":["269:10:27","280:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"269:15:27"},"referencedDeclaration":3725,"src":"269:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"id":3763,"nodeType":"VariableDeclarationStatement","src":"269:24:27"},{"assignments":[3766],"declarations":[{"constant":false,"id":3766,"mutability":"mutable","name":"mecenateFeed","nameLocation":"318:12:27","nodeType":"VariableDeclaration","scope":3867,"src":"304:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"IMecenateFeed","nameLocations":["304:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"304:13:27"},"referencedDeclaration":3496,"src":"304:13:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"visibility":"internal"}],"id":3770,"initialValue":{"arguments":[{"id":3768,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"347:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3767,"name":"IMecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"333:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateFeed_$3496_$","typeString":"type(contract IMecenateFeed)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"333:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"nodeType":"VariableDeclarationStatement","src":"304:48:27"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3771,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"363:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"365:15:27","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":3700,"src":"363:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3774,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"383:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"363:24:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3776,"nodeType":"ExpressionStatement","src":"363:24:27"},{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3777,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"397:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"399:5:27","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3702,"src":"397:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3780,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"407:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"420:5:27","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3485,"src":"407:18:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"407:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"397:30:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3784,"nodeType":"ExpressionStatement","src":"397:30:27"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3785,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"437:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"439:11:27","memberName":"sellerStake","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"437:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3788,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"453:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"466:14:27","memberName":"getSellerStake","nodeType":"MemberAccess","referencedDeclaration":3434,"src":"453:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"453:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"437:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"437:45:27"},{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3793,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"492:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"494:10:27","memberName":"buyerStake","nodeType":"MemberAccess","referencedDeclaration":3706,"src":"492:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3796,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"507:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"520:13:27","memberName":"getBuyerStake","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"507:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"507:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"492:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3800,"nodeType":"ExpressionStatement","src":"492:43:27"},{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3801,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"545:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"547:10:27","memberName":"totalStake","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"545:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3804,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"560:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"573:14:27","memberName":"getTotalStaked","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"560:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"560:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"545:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"545:44:27"},{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3809,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"599:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"601:9:27","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":3710,"src":"599:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3812,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"613:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"626:9:27","memberName":"postCount","nodeType":"MemberAccess","referencedDeclaration":3417,"src":"613:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"599:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"599:38:27"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3817,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"647:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"649:16:27","memberName":"paymentRequested","nodeType":"MemberAccess","referencedDeclaration":3712,"src":"647:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3820,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"668:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"681:19:27","memberName":"getPaymentRequested","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"668:32:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"668:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"647:55:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"647:55:27"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3825,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"712:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"714:14:27","memberName":"stakeRequested","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"712:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3828,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"731:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"744:17:27","memberName":"getStakeRequested","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"731:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"731:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"712:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"712:51:27"},{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3833,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"773:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"775:6:27","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3717,"src":"773:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3836,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"784:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"797:9:27","memberName":"getStatus","nodeType":"MemberAccess","referencedDeclaration":3455,"src":"784:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_PostStatus_$3578_$","typeString":"function () view external returns (enum Structures.PostStatus)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"src":"773:35:27","typeDescriptions":{"typeIdentifier":"t_enum$_PostStatus_$3578","typeString":"enum Structures.PostStatus"}},"id":3840,"nodeType":"ExpressionStatement","src":"773:35:27"},{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3841,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"818:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"820:7:27","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"818:9:27","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3844,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"830:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:10:27","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":3461,"src":"830:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_Tokens_$3586_$","typeString":"function () view external returns (enum Structures.Tokens)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"830:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"src":"818:37:27","typeDescriptions":{"typeIdentifier":"t_enum$_Tokens_$3586","typeString":"enum Structures.Tokens"}},"id":3848,"nodeType":"ExpressionStatement","src":"818:37:27"},{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3849,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"865:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"867:7:27","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":3722,"src":"865:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3852,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"877:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"890:7:27","memberName":"version","nodeType":"MemberAccess","referencedDeclaration":3490,"src":"877:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"865:34:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3856,"nodeType":"ExpressionStatement","src":"865:34:27"},{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3857,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"909:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"911:6:27","memberName":"postId","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"909:8:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3860,"name":"mecenateFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"920:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateFeed_$3496","typeString":"contract IMecenateFeed"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:9:27","memberName":"getPostId","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"920:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"920:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"909:35:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3864,"nodeType":"ExpressionStatement","src":"909:35:27"},{"expression":{"id":3865,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"962:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"functionReturnParameters":3757,"id":3866,"nodeType":"Return","src":"955:8:27"}]},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedInfo","nameLocation":"171:12:27","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"feed","nameLocation":"201:4:27","nodeType":"VariableDeclaration","scope":3868,"src":"193:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3751,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"183:28:27"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"235:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed"},"typeName":{"id":3755,"nodeType":"UserDefinedTypeName","pathNode":{"id":3754,"name":"Structures.Feed","nameLocations":["235:10:27","246:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"235:15:27"},"referencedDeclaration":3725,"src":"235:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"visibility":"internal"}],"src":"234:24:27"},"scope":3922,"src":"162:808:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"1087:227:27","statements":[{"assignments":[3879],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"len","nameLocation":"1105:3:27","nodeType":"VariableDeclaration","scope":3920,"src":"1097:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3882,"initialValue":{"expression":{"id":3880,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1111:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1118:6:27","memberName":"length","nodeType":"MemberAccess","src":"1111:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1097:27:27"},{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"f","nameLocation":"1159:1:27","nodeType":"VariableDeclaration","scope":3920,"src":"1134:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":3886,"nodeType":"UserDefinedTypeName","pathNode":{"id":3885,"name":"Structures.Feed","nameLocations":["1134:10:27","1145:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"1134:15:27"},"referencedDeclaration":3725,"src":"1134:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"id":3887,"nodeType":"ArrayTypeName","src":"1134:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"id":3895,"initialValue":{"arguments":[{"id":3893,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1185:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1163:21:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Structures.Feed memory[] memory)"},"typeName":{"baseType":{"id":3890,"nodeType":"UserDefinedTypeName","pathNode":{"id":3889,"name":"Structures.Feed","nameLocations":["1167:10:27","1178:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"1167:15:27"},"referencedDeclaration":3725,"src":"1167:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"id":3891,"nodeType":"ArrayTypeName","src":"1167:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1134:55:27"},{"body":{"id":3916,"nodeType":"Block","src":"1234:55:27","statements":[{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3906,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1248:1:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"id":3908,"indexExpression":{"id":3907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1250:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1248:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3910,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1268:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3912,"indexExpression":{"id":3911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1275:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1268:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3909,"name":"_getFeedInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"1255:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Feed_$3725_memory_ptr_$","typeString":"function (address) view returns (struct Structures.Feed memory)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1255:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"src":"1248:30:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_memory_ptr","typeString":"struct Structures.Feed memory"}},"id":3915,"nodeType":"ExpressionStatement","src":"1248:30:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1220:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3901,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1224:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1220:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"initializationExpression":{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"i","nameLocation":"1213:1:27","nodeType":"VariableDeclaration","scope":3917,"src":"1205:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3899,"initialValue":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1217:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1205:13:27"},"loopExpression":{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1229:3:27","subExpression":{"id":3903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1229:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"1229:3:27"},"nodeType":"ForStatement","src":"1200:89:27"},{"expression":{"id":3918,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1306:1:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed memory[] memory"}},"functionReturnParameters":3877,"id":3919,"nodeType":"Return","src":"1299:8:27"}]},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedsInfo","nameLocation":"985:13:27","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"_feeds","nameLocation":"1025:6:27","nodeType":"VariableDeclaration","scope":3921,"src":"1008:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3870,"nodeType":"ArrayTypeName","src":"1008:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"998:39:27"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"1061:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_memory_ptr_$dyn_memory_ptr","typeString":"struct Structures.Feed[]"},"typeName":{"baseType":{"id":3874,"nodeType":"UserDefinedTypeName","pathNode":{"id":3873,"name":"Structures.Feed","nameLocations":["1061:10:27","1072:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"1061:15:27"},"referencedDeclaration":3725,"src":"1061:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_Feed_$3725_storage_ptr","typeString":"struct Structures.Feed"}},"id":3875,"nodeType":"ArrayTypeName","src":"1061:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Feed_$3725_storage_$dyn_storage_ptr","typeString":"struct Structures.Feed[]"}},"visibility":"internal"}],"src":"1060:26:27"},"scope":3922,"src":"976:338:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3923,"src":"136:1180:27","usedErrors":[]}],"src":"32:1285:27"},"id":27},"contracts/modules/Swapper.sol":{"ast":{"absolutePath":"contracts/modules/Swapper.sol","exportedSymbols":{"Context":[1740],"IERC165":[1752],"IERC20":[777],"IERC721":[1330],"IERC721Enumerable":[1361],"IERC721Metadata":[1388],"IERC721Permit":[2414],"INonfungiblePositionManager":[2613],"IPeripheryImmutableState":[2629],"IPeripheryPayments":[2655],"IPoolInitializer":[2674],"ISwapRouter":[2774],"IUniswapV3SwapCallback":[2379],"Ownable":[112],"PoolAddress":[2874],"Swapper":[4325]},"id":4326,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3924,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"187:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":778,"src":"212:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":113,"src":"269:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":3927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":2775,"src":"322:68:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","file":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","id":3928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":2614,"src":"391:84:28","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3929,"name":"Ownable","nameLocations":["506:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"506:7:28"},"id":3930,"nodeType":"InheritanceSpecifier","src":"506:7:28"}],"canonicalName":"Swapper","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4325,"linearizedBaseContracts":[4325,112,1740],"name":"Swapper","nameLocation":"495:7:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"05f6059d","id":3932,"mutability":"mutable","name":"splitLiquidity","nameLocation":"532:14:28","nodeType":"VariableDeclaration","scope":4325,"src":"520:26:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"520:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"c31c9c07","id":3935,"mutability":"mutable","name":"swapRouter","nameLocation":"572:10:28","nodeType":"VariableDeclaration","scope":4325,"src":"553:29:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"},"typeName":{"id":3934,"nodeType":"UserDefinedTypeName","pathNode":{"id":3933,"name":"ISwapRouter","nameLocations":["553:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":2774,"src":"553:11:28"},"referencedDeclaration":2774,"src":"553:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"791b98bc","id":3938,"mutability":"mutable","name":"positionManager","nameLocation":"623:15:28","nodeType":"VariableDeclaration","scope":4325,"src":"588:50:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"},"typeName":{"id":3937,"nodeType":"UserDefinedTypeName","pathNode":{"id":3936,"name":"INonfungiblePositionManager","nameLocations":["588:27:28"],"nodeType":"IdentifierPath","referencedDeclaration":2613,"src":"588:27:28"},"referencedDeclaration":2613,"src":"588:27:28","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}},"visibility":"public"},{"constant":false,"functionSelector":"11b0b42d","id":3940,"mutability":"mutable","name":"native","nameLocation":"659:6:28","nodeType":"VariableDeclaration","scope":4325,"src":"644:21:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3978,"nodeType":"Block","src":"708:191:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":3952,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"758:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"750:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:28","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"750:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"771:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[{"arguments":[{"id":3946,"name":"native","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"733:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"725:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:28","typeDescriptions":{}}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"725:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3943,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"718:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"718:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"742:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"718:31:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"718:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"nodeType":"ExpressionStatement","src":"718:55:28"},{"expression":{"arguments":[{"arguments":[{"id":3966,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"836:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"828:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:28","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"869:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"874:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"869:8:28","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"869:12:28","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"861:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:28","typeDescriptions":{}}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"861:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3960,"name":"native","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"798:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"790:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3958,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:28","typeDescriptions":{}}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"790:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3957,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"783:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"783:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"807:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"783:31:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"783:109:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3977,"nodeType":"ExpressionStatement","src":"783:109:28"}]},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"_giveAllowances","nameLocation":"681:15:28","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[],"src":"696:2:28"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[],"src":"708:0:28"},"scope":4325,"src":"672:227:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"978:185:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":3994,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"1018:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:28","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3996,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"1031:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3989,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"995:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3988,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"988:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1002:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"988:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3998,"nodeType":"ExpressionStatement","src":"988:50:28"},{"expression":{"arguments":[{"arguments":[{"id":4008,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"1100:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1092:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4006,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:28","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1092:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1133:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"1133:8:28","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1133:12:28","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}],"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1125:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:28","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":4002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1063:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1055:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4000,"name":"address","nodeType":"ElementaryTypeName","src":"1055:7:28","typeDescriptions":{}}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3999,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1048:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1071:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"1048:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:108:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"nodeType":"ExpressionStatement","src":"1048:108:28"}]},"functionSelector":"85258b4b","id":4021,"implemented":true,"kind":"function","modifiers":[{"id":3986,"kind":"modifierInvocation","modifierName":{"id":3985,"name":"onlyOwner","nameLocations":["968:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"968:9:28"},"nodeType":"ModifierInvocation","src":"968:9:28"}],"name":"customApprove","nameLocation":"914:13:28","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"token","nameLocation":"936:5:28","nodeType":"VariableDeclaration","scope":4021,"src":"928:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"928:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"amount","nameLocation":"951:6:28","nodeType":"VariableDeclaration","scope":4021,"src":"943:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"927:31:28"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[],"src":"978:0:28"},"scope":4325,"src":"905:258:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4046,"nodeType":"Block","src":"1291:131:28","statements":[{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"native","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"1301:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4032,"name":"nativeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"1310:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1301:19:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4034,"nodeType":"ExpressionStatement","src":"1301:19:28"},{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"1330:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4036,"name":"swapRouterAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1343:14:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"src":"1330:27:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"id":4038,"nodeType":"ExpressionStatement","src":"1330:27:28"},{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"splitLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"1367:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1384:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1367:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"ExpressionStatement","src":"1367:21:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4043,"name":"_giveAllowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"1398:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1398:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4045,"nodeType":"ExpressionStatement","src":"1398:17:28"}]},"functionSelector":"e2662943","id":4047,"implemented":true,"kind":"function","modifiers":[{"id":4029,"kind":"modifierInvocation","modifierName":{"id":4028,"name":"onlyOwner","nameLocations":["1281:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1281:9:28"},"nodeType":"ModifierInvocation","src":"1281:9:28"}],"name":"configLiquidityProvider","nameLocation":"1178:23:28","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"nativeAddr","nameLocation":"1219:10:28","nodeType":"VariableDeclaration","scope":4047,"src":"1211:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4022,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"swapRouterAddr","nameLocation":"1251:14:28","nodeType":"VariableDeclaration","scope":4047,"src":"1239:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"},"typeName":{"id":4025,"nodeType":"UserDefinedTypeName","pathNode":{"id":4024,"name":"ISwapRouter","nameLocations":["1239:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":2774,"src":"1239:11:28"},"referencedDeclaration":2774,"src":"1239:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"visibility":"internal"}],"src":"1201:70:28"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[],"src":"1291:0:28"},"scope":4325,"src":"1169:253:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4062,"nodeType":"Block","src":"1524:70:28","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"splitLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"1534:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4057,"name":"_splitLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"1551:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1534:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4059,"nodeType":"ExpressionStatement","src":"1534:32:28"},{"expression":{"hexValue":"74727565","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1583:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4055,"id":4061,"nodeType":"Return","src":"1576:11:28"}]},"functionSelector":"8f3a899a","id":4063,"implemented":true,"kind":"function","modifiers":[{"id":4052,"kind":"modifierInvocation","modifierName":{"id":4051,"name":"onlyOwner","nameLocations":["1499:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1499:9:28"},"nodeType":"ModifierInvocation","src":"1499:9:28"}],"name":"setSplitLiqudity","nameLocation":"1437:16:28","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"_splitLiquidity","nameLocation":"1468:15:28","nodeType":"VariableDeclaration","scope":4063,"src":"1463:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"1463:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1453:36:28"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4063,"src":"1518:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4053,"name":"bool","nodeType":"ElementaryTypeName","src":"1518:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1517:6:28"},"scope":4325,"src":"1428:166:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4088,"nodeType":"Block","src":"1790:83:28","statements":[{"expression":{"arguments":[{"id":4081,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1828:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4082,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1836:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4083,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"1844:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"1849:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4085,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"1857:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4080,"name":"_swapTokensForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1807:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint24,uint256,address) returns (uint256)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1807:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4079,"id":4087,"nodeType":"Return","src":"1800:66:28"}]},"functionSelector":"f0c3b912","id":4089,"implemented":true,"kind":"function","modifiers":[{"id":4076,"kind":"modifierInvocation","modifierName":{"id":4075,"name":"onlyOwner","nameLocations":["1762:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1762:9:28"},"nodeType":"ModifierInvocation","src":"1762:9:28"}],"name":"swapTokensForTokens","nameLocation":"1609:19:28","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"token1","nameLocation":"1646:6:28","nodeType":"VariableDeclaration","scope":4089,"src":"1638:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4067,"mutability":"mutable","name":"token2","nameLocation":"1670:6:28","nodeType":"VariableDeclaration","scope":4089,"src":"1662:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"amount","nameLocation":"1694:6:28","nodeType":"VariableDeclaration","scope":4089,"src":"1686:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"fee","nameLocation":"1717:3:28","nodeType":"VariableDeclaration","scope":4089,"src":"1710:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4070,"name":"uint24","nodeType":"ElementaryTypeName","src":"1710:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"receiver","nameLocation":"1738:8:28","nodeType":"VariableDeclaration","scope":4089,"src":"1730:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4072,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1628:124:28"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4089,"src":"1781:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1780:9:28"},"scope":4325,"src":"1600:273:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4112,"nodeType":"Block","src":"2037:84:28","statements":[{"expression":{"arguments":[{"id":4105,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"2075:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4106,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"2083:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2091:4:28","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"id":4108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"2097:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4109,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2105:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4104,"name":"_swapTokensForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"2054:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint24,uint256,address) returns (uint256)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2054:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4103,"id":4111,"nodeType":"Return","src":"2047:67:28"}]},"functionSelector":"bba5f3b1","id":4113,"implemented":true,"kind":"function","modifiers":[{"id":4100,"kind":"modifierInvocation","modifierName":{"id":4099,"name":"onlyOwner","nameLocations":["2009:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2009:9:28"},"nodeType":"ModifierInvocation","src":"2009:9:28"}],"name":"swapTxT","nameLocation":"1888:7:28","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"token1","nameLocation":"1913:6:28","nodeType":"VariableDeclaration","scope":4113,"src":"1905:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4090,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"token2","nameLocation":"1937:6:28","nodeType":"VariableDeclaration","scope":4113,"src":"1929:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4092,"name":"address","nodeType":"ElementaryTypeName","src":"1929:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"amount","nameLocation":"1961:6:28","nodeType":"VariableDeclaration","scope":4113,"src":"1953:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"receiver","nameLocation":"1985:8:28","nodeType":"VariableDeclaration","scope":4113,"src":"1977:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"1977:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1895:104:28"},"returnParameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4113,"src":"2028:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2027:9:28"},"scope":4325,"src":"1879:242:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4142,"nodeType":"Block","src":"2340:185:28","statements":[{"expression":{"arguments":[{"id":4133,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"2377:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4134,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"2397:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4135,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"2417:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4136,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"2434:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4137,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"2455:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4138,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"2476:9:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4139,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2499:9:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":4132,"name":"_addLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"2350:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint256_$_t_int24_$_t_int24_$returns$__$","typeString":"function (address,address,uint24,uint256,uint256,int24,int24)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:168:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"ExpressionStatement","src":"2350:168:28"}]},"functionSelector":"afbce84e","id":4143,"implemented":true,"kind":"function","modifiers":[{"id":4130,"kind":"modifierInvocation","modifierName":{"id":4129,"name":"onlyOwner","nameLocations":["2330:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2330:9:28"},"nodeType":"ModifierInvocation","src":"2330:9:28"}],"name":"addLiquidity","nameLocation":"2136:12:28","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"tokenA","nameLocation":"2166:6:28","nodeType":"VariableDeclaration","scope":4143,"src":"2158:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4114,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"tokenB","nameLocation":"2190:6:28","nodeType":"VariableDeclaration","scope":4143,"src":"2182:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4116,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"fee","nameLocation":"2213:3:28","nodeType":"VariableDeclaration","scope":4143,"src":"2206:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4118,"name":"uint24","nodeType":"ElementaryTypeName","src":"2206:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"amountA","nameLocation":"2234:7:28","nodeType":"VariableDeclaration","scope":4143,"src":"2226:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4123,"mutability":"mutable","name":"amountB","nameLocation":"2259:7:28","nodeType":"VariableDeclaration","scope":4143,"src":"2251:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"tickLower","nameLocation":"2282:9:28","nodeType":"VariableDeclaration","scope":4143,"src":"2276:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4124,"name":"int24","nodeType":"ElementaryTypeName","src":"2276:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"tickUpper","nameLocation":"2307:9:28","nodeType":"VariableDeclaration","scope":4143,"src":"2301:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4126,"name":"int24","nodeType":"ElementaryTypeName","src":"2301:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2148:174:28"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[],"src":"2340:0:28"},"scope":4325,"src":"2127:398:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4197,"nodeType":"Block","src":"2657:722:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":4160,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"2736:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2728:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4158,"name":"address","nodeType":"ElementaryTypeName","src":"2728:7:28","typeDescriptions":{}}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4162,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2749:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"2713:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4154,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2706:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2720:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"2706:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"ExpressionStatement","src":"2706:52:28"},{"assignments":[4169],"declarations":[{"constant":false,"id":4169,"mutability":"mutable","name":"params","nameLocation":"2842:6:28","nodeType":"VariableDeclaration","scope":4197,"src":"2800:48:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":4168,"nodeType":"UserDefinedTypeName","pathNode":{"id":4167,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["2800:11:28","2812:22:28"],"nodeType":"IdentifierPath","referencedDeclaration":2698,"src":"2800:34:28"},"referencedDeclaration":2698,"src":"2800:34:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":4187,"initialValue":{"arguments":[{"id":4172,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"2916:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4173,"name":"native","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2950:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4174,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2986:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":4177,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3022:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Swapper_$4325","typeString":"contract Swapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Swapper_$4325","typeString":"contract Swapper"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3014:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"3014:7:28","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4179,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3058:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3064:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"3058:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3076:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3058:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"3108:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3185:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4170,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2851:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2774_$","typeString":"type(contract ISwapRouter)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2876:22:28","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"2851:47:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$2698_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:370:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"2800:421:28"},{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"amountOut","nameLocation":"3299:9:28","nodeType":"VariableDeclaration","scope":4197,"src":"3291:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4194,"initialValue":{"arguments":[{"id":4192,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"3339:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":4190,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"3311:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3322:16:28","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"3311:27:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$2698_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3291:55:28"},{"expression":{"id":4195,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"3363:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4196,"nodeType":"Return","src":"3356:16:28"}]},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokenToETH","nameLocation":"2540:15:28","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"token","nameLocation":"2573:5:28","nodeType":"VariableDeclaration","scope":4198,"src":"2565:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"2565:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"amountIn","nameLocation":"2596:8:28","nodeType":"VariableDeclaration","scope":4198,"src":"2588:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2588:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"fee","nameLocation":"2621:3:28","nodeType":"VariableDeclaration","scope":4198,"src":"2614:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4148,"name":"uint24","nodeType":"ElementaryTypeName","src":"2614:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2555:75:28"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"2648:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2647:9:28"},"scope":4325,"src":"2531:848:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4267,"nodeType":"Block","src":"3591:739:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":4221,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"3678:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}],"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3670:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4219,"name":"address","nodeType":"ElementaryTypeName","src":"3670:7:28","typeDescriptions":{}}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3670:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4223,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"3696:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4216,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3654:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4215,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3647:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3662:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3647:22:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4225,"nodeType":"ExpressionStatement","src":"3647:57:28"},{"expression":{"arguments":[{"arguments":[{"id":4232,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"3745:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}],"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3737:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"3737:7:28","typeDescriptions":{}}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4234,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"3763:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4227,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"3721:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4226,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3714:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3729:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"3714:22:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"ExpressionStatement","src":"3714:57:28"},{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"params","nameLocation":"3883:6:28","nodeType":"VariableDeclaration","scope":4267,"src":"3825:64:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams"},"typeName":{"id":4240,"nodeType":"UserDefinedTypeName","pathNode":{"id":4239,"name":"INonfungiblePositionManager.MintParams","nameLocations":["3825:27:28","3853:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":2523,"src":"3825:38:28"},"referencedDeclaration":2523,"src":"3825:38:28","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_storage_ptr","typeString":"struct INonfungiblePositionManager.MintParams"}},"visibility":"internal"}],"id":4260,"initialValue":{"arguments":[{"id":4244,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3948:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4245,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"3972:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4246,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"3996:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4247,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"4017:9:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4248,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4044:9:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4249,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"4071:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4250,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"4096:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4121:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4154:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":4255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4195:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Swapper_$4325","typeString":"contract Swapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Swapper_$4325","typeString":"contract Swapper"}],"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4187:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4253,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:28","typeDescriptions":{}}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4187:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4257,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4218:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4224:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"4218:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4242,"name":"INonfungiblePositionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3892:27:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonfungiblePositionManager_$2613_$","typeString":"type(contract INonfungiblePositionManager)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3920:10:28","memberName":"MintParams","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"3892:38:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MintParams_$2523_storage_ptr_$","typeString":"type(struct INonfungiblePositionManager.MintParams storage pointer)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3892:367:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}},"nodeType":"VariableDeclarationStatement","src":"3825:434:28"},{"expression":{"arguments":[{"id":4264,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"4316:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2523_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MintParams_$2523_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}],"expression":{"id":4261,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4295:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2613","typeString":"contract INonfungiblePositionManager"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4311:4:28","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"4295:20:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MintParams_$2523_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$","typeString":"function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4295:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint128,uint256,uint256)"}},"id":4266,"nodeType":"ExpressionStatement","src":"4295:28:28"}]},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"_addLiquidity","nameLocation":"3394:13:28","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"tokenA","nameLocation":"3425:6:28","nodeType":"VariableDeclaration","scope":4268,"src":"3417:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"tokenB","nameLocation":"3449:6:28","nodeType":"VariableDeclaration","scope":4268,"src":"3441:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4201,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"fee","nameLocation":"3472:3:28","nodeType":"VariableDeclaration","scope":4268,"src":"3465:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4203,"name":"uint24","nodeType":"ElementaryTypeName","src":"3465:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"amountA","nameLocation":"3493:7:28","nodeType":"VariableDeclaration","scope":4268,"src":"3485:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3485:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"amountB","nameLocation":"3518:7:28","nodeType":"VariableDeclaration","scope":4268,"src":"3510:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"tickLower","nameLocation":"3541:9:28","nodeType":"VariableDeclaration","scope":4268,"src":"3535:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4209,"name":"int24","nodeType":"ElementaryTypeName","src":"3535:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"tickUpper","nameLocation":"3566:9:28","nodeType":"VariableDeclaration","scope":4268,"src":"3560:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4211,"name":"int24","nodeType":"ElementaryTypeName","src":"3560:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3407:174:28"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[],"src":"3591:0:28"},"scope":4325,"src":"3385:945:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4323,"nodeType":"Block","src":"4522:655:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":4289,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"4604:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4596:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4287,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:28","typeDescriptions":{}}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4596:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4291,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"4617:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4284,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4579:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4283,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"4572:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"4572:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4293,"nodeType":"ExpressionStatement","src":"4572:54:28"},{"assignments":[4298],"declarations":[{"constant":false,"id":4298,"mutability":"mutable","name":"params","nameLocation":"4714:6:28","nodeType":"VariableDeclaration","scope":4323,"src":"4672:48:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":4297,"nodeType":"UserDefinedTypeName","pathNode":{"id":4296,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["4672:11:28","4684:22:28"],"nodeType":"IdentifierPath","referencedDeclaration":2698,"src":"4672:34:28"},"referencedDeclaration":2698,"src":"4672:34:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":4313,"initialValue":{"arguments":[{"id":4301,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4788:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4302,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4813:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4303,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4839:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4304,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"4860:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4305,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4886:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4892:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"4886:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4886:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4309,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"4936:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4974:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5013:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4299,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"4723:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2774_$","typeString":"type(contract ISwapRouter)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4748:22:28","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"4723:47:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$2698_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:326:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4672:377:28"},{"assignments":[4315],"declarations":[{"constant":false,"id":4315,"mutability":"mutable","name":"amountOut","nameLocation":"5096:9:28","nodeType":"VariableDeclaration","scope":4323,"src":"5088:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"5088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4320,"initialValue":{"arguments":[{"id":4318,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"5136:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2698_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":4316,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5108:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5119:16:28","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"5108:27:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$2698_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5108:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5088:55:28"},{"expression":{"id":4321,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"5161:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4282,"id":4322,"nodeType":"Return","src":"5154:16:28"}]},"id":4324,"implemented":true,"kind":"function","modifiers":[],"name":"_swapTokensForTokens","nameLocation":"4345:20:28","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"tokenIn","nameLocation":"4383:7:28","nodeType":"VariableDeclaration","scope":4324,"src":"4375:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"tokenOut","nameLocation":"4408:8:28","nodeType":"VariableDeclaration","scope":4324,"src":"4400:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"4400:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"fee","nameLocation":"4433:3:28","nodeType":"VariableDeclaration","scope":4324,"src":"4426:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4273,"name":"uint24","nodeType":"ElementaryTypeName","src":"4426:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"amountIn","nameLocation":"4454:8:28","nodeType":"VariableDeclaration","scope":4324,"src":"4446:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"receiver","nameLocation":"4480:8:28","nodeType":"VariableDeclaration","scope":4324,"src":"4472:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"4472:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:129:28"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4324,"src":"4513:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4512:9:28"},"scope":4325,"src":"4336:841:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4326,"src":"477:4702:28","usedErrors":[]}],"src":"187:4993:28"},"id":28},"contracts/treasury/MecenateTreasury.sol":{"ast":{"absolutePath":"contracts/treasury/MecenateTreasury.sol","exportedSymbols":{"Address":[1718],"Context":[1740],"ERC20":[699],"IERC165":[1752],"IERC20":[777],"IERC20Metadata":[802],"IERC20Permit":[838],"IERC721":[1330],"IERC721Enumerable":[1361],"IERC721Metadata":[1388],"IERC721Permit":[2414],"IMUSE":[3398],"IMecenateUsers":[3567],"INonfungiblePositionManager":[2613],"IPeripheryImmutableState":[2629],"IPeripheryPayments":[2655],"IPoolInitializer":[2674],"ISwapRouter":[2774],"IUniswapV3SwapCallback":[2379],"MecenateTreasury":[4867],"Ownable":[112],"PoolAddress":[2874],"SafeERC20":[1214],"Structures":[3746],"Swapper":[4325]},"id":4868,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4327,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"211:24:29"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":113,"src":"237:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":700,"src":"290:55:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4330,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":1215,"src":"346:65:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/modules/Swapper.sol","file":"../modules/Swapper.sol","id":4331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":4326,"src":"413:32:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMecenateUsers.sol","file":"../interfaces/IMecenateUsers.sol","id":4332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":3568,"src":"446:42:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMUSE.sol","file":"../interfaces/IMUSE.sol","id":4333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4868,"sourceUnit":3399,"src":"489:33:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4334,"name":"Ownable","nameLocations":["553:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"553:7:29"},"id":4335,"nodeType":"InheritanceSpecifier","src":"553:7:29"},{"baseName":{"id":4336,"name":"Swapper","nameLocations":["562:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":4325,"src":"562:7:29"},"id":4337,"nodeType":"InheritanceSpecifier","src":"562:7:29"}],"canonicalName":"MecenateTreasury","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4867,"linearizedBaseContracts":[4867,4325,112,1740],"name":"MecenateTreasury","nameLocation":"533:16:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4341,"libraryName":{"id":4338,"name":"SafeERC20","nameLocations":["582:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"582:9:29"},"nodeType":"UsingForDirective","src":"576:27:29","typeName":{"id":4340,"nodeType":"UserDefinedTypeName","pathNode":{"id":4339,"name":"IERC20","nameLocations":["596:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"596:6:29"},"referencedDeclaration":777,"src":"596:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"808fc206","id":4344,"mutability":"mutable","name":"globalFee","nameLocation":"624:9:29","nodeType":"VariableDeclaration","scope":4867,"src":"609:30:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"636:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"91792d5b","id":4347,"mutability":"mutable","name":"fixedFee","nameLocation":"661:8:29","nodeType":"VariableDeclaration","scope":4867,"src":"646:36:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"672:10:29","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":false,"functionSelector":"1fce07d5","id":4349,"mutability":"mutable","name":"lastDistributed","nameLocation":"704:15:29","nodeType":"VariableDeclaration","scope":4867,"src":"689:30:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7450bce9","id":4351,"mutability":"mutable","name":"distributableBalance","nameLocation":"741:20:29","nodeType":"VariableDeclaration","scope":4867,"src":"726:35:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d5b2a01a","id":4353,"mutability":"mutable","name":"ownerFee","nameLocation":"783:8:29","nodeType":"VariableDeclaration","scope":4867,"src":"768:23:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"000a74be","id":4357,"mutability":"mutable","name":"userReward","nameLocation":"833:10:29","nodeType":"VariableDeclaration","scope":4867,"src":"798:45:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4356,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4354,"name":"address","nodeType":"ElementaryTypeName","src":"806:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"798:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"674ee49d","id":4363,"mutability":"mutable","name":"userRewardERC20","nameLocation":"904:15:29","nodeType":"VariableDeclaration","scope":4867,"src":"849:70:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4362,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4358,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"849:47:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4361,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4359,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"868:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"568dbccf","id":4367,"mutability":"mutable","name":"distributableERC20Balance","nameLocation":"960:25:29","nodeType":"VariableDeclaration","scope":4867,"src":"925:60:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4366,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4364,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"925:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":4375,"nodeType":"Block","src":"1029:123:29","statements":[{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"1112:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:5:29","memberName":"value","nodeType":"MemberAccess","src":"1136:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1112:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"1112:33:29"}]},"functionSelector":"a26759cb","id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"addFunds","nameLocation":"1001:8:29","nodeType":"FunctionDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[],"src":"1009:2:29"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[],"src":"1029:0:29"},"scope":4867,"src":"992:160:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4387,"nodeType":"Block","src":"1219:39:29","statements":[{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"globalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"1229:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4384,"name":"_globalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"1241:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1229:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"1229:22:29"}]},"functionSelector":"291206f6","id":4388,"implemented":true,"kind":"function","modifiers":[{"id":4381,"kind":"modifierInvocation","modifierName":{"id":4380,"name":"onlyOwner","nameLocations":["1209:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1209:9:29"},"nodeType":"ModifierInvocation","src":"1209:9:29"}],"name":"setGlobalFee","nameLocation":"1167:12:29","nodeType":"FunctionDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"_globalFee","nameLocation":"1188:10:29","nodeType":"VariableDeclaration","scope":4388,"src":"1180:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1180:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1179:20:29"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[],"src":"1219:0:29"},"scope":4867,"src":"1158:100:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4399,"nodeType":"Block","src":"1323:37:29","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"fixedFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"1333:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4396,"name":"_fixedFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"1344:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1333:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"1333:20:29"}]},"functionSelector":"37de8106","id":4400,"implemented":true,"kind":"function","modifiers":[{"id":4393,"kind":"modifierInvocation","modifierName":{"id":4392,"name":"onlyOwner","nameLocations":["1313:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1313:9:29"},"nodeType":"ModifierInvocation","src":"1313:9:29"}],"name":"setFixedFee","nameLocation":"1273:11:29","nodeType":"FunctionDefinition","parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"_fixedFee","nameLocation":"1293:9:29","nodeType":"VariableDeclaration","scope":4400,"src":"1285:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1284:19:29"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[],"src":"1323:0:29"},"scope":4867,"src":"1264:96:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4415,"nodeType":"Block","src":"1439:59:29","statements":[{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4409,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"1449:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4411,"indexExpression":{"id":4410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"1475:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1449:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4412,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"1485:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1449:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4414,"nodeType":"ExpressionStatement","src":"1449:42:29"}]},"functionSelector":"ffdf2bcb","id":4416,"implemented":true,"kind":"function","modifiers":[{"id":4407,"kind":"modifierInvocation","modifierName":{"id":4406,"name":"onlyOwner","nameLocations":["1429:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1429:9:29"},"nodeType":"ModifierInvocation","src":"1429:9:29"}],"name":"addERC20Funds","nameLocation":"1375:13:29","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"token","nameLocation":"1397:5:29","nodeType":"VariableDeclaration","scope":4416,"src":"1389:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4401,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"amount","nameLocation":"1412:6:29","nodeType":"VariableDeclaration","scope":4416,"src":"1404:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1388:31:29"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[],"src":"1439:0:29"},"scope":4867,"src":"1366:132:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4514,"nodeType":"Block","src":"1556:870:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4422,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1587:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1593:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"1587:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4424,"name":"lastDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"1605:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1587:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1624:6:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"1587:43:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c792064697374726962757465206f6e6365206120646179","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1644:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_5405774e11b06e5ad519fcaa1c7e9102071ed99cd939649025797a880c6865ed","typeString":"literal_string \"Can only distribute once a day\""},"value":"Can only distribute once a day"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5405774e11b06e5ad519fcaa1c7e9102071ed99cd939649025797a880c6865ed","typeString":"literal_string \"Can only distribute once a day\""}],"id":4421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1566:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:120:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4430,"nodeType":"ExpressionStatement","src":"1566:120:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"1704:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1727:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1704:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2064697374726962757461626c652062616c616e6365","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1730:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_75585d66b3b0d45f85e57a2670d03dd65ff4f85ef1e75423e2264cfccf95de41","typeString":"literal_string \"No distributable balance\""},"value":"No distributable balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75585d66b3b0d45f85e57a2670d03dd65ff4f85ef1e75423e2264cfccf95de41","typeString":"literal_string \"No distributable balance\""}],"id":4431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1696:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:61:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"ExpressionStatement","src":"1696:61:29"},{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"fee","nameLocation":"1776:3:29","nodeType":"VariableDeclaration","scope":4514,"src":"1768:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"1783:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4441,"name":"globalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"1806:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1783:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1782:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:5:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"1782:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1768:56:29"},{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"1835:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4448,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"1847:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1835:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"1835:15:29"},{"assignments":[4452],"declarations":[{"constant":false,"id":4452,"mutability":"mutable","name":"total","nameLocation":"1869:5:29","nodeType":"VariableDeclaration","scope":4514,"src":"1861:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"1877:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4454,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"1900:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1877:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1861:42:29"},{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"userCount","nameLocation":"1921:9:29","nodeType":"VariableDeclaration","scope":4514,"src":"1913:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4460,"name":"usersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"1948:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4459,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1933:14:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$3567_$","typeString":"type(contract IMecenateUsers)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$3567","typeString":"contract IMecenateUsers"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:12:29","memberName":"getUserCount","nodeType":"MemberAccess","referencedDeclaration":3527,"src":"1933:42:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1913:64:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1996:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1996:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20757365727320746f206469737472696275746520746f","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2011:27:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_a26bc0b7596e780f78a1003057f99ccf54cb4e1cce591ed4566c39352e334d5b","typeString":"literal_string \"No users to distribute to\""},"value":"No users to distribute to"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a26bc0b7596e780f78a1003057f99ccf54cb4e1cce591ed4566c39352e334d5b","typeString":"literal_string \"No users to distribute to\""}],"id":4465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1988:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1988:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4471,"nodeType":"ExpressionStatement","src":"1988:51:29"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"perIdentity","nameLocation":"2058:11:29","nodeType":"VariableDeclaration","scope":4514,"src":"2050:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4477,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"2072:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4475,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"2080:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2072:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2050:39:29"},{"body":{"id":4503,"nodeType":"Block","src":"2140:127:29","statements":[{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"user","nameLocation":"2162:4:29","nodeType":"VariableDeclaration","scope":4503,"src":"2154:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4488,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2209:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4491,"name":"usersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"2184:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4490,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2169:14:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$3567_$","typeString":"type(contract IMecenateUsers)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$3567","typeString":"contract IMecenateUsers"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:9:29","memberName":"getUserAt","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"2169:39:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2154:57:29"},{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4497,"name":"userReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"2225:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4499,"indexExpression":{"id":4498,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"2236:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2225:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4500,"name":"perIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2245:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4502,"nodeType":"ExpressionStatement","src":"2225:31:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2120:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4483,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"2124:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2120:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4504,"initializationExpression":{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"i","nameLocation":"2113:1:29","nodeType":"VariableDeclaration","scope":4504,"src":"2105:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4481,"initialValue":{"hexValue":"30","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2117:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2105:13:29"},"loopExpression":{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2135:3:29","subExpression":{"id":4485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2135:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"2135:3:29"},"nodeType":"ForStatement","src":"2100:167:29"},{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"lastDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"2319:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4506,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2337:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"2337:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2319:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"2319:33:29"},{"expression":{"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4510,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"2362:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2362:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4513,"nodeType":"ExpressionStatement","src":"2362:24:29"}]},"functionSelector":"63453ae1","id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"distribute","nameLocation":"1513:10:29","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"usersContract","nameLocation":"1532:13:29","nodeType":"VariableDeclaration","scope":4515,"src":"1524:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4417,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1523:23:29"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[],"src":"1556:0:29"},"scope":4867,"src":"1504:922:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4610,"nodeType":"Block","src":"2504:981:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4523,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2535:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4525,"indexExpression":{"id":4524,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2561:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2535:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2570:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2535:36:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2064697374726962757461626c652062616c616e6365","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2585:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_75585d66b3b0d45f85e57a2670d03dd65ff4f85ef1e75423e2264cfccf95de41","typeString":"literal_string \"No distributable balance\""},"value":"No distributable balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75585d66b3b0d45f85e57a2670d03dd65ff4f85ef1e75423e2264cfccf95de41","typeString":"literal_string \"No distributable balance\""}],"id":4522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2514:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2514:107:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4530,"nodeType":"ExpressionStatement","src":"2514:107:29"},{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"fee","nameLocation":"2640:3:29","nodeType":"VariableDeclaration","scope":4610,"src":"2632:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4541,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4533,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2647:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4535,"indexExpression":{"id":4534,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2673:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2647:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4536,"name":"globalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"2682:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2647:44:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2646:46:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2695:5:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"2646:54:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2632:68:29"},{"expression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4542,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2710:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4543,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2722:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2710:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4545,"nodeType":"ExpressionStatement","src":"2710:15:29"},{"assignments":[4547],"declarations":[{"constant":false,"id":4547,"mutability":"mutable","name":"total","nameLocation":"2788:5:29","nodeType":"VariableDeclaration","scope":4610,"src":"2780:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2780:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4553,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4548,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2796:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4550,"indexExpression":{"id":4549,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2822:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2796:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4551,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2831:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2796:38:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2780:54:29"},{"assignments":[4555],"declarations":[{"constant":false,"id":4555,"mutability":"mutable","name":"userCount","nameLocation":"2852:9:29","nodeType":"VariableDeclaration","scope":4610,"src":"2844:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4557,"name":"usersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"2879:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4556,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2864:14:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$3567_$","typeString":"type(contract IMecenateUsers)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$3567","typeString":"contract IMecenateUsers"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2894:12:29","memberName":"getUserCount","nodeType":"MemberAccess","referencedDeclaration":3527,"src":"2864:42:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2844:64:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"2927:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2939:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2927:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20757365727320746f206469737472696275746520746f","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:27:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_a26bc0b7596e780f78a1003057f99ccf54cb4e1cce591ed4566c39352e334d5b","typeString":"literal_string \"No users to distribute to\""},"value":"No users to distribute to"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a26bc0b7596e780f78a1003057f99ccf54cb4e1cce591ed4566c39352e334d5b","typeString":"literal_string \"No users to distribute to\""}],"id":4562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2919:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4568,"nodeType":"ExpressionStatement","src":"2919:51:29"},{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"perIdentity","nameLocation":"2989:11:29","nodeType":"VariableDeclaration","scope":4610,"src":"2981:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"3003:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4572,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3011:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3003:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2981:39:29"},{"body":{"id":4602,"nodeType":"Block","src":"3071:304:29","statements":[{"assignments":[4586],"declarations":[{"constant":false,"id":4586,"mutability":"mutable","name":"user","nameLocation":"3093:4:29","nodeType":"VariableDeclaration","scope":4602,"src":"3085:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4593,"initialValue":{"arguments":[{"id":4591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3140:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4588,"name":"usersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3115:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4587,"name":"IMecenateUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"3100:14:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMecenateUsers_$3567_$","typeString":"type(contract IMecenateUsers)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3100:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMecenateUsers_$3567","typeString":"contract IMecenateUsers"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3130:9:29","memberName":"getUserAt","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"3100:39:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3100:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3085:57:29"},{"expression":{"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4594,"name":"userRewardERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"3321:15:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4597,"indexExpression":{"id":4595,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"3337:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3321:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4598,"indexExpression":{"id":4596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"3343:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3321:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4599,"name":"perIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3353:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3321:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4601,"nodeType":"ExpressionStatement","src":"3321:43:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3051:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4580,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3055:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3051:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4603,"initializationExpression":{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"i","nameLocation":"3044:1:29","nodeType":"VariableDeclaration","scope":4603,"src":"3036:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"initialValue":{"hexValue":"30","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3036:13:29"},"loopExpression":{"expression":{"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3066:3:29","subExpression":{"id":4582,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3066:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4584,"nodeType":"ExpressionStatement","src":"3066:3:29"},"nodeType":"ForStatement","src":"3031:344:29"},{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4604,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"3442:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4606,"indexExpression":{"id":4605,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"3468:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3442:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3442:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"3442:36:29"}]},"functionSelector":"d1a06cf8","id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"distributeERC20","nameLocation":"2441:15:29","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"token","nameLocation":"2465:5:29","nodeType":"VariableDeclaration","scope":4611,"src":"2457:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"2457:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"usersContract","nameLocation":"2480:13:29","nodeType":"VariableDeclaration","scope":4611,"src":"2472:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"2472:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2456:38:29"},"returnParameters":{"id":4521,"nodeType":"ParameterList","parameters":[],"src":"2504:0:29"},"scope":4867,"src":"2432:1053:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4623,"nodeType":"Block","src":"3564:47:29","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4619,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"3574:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4620,"name":"swapRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3587:17:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"src":"3574:30:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"id":4622,"nodeType":"ExpressionStatement","src":"3574:30:29"}]},"functionSelector":"41273657","id":4624,"implemented":true,"kind":"function","modifiers":[{"id":4617,"kind":"modifierInvocation","modifierName":{"id":4616,"name":"onlyOwner","nameLocations":["3554:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3554:9:29"},"nodeType":"ModifierInvocation","src":"3554:9:29"}],"name":"setSwapRouter","nameLocation":"3500:13:29","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"swapRouterAddress","nameLocation":"3526:17:29","nodeType":"VariableDeclaration","scope":4624,"src":"3514:29:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"},"typeName":{"id":4613,"nodeType":"UserDefinedTypeName","pathNode":{"id":4612,"name":"ISwapRouter","nameLocations":["3514:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":2774,"src":"3514:11:29"},"referencedDeclaration":2774,"src":"3514:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}},"visibility":"internal"}],"src":"3513:31:29"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[],"src":"3564:0:29"},"scope":4867,"src":"3491:120:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4664,"nodeType":"Block","src":"3682:284:29","statements":[{"assignments":[4632],"declarations":[{"constant":false,"id":4632,"mutability":"mutable","name":"amountToSend","nameLocation":"3700:12:29","nodeType":"VariableDeclaration","scope":4664,"src":"3692:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3692:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4637,"initialValue":{"baseExpression":{"id":4633,"name":"userReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"3715:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4636,"indexExpression":{"expression":{"id":4634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3726:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3730:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3726:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3715:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3692:45:29"},{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4638,"name":"userReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"3748:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4641,"indexExpression":{"expression":{"id":4639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3759:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3759:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3748:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3773:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3748:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"3748:26:29"},{"assignments":[4646,null],"declarations":[{"constant":false,"id":4646,"mutability":"mutable","name":"success","nameLocation":"3822:7:29","nodeType":"VariableDeclaration","scope":4664,"src":"3817:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4645,"name":"bool","nodeType":"ElementaryTypeName","src":"3817:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4656,"initialValue":{"arguments":[{"hexValue":"","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3879:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":4649,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"3843:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3835:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4647,"name":"address","nodeType":"ElementaryTypeName","src":"3835:8:29","stateMutability":"payable","typeDescriptions":{}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3853:4:29","memberName":"call","nodeType":"MemberAccess","src":"3835:22:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4652,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3865:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3835:43:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3816:66:29"},{"expression":{"arguments":[{"id":4658,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"3901:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c65642e","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3910:18:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69","typeString":"literal_string \"Transfer failed.\""},"value":"Transfer failed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69","typeString":"literal_string \"Transfer failed.\""}],"id":4657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3893:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3893:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4661,"nodeType":"ExpressionStatement","src":"3893:36:29"},{"expression":{"id":4662,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3947:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4630,"id":4663,"nodeType":"Return","src":"3940:19:29"}]},"functionSelector":"2ad2e08c","id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"takeReward","nameLocation":"3626:10:29","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"receiver","nameLocation":"3645:8:29","nodeType":"VariableDeclaration","scope":4665,"src":"3637:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"3637:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3636:18:29"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"3673:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3672:9:29"},"scope":4867,"src":"3617:349:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4712,"nodeType":"Block","src":"4079:453:29","statements":[{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"_user","nameLocation":"4171:5:29","nodeType":"VariableDeclaration","scope":4712,"src":"4163:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"4163:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4678,"initialValue":{"expression":{"id":4676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4179:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4183:6:29","memberName":"sender","nodeType":"MemberAccess","src":"4179:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4163:26:29"},{"assignments":[4680],"declarations":[{"constant":false,"id":4680,"mutability":"mutable","name":"amountToSend","nameLocation":"4208:12:29","nodeType":"VariableDeclaration","scope":4712,"src":"4200:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"4200:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4686,"initialValue":{"baseExpression":{"baseExpression":{"id":4681,"name":"userRewardERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4223:15:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4683,"indexExpression":{"id":4682,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"4239:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4223:22:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4685,"indexExpression":{"id":4684,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"4246:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4223:29:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4200:52:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"4318:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4318:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2072657761726420617661696c61626c65","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4336:21:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""},"value":"No reward available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""}],"id":4687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4310:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4693,"nodeType":"ExpressionStatement","src":"4310:48:29"},{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4694,"name":"userRewardERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4369:15:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4697,"indexExpression":{"id":4695,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"4385:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4369:22:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4698,"indexExpression":{"id":4696,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"4392:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4369:29:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4401:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4369:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"4369:33:29"},{"expression":{"arguments":[{"id":4706,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"4472:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4707,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"4482:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4703,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"4452:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4702,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"4445:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4445:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4459:12:29","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":871,"src":"4445:26:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$777_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4445:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"ExpressionStatement","src":"4445:50:29"},{"expression":{"id":4710,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"4513:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4673,"id":4711,"nodeType":"Return","src":"4506:19:29"}]},"functionSelector":"af2c15c4","id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"takeRewardERC20","nameLocation":"3981:15:29","nodeType":"FunctionDefinition","parameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"token","nameLocation":"4014:5:29","nodeType":"VariableDeclaration","scope":4713,"src":"4006:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4669,"mutability":"mutable","name":"receiver","nameLocation":"4037:8:29","nodeType":"VariableDeclaration","scope":4713,"src":"4029:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4668,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3996:55:29"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"4070:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4070:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:9:29"},"scope":4867,"src":"3972:560:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4724,"nodeType":"Block","src":"4603:40:29","statements":[{"expression":{"baseExpression":{"id":4720,"name":"userReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"4620:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4722,"indexExpression":{"id":4721,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"4631:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4620:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4719,"id":4723,"nodeType":"Return","src":"4613:23:29"}]},"functionSelector":"c00007b0","id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"4547:9:29","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"user","nameLocation":"4565:4:29","nodeType":"VariableDeclaration","scope":4725,"src":"4557:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4714,"name":"address","nodeType":"ElementaryTypeName","src":"4557:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4556:14:29"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"4594:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4594:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4593:9:29"},"scope":4867,"src":"4538:105:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4740,"nodeType":"Block","src":"4756:99:29","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4734,"name":"userRewardERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4773:15:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4736,"indexExpression":{"id":4735,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"4789:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4773:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4738,"indexExpression":{"id":4737,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"4795:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4773:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4733,"id":4739,"nodeType":"Return","src":"4766:35:29"}]},"functionSelector":"bcb7557f","id":4741,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardERC20","nameLocation":"4658:14:29","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"token","nameLocation":"4690:5:29","nodeType":"VariableDeclaration","scope":4741,"src":"4682:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4726,"name":"address","nodeType":"ElementaryTypeName","src":"4682:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"user","nameLocation":"4713:4:29","nodeType":"VariableDeclaration","scope":4741,"src":"4705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"4705:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4672:51:29"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"4747:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4746:9:29"},"scope":4867,"src":"4649:206:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4836,"nodeType":"Block","src":"5065:879:29","statements":[{"assignments":[4757],"declarations":[{"constant":false,"id":4757,"mutability":"mutable","name":"amount","nameLocation":"5083:6:29","nodeType":"VariableDeclaration","scope":4836,"src":"5075:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4767,"initialValue":{"arguments":[{"arguments":[{"id":4764,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5125:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5117:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4762,"name":"address","nodeType":"ElementaryTypeName","src":"5117:7:29","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4759,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5099:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4758,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5092:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5107:9:29","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"5092:24:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5075:56:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4775,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5221:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5213:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"5213:7:29","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"5234:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4770,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5197:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4769,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5190:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5205:7:29","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"5190:22:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417070726f7665206661696c6564","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5255:16:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""},"value":"Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""}],"id":4768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5169:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5169:112:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"5169:112:29"},{"assignments":[4783],"declarations":[{"constant":false,"id":4783,"mutability":"mutable","name":"tokens_bought","nameLocation":"5333:13:29","nodeType":"VariableDeclaration","scope":4836,"src":"5325:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"5325:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4794,"initialValue":{"arguments":[{"id":4785,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5383:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4786,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5403:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4787,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"5423:3:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4788,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"5440:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4791,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5468:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}],"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5460:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4789,"name":"address","nodeType":"ElementaryTypeName","src":"5460:7:29","typeDescriptions":{}}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5460:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4784,"name":"_swapTokensForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"5349:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint24,uint256,address) returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:134:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5325:158:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"tokens_bought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"5502:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5518:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5502:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e7320626f75676874","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5521:18:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea755b386537375a73c11f0123de3e709b4498eb7503a4076692dcf822b6ce","typeString":"literal_string \"No tokens bought\""},"value":"No tokens bought"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea755b386537375a73c11f0123de3e709b4498eb7503a4076692dcf822b6ce","typeString":"literal_string \"No tokens bought\""}],"id":4795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5494:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5494:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4801,"nodeType":"ExpressionStatement","src":"5494:46:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4809,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5637:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2774","typeString":"contract ISwapRouter"}],"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5629:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"5629:7:29","typeDescriptions":{}}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5629:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4811,"name":"tokens_bought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"5650:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4804,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5613:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4803,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5606:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$777_$","typeString":"type(contract IERC20)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5621:7:29","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":764,"src":"5606:22:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417070726f7665206661696c6564","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5678:16:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""},"value":"Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_894c45cdacdbd00f70cf0de394f039255fedfdb9b0f57bdf73c557235f0cae5c","typeString":"literal_string \"Approve failed\""}],"id":4802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5585:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5585:119:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"ExpressionStatement","src":"5585:119:29"},{"assignments":[4817],"declarations":[{"constant":false,"id":4817,"mutability":"mutable","name":"tokens_sold_to_muse","nameLocation":"5723:19:29","nodeType":"VariableDeclaration","scope":4836,"src":"5715:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4828,"initialValue":{"arguments":[{"id":4819,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5779:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4820,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5799:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4821,"name":"fee2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"5819:4:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4822,"name":"tokens_bought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"5837:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5872:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MecenateTreasury_$4867","typeString":"contract MecenateTreasury"}],"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5864:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4823,"name":"address","nodeType":"ElementaryTypeName","src":"5864:7:29","typeDescriptions":{}}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5864:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4818,"name":"_swapTokensForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"5745:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint24,uint256,address) returns (uint256)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5745:142:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5715:172:29"},{"expression":{"arguments":[{"id":4833,"name":"tokens_sold_to_muse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"5917:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4830,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5904:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4829,"name":"IMUSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"5898:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMUSE_$3398_$","typeString":"type(contract IMUSE)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMUSE_$3398","typeString":"contract IMUSE"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5912:4:29","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":3397,"src":"5898:18:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"5898:39:29"}]},"functionSelector":"6962a863","id":4837,"implemented":true,"kind":"function","modifiers":[{"id":4754,"kind":"modifierInvocation","modifierName":{"id":4753,"name":"onlyOwner","nameLocations":["5055:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5055:9:29"},"nodeType":"ModifierInvocation","src":"5055:9:29"}],"name":"swapAndBurn","nameLocation":"4915:11:29","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"token0","nameLocation":"4944:6:29","nodeType":"VariableDeclaration","scope":4837,"src":"4936:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"token1","nameLocation":"4968:6:29","nodeType":"VariableDeclaration","scope":4837,"src":"4960:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"token2","nameLocation":"4992:6:29","nodeType":"VariableDeclaration","scope":4837,"src":"4984:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"4984:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"fee","nameLocation":"5015:3:29","nodeType":"VariableDeclaration","scope":4837,"src":"5008:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4748,"name":"uint24","nodeType":"ElementaryTypeName","src":"5008:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"fee2","nameLocation":"5035:4:29","nodeType":"VariableDeclaration","scope":4837,"src":"5028:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4750,"name":"uint24","nodeType":"ElementaryTypeName","src":"5028:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"4926:119:29"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[],"src":"5065:0:29"},"scope":4867,"src":"4906:1038:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4844,"nodeType":"Block","src":"6016:44:29","statements":[{"expression":{"id":4842,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"6033:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4841,"id":4843,"nodeType":"Return","src":"6026:27:29"}]},"functionSelector":"932f9f8a","id":4845,"implemented":true,"kind":"function","modifiers":[],"name":"getDistributionBalance","nameLocation":"5959:22:29","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[],"src":"5981:2:29"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4845,"src":"6007:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"6007:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6006:9:29"},"scope":4867,"src":"5950:110:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4856,"nodeType":"Block","src":"6164:56:29","statements":[{"expression":{"baseExpression":{"id":4852,"name":"distributableERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"6181:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4854,"indexExpression":{"id":4853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"6207:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6181:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4851,"id":4855,"nodeType":"Return","src":"6174:39:29"}]},"functionSelector":"10027a28","id":4857,"implemented":true,"kind":"function","modifiers":[],"name":"getDistributionERC20Balance","nameLocation":"6075:27:29","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"token","nameLocation":"6120:5:29","nodeType":"VariableDeclaration","scope":4857,"src":"6112:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4846,"name":"address","nodeType":"ElementaryTypeName","src":"6112:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6102:29:29"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"6155:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6155:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6154:9:29"},"scope":4867,"src":"6066:154:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4865,"nodeType":"Block","src":"6253:123:29","statements":[{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"distributableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"6336:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6360:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6364:5:29","memberName":"value","nodeType":"MemberAccess","src":"6360:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6336:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"6336:33:29"}]},"id":4866,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[],"src":"6233:2:29"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[],"src":"6253:0:29"},"scope":4867,"src":"6226:150:29","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4868,"src":"524:5854:29","usedErrors":[]}],"src":"211:6168:29"},"id":29}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":802,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200031d5762000c64803803806200001d8162000322565b9283398101906040818303126200031d5780516001600160401b03908181116200031d57836200004f91840162000348565b91602093848201518381116200031d576200006b920162000348565b82518281116200021d576003918254916001958684811c9416801562000312575b88851014620002fc578190601f94858111620002a6575b5088908583116001146200023f5760009262000233575b505060001982861b1c191690861b1783555b80519384116200021d5760049586548681811c9116801562000212575b82821014620001fd57838111620001b2575b508092851160011462000144575093839491849260009562000138575b50501b92600019911b1c19161790555b6040516108a99081620003bb8239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b898383106200019757505050106200017c575b50505050811b01905562000128565b01519060f884600019921b161c19169055388080806200016d565b8587015189559097019694850194889350908101906200015a565b87600052816000208480880160051c820192848910620001f3575b0160051c019087905b828110620001e6575050620000fb565b60008155018790620001d6565b92508192620001cd565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c8282106200028f575050841162000276575b505050811b018355620000cc565b015160001983881b60f8161c1916905538808062000268565b8385015186558c9790950194938401930162000255565b90915085600052886000208580850160051c8201928b8610620002f2575b918a91869594930160051c01915b828110620002e2575050620000a3565b600081558594508a9101620002d2565b92508192620002c4565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021d57604052565b919080601f840112156200031d5782516001600160401b0381116200021d576020906200037e601f8201601f1916830162000322565b928184528282870101116200031d5760005b818110620003a657508260009394955001015290565b85810183015184820184015282016200039056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104ad57508163095ea7b31461048357816318160ddd1461046457816323b872dd1461039a578163313ce5671461037e578163395093511461031757816370a08231146102e057816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105d2565b6100c26105ed565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105d2565b6024359033610603565b5160018152f35b905082346101be57826003193601126101be576101346105d2565b918360243592338152600160205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610771565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102d6575b60209384841081146102c3578388529081156102a75750600114610252575b505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b925282610589565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102935750505050830101858080610209565b80548886018301529301928490820161027d565b60ff1916878501525050151560051b8401019050858080610209565b634e487b7160e01b895260228a52602489fd5b91607f16916101ea565b5050346100e55760203660031901126100e55760209181906001600160a01b036103086105d2565b16815280845220549051908152f35b8284346101be57816003193601126101be576103316105d2565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061036b57602084610112858533610771565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103b66105d2565b6103be6105ed565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036103f8575b602086610112878787610603565b84821061042157509183916104166020969561011295033383610771565b9193948193506103ea565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e5576020906101126104a36105d2565b6024359033610771565b8490843461058557826003193601126105855782600354600181811c9080831692831561057b575b60209384841081146102c3578388529081156102a7575060011461052557505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b925282610589565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106105675750505050830101858080610209565b805488860183015293019284908201610551565b91607f16916104d5565b8280fd5b6020808252825181830181905290939260005b8281106105be57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161059c565b600435906001600160a01b03821682036105e857565b600080fd5b602435906001600160a01b03821682036105e857565b6001600160a01b0390811691821561071e57169182156106cd5760008281528060205260408120549180831061067957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561082257169182156107d25760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212208afef885675534f3130ae0407754b2c23065db5b050919f84bb4ccc003bfa4d564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31D JUMPI PUSH3 0xC64 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x31D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x31D JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x348 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x31D JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x348 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x312 JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x2FC JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2A6 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x23F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x233 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x21D JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x212 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1FD JUMPI DUP4 DUP2 GT PUSH3 0x1B2 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x144 JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x138 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A9 SWAP1 DUP2 PUSH3 0x3BB DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x197 JUMPI POP POP POP LT PUSH3 0x17C JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x128 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x16D JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x15A JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x1F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E6 JUMPI POP POP PUSH3 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1D6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xBA JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x28F JUMPI POP POP DUP5 GT PUSH3 0x276 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x268 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x255 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x2F2 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2E2 JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x21D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x31D JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x37E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x31D JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3A6 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x390 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4AD JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x483 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x464 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x37E JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x317 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x603 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C3 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x589 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x293 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x308 PUSH2 0x5D2 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x331 PUSH2 0x5D2 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x36B JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3B6 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x5ED JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x3F8 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x603 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x421 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x416 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x771 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4A3 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x771 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x585 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x585 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x57B JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C3 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x525 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x567 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x551 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4D5 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5BE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E8 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E8 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x71E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x679 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x822 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 INVALID 0xF8 DUP6 PUSH8 0x5534F3130AE04077 SLOAD 0xB2 0xC2 ADDRESS PUSH6 0xDB5B050919F8 0x4B 0xB4 0xCC 0xC0 SUB 0xBF LOG4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1532:11312:1:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2046:13;1532:11312;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;-1:-1:-1;;;;1532:11312:1;;;;;;;;;;;;;;;;;;;;2069:17;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;2069:17;1532:11312;;-1:-1:-1;1532:11312:1;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;-1:-1:-1;;1532:11312:1;;;-1:-1:-1;;;;;1532:11312:1;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;;;;;;;;;-1:-1:-1;;1532:11312:1;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1490,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4782":{"entryPoint":1517,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1417,"id":null,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":1905,"id":633,"parameterSlots":3,"returnSlots":0},"fun_transfer":{"entryPoint":1539,"id":459,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104ad57508163095ea7b31461048357816318160ddd1461046457816323b872dd1461039a578163313ce5671461037e578163395093511461031757816370a08231146102e057816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105d2565b6100c26105ed565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105d2565b6024359033610603565b5160018152f35b905082346101be57826003193601126101be576101346105d2565b918360243592338152600160205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610771565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102d6575b60209384841081146102c3578388529081156102a75750600114610252575b505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b925282610589565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102935750505050830101858080610209565b80548886018301529301928490820161027d565b60ff1916878501525050151560051b8401019050858080610209565b634e487b7160e01b895260228a52602489fd5b91607f16916101ea565b5050346100e55760203660031901126100e55760209181906001600160a01b036103086105d2565b16815280845220549051908152f35b8284346101be57816003193601126101be576103316105d2565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061036b57602084610112858533610771565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103b66105d2565b6103be6105ed565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036103f8575b602086610112878787610603565b84821061042157509183916104166020969561011295033383610771565b9193948193506103ea565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e5576020906101126104a36105d2565b6024359033610771565b8490843461058557826003193601126105855782600354600181811c9080831692831561057b575b60209384841081146102c3578388529081156102a7575060011461052557505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b925282610589565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106105675750505050830101858080610209565b805488860183015293019284908201610551565b91607f16916104d5565b8280fd5b6020808252825181830181905290939260005b8281106105be57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161059c565b600435906001600160a01b03821682036105e857565b600080fd5b602435906001600160a01b03821682036105e857565b6001600160a01b0390811691821561071e57169182156106cd5760008281528060205260408120549180831061067957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561082257169182156107d25760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212208afef885675534f3130ae0407754b2c23065db5b050919f84bb4ccc003bfa4d564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4AD JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x483 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x464 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x37E JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x317 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x603 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C3 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x589 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x293 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x308 PUSH2 0x5D2 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x331 PUSH2 0x5D2 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x36B JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x771 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3B6 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x5ED JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x3F8 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x603 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x421 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x416 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x771 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4A3 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x771 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x585 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x585 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x57B JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C3 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x525 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x567 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x551 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4D5 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5BE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E8 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5E8 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x71E JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x679 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x822 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 INVALID 0xF8 DUP6 PUSH8 0x5534F3130AE04077 SLOAD 0xB2 0xC2 ADDRESS PUSH6 0xDB5B050919F8 0x4B 0xB4 0xCC 0xC0 SUB 0xBF LOG4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:6;1532:11312;;:::i;:::-;;;719:10:10;;3894:6:1;:::i;:::-;1532:11312;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:10;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;6792:35;;;;1532:11312;;;;6928:34;1532:11312;;;;719:10:10;6928:34:1;:::i;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;-1:-1:-1;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:1;;;;;-1:-1:-1;;1532:11312:1;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:1;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:10:10;1532:11312:1;;;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;719:10:10;6021:38:1;719:10:10;;;6021:38:1;:::i;1532:11312::-;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;3186:2;1532:11312;;;;;;;;;;;;-1:-1:-1;;1532:11312:1;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;719:10:10;1532:11312:1;;;;;;11264:17;;;11244:37;;11240:243;;1532:11312;;5424:6;;;;;;:::i;11240:243::-;11305:26;;;1532:11312;;;;;;11432:25;1532:11312;;;5424:6;1532:11312;;719:10:10;11432:25:1;;:::i;:::-;11240:243;;;;;;;;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:12;1532:11312;;;;;;;;;;;;;;;;;;;;;;;4606:6;1532:11312;;:::i;:::-;;;719:10:10;;4606:6:1;:::i;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;-1:-1:-1;;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1532:11312:1;;;;;;:::o;7456:788::-;-1:-1:-1;;;;;1532:11312:1;;;;7552:18;;1532:11312;;;7630:16;;;1532:11312;;7568:1;1532:11312;;;;;;;;;;7801:21;;;;1532:11312;;;;;8163:26;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26;7456:788::o;1532:11312::-;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;10457:340;-1:-1:-1;;;;;1532:11312:1;;;;10558:19;;1532:11312;;;10636:21;;;1532:11312;;;10758:32;1532:11312;;10575:1;1532:11312;;;;;10575:1;1532:11312;;10575:1;1532:11312;;;;;10575:1;1532:11312;;;;;;;10758:32;10457:340::o;1532:11312::-;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:1;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"443400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2788","approve(address,uint256)":"24387","balanceOf(address)":"2563","decimals()":"262","decreaseAllowance(address,uint256)":"26828","increaseAllowance(address,uint256)":"26763","name()":"infinite","symbol()":"infinite","totalSupply()":"2324","transfer(address,uint256)":"50966","transferFrom(address,address,uint256)":"77385"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":128,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220aa5848e2b0b7c9b0e75c150874fa73242d46eccddcd14dbbbe1dc45f3a5af9b364736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PC BASEFEE 0xE2 0xB0 0xB7 0xC9 0xB0 0xE7 0x5C ISZERO ADDMOD PUSH21 0xFA73242D46ECCDDCD14DBBBE1DC45F3A5AF9B36473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"701:6234:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220aa5848e2b0b7c9b0e75c150874fa73242d46eccddcd14dbbbe1dc45f3a5af9b364736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PC BASEFEE 0xE2 0xB0 0xB7 0xC9 0xB0 0xE7 0x5C ISZERO ADDMOD PUSH21 0xFA73242D46ECCDDCD14DBBBE1DC45F3A5AF9B36473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"701:6234:5:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c3c43d5051cc13937edd04ea088ff32f541ca91259d2edb71d0c38836e05300a64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC4 RETURNDATASIZE POP MLOAD 0xCC SGT SWAP4 PUSH31 0xDD04EA088FF32F541CA91259D2EDB71D0C38836E05300A64736F6C63430008 SGT STOP CALLER ","sourceMap":"194:9169:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c3c43d5051cc13937edd04ea088ff32f541ca91259d2edb71d0c38836e05300a64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC4 RETURNDATASIZE POP MLOAD 0xCC SGT SWAP4 PUSH31 0xDD04EA088FF32F541CA91259D2EDB71D0C38836E05300A64736F6C63430008 SGT STOP CALLER ","sourceMap":"194:9169:9:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b746ec82657112491aee4e1a42e0efeb2707555ebeedbba024410fd04c31201264736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CHAINID 0xEC DUP3 PUSH6 0x7112491AEE4E BYTE TIMESTAMP 0xE0 0xEF 0xEB 0x27 SMOD SSTORE 0x5E 0xBE 0xED 0xBB LOG0 0x24 COINBASE 0xF 0xD0 0x4C BALANCE KECCAK256 SLT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1329:11630:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b746ec82657112491aee4e1a42e0efeb2707555ebeedbba024410fd04c31201264736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CHAINID 0xEC DUP3 PUSH6 0x7112491AEE4E BYTE TIMESTAMP 0xE0 0xEF 0xEB 0x27 SMOD SSTORE 0x5E 0xBE 0xED 0xBB LOG0 0x24 COINBASE 0xF 0xD0 0x4C BALANCE KECCAK256 SLT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1329:11630:12:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"IERC721Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"The domain seperator used in encoding of permit signature"}},"PERMIT_TYPEHASH()":{"returns":{"_0":"The typehash for the permit"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC721 with permit","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","permit(address,uint256,uint256,uint8,bytes32,bytes32)":"7ac2ff7b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"The domain separator used in the permit signature"},"PERMIT_TYPEHASH()":{"notice":"The permit typehash used in the permit signature"},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approve of a specific token ID for spending by spender via signature"}},"notice":"Extension to ERC721 that includes a permit function for signature based approvals","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"INonfungiblePositionManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"DecreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"IncreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}],"internalType":"struct INonfungiblePositionManager.CollectParams","name":"params","type":"tuple"}],"name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple"}],"name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple"}],"name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.MintParams","name":"params","type":"tuple"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"positions","outputs":[{"internalType":"uint96","name":"nonce","type":"uint96"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Collect(uint256,address,uint256,uint256)":{"details":"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior","params":{"amount0":"The amount of token0 owed to the position that was collected","amount1":"The amount of token1 owed to the position that was collected","recipient":"The address of the account that received the collected tokens","tokenId":"The ID of the token for which underlying tokens were collected"}},"DecreaseLiquidity(uint256,uint128,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was accounted for the decrease in liquidity","amount1":"The amount of token1 that was accounted for the decrease in liquidity","liquidity":"The amount by which liquidity for the NFT position was decreased","tokenId":"The ID of the token for which liquidity was decreased"}},"IncreaseLiquidity(uint256,uint128,uint256,uint256)":{"details":"Also emitted when a token is minted","params":{"amount0":"The amount of token0 that was paid for the increase in liquidity","amount1":"The amount of token1 that was paid for the increase in liquidity","liquidity":"The amount by which liquidity for the NFT position was increased","tokenId":"The ID of the token for which liquidity was increased"}},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"The domain seperator used in encoding of permit signature"}},"PERMIT_TYPEHASH()":{"returns":{"_0":"The typehash for the permit"}},"WETH9()":{"returns":{"_0":"Returns the address of WETH9"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"burn(uint256)":{"params":{"tokenId":"The ID of the token that is being burned"}},"collect((uint256,address,uint128,uint128))":{"params":{"params":"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"details":"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool","params":{"fee":"The fee amount of the v3 pool for the specified token pair","sqrtPriceX96":"The initial square root price of the pool as a Q64.96 value","token0":"The contract address of token0 of the pool","token1":"The contract address of token1 of the pool"},"returns":{"pool":"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"}},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 accounted to the position's tokens owed","amount1":"The amount of token1 accounted to the position's tokens owed"}},"factory()":{"returns":{"_0":"Returns the address of the Uniswap V3 factory"}},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 to acheive resulting liquidity","amount1":"The amount of token1 to acheive resulting liquidity","liquidity":"The new liquidity amount as a result of the increase"}},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"details":"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.","params":{"params":"The params necessary to mint a position, encoded as `MintParams` in calldata"},"returns":{"amount0":"The amount of token0","amount1":"The amount of token1","liquidity":"The amount of liquidity for this position","tokenId":"The ID of the token that represents the minted position"}},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"positions(uint256)":{"details":"Throws if the token ID is not valid.","params":{"tokenId":"The ID of the token that represents the position"},"returns":{"fee":"The fee associated with the pool","feeGrowthInside0LastX128":"The fee growth of token0 as of the last action on the individual position","feeGrowthInside1LastX128":"The fee growth of token1 as of the last action on the individual position","liquidity":"The liquidity of the position","nonce":"The nonce for permits","operator":"The address that is approved for spending","tickLower":"The lower end of the tick range for the position","tickUpper":"The higher end of the tick range for the position","token0":"The address of the token0 for a specific pool","token1":"The address of the token1 for a specific pool","tokensOwed0":"The uncollected amount of token0 owed to the position as of the last computation","tokensOwed1":"The uncollected amount of token1 owed to the position as of the last computation"}},"refundETH()":{"details":"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"sweepToken(address,uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing the token from users","params":{"amountMinimum":"The minimum amount of token required for a transfer","recipient":"The destination address of the token","token":"The contract address of the token which will be transferred to `recipient`"}},"symbol()":{"details":"Returns the token collection symbol."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."},"unwrapWETH9(uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.","params":{"amountMinimum":"The minimum amount of WETH9 to unwrap","recipient":"The address receiving ETH"}}},"title":"Non-fungible token for positions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","WETH9()":"4aa4a4fc","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","collect((uint256,address,uint128,uint128))":"fc6f7865","createAndInitializePoolIfNecessary(address,address,uint24,uint160)":"13ead562","decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":"0c49ccbe","factory()":"c45a0155","getApproved(uint256)":"081812fc","increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":"219f5d17","isApprovedForAll(address,address)":"e985e9c5","mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":"88316456","name()":"06fdde03","ownerOf(uint256)":"6352211e","permit(address,uint256,uint256,uint8,bytes32,bytes32)":"7ac2ff7b","positions(uint256)":"99fbab88","refundETH()":"12210e8a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","sweepToken(address,uint256,address)":"df2ab5bb","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","unwrapWETH9(uint256,address)":"49404b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n// edited by Mecenate\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\n\\nimport \\\"./IPoolInitializer.sol\\\";\\nimport \\\"./IERC721Permit.sol\\\";\\nimport \\\"./IPeripheryPayments.sol\\\";\\nimport \\\"./IPeripheryImmutableState.sol\\\";\\nimport \\\"../libraries/PoolAddress.sol\\\";\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(\\n        uint256 indexed tokenId,\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(\\n        uint256 tokenId\\n    )\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(\\n        MintParams calldata params\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(\\n        IncreaseLiquidityParams calldata params\\n    )\\n        external\\n        payable\\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(\\n        DecreaseLiquidityParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        CollectParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0x1682c67eb39e9ff1e6b3db23bee82d36afe575ff29700d1e00d1f3c860e676c1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n// edited by Mecenate\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH =\\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(\\n        address factory,\\n        PoolKey memory key\\n    ) internal pure returns (address payable pool) {\\n        require(key.token0 < key.token1);\\n        pool = payable( // Aggiunta di \\\"payable\\\" qui\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                factory,\\n                                keccak256(\\n                                    abi.encode(key.token0, key.token1, key.fee)\\n                                ),\\n                                POOL_INIT_CODE_HASH\\n                            )\\n                        )\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x420fa34855bc74f3628799c4ca0388894ae329cf6d6303878f0c4969d821632f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Collect(uint256,address,uint256,uint256)":{"notice":"Emitted when tokens are collected for a position NFT"},"DecreaseLiquidity(uint256,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is decreased for a position NFT"},"IncreaseLiquidity(uint256,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is increased for a position NFT"}},"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"The domain separator used in the permit signature"},"PERMIT_TYPEHASH()":{"notice":"The permit typehash used in the permit signature"},"burn(uint256)":{"notice":"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."},"collect((uint256,address,uint128,uint128))":{"notice":"Collects up to a maximum amount of fees owed to a specific position to the recipient"},"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"notice":"Creates a new pool if it does not exist, then initializes if not initialized"},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"notice":"Decreases the amount of liquidity in a position and accounts it to the position"},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"notice":"Creates a new position wrapped in a NFT"},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approve of a specific token ID for spending by spender via signature"},"positions(uint256)":{"notice":"Returns the position information associated with a given token ID."},"refundETH()":{"notice":"Refunds any ETH balance held by this contract to the `msg.sender`"},"sweepToken(address,uint256,address)":{"notice":"Transfers the full amount of a token held by this contract to recipient"},"unwrapWETH9(uint256,address)":{"notice":"Unwraps the contract's WETH9 balance and sends it to recipient as ETH."}},"notice":"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"IPeripheryImmutableState":{"abi":[{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"WETH9()":{"returns":{"_0":"Returns the address of WETH9"}},"factory()":{"returns":{"_0":"Returns the address of the Uniswap V3 factory"}}},"title":"Immutable state","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH9()":"4aa4a4fc","factory()":"c45a0155"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Functions that return immutable state of the router","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"IPeripheryPayments":{"abi":[{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"refundETH()":{"details":"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"},"sweepToken(address,uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing the token from users","params":{"amountMinimum":"The minimum amount of token required for a transfer","recipient":"The destination address of the token","token":"The contract address of the token which will be transferred to `recipient`"}},"unwrapWETH9(uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.","params":{"amountMinimum":"The minimum amount of WETH9 to unwrap","recipient":"The address receiving ETH"}}},"title":"Periphery Payments","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"refundETH()":"12210e8a","sweepToken(address,uint256,address)":"df2ab5bb","unwrapWETH9(uint256,address)":"49404b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"refundETH()":{"notice":"Refunds any ETH balance held by this contract to the `msg.sender`"},"sweepToken(address,uint256,address)":{"notice":"Transfers the full amount of a token held by this contract to recipient"},"unwrapWETH9(uint256,address)":{"notice":"Unwraps the contract's WETH9 balance and sends it to recipient as ETH."}},"notice":"Functions to ease deposits and withdrawals of ETH","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"IPoolInitializer":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"details":"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool","params":{"fee":"The fee amount of the v3 pool for the specified token pair","sqrtPriceX96":"The initial square root price of the pool as a Q64.96 value","token0":"The contract address of token0 of the pool","token1":"The contract address of token1 of the pool"},"returns":{"pool":"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"}}},"title":"Creates and initializes V3 Pools","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":"13ead562"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"notice":"Creates a new pool if it does not exist, then initializes if not initialized"}},"notice":"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"PoolAddress":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Provides functions for deriving a pool address from the factory, tokens, and the fee","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220180c49284f6ac9e6e1b59313d36a959582a39cd494249b817e5c32dc0940d13264736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xC 0x49 0x28 0x4F PUSH11 0xC9E6E1B59313D36A959582 LOG3 SWAP13 0xD4 SWAP5 0x24 SWAP12 DUP2 PUSH31 0x5C32DC0940D13264736F6C6343000813003300000000000000000000000000 ","sourceMap":"190:1947:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220180c49284f6ac9e6e1b59313d36a959582a39cd494249b817e5c32dc0940d13264736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xC 0x49 0x28 0x4F PUSH11 0xC9E6E1B59313D36A959582 LOG3 SWAP13 0xD4 SWAP5 0x24 SWAP12 DUP2 PUSH31 0x5C32DC0940D13264736F6C6343000813003300000000000000000000000000 ","sourceMap":"190:1947:20:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"computeAddress(address,struct PoolAddress.PoolKey memory)":"infinite","getPoolKey(address,address,uint24)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n// edited by Mecenate\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH =\\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(\\n        address factory,\\n        PoolKey memory key\\n    ) internal pure returns (address payable pool) {\\n        require(key.token0 < key.token1);\\n        pool = payable( // Aggiunta di \\\"payable\\\" qui\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                factory,\\n                                keccak256(\\n                                    abi.encode(key.token0, key.token1, key.fee)\\n                                ),\\n                                POOL_INIT_CODE_HASH\\n                            )\\n                        )\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x420fa34855bc74f3628799c4ca0388894ae329cf6d6303878f0c4969d821632f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/factories/MecenateFeedFactory.sol":{"MecenateFeedFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"FeedCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"buildFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"burnEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"treasury","type":"address"},{"internalType":"address","name":"usersModule","type":"address"},{"internalType":"address","name":"newEasContract","type":"address"},{"internalType":"bytes32","name":"newEasSchema","type":"bytes32"},{"internalType":"address","name":"wethTokenAddr","type":"address"},{"internalType":"address","name":"museTokenAddr","type":"address"},{"internalType":"address","name":"daiTokenAddr","type":"address"},{"internalType":"address","name":"routerAddr","type":"address"}],"name":"changeMultipleSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"easContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"easSchema","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFeedInfo","outputs":[{"components":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"sellerStake","type":"uint256"},{"internalType":"uint256","name":"buyerStake","type":"uint256"},{"internalType":"uint256","name":"totalStake","type":"uint256"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"uint256","name":"paymentRequested","type":"uint256"},{"internalType":"uint256","name":"stakeRequested","type":"uint256"},{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"},{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"postId","type":"bytes32"}],"internalType":"struct Structures.Feed","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeds","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeedsInfo","outputs":[{"components":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"sellerStake","type":"uint256"},{"internalType":"uint256","name":"buyerStake","type":"uint256"},{"internalType":"uint256","name":"totalStake","type":"uint256"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"uint256","name":"paymentRequested","type":"uint256"},{"internalType":"uint256","name":"stakeRequested","type":"uint256"},{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"},{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"postId","type":"bytes32"}],"internalType":"struct Structures.Feed[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFeedsInfoOwned","outputs":[{"components":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"sellerStake","type":"uint256"},{"internalType":"uint256","name":"buyerStake","type":"uint256"},{"internalType":"uint256","name":"totalStake","type":"uint256"},{"internalType":"uint256","name":"postCount","type":"uint256"},{"internalType":"uint256","name":"paymentRequested","type":"uint256"},{"internalType":"uint256","name":"stakeRequested","type":"uint256"},{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"},{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"postId","type":"bytes32"}],"internalType":"struct Structures.Feed[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getFeedsOwned","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"tokenId","type":"uint8"}],"name":"getRouterFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"name":"isContractCreated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newFeed","type":"address"}],"name":"isFeed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"major","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"museToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"newBurnEnabled","type":"bool"}],"name":"setBurnEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"newByteCode","type":"bytes"},{"internalType":"uint8","name":"newMajor","type":"uint8"},{"internalType":"uint8","name":"newMinor","type":"uint8"},{"internalType":"uint8","name":"newPatch","type":"uint8"}],"name":"setFeedByteCode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"tokenId","type":"uint8"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"setRouterFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100655760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360ff19600f5416600f55611997908161006b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063067bd3b4146101d257806318da0011146101cd5780633ec4f23d146101c857806349975235146101c35780634b57b0be146101be5780635dc96d16146101b9578063715018a6146101b45780637b2c835f146101af5780637fe955d4146101aa5780638da5cb5b146101a55780639407aeea146101a05780639496d7f11461019b578063ad86132414610196578063b2a2e9ca14610191578063bb834b0e1461018c578063be22f54614610187578063ca5b4e5c14610182578063cd77b52c1461017d578063cedf3ba21461016e578063d223a56414610178578063d570a66d14610173578063e58fdd041461016e578063e86ef35314610169578063e9318b4714610164578063f2fde38b1461015f578063f77800e51461015a578063f86d0b38146101555763f887ea401461015057600080fd5b610e40565b610e1f565b610df6565b610d2f565b610cdb565b610c5e565b610b9e565b610c19565b610be0565b610b75565b610958565b61092f565b61090b565b610891565b610803565b61057e565b6104de565b61041c565b610392565b610314565b6102ac565b610289565b610260565b61023c565b61021e565b6101f5565b346101f05760003660031901126101f0576020601054604051908152f35b600080fd5b346101f05760003660031901126101f0576003546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f0576020600654604051908152f35b346101f05760003660031901126101f057602060ff60115460101c16604051908152f35b346101f05760003660031901126101f0576009546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f057602060ff600f54166040519015158152f35b346101f057600080600319360112610307576102c6610e69565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b801515036101f057565b346101f05760203660031901126101f0576004356103318161030a565b610339610e69565b60ff8019600f54169115151617600f55600080f35b6020908160408183019282815285518094520193019160005b828110610375575050505090565b83516001600160a01b031685529381019392810192600101610367565b346101f05760003660031901126101f05760405180600191825492838252602080920193816000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b82821061040757610403866103f7818a038261045b565b6040519182918261034e565b0390f35b845487529586019593830193908301906103e0565b346101f05760003660031901126101f0576000546040516001600160a01b039091168152602090f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761047d57604052565b610445565b67ffffffffffffffff811161047d57601f01601f191660200190565b6024359060ff821682036101f057565b6044359060ff821682036101f057565b6064359060ff821682036101f057565b6004359060ff821682036101f057565b346101f05760803660031901126101f05760043567ffffffffffffffff81116101f057366023820112156101f057806004013561051a81610482565b90610528604051928361045b565b80825236602482850101116101f057602081600092602461056b9601838601378301015261055461049e565b61055c6104ae565b906105656104be565b92610ec1565b005b6001600160a01b038116036101f057565b346101f0576101003660031901126101f05761056b60043561059f8161056d565b602435906105ac8261056d565b6044356105b88161056d565b608435906105c58261056d565b60a435906105d28261056d565b60c435916105df8361056d565b60e435956105ec8761056d565b6105f4610e69565b60018060a01b0394858094818094816bffffffffffffffffffffffff60a01b9b168b6003541617600355168960045416176004551687600554161760055560643560065516856009541617600955168360075416176007551690600854161760085560018060a01b03166bffffffffffffffffffffffff60a01b600a541617600a55565b634e487b7160e01b600052602160045260246000fd5b90600882101561069b5752565b610678565b90600382101561069b5752565b60005b8381106106c05750506000910152565b81810151838201526020016106b0565b906020916106e9815180928185528580860191016106ad565b601f01601f1916010190565b80516001600160a01b03168252906020828101516001600160a01b03169082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610765610100808401519083019061068e565b61077861012080840151908301906106a0565b610793610140808401519061018080918501528301906106d0565b916101608091015191015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106107d55750505050505090565b90919293949584806107f3600193603f198682030187528a516106f5565b98019301930191949392906107c5565b346101f0576020806003193601126101f0576004356108218161056d565b60018060a01b0316600052600d81526040600020604051918281835491828152019260005281600020916000905b82821061087a5761040361086e876108698189038261045b565b6118c5565b604051918291826107a1565b83548552938401936001938401939091019061084f565b346101f0576020806003193601126101f0576004356108af8161056d565b6001600160a01b03166000908152600d82526040808220905181548082529183528383208185019491939092915b8282106108f457610403856103f78189038261045b565b8354865294850194600193840193909101906108dd565b346101f05760003660031901126101f057602060ff60115460081c16604051908152f35b346101f05760003660031901126101f0576008546040516001600160a01b039091168152602090f35b60008060031936011261030757600454601154604080513360208201526001600160a01b0390931690830181905230606084015260ff8083166080850152600883901c811660a085015260109290921c90911660c080840191909152825290601f196109c560e08361045b565b60405163122643f360e21b81523360048201526001600160a01b03939091906020908390602490829088165afa908115610b7057610a11610aa192610a95948891610b42575b506110ac565b610a24610a1c611406565b3410156110ee565b610a5f8680808034610a4f610a43610a4360035460018060a01b031690565b6001600160a01b031690565b5af1610a5961112b565b5061115b565b610a72610a6d601054611195565b601055565b610a7a6111ba565b93604051938491610a8f602084018098611278565b90611278565b0390810183528261045b565b519083f090813b15610b3e5781610403917fb658664a46408e6670a38ec7ea8b7614c9e2916184dff2fad99d3a7a3491ca7d949316610adf816112b8565b50336000908152600d60205260409020610afa90839061128f565b506001600160a01b0382166000908152600e60205260409020610b2490805460ff19166001179055565b60405194848695a26001600160a01b031682526020820190565b8280fd5b610b63915060203d8111610b69575b610b5b818361045b565b810190611088565b38610a0b565b503d610b51565b6110a0565b346101f05760003660031901126101f0576005546040516001600160a01b039091168152602090f35b346101f05760203660031901126101f057600435610bbb8161056d565b60018060a01b0316600052600e602052602060ff604060002054166040519015158152f35b346101f05760203660031901126101f05760ff610bfb6104ce565b16600052600c602052602062ffffff60406000205416604051908152f35b346101f05760203660031901126101f057610403610c4a600435610c3c8161056d565b610c4461138a565b50611522565b6040519182916020835260208301906106f5565b346101f05760003660031901126101f05760405180600190815491828252602080920192816000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b828210610cc65761040361086e88610869818a038261045b565b84548652948501949383019390830190610cac565b346101f05760403660031901126101f057610cf46104ce565b6024359062ffffff82168092036101f05760ff90610d10610e69565b16600052600c60205260406000209062ffffff19825416179055600080f35b346101f05760203660031901126101f057600435610d4c8161056d565b610d54610e69565b6001600160a01b039081168015610da257600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101f05760003660031901126101f0576007546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f057602060ff60115416604051908152f35b346101f05760003660031901126101f057600a546040516001600160a01b039091168152602090f35b6000546001600160a01b03163303610e7d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b939261ff0090929192610ed2610e69565b60ff62ff00006011549260101b1694169062ffffff1916179160081b161717601155815167ffffffffffffffff811161047d57610f1981610f14600b54610fdd565b611017565b602080601f8311600114610f555750819293600092610f4a575b50508160011b916000199060031b1c191617600b55565b015190503880610f33565b90601f19831694610f88600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db990565b926000905b878210610fc5575050836001959610610fac575b505050811b01600b55565b015160001960f88460031b161c19169055388080610fa1565b80600185968294968601518155019501930190610f8d565b90600182811c9216801561100d575b6020831014610ff757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fec565b601f8111611023575050565b600090600b82527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9906020601f850160051c8301941061107e575b601f0160051c01915b82811061107357505050565b818155600101611067565b909250829061105e565b908160209103126101f0575161109d8161030a565b90565b6040513d6000823e3d90fd5b156110b357565b60405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b156110f557565b60405162461bcd60e51b815260206004820152600e60248201526d4e4f545f454e4f5547485f46454560901b6044820152606490fd5b3d15611156573d9061113c82610482565b9161114a604051938461045b565b82523d6000602084013e565b606090565b1561116257565b60405162461bcd60e51b815260206004820152600b60248201526a10d0531317d1905253115160aa1b6044820152606490fd5b60001981146111a45760010190565b634e487b7160e01b600052601160045260246000fd5b60405190600082600b54916111ce83610fdd565b8083529260019081811690811561125657506001146111f7575b506111f59250038361045b565b565b600b600090815291507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b84831061123b57506111f59350508101602001386111e8565b81935090816020925483858a01015201910190918592611222565b9050602092506111f594915060ff191682840152151560051b820101386111e8565b9061128b602092828151948592016106ad565b0190565b61109d916001600160a01b031690611334565b634e487b7160e01b600052603260045260246000fd5b8060005260026020526040600020541560001461132e57600154600160401b81101561047d5760018101806001558110156113295781907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155600154906000526002602052604060002055600190565b6112a2565b50600090565b6000828152600182016020819052604082205461138357825492600160401b84101561047d57600184018082558410156113295784604094828552602085200155549382526020522055600190565b5091505090565b60405190610180820182811067ffffffffffffffff82111761047d57604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015260606101408201520152565b908160209103126101f0575190565b6003546040516391792d5b60e01b815290602090829060049082906001600160a01b03165afa908115610b705760009161143e575090565b61109d915060203d811161145f575b611457818361045b565b8101906113f7565b503d61144d565b908160209103126101f0575161109d8161056d565b908160209103126101f0575160088110156101f05790565b600882101561069b5752565b908160209103126101f0575160038110156101f05790565b600382101561069b5752565b6020818303126101f05780519067ffffffffffffffff82116101f0570181601f820112156101f05780516114f681610482565b92611504604051948561045b565b818452602082840101116101f05761109d91602080850191016106ad565b61152a61138a565b5061153361138a565b6001600160a01b0390911680825260408051638da5cb5b60e01b81526020926004929184818581855afa8015610b705761157f9160009161186c575b506001600160a01b031686860152565b8151635c63ed6960e01b815284818581855afa908115610b705760009161184f575b50858301528151634c38d87760e01b815284818581855afa908115610b7057600091611832575b506060860152815163048bf3bb60e11b815284818581855afa908115610b7057600091611815575b5060808601528151630bc8361760e11b815284818581855afa908115610b70576000916117f8575b5060a0860152815163d24e0c8760e01b815284818581855afa908115610b70576000916117db575b5060c0860152815163faeb5e1760e01b815284818581855afa908115610b70576000916117be575b5060e086015281516302734eab60e51b815284818581855afa8015610b705761169e91600091611791575b506101008701611493565b815163010a38f560e01b815284818581855afa8015610b70576116ce91600091611764575b5061012087016114b7565b815163054fd4d560e41b8152916000838581855afa8015610b70578593600091611743575b50610140870152516332946a8760e01b815292839182905afa918215610b7057600092611726575b505061016082015290565b61173c9250803d1061145f57611457818361045b565b388061171b565b61175e913d8091833e611756818361045b565b8101906114c3565b386116f3565b6117849150863d881161178a575b61177c818361045b565b81019061149f565b386116c3565b503d611772565b6117b19150863d88116117b7575b6117a9818361045b565b81019061147b565b38611693565b503d61179f565b6117d59150853d871161145f57611457818361045b565b38611668565b6117f29150853d871161145f57611457818361045b565b38611640565b61180f9150853d871161145f57611457818361045b565b38611618565b61182c9150853d871161145f57611457818361045b565b386115f0565b6118499150853d871161145f57611457818361045b565b386115c8565b6118669150853d871161145f57611457818361045b565b386115a1565b61188c9150863d8811611892575b611884818361045b565b810190611466565b3861156f565b503d61187a565b67ffffffffffffffff811161047d5760051b60200190565b80518210156113295760209160051b010190565b80516118d081611899565b916118de604051938461045b565b818352601f196118ed83611899565b0160005b81811061194a57505060005b82811061190a5750505090565b6119459061192a6001600160a01b0361192383866118b1565b5116611522565b61193482876118b1565b5261193f81866118b1565b50611195565b6118fd565b60209061195561138a565b828288010152016118f156fea26469706673582212200c4e9408b785702a4c89bbcaa3db2a2cbe885657983ef63d3d307406b0bc247764736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0xFF NOT PUSH1 0xF SLOAD AND PUSH1 0xF SSTORE PUSH2 0x1997 SWAP1 DUP2 PUSH2 0x6B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67BD3B4 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x18DA0011 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3EC4F23D EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x49975235 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x4B57B0BE EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x7FE955D4 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x9407AEEA EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x9496D7F1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAD861324 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xB2A2E9CA EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xBB834B0E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xCA5B4E5C EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xCD77B52C EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xCEDF3BA2 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD223A564 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xD570A66D EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE58FDD04 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE86EF353 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xE9318B47 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF77800E5 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF86D0B38 EQ PUSH2 0x155 JUMPI PUSH4 0xF887EA40 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x307 JUMPI PUSH2 0x2C6 PUSH2 0xE69 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x331 DUP2 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x339 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x375 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x367 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP4 DUP2 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x407 JUMPI PUSH2 0x403 DUP7 PUSH2 0x3F7 DUP2 DUP11 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x34E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x3E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1F0 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1F0 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x51A DUP2 PUSH2 0x482 JUMP JUMPDEST SWAP1 PUSH2 0x528 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x56B SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x554 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x55C PUSH2 0x4AE JUMP JUMPDEST SWAP1 PUSH2 0x565 PUSH2 0x4BE JUMP JUMPDEST SWAP3 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x56B PUSH1 0x4 CALLDATALOAD PUSH2 0x59F DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5AC DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x5B8 DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x5C5 DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH2 0x5D2 DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x5DF DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP6 PUSH2 0x5EC DUP8 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP1 SWAP5 DUP2 DUP1 SWAP5 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP12 AND DUP12 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND DUP10 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND DUP8 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x6 SSTORE AND DUP6 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP4 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE AND SWAP1 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6E9 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP1 PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x765 PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x778 PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x793 PUSH2 0x140 DUP1 DUP5 ADD MLOAD SWAP1 PUSH2 0x180 DUP1 SWAP2 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x6D0 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x7D5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x7F3 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x6F5 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x821 DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x87A JUMPI PUSH2 0x403 PUSH2 0x86E DUP8 PUSH2 0x869 DUP2 DUP10 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x7A1 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x84F JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8AF DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP2 SLOAD DUP1 DUP3 MSTORE SWAP2 DUP4 MSTORE DUP4 DUP4 KECCAK256 DUP2 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x8F4 JUMPI PUSH2 0x403 DUP6 PUSH2 0x3F7 DUP2 DUP10 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x307 JUMPI PUSH1 0x4 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xFF DUP1 DUP4 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x8 DUP4 SWAP1 SHR DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0xC0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MSTORE SWAP1 PUSH1 0x1F NOT PUSH2 0x9C5 PUSH1 0xE0 DUP4 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x122643F3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP9 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH2 0xA11 PUSH2 0xAA1 SWAP3 PUSH2 0xA95 SWAP5 DUP9 SWAP2 PUSH2 0xB42 JUMPI JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH2 0xA24 PUSH2 0xA1C PUSH2 0x1406 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH2 0xA5F DUP7 DUP1 DUP1 DUP1 CALLVALUE PUSH2 0xA4F PUSH2 0xA43 PUSH2 0xA43 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST GAS CALL PUSH2 0xA59 PUSH2 0x112B JUMP JUMPDEST POP PUSH2 0x115B JUMP JUMPDEST PUSH2 0xA72 PUSH2 0xA6D PUSH1 0x10 SLOAD PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x11BA JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0xA8F PUSH1 0x20 DUP5 ADD DUP1 SWAP9 PUSH2 0x1278 JUMP JUMPDEST SWAP1 PUSH2 0x1278 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x45B JUMP JUMPDEST MLOAD SWAP1 DUP4 CREATE SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xB3E JUMPI DUP2 PUSH2 0x403 SWAP2 PUSH32 0xB658664A46408E6670A38EC7EA8B7614C9E2916184DFF2FAD99D3A7A3491CA7D SWAP5 SWAP4 AND PUSH2 0xADF DUP2 PUSH2 0x12B8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xAFA SWAP1 DUP4 SWAP1 PUSH2 0x128F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB24 SWAP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP5 DUP7 SWAP6 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xB63 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xB69 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST CODESIZE PUSH2 0xA0B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBBB DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0xFF PUSH2 0xBFB PUSH2 0x4CE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH3 0xFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x403 PUSH2 0xC4A PUSH1 0x4 CALLDATALOAD PUSH2 0xC3C DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xC44 PUSH2 0x138A JUMP JUMPDEST POP PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 SWAP1 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 DUP2 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCC6 JUMPI PUSH2 0x403 PUSH2 0x86E DUP9 PUSH2 0x869 DUP2 DUP11 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST DUP5 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0xCAC JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0xCF4 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1F0 JUMPI PUSH1 0xFF SWAP1 PUSH2 0xD10 PUSH2 0xE69 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH3 0xFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xD54 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE7D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP4 SWAP3 PUSH2 0xFF00 SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xED2 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0xFF PUSH3 0xFF0000 PUSH1 0x11 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP5 AND SWAP1 PUSH3 0xFFFFFF NOT AND OR SWAP2 PUSH1 0x8 SHL AND OR OR PUSH1 0x11 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH2 0xF19 DUP2 PUSH2 0xF14 PUSH1 0xB SLOAD PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF55 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xF4A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0xF88 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0xFC5 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0xFAC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xFA1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x100D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFF7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1023 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xB DUP3 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x107E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1073 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1067 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH2 0x109D DUP2 PUSH2 0x30A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D5CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E4F545F454E4F5547485F464545 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1156 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x113C DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 PUSH2 0x114A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x45B JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1162 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10D0531317D19052531151 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11A4 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xB SLOAD SWAP2 PUSH2 0x11CE DUP4 PUSH2 0xFDD JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11F7 JUMPI JUMPDEST POP PUSH2 0x11F5 SWAP3 POP SUB DUP4 PUSH2 0x45B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 JUMPDEST DUP5 DUP4 LT PUSH2 0x123B JUMPI POP PUSH2 0x11F5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x11E8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1222 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x11F5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x128B PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6AD JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x109D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x132E JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x1329 JUMPI DUP2 SWAP1 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SSTORE PUSH1 0x1 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x1383 JUMPI DUP3 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x1 DUP5 ADD DUP1 DUP3 SSTORE DUP5 LT ISZERO PUSH2 0x1329 JUMPI DUP5 PUSH1 0x40 SWAP5 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47D JUMPI PUSH1 0x40 MSTORE DUP2 PUSH2 0x160 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91792D5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x143E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x109D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x145F JUMPI JUMPDEST PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x13F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH2 0x109D DUP2 PUSH2 0x56D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1F0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1F0 JUMPI DUP1 MLOAD PUSH2 0x14F6 DUP2 PUSH2 0x482 JUMP JUMPDEST SWAP3 PUSH2 0x1504 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x45B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x1F0 JUMPI PUSH2 0x109D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x152A PUSH2 0x138A JUMP JUMPDEST POP PUSH2 0x1533 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 SWAP3 SWAP2 DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x157F SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x186C JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 ADD MSTORE JUMP JUMPDEST DUP2 MLOAD PUSH4 0x5C63ED69 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x184F JUMPI JUMPDEST POP DUP6 DUP4 ADD MSTORE DUP2 MLOAD PUSH4 0x4C38D877 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1832 JUMPI JUMPDEST POP PUSH1 0x60 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0x48BF3BB PUSH1 0xE1 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1815 JUMPI JUMPDEST POP PUSH1 0x80 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xBC83617 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17F8 JUMPI JUMPDEST POP PUSH1 0xA0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xD24E0C87 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17DB JUMPI JUMPDEST POP PUSH1 0xC0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xFAEB5E17 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17BE JUMPI JUMPDEST POP PUSH1 0xE0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0x2734EAB PUSH1 0xE5 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x169E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1791 JUMPI JUMPDEST POP PUSH2 0x100 DUP8 ADD PUSH2 0x1493 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x10A38F5 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x16CE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1764 JUMPI JUMPDEST POP PUSH2 0x120 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x54FD4D5 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 PUSH1 0x0 DUP4 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI DUP6 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1743 JUMPI JUMPDEST POP PUSH2 0x140 DUP8 ADD MSTORE MLOAD PUSH4 0x32946A87 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1726 JUMPI JUMPDEST POP POP PUSH2 0x160 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173C SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x175E SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1756 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x14C3 JUMP JUMPDEST CODESIZE PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x1784 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x178A JUMPI JUMPDEST PUSH2 0x177C DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x149F JUMP JUMPDEST CODESIZE PUSH2 0x16C3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x17B1 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x17B7 JUMPI JUMPDEST PUSH2 0x17A9 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x147B JUMP JUMPDEST CODESIZE PUSH2 0x1693 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17D5 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x17F2 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x180F SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x182C SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x1849 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x1866 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x188C SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x1892 JUMPI JUMPDEST PUSH2 0x1884 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1466 JUMP JUMPDEST CODESIZE PUSH2 0x156F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x187A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1329 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x18D0 DUP2 PUSH2 0x1899 JUMP JUMPDEST SWAP2 PUSH2 0x18DE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x45B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x18ED DUP4 PUSH2 0x1899 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x194A JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x190A JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1945 SWAP1 PUSH2 0x192A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1923 DUP4 DUP7 PUSH2 0x18B1 JUMP JUMPDEST MLOAD AND PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1934 DUP3 DUP8 PUSH2 0x18B1 JUMP JUMPDEST MSTORE PUSH2 0x193F DUP2 DUP7 PUSH2 0x18B1 JUMP JUMPDEST POP PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1955 PUSH2 0x138A JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x18F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x4E SWAP5 ADDMOD 0xB7 DUP6 PUSH17 0x2A4C89BBCAA3DB2A2CBE885657983EF63D RETURNDATASIZE ADDRESS PUSH21 0x6B0BC247764736F6C634300081300330000000000 ","sourceMap":"302:5366:21:-:0;;;;;;;2518:6:0;302:5366:21;;719:10:10;-1:-1:-1;;;;;;302:5366:21;;;;;;719:10:10;-1:-1:-1;;;;;302:5366:21;;;;2566:40:0;;2518:6;2566:40;302:5366:21;;749:5;302:5366;;749:5;302:5366;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":5222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":4232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_PostStatus_fromMemory":{"entryPoint":5243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_Tokens_fromMemory":{"entryPoint":5279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":5315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":5111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":1230,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_9400":{"entryPoint":1182,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_9401":{"entryPoint":1198,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_9402":{"entryPoint":1214,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_address_uint8_uint8_uint8":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Feed_dyn":{"entryPoint":1953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":4728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_PostStatus":{"entryPoint":1678,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_Tokens":{"entryPoint":1696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":1744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Feed":{"entryPoint":1781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Feed":{"entryPoint":5002,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Feed_dyn":{"entryPoint":6297,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1154,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":4119,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_bytes":{"entryPoint":4538,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1709,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_buildFeed":{"entryPoint":2392,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnEnabled":{"entryPoint":649,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_changeMultipleSettings":{"entryPoint":1406,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_contractCounter":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_daiToken":{"entryPoint":2351,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_easContract":{"entryPoint":2933,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_easSchema":{"entryPoint":542,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFeedInfo":{"entryPoint":3097,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFeeds":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFeedsInfo":{"entryPoint":3166,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFeedsInfoOwned":{"entryPoint":2051,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFeedsOwned":{"entryPoint":2193,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRouterFee":{"entryPoint":3040,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isContractCreated":{"entryPoint":2974,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_major":{"entryPoint":3615,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_minor":{"entryPoint":2315,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_museToken":{"entryPoint":3574,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_patch":{"entryPoint":572,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":684,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_router":{"entryPoint":3648,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBurnEnabled":{"entryPoint":788,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeedByteCode":{"entryPoint":1246,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setRouterFee":{"entryPoint":3291,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3375,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_treasuryContract":{"entryPoint":501,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_wethToken":{"entryPoint":608,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4061,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":4395,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":0},"fun_add":{"entryPoint":4916,"id":1805,"parameterSlots":2,"returnSlots":1},"fun_add_2105":{"entryPoint":4751,"id":2105,"parameterSlots":2,"returnSlots":1},"fun_add_9406":{"entryPoint":4792,"id":1805,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":3689,"id":54,"parameterSlots":0,"returnSlots":0},"fun_getCreationFee":{"entryPoint":5126,"id":3363,"parameterSlots":0,"returnSlots":1},"fun_getFeedInfo":{"entryPoint":5410,"id":3868,"parameterSlots":1,"returnSlots":1},"fun_getFeedsInfo":{"entryPoint":6341,"id":3921,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":4501,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_9408":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":6321,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":3777,"id":31,"parameterSlots":4,"returnSlots":0},"panic_error_0x21":{"entryPoint":1656,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4770,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1093,"id":null,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral_44a1":{"entryPoint":4268,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9ebe":{"entryPoint":4334,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f343":{"entryPoint":4443,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":4256,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":1389,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":778,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_PostStatus":{"entryPoint":5267,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_Tokens":{"entryPoint":5303,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063067bd3b4146101d257806318da0011146101cd5780633ec4f23d146101c857806349975235146101c35780634b57b0be146101be5780635dc96d16146101b9578063715018a6146101b45780637b2c835f146101af5780637fe955d4146101aa5780638da5cb5b146101a55780639407aeea146101a05780639496d7f11461019b578063ad86132414610196578063b2a2e9ca14610191578063bb834b0e1461018c578063be22f54614610187578063ca5b4e5c14610182578063cd77b52c1461017d578063cedf3ba21461016e578063d223a56414610178578063d570a66d14610173578063e58fdd041461016e578063e86ef35314610169578063e9318b4714610164578063f2fde38b1461015f578063f77800e51461015a578063f86d0b38146101555763f887ea401461015057600080fd5b610e40565b610e1f565b610df6565b610d2f565b610cdb565b610c5e565b610b9e565b610c19565b610be0565b610b75565b610958565b61092f565b61090b565b610891565b610803565b61057e565b6104de565b61041c565b610392565b610314565b6102ac565b610289565b610260565b61023c565b61021e565b6101f5565b346101f05760003660031901126101f0576020601054604051908152f35b600080fd5b346101f05760003660031901126101f0576003546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f0576020600654604051908152f35b346101f05760003660031901126101f057602060ff60115460101c16604051908152f35b346101f05760003660031901126101f0576009546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f057602060ff600f54166040519015158152f35b346101f057600080600319360112610307576102c6610e69565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b801515036101f057565b346101f05760203660031901126101f0576004356103318161030a565b610339610e69565b60ff8019600f54169115151617600f55600080f35b6020908160408183019282815285518094520193019160005b828110610375575050505090565b83516001600160a01b031685529381019392810192600101610367565b346101f05760003660031901126101f05760405180600191825492838252602080920193816000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b82821061040757610403866103f7818a038261045b565b6040519182918261034e565b0390f35b845487529586019593830193908301906103e0565b346101f05760003660031901126101f0576000546040516001600160a01b039091168152602090f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761047d57604052565b610445565b67ffffffffffffffff811161047d57601f01601f191660200190565b6024359060ff821682036101f057565b6044359060ff821682036101f057565b6064359060ff821682036101f057565b6004359060ff821682036101f057565b346101f05760803660031901126101f05760043567ffffffffffffffff81116101f057366023820112156101f057806004013561051a81610482565b90610528604051928361045b565b80825236602482850101116101f057602081600092602461056b9601838601378301015261055461049e565b61055c6104ae565b906105656104be565b92610ec1565b005b6001600160a01b038116036101f057565b346101f0576101003660031901126101f05761056b60043561059f8161056d565b602435906105ac8261056d565b6044356105b88161056d565b608435906105c58261056d565b60a435906105d28261056d565b60c435916105df8361056d565b60e435956105ec8761056d565b6105f4610e69565b60018060a01b0394858094818094816bffffffffffffffffffffffff60a01b9b168b6003541617600355168960045416176004551687600554161760055560643560065516856009541617600955168360075416176007551690600854161760085560018060a01b03166bffffffffffffffffffffffff60a01b600a541617600a55565b634e487b7160e01b600052602160045260246000fd5b90600882101561069b5752565b610678565b90600382101561069b5752565b60005b8381106106c05750506000910152565b81810151838201526020016106b0565b906020916106e9815180928185528580860191016106ad565b601f01601f1916010190565b80516001600160a01b03168252906020828101516001600160a01b03169082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610765610100808401519083019061068e565b61077861012080840151908301906106a0565b610793610140808401519061018080918501528301906106d0565b916101608091015191015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106107d55750505050505090565b90919293949584806107f3600193603f198682030187528a516106f5565b98019301930191949392906107c5565b346101f0576020806003193601126101f0576004356108218161056d565b60018060a01b0316600052600d81526040600020604051918281835491828152019260005281600020916000905b82821061087a5761040361086e876108698189038261045b565b6118c5565b604051918291826107a1565b83548552938401936001938401939091019061084f565b346101f0576020806003193601126101f0576004356108af8161056d565b6001600160a01b03166000908152600d82526040808220905181548082529183528383208185019491939092915b8282106108f457610403856103f78189038261045b565b8354865294850194600193840193909101906108dd565b346101f05760003660031901126101f057602060ff60115460081c16604051908152f35b346101f05760003660031901126101f0576008546040516001600160a01b039091168152602090f35b60008060031936011261030757600454601154604080513360208201526001600160a01b0390931690830181905230606084015260ff8083166080850152600883901c811660a085015260109290921c90911660c080840191909152825290601f196109c560e08361045b565b60405163122643f360e21b81523360048201526001600160a01b03939091906020908390602490829088165afa908115610b7057610a11610aa192610a95948891610b42575b506110ac565b610a24610a1c611406565b3410156110ee565b610a5f8680808034610a4f610a43610a4360035460018060a01b031690565b6001600160a01b031690565b5af1610a5961112b565b5061115b565b610a72610a6d601054611195565b601055565b610a7a6111ba565b93604051938491610a8f602084018098611278565b90611278565b0390810183528261045b565b519083f090813b15610b3e5781610403917fb658664a46408e6670a38ec7ea8b7614c9e2916184dff2fad99d3a7a3491ca7d949316610adf816112b8565b50336000908152600d60205260409020610afa90839061128f565b506001600160a01b0382166000908152600e60205260409020610b2490805460ff19166001179055565b60405194848695a26001600160a01b031682526020820190565b8280fd5b610b63915060203d8111610b69575b610b5b818361045b565b810190611088565b38610a0b565b503d610b51565b6110a0565b346101f05760003660031901126101f0576005546040516001600160a01b039091168152602090f35b346101f05760203660031901126101f057600435610bbb8161056d565b60018060a01b0316600052600e602052602060ff604060002054166040519015158152f35b346101f05760203660031901126101f05760ff610bfb6104ce565b16600052600c602052602062ffffff60406000205416604051908152f35b346101f05760203660031901126101f057610403610c4a600435610c3c8161056d565b610c4461138a565b50611522565b6040519182916020835260208301906106f5565b346101f05760003660031901126101f05760405180600190815491828252602080920192816000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b828210610cc65761040361086e88610869818a038261045b565b84548652948501949383019390830190610cac565b346101f05760403660031901126101f057610cf46104ce565b6024359062ffffff82168092036101f05760ff90610d10610e69565b16600052600c60205260406000209062ffffff19825416179055600080f35b346101f05760203660031901126101f057600435610d4c8161056d565b610d54610e69565b6001600160a01b039081168015610da257600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101f05760003660031901126101f0576007546040516001600160a01b039091168152602090f35b346101f05760003660031901126101f057602060ff60115416604051908152f35b346101f05760003660031901126101f057600a546040516001600160a01b039091168152602090f35b6000546001600160a01b03163303610e7d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b939261ff0090929192610ed2610e69565b60ff62ff00006011549260101b1694169062ffffff1916179160081b161717601155815167ffffffffffffffff811161047d57610f1981610f14600b54610fdd565b611017565b602080601f8311600114610f555750819293600092610f4a575b50508160011b916000199060031b1c191617600b55565b015190503880610f33565b90601f19831694610f88600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db990565b926000905b878210610fc5575050836001959610610fac575b505050811b01600b55565b015160001960f88460031b161c19169055388080610fa1565b80600185968294968601518155019501930190610f8d565b90600182811c9216801561100d575b6020831014610ff757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fec565b601f8111611023575050565b600090600b82527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9906020601f850160051c8301941061107e575b601f0160051c01915b82811061107357505050565b818155600101611067565b909250829061105e565b908160209103126101f0575161109d8161030a565b90565b6040513d6000823e3d90fd5b156110b357565b60405162461bcd60e51b81526020600482015260136024820152721d5cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b156110f557565b60405162461bcd60e51b815260206004820152600e60248201526d4e4f545f454e4f5547485f46454560901b6044820152606490fd5b3d15611156573d9061113c82610482565b9161114a604051938461045b565b82523d6000602084013e565b606090565b1561116257565b60405162461bcd60e51b815260206004820152600b60248201526a10d0531317d1905253115160aa1b6044820152606490fd5b60001981146111a45760010190565b634e487b7160e01b600052601160045260246000fd5b60405190600082600b54916111ce83610fdd565b8083529260019081811690811561125657506001146111f7575b506111f59250038361045b565b565b600b600090815291507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b84831061123b57506111f59350508101602001386111e8565b81935090816020925483858a01015201910190918592611222565b9050602092506111f594915060ff191682840152151560051b820101386111e8565b9061128b602092828151948592016106ad565b0190565b61109d916001600160a01b031690611334565b634e487b7160e01b600052603260045260246000fd5b8060005260026020526040600020541560001461132e57600154600160401b81101561047d5760018101806001558110156113295781907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155600154906000526002602052604060002055600190565b6112a2565b50600090565b6000828152600182016020819052604082205461138357825492600160401b84101561047d57600184018082558410156113295784604094828552602085200155549382526020522055600190565b5091505090565b60405190610180820182811067ffffffffffffffff82111761047d57604052816101606000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015260606101408201520152565b908160209103126101f0575190565b6003546040516391792d5b60e01b815290602090829060049082906001600160a01b03165afa908115610b705760009161143e575090565b61109d915060203d811161145f575b611457818361045b565b8101906113f7565b503d61144d565b908160209103126101f0575161109d8161056d565b908160209103126101f0575160088110156101f05790565b600882101561069b5752565b908160209103126101f0575160038110156101f05790565b600382101561069b5752565b6020818303126101f05780519067ffffffffffffffff82116101f0570181601f820112156101f05780516114f681610482565b92611504604051948561045b565b818452602082840101116101f05761109d91602080850191016106ad565b61152a61138a565b5061153361138a565b6001600160a01b0390911680825260408051638da5cb5b60e01b81526020926004929184818581855afa8015610b705761157f9160009161186c575b506001600160a01b031686860152565b8151635c63ed6960e01b815284818581855afa908115610b705760009161184f575b50858301528151634c38d87760e01b815284818581855afa908115610b7057600091611832575b506060860152815163048bf3bb60e11b815284818581855afa908115610b7057600091611815575b5060808601528151630bc8361760e11b815284818581855afa908115610b70576000916117f8575b5060a0860152815163d24e0c8760e01b815284818581855afa908115610b70576000916117db575b5060c0860152815163faeb5e1760e01b815284818581855afa908115610b70576000916117be575b5060e086015281516302734eab60e51b815284818581855afa8015610b705761169e91600091611791575b506101008701611493565b815163010a38f560e01b815284818581855afa8015610b70576116ce91600091611764575b5061012087016114b7565b815163054fd4d560e41b8152916000838581855afa8015610b70578593600091611743575b50610140870152516332946a8760e01b815292839182905afa918215610b7057600092611726575b505061016082015290565b61173c9250803d1061145f57611457818361045b565b388061171b565b61175e913d8091833e611756818361045b565b8101906114c3565b386116f3565b6117849150863d881161178a575b61177c818361045b565b81019061149f565b386116c3565b503d611772565b6117b19150863d88116117b7575b6117a9818361045b565b81019061147b565b38611693565b503d61179f565b6117d59150853d871161145f57611457818361045b565b38611668565b6117f29150853d871161145f57611457818361045b565b38611640565b61180f9150853d871161145f57611457818361045b565b38611618565b61182c9150853d871161145f57611457818361045b565b386115f0565b6118499150853d871161145f57611457818361045b565b386115c8565b6118669150853d871161145f57611457818361045b565b386115a1565b61188c9150863d8811611892575b611884818361045b565b810190611466565b3861156f565b503d61187a565b67ffffffffffffffff811161047d5760051b60200190565b80518210156113295760209160051b010190565b80516118d081611899565b916118de604051938461045b565b818352601f196118ed83611899565b0160005b81811061194a57505060005b82811061190a5750505090565b6119459061192a6001600160a01b0361192383866118b1565b5116611522565b61193482876118b1565b5261193f81866118b1565b50611195565b6118fd565b60209061195561138a565b828288010152016118f156fea26469706673582212200c4e9408b785702a4c89bbcaa3db2a2cbe885657983ef63d3d307406b0bc247764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67BD3B4 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x18DA0011 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3EC4F23D EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x49975235 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x4B57B0BE EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x7FE955D4 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x9407AEEA EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x9496D7F1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAD861324 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xB2A2E9CA EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xBB834B0E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xCA5B4E5C EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xCD77B52C EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xCEDF3BA2 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD223A564 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xD570A66D EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE58FDD04 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE86EF353 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xE9318B47 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF77800E5 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF86D0B38 EQ PUSH2 0x155 JUMPI PUSH4 0xF887EA40 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x307 JUMPI PUSH2 0x2C6 PUSH2 0xE69 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x331 DUP2 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x339 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x375 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x367 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP4 DUP2 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x407 JUMPI PUSH2 0x403 DUP7 PUSH2 0x3F7 DUP2 DUP11 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x34E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x3E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1F0 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1F0 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x51A DUP2 PUSH2 0x482 JUMP JUMPDEST SWAP1 PUSH2 0x528 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x56B SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x554 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x55C PUSH2 0x4AE JUMP JUMPDEST SWAP1 PUSH2 0x565 PUSH2 0x4BE JUMP JUMPDEST SWAP3 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1F0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x56B PUSH1 0x4 CALLDATALOAD PUSH2 0x59F DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5AC DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x5B8 DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x5C5 DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH2 0x5D2 DUP3 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x5DF DUP4 PUSH2 0x56D JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP6 PUSH2 0x5EC DUP8 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP1 SWAP5 DUP2 DUP1 SWAP5 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP12 AND DUP12 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND DUP10 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND DUP8 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x6 SSTORE AND DUP6 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP4 PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE AND SWAP1 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6E9 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP1 PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x765 PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x778 PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x793 PUSH2 0x140 DUP1 DUP5 ADD MLOAD SWAP1 PUSH2 0x180 DUP1 SWAP2 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x6D0 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x7D5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x7F3 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x6F5 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x821 DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x87A JUMPI PUSH2 0x403 PUSH2 0x86E DUP8 PUSH2 0x869 DUP2 DUP10 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x7A1 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x84F JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8AF DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP2 SLOAD DUP1 DUP3 MSTORE SWAP2 DUP4 MSTORE DUP4 DUP4 KECCAK256 DUP2 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x8F4 JUMPI PUSH2 0x403 DUP6 PUSH2 0x3F7 DUP2 DUP10 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x307 JUMPI PUSH1 0x4 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xFF DUP1 DUP4 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x8 DUP4 SWAP1 SHR DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0xC0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MSTORE SWAP1 PUSH1 0x1F NOT PUSH2 0x9C5 PUSH1 0xE0 DUP4 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x122643F3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP9 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH2 0xA11 PUSH2 0xAA1 SWAP3 PUSH2 0xA95 SWAP5 DUP9 SWAP2 PUSH2 0xB42 JUMPI JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH2 0xA24 PUSH2 0xA1C PUSH2 0x1406 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH2 0xA5F DUP7 DUP1 DUP1 DUP1 CALLVALUE PUSH2 0xA4F PUSH2 0xA43 PUSH2 0xA43 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST GAS CALL PUSH2 0xA59 PUSH2 0x112B JUMP JUMPDEST POP PUSH2 0x115B JUMP JUMPDEST PUSH2 0xA72 PUSH2 0xA6D PUSH1 0x10 SLOAD PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x11BA JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0xA8F PUSH1 0x20 DUP5 ADD DUP1 SWAP9 PUSH2 0x1278 JUMP JUMPDEST SWAP1 PUSH2 0x1278 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x45B JUMP JUMPDEST MLOAD SWAP1 DUP4 CREATE SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xB3E JUMPI DUP2 PUSH2 0x403 SWAP2 PUSH32 0xB658664A46408E6670A38EC7EA8B7614C9E2916184DFF2FAD99D3A7A3491CA7D SWAP5 SWAP4 AND PUSH2 0xADF DUP2 PUSH2 0x12B8 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xAFA SWAP1 DUP4 SWAP1 PUSH2 0x128F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB24 SWAP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP5 DUP7 SWAP6 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH2 0xB63 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xB69 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1088 JUMP JUMPDEST CODESIZE PUSH2 0xA0B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBBB DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0xFF PUSH2 0xBFB PUSH2 0x4CE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH3 0xFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x403 PUSH2 0xC4A PUSH1 0x4 CALLDATALOAD PUSH2 0xC3C DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xC44 PUSH2 0x138A JUMP JUMPDEST POP PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 SWAP1 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 DUP2 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCC6 JUMPI PUSH2 0x403 PUSH2 0x86E DUP9 PUSH2 0x869 DUP2 DUP11 SUB DUP3 PUSH2 0x45B JUMP JUMPDEST DUP5 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0xCAC JUMP JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0xCF4 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1F0 JUMPI PUSH1 0xFF SWAP1 PUSH2 0xD10 PUSH2 0xE69 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH3 0xFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xD54 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE7D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP4 SWAP3 PUSH2 0xFF00 SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xED2 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0xFF PUSH3 0xFF0000 PUSH1 0x11 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP5 AND SWAP1 PUSH3 0xFFFFFF NOT AND OR SWAP2 PUSH1 0x8 SHL AND OR OR PUSH1 0x11 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH2 0xF19 DUP2 PUSH2 0xF14 PUSH1 0xB SLOAD PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF55 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xF4A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0xF88 PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0xFC5 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0xFAC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xFA1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x100D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFF7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1023 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xB DUP3 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x107E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1073 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1067 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH2 0x109D DUP2 PUSH2 0x30A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D5CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E4F545F454E4F5547485F464545 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1156 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x113C DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 PUSH2 0x114A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x45B JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1162 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10D0531317D19052531151 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11A4 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xB SLOAD SWAP2 PUSH2 0x11CE DUP4 PUSH2 0xFDD JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1256 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11F7 JUMPI JUMPDEST POP PUSH2 0x11F5 SWAP3 POP SUB DUP4 PUSH2 0x45B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 JUMPDEST DUP5 DUP4 LT PUSH2 0x123B JUMPI POP PUSH2 0x11F5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x11E8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1222 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x11F5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x11E8 JUMP JUMPDEST SWAP1 PUSH2 0x128B PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6AD JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x109D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x132E JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x1329 JUMPI DUP2 SWAP1 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SSTORE PUSH1 0x1 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x1383 JUMPI DUP3 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x1 DUP5 ADD DUP1 DUP3 SSTORE DUP5 LT ISZERO PUSH2 0x1329 JUMPI DUP5 PUSH1 0x40 SWAP5 DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 ADD SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47D JUMPI PUSH1 0x40 MSTORE DUP2 PUSH2 0x160 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91792D5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x143E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x109D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x145F JUMPI JUMPDEST PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x13F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH2 0x109D DUP2 PUSH2 0x56D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1F0 JUMPI MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x69B JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1F0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1F0 JUMPI DUP1 MLOAD PUSH2 0x14F6 DUP2 PUSH2 0x482 JUMP JUMPDEST SWAP3 PUSH2 0x1504 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x45B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x1F0 JUMPI PUSH2 0x109D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x152A PUSH2 0x138A JUMP JUMPDEST POP PUSH2 0x1533 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 SWAP3 SWAP2 DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x157F SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x186C JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 ADD MSTORE JUMP JUMPDEST DUP2 MLOAD PUSH4 0x5C63ED69 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x184F JUMPI JUMPDEST POP DUP6 DUP4 ADD MSTORE DUP2 MLOAD PUSH4 0x4C38D877 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1832 JUMPI JUMPDEST POP PUSH1 0x60 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0x48BF3BB PUSH1 0xE1 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1815 JUMPI JUMPDEST POP PUSH1 0x80 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xBC83617 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17F8 JUMPI JUMPDEST POP PUSH1 0xA0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xD24E0C87 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17DB JUMPI JUMPDEST POP PUSH1 0xC0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0xFAEB5E17 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17BE JUMPI JUMPDEST POP PUSH1 0xE0 DUP7 ADD MSTORE DUP2 MLOAD PUSH4 0x2734EAB PUSH1 0xE5 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x169E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1791 JUMPI JUMPDEST POP PUSH2 0x100 DUP8 ADD PUSH2 0x1493 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x10A38F5 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH2 0x16CE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1764 JUMPI JUMPDEST POP PUSH2 0x120 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x54FD4D5 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 PUSH1 0x0 DUP4 DUP6 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xB70 JUMPI DUP6 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1743 JUMPI JUMPDEST POP PUSH2 0x140 DUP8 ADD MSTORE MLOAD PUSH4 0x32946A87 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1726 JUMPI JUMPDEST POP POP PUSH2 0x160 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173C SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x175E SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1756 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x14C3 JUMP JUMPDEST CODESIZE PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x1784 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x178A JUMPI JUMPDEST PUSH2 0x177C DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x149F JUMP JUMPDEST CODESIZE PUSH2 0x16C3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x17B1 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x17B7 JUMPI JUMPDEST PUSH2 0x17A9 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x147B JUMP JUMPDEST CODESIZE PUSH2 0x1693 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17D5 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x17F2 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x180F SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x182C SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x1849 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x1866 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST CODESIZE PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x188C SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x1892 JUMPI JUMPDEST PUSH2 0x1884 DUP2 DUP4 PUSH2 0x45B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1466 JUMP JUMPDEST CODESIZE PUSH2 0x156F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x187A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1329 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x18D0 DUP2 PUSH2 0x1899 JUMP JUMPDEST SWAP2 PUSH2 0x18DE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x45B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x18ED DUP4 PUSH2 0x1899 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x194A JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x190A JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1945 SWAP1 PUSH2 0x192A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1923 DUP4 DUP7 PUSH2 0x18B1 JUMP JUMPDEST MLOAD AND PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1934 DUP3 DUP8 PUSH2 0x18B1 JUMP JUMPDEST MSTORE PUSH2 0x193F DUP2 DUP7 PUSH2 0x18B1 JUMP JUMPDEST POP PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1955 PUSH2 0x138A JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x18F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x4E SWAP5 ADDMOD 0xB7 DUP6 PUSH17 0x2A4C89BBCAA3DB2A2CBE885657983EF63D RETURNDATASIZE ADDRESS PUSH21 0x6B0BC247764736F6C634300081300330000000000 ","sourceMap":"302:5366:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;302:5366:21;;;;;761:30;302:5366;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;1102:18;302:5366;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;892:18;302:5366;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;1407:18;302:5366;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;723:31;302:5366;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;302:5366:21;;-1:-1:-1;;;;;;302:5366:21;;;;;;-1:-1:-1;;;;;302:5366:21;2566:40:0;302:5366:21;;2566:40:0;302:5366:21;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;302:5366:21;;;1939:28;302:5366;;;;;;;1939:28;302:5366;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;4749:5;302:5366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;302:5366:21;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;302:5366:21;;2760:277;302:5366;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;2760:277;;:::i;:::-;302:5366;;-1:-1:-1;;;;;302:5366:21;;;;;:::o;:::-;;;;;;-1:-1:-1;;302:5366:21;;;;2719:28;302:5366;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:20;302:5366;;;2499:20;302:5366;;;2546:18;302:5366;;;2589:18;302:5366;;;2589:18;302:5366;;;2633:18;302:5366;;;2633:18;302:5366;;;2677:17;302:5366;;;2677:17;302:5366;;;;;;;;;;2719:15;302:5366;;;2719:15;302:5366;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;302:5366:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;302:5366:21;;;;:::o;:::-;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;302:5366:21;5057:9;302:5366;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;-1:-1:-1;302:5366:21;;-1:-1:-1;302:5366:21;;-1:-1:-1;302:5366:21;;;;;;;;5043:39;302:5366;;;;;;;:::i;:::-;5043:39;:::i;:::-;302:5366;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;302:5366:21;-1:-1:-1;302:5366:21;;;4885:9;302:5366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;868:18;302:5366;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;1307:17;302:5366;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;;;;;;;3262:5;302:5366;;;;3169:10;3145:170;;;302:5366;-1:-1:-1;;;;;302:5366:21;;;;;;;;;3243:4;302:5366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3145:170;;302:5366;-1:-1:-1;;3145:170:21;302:5366;;3145:170;:::i;:::-;302:5366;;-1:-1:-1;;;3347:103:21;;3169:10;302:5366;3347:103;;302:5366;-1:-1:-1;;;;;302:5366:21;;;;3145:170;;302:5366;;;;;;;;3347:103;;;;;;;3326:169;3992:86;3347:103;302:5366;3347:103;;;;;302:5366;3326:169;;:::i;:::-;3506:56;3527:16;;:::i;:::-;3514:9;:29;;3506:56;:::i;:::-;3686:31;3514:9;;;;;3592:39;:34;302:5366;;;;;;;;;;;;-1:-1:-1;;;;;302:5366:21;;;3592:39;:83;;;;:::i;:::-;;3686:31;:::i;:::-;3728:17;;302:5366;;3728:17;:::i;:::-;;302:5366;;3728:17;302:5366;;:::i;:::-;;;;3992:86;;;302:5366;3145:170;3992:86;;302:5366;;;:::i;:::-;;;:::i;:::-;3992:86;;;;;;;;:::i;:::-;4155:266;;;;;;;;;;302:5366;;;4601:26;302:5366;;;8398:50:12;;;:::i;:::-;-1:-1:-1;3169:10:21;302:5366;;;;4496:9;302:5366;;;;;4496:40;;3169:10;;4496:40;:::i;:::-;-1:-1:-1;;;;;;302:5366:21;;;;;;4547:16;302:5366;;;;;4547:38;;302:5366;;-1:-1:-1;;302:5366:21;3193:28;302:5366;;;;4547:38;302:5366;;4601:26;;;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;4155:266;;;;3347:103;;;;3145:170;3347:103;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;302:5366::-;;;;;;-1:-1:-1;;302:5366:21;;;;1205:20;302:5366;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;302:5366:21;2059:16;302:5366;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;:::i;:::-;;-1:-1:-1;302:5366:21;1719:9;302:5366;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;5208:18;302:5366;;;;;:::i;:::-;;;:::i;:::-;;5208:18;:::i;:::-;302:5366;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;302:5366:21;;;;;;;5343:5;302:5366;;;;;;;;;;;;;;;;;;;;;;;;;;5329:29;302:5366;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;:::i;:::-;;;;;;;;;;;;;1063:62:0;;;:::i;:::-;302:5366:21;-1:-1:-1;302:5366:21;1828:9;302:5366;;;-1:-1:-1;302:5366:21;;;;;;;;;;-1:-1:-1;302:5366:21;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;302:5366:21;;;2162:22:0;;302:5366:21;;2518:6:0;302:5366:21;;-1:-1:-1;;;;;;302:5366:21;;;;;;2518:6:0;;302:5366:21;2566:40:0;2518:6;;2566:40;302:5366:21;;;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;1508:18;302:5366;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;844:18;302:5366;;;;;;;;;;;;;;-1:-1:-1;;302:5366:21;;;;1606:15;302:5366;;;-1:-1:-1;;;;;302:5366:21;;;;;;;;1359:130:0;1273:6;302:5366:21;-1:-1:-1;;;;;302:5366:21;719:10:10;1422:23:0;302:5366:21;;1359:130:0:o;302:5366:21:-;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;;302:5366:21;1063:62:0;;;;;;:::i;:::-;302:5366:21;;2926:16;302:5366;;;;;;;;;;;;;;;;;;2926:16;302:5366;;;;;;;;;;;3004:26;302:5366;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;;;3004:26;302:5366;1063:62:0:o;302:5366:21:-;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;3004:26;302:5366;;;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;3004:26;302:5366;1063:62:0:o;302:5366:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;302:5366:21;3004:26;302:5366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;302:5366:21;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;302:5366:21;;;;;;;;;;;;-1:-1:-1;;;302:5366:21;;;;;;;;-1:-1:-1;;302:5366:21;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;302:5366:21;3807:12;302:5366;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;3807:12;-1:-1:-1;302:5366:21;;;-1:-1:-1;;302:5366:21;;;;;;;-1:-1:-1;302:5366:21;;-1:-1:-1;;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;8305:150:12:-;8398:50;;-1:-1:-1;;;;;302:5366:21;;8398:50:12;:::i;302:5366:21:-;;;;;;;;;;;;2214:404:12;302:5366:21;-1:-1:-1;302:5366:21;4351:12:12;302:5366:21;;;-1:-1:-1;302:5366:21;;4351:24:12;2293:319;302:5366:21;;;3193:28;302:5366;-1:-1:-1;;;302:5366:21;;;;;3193:28;302:5366;;;3193:28;302:5366;;;;;;;;;;;3193:28;302:5366;;-1:-1:-1;302:5366:21;4351:12:12;302:5366:21;;;-1:-1:-1;302:5366:21;;3193:28;2547:11:12;:::o;302:5366:21:-;;:::i;2293:319:12:-;2589:12;-1:-1:-1;2589:12:12;:::o;2214:404::-;-1:-1:-1;302:5366:21;;;4351:12:12;;;302:5366:21;;;;;;;;;;;;;-1:-1:-1;;;302:5366:21;;;;;4351:12:12;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:12:12;2547:11;:::o;2293:319::-;2589:12;;;;;:::o;302:5366:21:-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;302:5366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;5529:137::-;5622:8;302:5366;;;-1:-1:-1;;;5604:55:21;;302:5366;5604:55;;302:5366;;5604:55;;302:5366;;-1:-1:-1;;;;;302:5366:21;5604:55;;;;;;;-1:-1:-1;5604:55:21;;;5597:62;5529:137;:::o;5604:55::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;302:5366;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;162:808:27:-;302:5366:21;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;302:5366:21;;;;;;;;;-1:-1:-1;;;407:20:27;;;;;;302:5366:21;407:20:27;302:5366:21;407:20:27;302:5366:21;407:20:27;;;;;;;397:30;407:20;;;;;162:808;-1:-1:-1;;;;;;302:5366:21;397:7:27;;;302:5366:21;;397:30:27;302:5366:21;;-1:-1:-1;;;453:29:27;;;302:5366:21;453:29:27;302:5366:21;453:29:27;;;;;;;;407:20;453:29;;;162:808;-1:-1:-1;437:13:27;;;302:5366:21;;;-1:-1:-1;;;507:28:27;;;302:5366:21;507:28:27;302:5366:21;507:28:27;;;;;;;;407:20;507:28;;;162:808;-1:-1:-1;492:12:27;;;302:5366:21;;;-1:-1:-1;;;560:29:27;;;302:5366:21;560:29:27;302:5366:21;560:29:27;;;;;;;;407:20;560:29;;;162:808;-1:-1:-1;545:12:27;;;302:5366:21;;;-1:-1:-1;;;613:24:27;;;302:5366:21;613:24:27;302:5366:21;613:24:27;;;;;;;;407:20;613:24;;;162:808;-1:-1:-1;302:5366:21;599:11:27;;302:5366:21;;;-1:-1:-1;;;668:34:27;;;302:5366:21;668:34:27;302:5366:21;668:34:27;;;;;;;;407:20;668:34;;;162:808;-1:-1:-1;647:18:27;;;302:5366:21;;;-1:-1:-1;;;731:32:27;;;302:5366:21;731:32:27;302:5366:21;731:32:27;;;;;;;;407:20;731:32;;;162:808;-1:-1:-1;302:5366:21;712:16:27;;302:5366:21;;;-1:-1:-1;;;784:24:27;;;302:5366:21;784:24:27;302:5366:21;784:24:27;;;;;;;773:35;784:24;407:20;784:24;;;162:808;773:8;;;;:35;:::i;:::-;302:5366:21;;-1:-1:-1;;;830:25:27;;;302:5366:21;830:25:27;302:5366:21;830:25:27;;;;;;;818:37;830:25;407:20;830:25;;;162:808;818:9;;;;:37;:::i;:::-;302:5366:21;;-1:-1:-1;;;877:22:27;;302:5366:21;407:20:27;302:5366:21;877:22:27;302:5366:21;877:22:27;;;;;;;;;407:20;877:22;;;162:808;-1:-1:-1;865:9:27;;;:34;302:5366:21;-1:-1:-1;;;920:24:27;;302:5366:21;;;;;920:24:27;;;;;;;407:20;920:24;;;162:808;909:8;;;;;302:5366:21;162:808:27;:::o;920:24::-;;;;;;-1:-1:-1;920:24:27;;;;;;:::i;:::-;;;;;877:22;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;830:25;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;784:24;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;731:32;;;;;;;;;;;;;;:::i;:::-;;;;668:34;;;;;;;;;;;;;;:::i;:::-;;;;613:24;;;;;;;;;;;;;;:::i;:::-;;;;560:29;;;;;;;;;;;;;;:::i;:::-;;;;507:28;;;;;;;;;;;;;;:::i;:::-;;;;453:29;;;;;;;;;;;;;;:::i;:::-;;;;407:20;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;302:5366:21;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;976:338:27:-;302:5366:21;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;302:5366:21;;;:::i;:::-;;-1:-1:-1;302:5366:21;;;;;;1205:13:27;;-1:-1:-1;1220:7:27;;;;;;1299:8;;;976:338;:::o;1229:3::-;;;1255:23;-1:-1:-1;;;;;1268:9:27;302:5366:21;1268:9:27;;:::i;:::-;302:5366:21;;1255:23:27;:::i;:::-;1248:30;;;;:::i;:::-;;;;;;:::i;:::-;;1229:3;:::i;:::-;1205:13;;302:5366:21;;;;;:::i;:::-;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1310200","executionCost":"51367","totalCost":"1361567"},"external":{"buildFeed()":"infinite","burnEnabled()":"2384","changeMultipleSettings(address,address,address,bytes32,address,address,address,address)":"infinite","contractCounter()":"2250","daiToken()":"2616","easContract()":"2660","easSchema()":"2306","getFeedInfo(address)":"infinite","getFeeds()":"infinite","getFeedsInfo()":"infinite","getFeedsInfoOwned(address)":"infinite","getFeedsOwned(address)":"infinite","getRouterFee(uint8)":"2813","isContractCreated(address)":"2818","isFeed(address)":"2884","major()":"2840","minor()":"2582","museToken()":"2836","owner()":"2484","patch()":"2340","renounceOwnership()":"28199","router()":"2877","setBurnEnabled(bool)":"26749","setFeedByteCode(bytes,uint8,uint8,uint8)":"infinite","setRouterFee(uint8,uint24)":"27204","transferOwnership(address)":"28699","treasuryContract()":"2308","wethToken()":"2374"},"internal":{"getCreationFee()":"infinite"}},"methodIdentifiers":{"buildFeed()":"ca5b4e5c","burnEnabled()":"5dc96d16","changeMultipleSettings(address,address,address,bytes32,address,address,address,address)":"9496d7f1","contractCounter()":"067bd3b4","daiToken()":"be22f546","easContract()":"cd77b52c","easSchema()":"3ec4f23d","getFeedInfo(address)":"d570a66d","getFeeds()":"7fe955d4","getFeedsInfo()":"e86ef353","getFeedsInfoOwned(address)":"ad861324","getFeedsOwned(address)":"b2a2e9ca","getRouterFee(uint8)":"d223a564","isContractCreated(address)":"cedf3ba2","isFeed(address)":"e58fdd04","major()":"f86d0b38","minor()":"bb834b0e","museToken()":"f77800e5","owner()":"8da5cb5b","patch()":"49975235","renounceOwnership()":"715018a6","router()":"f887ea40","setBurnEnabled(bool)":"7b2c835f","setFeedByteCode(bytes,uint8,uint8,uint8)":"9407aeea","setRouterFee(uint8,uint24)":"e9318b47","transferOwnership(address)":"f2fde38b","treasuryContract()":"18da0011","wethToken()":"4b57b0be"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"FeedCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buildFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usersModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newEasContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"newEasSchema\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"wethTokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"museTokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daiTokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddr\",\"type\":\"address\"}],\"name\":\"changeMultipleSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"easContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"easSchema\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFeedInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeRequested\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structures.Feed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeds\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeedsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeRequested\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structures.Feed[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFeedsInfoOwned\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeRequested\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structures.Feed[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFeedsOwned\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"name\":\"getRouterFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isContractCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeed\",\"type\":\"address\"}],\"name\":\"isFeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"major\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minor\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"museToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBurnEnabled\",\"type\":\"bool\"}],\"name\":\"setBurnEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"newByteCode\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"newMajor\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"newMinor\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"newPatch\",\"type\":\"uint8\"}],\"name\":\"setFeedByteCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenId\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"setRouterFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/MecenateFeedFactory.sol\":\"MecenateFeedFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"contracts/factories/MecenateFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"../interfaces/IMecenateUsers.sol\\\";\\nimport \\\"../interfaces/IMecenateTreasury.sol\\\";\\nimport \\\"../modules/FeedViewer.sol\\\";\\n\\ncontract MecenateFeedFactory is Ownable, FeedViewer {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    EnumerableSet.AddressSet internal feeds;\\n\\n    Structures.FactorySettings internal settings;\\n\\n    bytes internal feedByteCode;\\n\\n    mapping(uint8 => uint24) internal routerFee;\\n\\n    mapping(address => EnumerableSet.AddressSet) internal feedStore;\\n\\n    mapping(address => bool) internal createdContracts;\\n\\n    bool public burnEnabled = false;\\n\\n    uint256 public contractCounter;\\n\\n    event FeedCreated(address indexed addr);\\n\\n    uint8 public major;\\n    uint8 public minor;\\n    uint8 public patch;\\n\\n    function treasuryContract() external view returns (address) {\\n        return settings.treasuryContract;\\n    }\\n\\n    function easSchema() external view returns (bytes32) {\\n        return settings.easSchema;\\n    }\\n\\n    function easContract() external view returns (address) {\\n        return settings.easContract;\\n    }\\n\\n    function daiToken() external view returns (address) {\\n        return settings.daiToken;\\n    }\\n\\n    function wethToken() external view returns (address) {\\n        return settings.wethToken;\\n    }\\n\\n    function museToken() external view returns (address) {\\n        return settings.museToken;\\n    }\\n\\n    function router() external view returns (address) {\\n        return settings.router;\\n    }\\n\\n    function getRouterFee(uint8 tokenId) external view returns (uint24) {\\n        return routerFee[tokenId];\\n    }\\n\\n    function setRouterFee(uint8 tokenId, uint24 fee) external onlyOwner {\\n        routerFee[tokenId] = fee;\\n    }\\n\\n    function setBurnEnabled(bool newBurnEnabled) external onlyOwner {\\n        burnEnabled = newBurnEnabled;\\n    }\\n\\n    function isFeed(address newFeed) external view returns (bool) {\\n        return createdContracts[newFeed];\\n    }\\n\\n    function changeMultipleSettings(\\n        address treasury,\\n        address usersModule,\\n        address newEasContract,\\n        bytes32 newEasSchema,\\n        address wethTokenAddr,\\n        address museTokenAddr,\\n        address daiTokenAddr,\\n        address routerAddr\\n    ) external onlyOwner {\\n        settings.treasuryContract = treasury;\\n        settings.usersModuleContract = usersModule;\\n        settings.easContract = newEasContract;\\n        settings.easSchema = newEasSchema;\\n        settings.wethToken = wethTokenAddr;\\n        settings.museToken = museTokenAddr;\\n        settings.daiToken = daiTokenAddr;\\n        settings.router = routerAddr;\\n    }\\n\\n    function setFeedByteCode(\\n        bytes memory newByteCode,\\n        uint8 newMajor,\\n        uint8 newMinor,\\n        uint8 newPatch\\n    ) external onlyOwner {\\n        major = newMajor;\\n        minor = newMinor;\\n        patch = newPatch;\\n        feedByteCode = newByteCode;\\n    }\\n\\n    function buildFeed() external payable returns (address) {\\n        bytes memory constructorArguments = abi.encode(\\n            msg.sender,\\n            settings.usersModuleContract,\\n            address(this),\\n            major,\\n            minor,\\n            patch\\n        );\\n\\n        require(\\n            IMecenateUsers(settings.usersModuleContract).checkifUserExist(\\n                msg.sender\\n            ),\\n            \\\"user does not exist\\\"\\n        );\\n\\n        require(msg.value >= getCreationFee(), \\\"NOT_ENOUGH_FEE\\\");\\n\\n        (bool _result, ) = payable(settings.treasuryContract).call{\\n            value: msg.value\\n        }(\\\"\\\");\\n\\n        require(_result, \\\"CALL_FAILED\\\");\\n\\n        contractCounter++;\\n\\n        address addr;\\n\\n        bytes memory tempByteCode = feedByteCode; // Carico la variabile di storage in una variabile locale\\n\\n        // Concatena il bytecode e gli argomenti del costruttore\\n        bytes memory bytecodeWithConstructor = abi.encodePacked(\\n            tempByteCode,\\n            constructorArguments\\n        );\\n\\n        // Deploy del contratto con gli argomenti del costruttore\\n        assembly {\\n            addr := create(\\n                0,\\n                add(bytecodeWithConstructor, 0x20),\\n                mload(bytecodeWithConstructor)\\n            )\\n            if iszero(extcodesize(addr)) {\\n                revert(0, 0)\\n            }\\n        }\\n\\n        address feed = addr;\\n\\n        feeds.add(address(feed));\\n\\n        feedStore[msg.sender].add(address(feed));\\n\\n        createdContracts[address(feed)] = true;\\n\\n        emit FeedCreated(address(feed));\\n\\n        return address(feed);\\n    }\\n\\n    function getFeeds() external view returns (address[] memory) {\\n        return feeds.values();\\n    }\\n\\n    function getFeedsOwned(\\n        address user\\n    ) external view returns (address[] memory) {\\n        return feedStore[user].values();\\n    }\\n\\n    function getFeedsInfoOwned(\\n        address user\\n    ) external view returns (Structures.Feed[] memory) {\\n        return _getFeedsInfo(feedStore[user].values());\\n    }\\n\\n    function getFeedInfo(\\n        address user\\n    ) external view returns (Structures.Feed memory) {\\n        return _getFeedInfo(user);\\n    }\\n\\n    function getFeedsInfo() external view returns (Structures.Feed[] memory) {\\n        return _getFeedsInfo(feeds.values());\\n    }\\n\\n    function isContractCreated(\\n        address contractAddress\\n    ) external view returns (bool) {\\n        return createdContracts[contractAddress];\\n    }\\n\\n    function getCreationFee() internal view returns (uint256) {\\n        return IMecenateTreasury(settings.treasuryContract).fixedFee();\\n    }\\n}\\n\",\"keccak256\":\"0x5aca0f062a0e80b93a5d0cf28ae926b4d7207958c627ca0789f0d6f8b23de28f\",\"license\":\"MIT\"},\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getPost() external view returns (Structures.Post memory);\\n\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        Structures.Tokens,\\n        uint256 _amount,\\n        address _funder,\\n        address _buyer\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function getPostId() external view returns (bytes32);\\n\\n    function getAllPostIds() external view returns (bytes32[] memory);\\n\\n    function getPostTimestamp(\\n        bytes32 postId\\n    ) external view returns (Structures.PostTimestamp memory);\\n\\n    function owner() external view returns (address);\\n\\n    function version() external view returns (string memory);\\n\\n    function getEncryptedPost() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x6cc5d025bd490b2b4a62b6cf932e7540c8a5744083c468a4e78027a56803b5e8\"},\"contracts/interfaces/IMecenateTreasury.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\ninterface IMecenateTreasury {\\n    function globalFee() external view returns (uint256);\\n\\n    function fixedFee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xade0e46553c55f99f424d2a5919ae62ab8f2b0829b0713aa539c2bf27850ed27\"},\"contracts/interfaces/IMecenateUsers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateUsers {\\n    function registerUser(bytes memory metadata) external;\\n\\n    function getUsers() external view returns (address[] memory);\\n\\n    function getUserCount() external view returns (uint256);\\n\\n    function getUserAt(uint256 index) external view returns (address);\\n\\n    function checkifUserExist(address userAddress) external view returns (bool);\\n\\n    function getPaginatedUsers(\\n        uint256 startIndex,\\n        uint256 endIndex\\n    ) external view returns (address[] memory);\\n\\n    function getUserMetadata(\\n        address userAddress\\n    ) external view returns (Structures.User memory);\\n\\n    function getUserPublicKey(\\n        address userAddress\\n    ) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0xf0ff65dbfea12d90cf106325b9478e31b284045327e5f0974db5374b8789e93c\",\"license\":\"MIT\"},\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"},\"contracts/modules/FeedViewer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../library/Structures.sol\\\";\\nimport \\\"../interfaces/IMecenateFeed.sol\\\";\\n\\ncontract FeedViewer {\\n    function _getFeedInfo(\\n        address feed\\n    ) internal view returns (Structures.Feed memory) {\\n        Structures.Feed memory f;\\n\\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\\n\\n        f.contractAddress = feed;\\n        f.owner = mecenateFeed.owner();\\n        f.sellerStake = mecenateFeed.getSellerStake();\\n        f.buyerStake = mecenateFeed.getBuyerStake();\\n        f.totalStake = mecenateFeed.getTotalStaked();\\n        f.postCount = mecenateFeed.postCount();\\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\\n        f.stakeRequested = mecenateFeed.getStakeRequested();\\n        f.status = mecenateFeed.getStatus();\\n        f.tokenId = mecenateFeed.getTokenId();\\n        f.version = mecenateFeed.version();\\n        f.postId = mecenateFeed.getPostId();\\n\\n        return f;\\n    }\\n\\n    function _getFeedsInfo(\\n        address[] memory _feeds\\n    ) internal view returns (Structures.Feed[] memory) {\\n        uint256 len = _feeds.length;\\n        Structures.Feed[] memory f = new Structures.Feed[](len);\\n\\n        for (uint256 i = 0; i < len; i++) {\\n            f[i] = _getFeedInfo(_feeds[i]);\\n        }\\n\\n        return f;\\n    }\\n}\\n\",\"keccak256\":\"0x3d86a409594e5b7bfdcfe52c2cb5148594ff0f5ecff4f2ab98fe69143a2a69a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2892,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"feeds","offset":0,"slot":"1","type":"t_struct(AddressSet)2078_storage"},{"astId":2895,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"settings","offset":0,"slot":"3","type":"t_struct(FactorySettings)3636_storage"},{"astId":2897,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"feedByteCode","offset":0,"slot":"11","type":"t_bytes_storage"},{"astId":2901,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"routerFee","offset":0,"slot":"12","type":"t_mapping(t_uint8,t_uint24)"},{"astId":2906,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"feedStore","offset":0,"slot":"13","type":"t_mapping(t_address,t_struct(AddressSet)2078_storage)"},{"astId":2910,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"createdContracts","offset":0,"slot":"14","type":"t_mapping(t_address,t_bool)"},{"astId":2913,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"burnEnabled","offset":0,"slot":"15","type":"t_bool"},{"astId":2915,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"contractCounter","offset":0,"slot":"16","type":"t_uint256"},{"astId":2921,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"major","offset":0,"slot":"17","type":"t_uint8"},{"astId":2923,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"minor","offset":1,"slot":"17","type":"t_uint8"},{"astId":2925,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"patch","offset":2,"slot":"17","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(AddressSet)2078_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct EnumerableSet.AddressSet)","numberOfBytes":"32","value":"t_struct(AddressSet)2078_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint8,t_uint24)":{"encoding":"mapping","key":"t_uint8","label":"mapping(uint8 => uint24)","numberOfBytes":"32","value":"t_uint24"},"t_struct(AddressSet)2078_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":2077,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1763_storage"}],"numberOfBytes":"64"},"t_struct(FactorySettings)3636_storage":{"encoding":"inplace","label":"struct Structures.FactorySettings","members":[{"astId":3621,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"treasuryContract","offset":0,"slot":"0","type":"t_address"},{"astId":3623,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"usersModuleContract","offset":0,"slot":"1","type":"t_address"},{"astId":3625,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"easContract","offset":0,"slot":"2","type":"t_address"},{"astId":3627,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"easSchema","offset":0,"slot":"3","type":"t_bytes32"},{"astId":3629,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"museToken","offset":0,"slot":"4","type":"t_address"},{"astId":3631,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"daiToken","offset":0,"slot":"5","type":"t_address"},{"astId":3633,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"wethToken","offset":0,"slot":"6","type":"t_address"},{"astId":3635,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"router","offset":0,"slot":"7","type":"t_address"}],"numberOfBytes":"256"},"t_struct(Set)1763_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1758,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1762,"contract":"contracts/factories/MecenateFeedFactory.sol:MecenateFeedFactory","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMUSE.sol":{"IMUSE":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(uint256)":"a0712d68","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMUSE.sol\":\"IMUSE\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IMUSE.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\n// import IERC20 from openzeppelin\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMUSE is IERC20 {\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) external returns (bool);\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) external returns (bool);\\n\\n    function mint(uint256 amount) external;\\n\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8b0a4012a1cd0815460bb3d15278671589bb85003ff2c38315701b3f2228c633\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateFeed.sol":{"IMecenateFeed":{"abi":[{"inputs":[{"internalType":"enum Structures.Tokens","name":"","type":"uint8"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_funder","type":"address"},{"internalType":"address","name":"_buyer","type":"address"}],"name":"acceptPost","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getAllPostIds","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBuyerStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEncryptedPost","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPaymentRequested","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPost","outputs":[{"components":[{"components":[{"internalType":"address","name":"evmAddress","type":"address"},{"internalType":"bytes","name":"sismoVaultId","type":"bytes"},{"internalType":"bytes","name":"publicKey","type":"bytes"}],"internalType":"struct Structures.User","name":"creator","type":"tuple"},{"components":[{"components":[{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"},{"internalType":"enum Structures.PostType","name":"postType","type":"uint8"},{"internalType":"uint256","name":"creationTimeStamp","type":"uint256"},{"internalType":"uint256","name":"endTimeStamp","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"},{"internalType":"bytes32","name":"postId","type":"bytes32"}],"internalType":"struct Structures.PostSettings","name":"settings","type":"tuple"},{"components":[{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"uint256","name":"punishment","type":"uint256"},{"internalType":"uint256","name":"penalty","type":"uint256"}],"internalType":"struct Structures.PostEscrow","name":"escrow","type":"tuple"},{"components":[{"internalType":"bytes","name":"encryptedData","type":"bytes"},{"internalType":"bytes","name":"encryptedKey","type":"bytes"},{"internalType":"bytes","name":"decryptedData","type":"bytes"}],"internalType":"struct Structures.PostEncryptedData","name":"data","type":"tuple"}],"internalType":"struct Structures.PostData","name":"postdata","type":"tuple"}],"internalType":"struct Structures.Post","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPostId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"postId","type":"bytes32"}],"name":"getPostTimestamp","outputs":[{"components":[{"internalType":"enum Structures.PostResult","name":"postResult","type":"uint8"},{"internalType":"uint256","name":"creationTimeStamp","type":"uint256"},{"internalType":"uint256","name":"endTimeStamp","type":"uint256"}],"internalType":"struct Structures.PostTimestamp","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSellerStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeRequested","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStatus","outputs":[{"internalType":"enum Structures.PostStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenId","outputs":[{"internalType":"enum Structures.Tokens","name":"tokenId","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"postCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptPost(uint8,uint256,address,address)":"07388dba","getAllPostIds()":"8e25df9e","getBuyerStake()":"4c38d877","getEncryptedPost()":"729e2eb1","getPaymentRequested()":"d24e0c87","getPost()":"8c6838ba","getPostId()":"32946a87","getPostTimestamp(bytes32)":"825821fb","getSellerStake()":"5c63ed69","getStakeRequested()":"faeb5e17","getStatus()":"4e69d560","getTokenId()":"010a38f5","getTotalStaked()":"0917e776","owner()":"8da5cb5b","postCount()":"17906c2e","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum Structures.Tokens\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"acceptPost\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPostIds\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEncryptedPost\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentRequested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPost\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"evmAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sismoVaultId\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"internalType\":\"struct Structures.User\",\"name\":\"creator\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum Structures.PostType\",\"name\":\"postType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"creationTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structures.PostSettings\",\"name\":\"settings\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"punishment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"internalType\":\"struct Structures.PostEscrow\",\"name\":\"escrow\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"encryptedData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encryptedKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"decryptedData\",\"type\":\"bytes\"}],\"internalType\":\"struct Structures.PostEncryptedData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct Structures.PostData\",\"name\":\"postdata\",\"type\":\"tuple\"}],\"internalType\":\"struct Structures.Post\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPostId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"postId\",\"type\":\"bytes32\"}],\"name\":\"getPostTimestamp\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Structures.PostResult\",\"name\":\"postResult\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"creationTimeStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimeStamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structures.PostTimestamp\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeRequested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum Structures.PostStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"enum Structures.Tokens\",\"name\":\"tokenId\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"postCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateFeed.sol\":\"IMecenateFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getPost() external view returns (Structures.Post memory);\\n\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        Structures.Tokens,\\n        uint256 _amount,\\n        address _funder,\\n        address _buyer\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function getPostId() external view returns (bytes32);\\n\\n    function getAllPostIds() external view returns (bytes32[] memory);\\n\\n    function getPostTimestamp(\\n        bytes32 postId\\n    ) external view returns (Structures.PostTimestamp memory);\\n\\n    function owner() external view returns (address);\\n\\n    function version() external view returns (string memory);\\n\\n    function getEncryptedPost() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x6cc5d025bd490b2b4a62b6cf932e7540c8a5744083c468a4e78027a56803b5e8\"},\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateTreasury.sol":{"IMecenateTreasury":{"abi":[{"inputs":[],"name":"fixedFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"fixedFee()":"91792d5b","globalFee()":"808fc206"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fixedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateTreasury.sol\":\"IMecenateTreasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateTreasury.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\ninterface IMecenateTreasury {\\n    function globalFee() external view returns (uint256);\\n\\n    function fixedFee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xade0e46553c55f99f424d2a5919ae62ab8f2b0829b0713aa539c2bf27850ed27\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMecenateUsers.sol":{"IMecenateUsers":{"abi":[{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"checkifUserExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"getPaginatedUsers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getUserAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUserCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserMetadata","outputs":[{"components":[{"internalType":"address","name":"evmAddress","type":"address"},{"internalType":"bytes","name":"sismoVaultId","type":"bytes"},{"internalType":"bytes","name":"publicKey","type":"bytes"}],"internalType":"struct Structures.User","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserPublicKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUsers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"registerUser","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkifUserExist(address)":"48990fcc","getPaginatedUsers(uint256,uint256)":"cf5caa12","getUserAt(uint256)":"c6e064ad","getUserCount()":"b5cb15f7","getUserMetadata(address)":"ef2a8764","getUserPublicKey(address)":"11231fe0","getUsers()":"00ce8e3e","registerUser(bytes)":"0a38178c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"checkifUserExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getPaginatedUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"evmAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sismoVaultId\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"internalType\":\"struct Structures.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserPublicKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMecenateUsers.sol\":\"IMecenateUsers\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateUsers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateUsers {\\n    function registerUser(bytes memory metadata) external;\\n\\n    function getUsers() external view returns (address[] memory);\\n\\n    function getUserCount() external view returns (uint256);\\n\\n    function getUserAt(uint256 index) external view returns (address);\\n\\n    function checkifUserExist(address userAddress) external view returns (bool);\\n\\n    function getPaginatedUsers(\\n        uint256 startIndex,\\n        uint256 endIndex\\n    ) external view returns (address[] memory);\\n\\n    function getUserMetadata(\\n        address userAddress\\n    ) external view returns (Structures.User memory);\\n\\n    function getUserPublicKey(\\n        address userAddress\\n    ) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0xf0ff65dbfea12d90cf106325b9478e31b284045327e5f0974db5374b8789e93c\",\"license\":\"MIT\"},\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/library/Structures.sol":{"Structures":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207abfe76d0131213217a130564e4aa42951911e0fe4d404b9e71afe80c64b767664736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xBFE76D0131213217A130564E4AA42951911E0FE4D404B9E71AFE80 0xC6 0x4B PUSH23 0x7664736F6C634300081300330000000000000000000000 ","sourceMap":"171:3322:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207abfe76d0131213217a130564e4aa42951911e0fe4d404b9e71afe80c64b767664736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xBFE76D0131213217A130564E4AA42951911E0FE4D404B9E71AFE80 0xC6 0x4B PUSH23 0x7664736F6C634300081300330000000000000000000000 ","sourceMap":"171:3322:26:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/library/Structures.sol\":\"Structures\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/modules/FeedViewer.sol":{"FeedViewer":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea26469706673582212208758ea2ba93191fa5488cda3d43a95ef4bd768678dd9398eab17c505b8f9b89164736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PC 0xEA 0x2B 0xA9 BALANCE SWAP2 STATICCALL SLOAD DUP9 0xCD LOG3 0xD4 GASPRICE SWAP6 0xEF 0x4B 0xD7 PUSH9 0x678DD9398EAB17C505 0xB8 0xF9 0xB8 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"136:1180:27:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208758ea2ba93191fa5488cda3d43a95ef4bd768678dd9398eab17c505b8f9b89164736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PC 0xEA 0x2B 0xA9 BALANCE SWAP2 STATICCALL SLOAD DUP9 0xCD LOG3 0xD4 GASPRICE SWAP6 0xEF 0x4B 0xD7 PUSH9 0x678DD9398EAB17C505 0xB8 0xF9 0xB8 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"136:1180:27:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"69","totalCost":"11669"},"internal":{"_getFeedInfo(address)":"infinite","_getFeedsInfo(address[] memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/FeedViewer.sol\":\"FeedViewer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMecenateFeed.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateFeed {\\n    function getPost() external view returns (Structures.Post memory);\\n\\n    function getTotalStaked() external view returns (uint256);\\n\\n    function postCount() external view returns (uint256);\\n\\n    function acceptPost(\\n        Structures.Tokens,\\n        uint256 _amount,\\n        address _funder,\\n        address _buyer\\n    ) external payable;\\n\\n    function getSellerStake() external view returns (uint256);\\n\\n    function getBuyerStake() external view returns (uint256);\\n\\n    function getPaymentRequested() external view returns (uint256);\\n\\n    function getStakeRequested() external view returns (uint256);\\n\\n    function getStatus() external view returns (Structures.PostStatus status);\\n\\n    function getTokenId() external view returns (Structures.Tokens tokenId);\\n\\n    function getPostId() external view returns (bytes32);\\n\\n    function getAllPostIds() external view returns (bytes32[] memory);\\n\\n    function getPostTimestamp(\\n        bytes32 postId\\n    ) external view returns (Structures.PostTimestamp memory);\\n\\n    function owner() external view returns (address);\\n\\n    function version() external view returns (string memory);\\n\\n    function getEncryptedPost() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x6cc5d025bd490b2b4a62b6cf932e7540c8a5744083c468a4e78027a56803b5e8\"},\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"},\"contracts/modules/FeedViewer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../library/Structures.sol\\\";\\nimport \\\"../interfaces/IMecenateFeed.sol\\\";\\n\\ncontract FeedViewer {\\n    function _getFeedInfo(\\n        address feed\\n    ) internal view returns (Structures.Feed memory) {\\n        Structures.Feed memory f;\\n\\n        IMecenateFeed mecenateFeed = IMecenateFeed(feed);\\n\\n        f.contractAddress = feed;\\n        f.owner = mecenateFeed.owner();\\n        f.sellerStake = mecenateFeed.getSellerStake();\\n        f.buyerStake = mecenateFeed.getBuyerStake();\\n        f.totalStake = mecenateFeed.getTotalStaked();\\n        f.postCount = mecenateFeed.postCount();\\n        f.paymentRequested = mecenateFeed.getPaymentRequested();\\n        f.stakeRequested = mecenateFeed.getStakeRequested();\\n        f.status = mecenateFeed.getStatus();\\n        f.tokenId = mecenateFeed.getTokenId();\\n        f.version = mecenateFeed.version();\\n        f.postId = mecenateFeed.getPostId();\\n\\n        return f;\\n    }\\n\\n    function _getFeedsInfo(\\n        address[] memory _feeds\\n    ) internal view returns (Structures.Feed[] memory) {\\n        uint256 len = _feeds.length;\\n        Structures.Feed[] memory f = new Structures.Feed[](len);\\n\\n        for (uint256 i = 0; i < len; i++) {\\n            f[i] = _getFeedInfo(_feeds[i]);\\n        }\\n\\n        return f;\\n    }\\n}\\n\",\"keccak256\":\"0x3d86a409594e5b7bfdcfe52c2cb5148594ff0f5ecff4f2ab98fe69143a2a69a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/modules/Swapper.sol":{"Swapper":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nativeAddr","type":"address"},{"internalType":"contract ISwapRouter","name":"swapRouterAddr","type":"address"}],"name":"configLiquidityProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"customApprove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"native","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionManager","outputs":[{"internalType":"contract INonfungiblePositionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_splitLiquidity","type":"bool"}],"name":"setSplitLiqudity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"splitLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swapTokensForTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swapTxT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":"afbce84e","configLiquidityProvider(address,address)":"e2662943","customApprove(address,uint256)":"85258b4b","native()":"11b0b42d","owner()":"8da5cb5b","positionManager()":"791b98bc","renounceOwnership()":"715018a6","setSplitLiqudity(bool)":"8f3a899a","splitLiquidity()":"05f6059d","swapRouter()":"c31c9c07","swapTokensForTokens(address,address,uint256,uint24,address)":"f0c3b912","swapTxT(address,address,uint256,address)":"bba5f3b1","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeAddr\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter\",\"name\":\"swapRouterAddr\",\"type\":\"address\"}],\"name\":\"configLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"customApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"native\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_splitLiquidity\",\"type\":\"bool\"}],\"name\":\"setSplitLiqudity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swapTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swapTxT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Swapper.sol\":\"Swapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n// edited by Mecenate\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\n\\nimport \\\"./IPoolInitializer.sol\\\";\\nimport \\\"./IERC721Permit.sol\\\";\\nimport \\\"./IPeripheryPayments.sol\\\";\\nimport \\\"./IPeripheryImmutableState.sol\\\";\\nimport \\\"../libraries/PoolAddress.sol\\\";\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(\\n        uint256 indexed tokenId,\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(\\n        uint256 tokenId\\n    )\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(\\n        MintParams calldata params\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(\\n        IncreaseLiquidityParams calldata params\\n    )\\n        external\\n        payable\\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(\\n        DecreaseLiquidityParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        CollectParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0x1682c67eb39e9ff1e6b3db23bee82d36afe575ff29700d1e00d1f3c860e676c1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n// edited by Mecenate\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH =\\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(\\n        address factory,\\n        PoolKey memory key\\n    ) internal pure returns (address payable pool) {\\n        require(key.token0 < key.token1);\\n        pool = payable( // Aggiunta di \\\"payable\\\" qui\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                factory,\\n                                keccak256(\\n                                    abi.encode(key.token0, key.token1, key.fee)\\n                                ),\\n                                POOL_INIT_CODE_HASH\\n                            )\\n                        )\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x420fa34855bc74f3628799c4ca0388894ae329cf6d6303878f0c4969d821632f\",\"license\":\"GPL-2.0-or-later\"},\"contracts/modules/Swapper.sol\":{\"content\":\"/**\\n * @title Swapper\\n * @dev This contract provides functions for swapping tokens on PancakeSwap and adding liquidity to a token pair.\\n */\\n// SPDX-License-Identifier: MIT OR Apache-2.0\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\\\";\\n\\nabstract contract Swapper is Ownable {\\n    bool public splitLiquidity;\\n\\n    ISwapRouter public swapRouter;\\n    INonfungiblePositionManager public positionManager;\\n    address public native;\\n\\n    function _giveAllowances() internal {\\n        IERC20(address(native)).approve(address(swapRouter), 0);\\n        IERC20(address(native)).approve(\\n            address(swapRouter),\\n            uint256(2 ** 256 - 1)\\n        );\\n    }\\n\\n    function customApprove(address token, uint256 amount) external onlyOwner {\\n        IERC20(token).approve(address(swapRouter), amount);\\n        IERC20(address(token)).approve(\\n            address(swapRouter),\\n            uint256(2 ** 256 - 1)\\n        );\\n    }\\n\\n    function configLiquidityProvider(\\n        address nativeAddr,\\n        ISwapRouter swapRouterAddr\\n    ) external onlyOwner {\\n        native = nativeAddr;\\n        swapRouter = swapRouterAddr;\\n        splitLiquidity = true;\\n        _giveAllowances();\\n    }\\n\\n    function setSplitLiqudity(\\n        bool _splitLiquidity\\n    ) external onlyOwner returns (bool) {\\n        splitLiquidity = _splitLiquidity;\\n        return true;\\n    }\\n\\n    function swapTokensForTokens(\\n        address token1,\\n        address token2,\\n        uint256 amount,\\n        uint24 fee,\\n        address receiver\\n    ) external onlyOwner returns (uint256) {\\n        return _swapTokensForTokens(token1, token2, fee, amount, receiver);\\n    }\\n\\n    function swapTxT(\\n        address token1,\\n        address token2,\\n        uint256 amount,\\n        address receiver\\n    ) external onlyOwner returns (uint256) {\\n        return _swapTokensForTokens(token1, token2, 3000, amount, receiver);\\n    }\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee,\\n        uint256 amountA,\\n        uint256 amountB,\\n        int24 tickLower,\\n        int24 tickUpper\\n    ) public onlyOwner {\\n        _addLiquidity(\\n            tokenA,\\n            tokenB,\\n            fee,\\n            amountA,\\n            amountB,\\n            tickLower,\\n            tickUpper\\n        );\\n    }\\n\\n    function _swapTokenToETH(\\n        address token,\\n        uint256 amountIn,\\n        uint24 fee\\n    ) private returns (uint256) {\\n        // Approve tokens for the swap\\n        IERC20(token).approve(address(swapRouter), amountIn);\\n\\n        // Params for the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\n            .ExactInputSingleParams(\\n                token, // tokenIn\\n                native, // tokenOut\\n                fee, // fee\\n                address(this), // recipient\\n                block.timestamp + 10, // deadline\\n                amountIn, // amountIn\\n                0, // amountOutMinimum\\n                0 // sqrtPriceLimitX96\\n            );\\n\\n        // Perform the swap and return the amount received\\n        uint256 amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n\\n    function _addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee,\\n        uint256 amountA,\\n        uint256 amountB,\\n        int24 tickLower,\\n        int24 tickUpper\\n    ) internal {\\n        // Approve amounts to positionManager\\n        IERC20(tokenA).approve(address(positionManager), amountA);\\n        IERC20(tokenB).approve(address(positionManager), amountB);\\n\\n        // Parameters for adding liquidity\\n        INonfungiblePositionManager.MintParams\\n            memory params = INonfungiblePositionManager.MintParams(\\n                tokenA,\\n                tokenB,\\n                fee,\\n                tickLower,\\n                tickUpper,\\n                amountA,\\n                amountB,\\n                0, // amount0Min\\n                0, // amount1Min\\n                address(this),\\n                block.timestamp // Deadline\\n            );\\n\\n        // Add liquidity\\n        positionManager.mint(params);\\n    }\\n\\n    function _swapTokensForTokens(\\n        address tokenIn,\\n        address tokenOut,\\n        uint24 fee,\\n        uint256 amountIn,\\n        address receiver\\n    ) internal returns (uint256) {\\n        // Approve amount to swapRouter\\n        IERC20(tokenIn).approve(address(swapRouter), amountIn);\\n\\n        // Parameters for the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\n            .ExactInputSingleParams(\\n                tokenIn,\\n                tokenOut,\\n                fee,\\n                receiver,\\n                block.timestamp + 10, // Deadline\\n                amountIn, // amountIn\\n                0, // amountOutMinimum\\n                0 // sqrtPriceLimitX96\\n            );\\n\\n        // Perform the swap\\n        uint256 amountOut = swapRouter.exactInputSingle(params);\\n\\n        return amountOut;\\n    }\\n}\\n\",\"keccak256\":\"0x032fdbe3df7135981ba653fac01bc7eea3fe9b36c0cb376e373992773fc768eb\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/modules/Swapper.sol:Swapper","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3932,"contract":"contracts/modules/Swapper.sol:Swapper","label":"splitLiquidity","offset":20,"slot":"0","type":"t_bool"},{"astId":3935,"contract":"contracts/modules/Swapper.sol:Swapper","label":"swapRouter","offset":0,"slot":"1","type":"t_contract(ISwapRouter)2774"},{"astId":3938,"contract":"contracts/modules/Swapper.sol:Swapper","label":"positionManager","offset":0,"slot":"2","type":"t_contract(INonfungiblePositionManager)2613"},{"astId":3940,"contract":"contracts/modules/Swapper.sol:Swapper","label":"native","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(INonfungiblePositionManager)2613":{"encoding":"inplace","label":"contract INonfungiblePositionManager","numberOfBytes":"20"},"t_contract(ISwapRouter)2774":{"encoding":"inplace","label":"contract ISwapRouter","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/treasury/MecenateTreasury.sol":{"MecenateTreasury":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addERC20Funds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"addFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nativeAddr","type":"address"},{"internalType":"contract ISwapRouter","name":"swapRouterAddr","type":"address"}],"name":"configLiquidityProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"customApprove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributableBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"distributableERC20Balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"usersContract","type":"address"}],"name":"distribute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"usersContract","type":"address"}],"name":"distributeERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fixedFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDistributionBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getDistributionERC20Balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"getRewardERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"native","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionManager","outputs":[{"internalType":"contract INonfungiblePositionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fixedFee","type":"uint256"}],"name":"setFixedFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_globalFee","type":"uint256"}],"name":"setGlobalFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_splitLiquidity","type":"bool"}],"name":"setSplitLiqudity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ISwapRouter","name":"swapRouterAddress","type":"address"}],"name":"setSwapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"splitLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint24","name":"fee2","type":"uint24"}],"name":"swapAndBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swapTokensForTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swapTxT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"takeReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"takeRewardERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"userRewardERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461006b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36064600455662386f26fc10000600555611ac190816100718239f35b600080fdfe608080604052600436101561002c575b50361561001b57600080fd5b610027346007546116a8565b600755005b600090813560e01c9081620a74be146115855750806305f6059d1461156057806310027a28146113cd57806311b0b42d146115375780631fce07d514611519578063291206f6146114f65780632ad2e08c1461146957806337de8106146114465780634127365714611406578063568dbccf146113cd57806363453ae11461122a578063674ee49d146111df5780636962a86314610f7d578063715018a614610f235780637450bce914610d5b578063791b98bc14610efa578063808fc20614610edc57806385258b4b14610e095780638da5cb5b14610de25780638f3a899a14610d9757806391792d5b14610d79578063932f9f8a14610d5b578063a26759cb14610d3d578063af2c15c414610b75578063afbce84e146108c2578063bba5f3b1146106ea578063bcb7557f14610699578063c00007b014610660578063c31c9c0714610637578063d1a06cf814610486578063d5b2a01a14610468578063e26629431461032b578063f0c3b912146102c7578063f2fde38b146102015763ffdf2bcb0361000f57346101fe5760403660031901126101fe576101ce6115bb565b6101d66115f9565b6001600160a01b03168152600b6020526040812080546101f990602435906116a8565b905580f35b80fd5b50346101fe5760203660031901126101fe5761021b6115bb565b6102236115f9565b6001600160a01b0390811690811561027357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346101fe5760a03660031901126101fe576102e16115bb565b6102e96115d1565b6102f16115e7565b91608435906001600160a01b03821682036103265760209361031e936103156115f9565b604435926116b5565b604051908152f35b600080fd5b50346101fe5760403660031901126101fe57806103466115bb565b8161034f6115d1565b6103576115f9565b60018060a01b03809316600354906044856001600160601b0360a01b948386861617600355168060015495861617600155600160a01b60ff60a01b1987541617865560405195869384928263095ea7b360e01b98898652161760048401528160248401526020998a9616175af191821561045d578492610440575b50604483600354169360015416918660405195869485938452600484015260001960248401525af1801561043557610408578280f35b8161042792903d1061042e575b61041f818361166e565b810190611690565b5038808280f35b503d610415565b6040513d85823e3d90fd5b61045690833d851161042e5761041f818361166e565b50386103d2565b6040513d87823e3d90fd5b50346101fe57806003193601126101fe576020600854604051908152f35b50346101fe5760403660031901126101fe576104a06115bb565b6104a86115d1565b9060018060a01b03809116808452602091600b83526104cc60408620541515611841565b818552600b83528061050c6127106104eb60408920546004549061188d565b046104f8816008546116a8565b600855848852600b86526040882054611834565b9416906040519463b5cb15f760e01b86528486600481865afa95861561062c5787966105fb575b5085610549916105448215156118c0565b6118a0565b91865b8681106105645787600b878783525280604081205580f35b60405163c6e064ad60e01b815260048101829052908682602481865afa9182156105f0576105be9285918b916105c3575b50168952600a87526040892086600052875260406000206105b78682546116a8565b905561190c565b61054c565b6105e39150893d8b116105e9575b6105db818361166e565b81019061191b565b38610595565b503d6105d1565b6040513d8b823e3d90fd5b9095508481813d8311610625575b610613818361166e565b81010312610326575194610549610533565b503d610609565b6040513d89823e3d90fd5b50346101fe57806003193601126101fe576001546040516001600160a01b039091168152602090f35b50346101fe5760203660031901126101fe576020906040906001600160a01b036106886115bb565b168152600983522054604051908152f35b50346101fe5760403660031901126101fe576106b36115bb565b906001600160a01b0390604090826106c96115d1565b168152600a6020522091166000526020526020604060002054604051908152f35b50346101fe5760803660031901126101fe576107046115bb565b61070c6115d1565b6064356001600160a01b03811692604435918490036103265761072d6115f9565b60015460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052911691906020816044816000875af18015610881576108a3575b50600a420180421161088d576000946020946040519461078d86611651565b85526001600160a01b03908116868601908152610bb86040808801918252606088019485526080880195865260a0880196875260c088018a815260e089018b8152600154925163414bf38960e01b81529951861660048b01529351851660248a0152915162ffffff16604489015293518316606488015293516084870152935160a4860152915160c48501529151811660e48401529193849261010492849291165af19081156108815760009161084a575b602082604051908152f35b6020813d602011610879575b816108636020938361166e565b8101031261087557519050602061083f565b5080fd5b3d9150610856565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b6108bb9060203d60201161042e5761041f818361166e565b508461076e565b50346101fe5760e03660031901126101fe576108dc6115bb565b6108e46115d1565b6044359062ffffff82168092036103265760a4358060020b8091036103265760c435918260020b8093036103265761091a6115f9565b60025460405163095ea7b360e01b81526001600160a01b03918216600482015260643560248201529516946020816044818a8a5af1801561062c57610b56575b5060025460405163095ea7b360e01b81526001600160a01b039182166004820152608435602482018190529592909116906020816044818b865af18015610b4b57610b2c575b5060405195610160870187811067ffffffffffffffff821117610b16576040528652602086015260408501526060840152608083015260643560a083015260c08201528160e0820152816101008201523061012082015242610140820152608061014061016460018060a01b036002541693856040519586948593634418b22b60e11b855260018060a01b03815116600486015260018060a01b03602082015116602486015262ffffff6040820151166044860152606081015160020b60648601528781015160020b608486015260a081015160a486015260c081015160c486015260e081015160e486015261010081015161010486015260018060a01b036101208201511661012486015201516101448401525af18015610b0b57610ac4575080f35b6080813d8211610b03575b81610adc6080938361166e565b8101031261087557602001516fffffffffffffffffffffffffffffffff8116036101fe5780f35b3d9150610acf565b6040513d84823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b610b449060203d60201161042e5761041f818361166e565b50386109a0565b6040513d8a823e3d90fd5b610b6e9060203d60201161042e5761041f818361166e565b503861095a565b50346101fe5760403660031901126101fe57610b8f6115bb565b610b976115d1565b91338152602092600a8452604082209260018060a01b031692836000528452604060002054928315610d0257338352600a8552604080842060008381529087528190208490555163a9059cbb60e01b8187019081526001600160a01b039390931660248201526044808201869052815292610c1360648561166e565b60405192604084019084821067ffffffffffffffff831117610b1657610c749583926040528886527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656489870152519082855af1610c6e61193a565b9161197a565b805190838215928315610cea575b50505015610c9257604051908152f35b60405162461bcd60e51b815260048101839052602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b610cfa9350820181019101611690565b388381610c82565b60405162461bcd60e51b81526004810186905260136024820152724e6f2072657761726420617661696c61626c6560681b6044820152606490fd5b50806003193601126101fe57610d55346007546116a8565b60075580f35b50346101fe57806003193601126101fe576020600754604051908152f35b50346101fe57806003193601126101fe576020600554604051908152f35b50346101fe5760203660031901126101fe5760043580151580910361087557610dbe6115f9565b815460ff60a01b191660a09190911b60ff60a01b1617905560405160018152602090f35b50346101fe57806003193601126101fe57546040516001600160a01b039091168152602090f35b50346101fe5760403660031901126101fe57610e6f610e266115bb565b610e2e6115f9565b60015460405163095ea7b360e01b8082526001600160a01b039283166004830152602480359083015260209493831693919290918590849081906044820190565b038189885af1908115610ed1578593604492610eb4575b5060015416918660405195869485938452600484015260001960248401525af1801561043557610408578280f35b610eca90853d871161042e5761041f818361166e565b5038610e86565b6040513d88823e3d90fd5b50346101fe57806003193601126101fe576020600454604051908152f35b50346101fe57806003193601126101fe576002546040516001600160a01b039091168152602090f35b50346101fe57806003193601126101fe57610f3c6115f9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101fe5760a03660031901126101fe57610f976115bb565b90610fa06115d1565b6001600160a01b0360443581811692918382036111db57610fbf6115e7565b916084359162ffffff831683036111d757610fd86115f9565b6040516370a0823160e01b81523060048201526020989089816024818686165afa9081156105f05789916111a6575b5060015460405163095ea7b360e01b8082529185166001600160a01b03166004820152602481018390529096908b816044818e888a165af190811561119b5761106894939291611060918e8e9261117e575b5050611a4e565b8830936116b5565b9384156111465760015460405191825282166001600160a01b03166004820152602481018590529697889795949392918190879060449082908c908a165af18015610b4b576110c9966110c2928a92611129575050611a4e565b30936116b5565b90803b1561112557602483926040519485938492630852cd8d60e31b845260048401525af18015610b0b576110fc575080f35b67ffffffffffffffff81116111115760405280f35b634e487b7160e01b82526041600452602482fd5b5050fd5b61113f9250803d1061042e5761041f818361166e565b3880611059565b60405162461bcd60e51b8152600481018a9052601060248201526f139bc81d1bdad95b9cc8189bdd59da1d60821b6044820152606490fd5b6111949250803d1061042e5761041f818361166e565b388e611059565b6040513d8d823e3d90fd5b90508981813d83116111d0575b6111bd818361166e565b810103126111cc575138611007565b8880fd5b503d6111b3565b8680fd5b8480fd5b50346101fe5760403660031901126101fe5760406020916111fe6115bb565b6112066115d1565b6001600160a01b039182168352600a85528383209116825283522054604051908152f35b50346101fe57602080600319360112610875576112456115bb565b6201518061125560065442611834565b106113885761129060075461126b811515611841565b61271061127a6004548361188d565b0490611288826008546116a8565b600855611834565b60405163b5cb15f760e01b8152926001600160a01b039283169290918285600481875afa948515610ed1578695611353575b50846112d3916105448215156118c0565b92855b8581106112e95786426006558060075580f35b60405163c6e064ad60e01b815260048101829052908482602481865afa918215610b4b576113319285918a91611336575b5016885260098552604088206105b78782546116a8565b6112d6565b61134d9150873d89116105e9576105db818361166e565b3861131a565b9094508281813d8311611381575b61136b818361166e565b8101031261137d5751936112d36112c2565b8580fd5b503d611361565b60405162461bcd60e51b815260048101839052601e60248201527f43616e206f6e6c792064697374726962757465206f6e636520612064617900006044820152606490fd5b50346101fe5760203660031901126101fe576020906040906001600160a01b036113f56115bb565b168152600b83522054604051908152f35b50346101fe5760203660031901126101fe576114206115bb565b6114286115f9565b60018060a01b03166001600160601b0360a01b600154161760015580f35b50346101fe5760203660031901126101fe576114606115f9565b60043560055580f35b50346101fe5760203660031901126101fe57808080806114876115bb565b338252600960205260408220805496905585906001600160a01b03165af16114ad61193a565b50156114be57602090604051908152f35b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b50346101fe5760203660031901126101fe576115106115f9565b60043560045580f35b50346101fe57806003193601126101fe576020600654604051908152f35b50346101fe57806003193601126101fe576003546040516001600160a01b039091168152602090f35b50346101fe57806003193601126101fe5760ff6020915460a01c166040519015158152f35b905034610875576020366003190112610875576020916040906001600160a01b036115ae6115bb565b1681526009845220548152f35b600435906001600160a01b038216820361032657565b602435906001600160a01b038216820361032657565b6064359062ffffff8216820361032657565b6000546001600160a01b0316330361160d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610100810190811067ffffffffffffffff821117610b1657604052565b90601f8019910116810190811067ffffffffffffffff821117610b1657604052565b90816020910312610326575180151581036103265790565b9190820180921161088d57565b6001546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018790529096949592909116906020816044816000865af180156118295761180a575b50600a42019182421161088d576020946101049360009289519461171f86611651565b85526001600160a01b0396871688860190815262ffffff998a168b8701908152938816606087019081526080870193845260a0870192835260c0870186815260e088018781526001548e5163414bf38960e01b815299518c1660048b015293518b1660248a01529551909b1660448801525188166064870152915160848601525160a4850152965160c484015251841660e483015290948593849291165af191821561180057506000916117d1575090565b90506020813d6020116117f8575b816117ec6020938361166e565b81010312610326575190565b3d91506117df565b513d6000823e3d90fd5b6118229060203d60201161042e5761041f818361166e565b50386116fc565b87513d6000823e3d90fd5b9190820391821161088d57565b1561184857565b60405162461bcd60e51b815260206004820152601860248201527f4e6f2064697374726962757461626c652062616c616e636500000000000000006044820152606490fd5b8181029291811591840414171561088d57565b81156118aa570490565b634e487b7160e01b600052601260045260246000fd5b156118c757565b60405162461bcd60e51b815260206004820152601960248201527f4e6f20757365727320746f206469737472696275746520746f000000000000006044820152606490fd5b600019811461088d5760010190565b9081602091031261032657516001600160a01b03811681036103265790565b3d15611975573d9067ffffffffffffffff8211610b165760405191611969601f8201601f19166020018461166e565b82523d6000602084013e565b606090565b919290156119dc575081511561198e575090565b3b156119975790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156119ef5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611a35575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611a12565b15611a5557565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fdfea2646970667358221220d2f446584dbcb307926417b37448aa709a393b5b2ef240542e764214d94d7a6d64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x4 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x5 SSTORE PUSH2 0x1AC1 SWAP1 DUP2 PUSH2 0x71 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x2C JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x7 SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xA74BE EQ PUSH2 0x1585 JUMPI POP DUP1 PUSH4 0x5F6059D EQ PUSH2 0x1560 JUMPI DUP1 PUSH4 0x10027A28 EQ PUSH2 0x13CD JUMPI DUP1 PUSH4 0x11B0B42D EQ PUSH2 0x1537 JUMPI DUP1 PUSH4 0x1FCE07D5 EQ PUSH2 0x1519 JUMPI DUP1 PUSH4 0x291206F6 EQ PUSH2 0x14F6 JUMPI DUP1 PUSH4 0x2AD2E08C EQ PUSH2 0x1469 JUMPI DUP1 PUSH4 0x37DE8106 EQ PUSH2 0x1446 JUMPI DUP1 PUSH4 0x41273657 EQ PUSH2 0x1406 JUMPI DUP1 PUSH4 0x568DBCCF EQ PUSH2 0x13CD JUMPI DUP1 PUSH4 0x63453AE1 EQ PUSH2 0x122A JUMPI DUP1 PUSH4 0x674EE49D EQ PUSH2 0x11DF JUMPI DUP1 PUSH4 0x6962A863 EQ PUSH2 0xF7D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF23 JUMPI DUP1 PUSH4 0x7450BCE9 EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0x791B98BC EQ PUSH2 0xEFA JUMPI DUP1 PUSH4 0x808FC206 EQ PUSH2 0xEDC JUMPI DUP1 PUSH4 0x85258B4B EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE2 JUMPI DUP1 PUSH4 0x8F3A899A EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x91792D5B EQ PUSH2 0xD79 JUMPI DUP1 PUSH4 0x932F9F8A EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0xA26759CB EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xAF2C15C4 EQ PUSH2 0xB75 JUMPI DUP1 PUSH4 0xAFBCE84E EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xBBA5F3B1 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0xBCB7557F EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xD1A06CF8 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xD5B2A01A EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xE2662943 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF0C3B912 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x201 JUMPI PUSH4 0xFFDF2BCB SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1CE PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x21B PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x223 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x2E1 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x31E SWAP4 PUSH2 0x315 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI DUP1 PUSH2 0x346 PUSH2 0x15BB JUMP JUMPDEST DUP2 PUSH2 0x34F PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH1 0x3 SLOAD SWAP1 PUSH1 0x44 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 DUP4 DUP7 DUP7 AND OR PUSH1 0x3 SSTORE AND DUP1 PUSH1 0x1 SLOAD SWAP6 DUP7 AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 DUP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE AND OR PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x20 SWAP10 DUP11 SWAP7 AND OR GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x45D JUMPI DUP5 SWAP3 PUSH2 0x440 JUMPI JUMPDEST POP PUSH1 0x44 DUP4 PUSH1 0x3 SLOAD AND SWAP4 PUSH1 0x1 SLOAD AND SWAP2 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x435 JUMPI PUSH2 0x408 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x427 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI JUMPDEST PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1690 JUMP JUMPDEST POP CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x456 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x4A0 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0xB DUP4 MSTORE PUSH2 0x4CC PUSH1 0x40 DUP7 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1841 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0xB DUP4 MSTORE DUP1 PUSH2 0x50C PUSH2 0x2710 PUSH2 0x4EB PUSH1 0x40 DUP10 KECCAK256 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x188D JUMP JUMPDEST DIV PUSH2 0x4F8 DUP2 PUSH1 0x8 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x8 SSTORE DUP5 DUP9 MSTORE PUSH1 0xB DUP7 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x1834 JUMP JUMPDEST SWAP5 AND SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH4 0xB5CB15F7 PUSH1 0xE0 SHL DUP7 MSTORE DUP5 DUP7 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x62C JUMPI DUP8 SWAP7 PUSH2 0x5FB JUMPI JUMPDEST POP DUP6 PUSH2 0x549 SWAP2 PUSH2 0x544 DUP3 ISZERO ISZERO PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x18A0 JUMP JUMPDEST SWAP2 DUP7 JUMPDEST DUP7 DUP2 LT PUSH2 0x564 JUMPI DUP8 PUSH1 0xB DUP8 DUP8 DUP4 MSTORE MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6E064AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP7 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5BE SWAP3 DUP6 SWAP2 DUP12 SWAP2 PUSH2 0x5C3 JUMPI JUMPDEST POP AND DUP10 MSTORE PUSH1 0xA DUP8 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP7 PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x5B7 DUP7 DUP3 SLOAD PUSH2 0x16A8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x190C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH2 0x5E3 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x5E9 JUMPI JUMPDEST PUSH2 0x5DB DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x191B JUMP JUMPDEST CODESIZE PUSH2 0x595 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x625 JUMPI JUMPDEST PUSH2 0x613 DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x326 JUMPI MLOAD SWAP5 PUSH2 0x549 PUSH2 0x533 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x688 PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x6B3 PUSH2 0x15BB JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x6C9 PUSH2 0x15D1 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x704 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x70C PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP5 SWAP1 SUB PUSH2 0x326 JUMPI PUSH2 0x72D PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x881 JUMPI PUSH2 0x8A3 JUMPI JUMPDEST POP PUSH1 0xA TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x88D JUMPI PUSH1 0x0 SWAP5 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x78D DUP7 PUSH2 0x1651 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0xBB8 PUSH1 0x40 DUP1 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0xA0 DUP9 ADD SWAP7 DUP8 MSTORE PUSH1 0xC0 DUP9 ADD DUP11 DUP2 MSTORE PUSH1 0xE0 DUP10 ADD DUP12 DUP2 MSTORE PUSH1 0x1 SLOAD SWAP3 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD DUP7 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP4 MLOAD DUP6 AND PUSH1 0x24 DUP11 ADD MSTORE SWAP2 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP10 ADD MSTORE SWAP4 MLOAD DUP4 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP4 MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP4 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP2 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP2 SWAP4 DUP5 SWAP3 PUSH2 0x104 SWAP3 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x84A JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x879 JUMPI JUMPDEST DUP2 PUSH2 0x863 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x875 JUMPI MLOAD SWAP1 POP PUSH1 0x20 PUSH2 0x83F JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BB SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP DUP5 PUSH2 0x76E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x8DC PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x326 JUMPI PUSH1 0xA4 CALLDATALOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP1 SWAP2 SUB PUSH2 0x326 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 SWAP4 SUB PUSH2 0x326 JUMPI PUSH2 0x91A PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP6 AND SWAP5 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x62C JUMPI PUSH2 0xB56 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 DUP7 GAS CALL DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH2 0xB2C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH2 0x160 DUP8 ADD DUP8 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0xE0 DUP3 ADD MSTORE DUP2 PUSH2 0x100 DUP3 ADD MSTORE ADDRESS PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x80 PUSH2 0x140 PUSH2 0x164 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP4 DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x4418B22B PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x24 DUP7 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x2 SIGNEXTEND PUSH1 0x64 DUP7 ADD MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x2 SIGNEXTEND PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA4 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE4 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x104 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x124 DUP7 ADD MSTORE ADD MLOAD PUSH2 0x144 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0xAC4 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x80 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xB03 JUMPI JUMPDEST DUP2 PUSH2 0xADC PUSH1 0x80 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x875 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x1FE JUMPI DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB44 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB6E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x95A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xB8F PUSH2 0x15BB JUMP JUMPDEST PUSH2 0xB97 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x20 SWAP3 PUSH1 0xA DUP5 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0xD02 JUMPI CALLER DUP4 MSTORE PUSH1 0xA DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE SWAP1 DUP8 MSTORE DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 MSTORE SWAP3 PUSH2 0xC13 PUSH1 0x64 DUP6 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP1 DUP5 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xB16 JUMPI PUSH2 0xC74 SWAP6 DUP4 SWAP3 PUSH1 0x40 MSTORE DUP9 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP10 DUP8 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0xC6E PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x197A JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP4 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0xCEA JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xCFA SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x1690 JUMP JUMPDEST CODESIZE DUP4 DUP2 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2072657761726420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xD55 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x875 JUMPI PUSH2 0xDBE PUSH2 0x15F9 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xE6F PUSH2 0xE26 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP4 DUP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP6 SWAP1 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP10 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP6 SWAP4 PUSH1 0x44 SWAP3 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD AND SWAP2 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x435 JUMPI PUSH2 0x408 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xECA SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xF3C PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xF97 PUSH2 0x15BB JUMP JUMPDEST SWAP1 PUSH2 0xFA0 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP2 DUP4 DUP3 SUB PUSH2 0x11DB JUMPI PUSH2 0xFBF PUSH2 0x15E7 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP4 SUB PUSH2 0x11D7 JUMPI PUSH2 0xFD8 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP7 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5F0 JUMPI DUP10 SWAP2 PUSH2 0x11A6 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP2 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP7 SWAP1 DUP12 DUP2 PUSH1 0x44 DUP2 DUP15 DUP9 DUP11 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x119B JUMPI PUSH2 0x1068 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1060 SWAP2 DUP15 DUP15 SWAP3 PUSH2 0x117E JUMPI JUMPDEST POP POP PUSH2 0x1A4E JUMP JUMPDEST DUP9 ADDRESS SWAP4 PUSH2 0x16B5 JUMP JUMPDEST SWAP4 DUP5 ISZERO PUSH2 0x1146 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP7 SWAP8 DUP9 SWAP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 SWAP1 DUP8 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP11 AND GAS CALL DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH2 0x10C9 SWAP7 PUSH2 0x10C2 SWAP3 DUP11 SWAP3 PUSH2 0x1129 JUMPI POP POP PUSH2 0x1A4E JUMP JUMPDEST ADDRESS SWAP4 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x1125 JUMPI PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0x10FC JUMPI POP DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1111 JUMPI PUSH1 0x40 MSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP POP REVERT JUMPDEST PUSH2 0x113F SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC8189BDD59DA1D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1194 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE DUP15 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11D0 JUMPI JUMPDEST PUSH2 0x11BD DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11CC JUMPI MLOAD CODESIZE PUSH2 0x1007 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x11B3 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH2 0x11FE PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0xA DUP6 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x875 JUMPI PUSH2 0x1245 PUSH2 0x15BB JUMP JUMPDEST PUSH3 0x15180 PUSH2 0x1255 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1834 JUMP JUMPDEST LT PUSH2 0x1388 JUMPI PUSH2 0x1290 PUSH1 0x7 SLOAD PUSH2 0x126B DUP2 ISZERO ISZERO PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x127A PUSH1 0x4 SLOAD DUP4 PUSH2 0x188D JUMP JUMPDEST DIV SWAP1 PUSH2 0x1288 DUP3 PUSH1 0x8 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB5CB15F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 DUP3 DUP6 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xED1 JUMPI DUP7 SWAP6 PUSH2 0x1353 JUMPI JUMPDEST POP DUP5 PUSH2 0x12D3 SWAP2 PUSH2 0x544 DUP3 ISZERO ISZERO PUSH2 0x18C0 JUMP JUMPDEST SWAP3 DUP6 JUMPDEST DUP6 DUP2 LT PUSH2 0x12E9 JUMPI DUP7 TIMESTAMP PUSH1 0x6 SSTORE DUP1 PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6E064AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP5 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB4B JUMPI PUSH2 0x1331 SWAP3 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1336 JUMPI JUMPDEST POP AND DUP9 MSTORE PUSH1 0x9 DUP6 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x5B7 DUP8 DUP3 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x134D SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5E9 JUMPI PUSH2 0x5DB DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE PUSH2 0x131A JUMP JUMPDEST SWAP1 SWAP5 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1381 JUMPI JUMPDEST PUSH2 0x136B DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x137D JUMPI MLOAD SWAP4 PUSH2 0x12D3 PUSH2 0x12C2 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792064697374726962757465206F6E63652061206461790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13F5 PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1420 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1428 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1460 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x1487 PUSH2 0x15BB JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x14AD PUSH2 0x193A JUMP JUMPDEST POP ISZERO PUSH2 0x14BE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1510 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x875 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x875 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15AE PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x160D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x326 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x326 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x88D JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP7 SWAP5 SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x1829 JUMPI PUSH2 0x180A JUMPI JUMPDEST POP PUSH1 0xA TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x88D JUMPI PUSH1 0x20 SWAP5 PUSH2 0x104 SWAP4 PUSH1 0x0 SWAP3 DUP10 MLOAD SWAP5 PUSH2 0x171F DUP7 PUSH2 0x1651 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP9 DUP7 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF SWAP10 DUP11 AND DUP12 DUP8 ADD SWAP1 DUP2 MSTORE SWAP4 DUP9 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0xC0 DUP8 ADD DUP7 DUP2 MSTORE PUSH1 0xE0 DUP9 ADD DUP8 DUP2 MSTORE PUSH1 0x1 SLOAD DUP15 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD DUP13 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP4 MLOAD DUP12 AND PUSH1 0x24 DUP11 ADD MSTORE SWAP6 MLOAD SWAP1 SWAP12 AND PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP9 AND PUSH1 0x64 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE SWAP7 MLOAD PUSH1 0xC4 DUP5 ADD MSTORE MLOAD DUP5 AND PUSH1 0xE4 DUP4 ADD MSTORE SWAP1 SWAP5 DUP6 SWAP4 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1800 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x17D1 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x17F8 JUMPI JUMPDEST DUP2 PUSH2 0x17EC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x326 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x17DF JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1822 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x16FC JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x88D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1848 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2064697374726962757461626C652062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x88D JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x18AA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x18C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20757365727320746F206469737472696275746520746F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x88D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x326 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x326 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1975 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1969 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x166E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x19DC JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x198E JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1997 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x19EF JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1A35 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1A12 JUMP JUMPDEST ISZERO PUSH2 0x1A55 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105C1C1C9BDD994819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 DELEGATECALL CHAINID PC 0x4D 0xBC 0xB3 SMOD SWAP3 PUSH5 0x17B37448AA PUSH17 0x9A393B5B2EF240542E764214D94D7A6D64 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"524:5854:29:-:0;;;;;;;2518:6:0;524:5854:29;;719:10:10;-1:-1:-1;;;;;;524:5854:29;;;;;;719:10:10;-1:-1:-1;;;;;524:5854:29;;;;2566:40:0;;2518:6;2566:40;636:3:29;;524:5854;672:10;;524:5854;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5585,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_19219":{"entryPoint":5563,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":6427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint24":{"entryPoint":5607,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":5800,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":6304,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6285,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6196,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":6458,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5742,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_19312":{"entryPoint":5713,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":5625,"id":54,"parameterSlots":0,"returnSlots":0},"fun_swapTokensForTokens":{"entryPoint":5813,"id":4324,"parameterSlots":5,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":6522,"id":1673,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":6412,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":6209,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_894c":{"entryPoint":6734,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a26b":{"entryPoint":6336,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561002c575b50361561001b57600080fd5b610027346007546116a8565b600755005b600090813560e01c9081620a74be146115855750806305f6059d1461156057806310027a28146113cd57806311b0b42d146115375780631fce07d514611519578063291206f6146114f65780632ad2e08c1461146957806337de8106146114465780634127365714611406578063568dbccf146113cd57806363453ae11461122a578063674ee49d146111df5780636962a86314610f7d578063715018a614610f235780637450bce914610d5b578063791b98bc14610efa578063808fc20614610edc57806385258b4b14610e095780638da5cb5b14610de25780638f3a899a14610d9757806391792d5b14610d79578063932f9f8a14610d5b578063a26759cb14610d3d578063af2c15c414610b75578063afbce84e146108c2578063bba5f3b1146106ea578063bcb7557f14610699578063c00007b014610660578063c31c9c0714610637578063d1a06cf814610486578063d5b2a01a14610468578063e26629431461032b578063f0c3b912146102c7578063f2fde38b146102015763ffdf2bcb0361000f57346101fe5760403660031901126101fe576101ce6115bb565b6101d66115f9565b6001600160a01b03168152600b6020526040812080546101f990602435906116a8565b905580f35b80fd5b50346101fe5760203660031901126101fe5761021b6115bb565b6102236115f9565b6001600160a01b0390811690811561027357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346101fe5760a03660031901126101fe576102e16115bb565b6102e96115d1565b6102f16115e7565b91608435906001600160a01b03821682036103265760209361031e936103156115f9565b604435926116b5565b604051908152f35b600080fd5b50346101fe5760403660031901126101fe57806103466115bb565b8161034f6115d1565b6103576115f9565b60018060a01b03809316600354906044856001600160601b0360a01b948386861617600355168060015495861617600155600160a01b60ff60a01b1987541617865560405195869384928263095ea7b360e01b98898652161760048401528160248401526020998a9616175af191821561045d578492610440575b50604483600354169360015416918660405195869485938452600484015260001960248401525af1801561043557610408578280f35b8161042792903d1061042e575b61041f818361166e565b810190611690565b5038808280f35b503d610415565b6040513d85823e3d90fd5b61045690833d851161042e5761041f818361166e565b50386103d2565b6040513d87823e3d90fd5b50346101fe57806003193601126101fe576020600854604051908152f35b50346101fe5760403660031901126101fe576104a06115bb565b6104a86115d1565b9060018060a01b03809116808452602091600b83526104cc60408620541515611841565b818552600b83528061050c6127106104eb60408920546004549061188d565b046104f8816008546116a8565b600855848852600b86526040882054611834565b9416906040519463b5cb15f760e01b86528486600481865afa95861561062c5787966105fb575b5085610549916105448215156118c0565b6118a0565b91865b8681106105645787600b878783525280604081205580f35b60405163c6e064ad60e01b815260048101829052908682602481865afa9182156105f0576105be9285918b916105c3575b50168952600a87526040892086600052875260406000206105b78682546116a8565b905561190c565b61054c565b6105e39150893d8b116105e9575b6105db818361166e565b81019061191b565b38610595565b503d6105d1565b6040513d8b823e3d90fd5b9095508481813d8311610625575b610613818361166e565b81010312610326575194610549610533565b503d610609565b6040513d89823e3d90fd5b50346101fe57806003193601126101fe576001546040516001600160a01b039091168152602090f35b50346101fe5760203660031901126101fe576020906040906001600160a01b036106886115bb565b168152600983522054604051908152f35b50346101fe5760403660031901126101fe576106b36115bb565b906001600160a01b0390604090826106c96115d1565b168152600a6020522091166000526020526020604060002054604051908152f35b50346101fe5760803660031901126101fe576107046115bb565b61070c6115d1565b6064356001600160a01b03811692604435918490036103265761072d6115f9565b60015460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052911691906020816044816000875af18015610881576108a3575b50600a420180421161088d576000946020946040519461078d86611651565b85526001600160a01b03908116868601908152610bb86040808801918252606088019485526080880195865260a0880196875260c088018a815260e089018b8152600154925163414bf38960e01b81529951861660048b01529351851660248a0152915162ffffff16604489015293518316606488015293516084870152935160a4860152915160c48501529151811660e48401529193849261010492849291165af19081156108815760009161084a575b602082604051908152f35b6020813d602011610879575b816108636020938361166e565b8101031261087557519050602061083f565b5080fd5b3d9150610856565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b6108bb9060203d60201161042e5761041f818361166e565b508461076e565b50346101fe5760e03660031901126101fe576108dc6115bb565b6108e46115d1565b6044359062ffffff82168092036103265760a4358060020b8091036103265760c435918260020b8093036103265761091a6115f9565b60025460405163095ea7b360e01b81526001600160a01b03918216600482015260643560248201529516946020816044818a8a5af1801561062c57610b56575b5060025460405163095ea7b360e01b81526001600160a01b039182166004820152608435602482018190529592909116906020816044818b865af18015610b4b57610b2c575b5060405195610160870187811067ffffffffffffffff821117610b16576040528652602086015260408501526060840152608083015260643560a083015260c08201528160e0820152816101008201523061012082015242610140820152608061014061016460018060a01b036002541693856040519586948593634418b22b60e11b855260018060a01b03815116600486015260018060a01b03602082015116602486015262ffffff6040820151166044860152606081015160020b60648601528781015160020b608486015260a081015160a486015260c081015160c486015260e081015160e486015261010081015161010486015260018060a01b036101208201511661012486015201516101448401525af18015610b0b57610ac4575080f35b6080813d8211610b03575b81610adc6080938361166e565b8101031261087557602001516fffffffffffffffffffffffffffffffff8116036101fe5780f35b3d9150610acf565b6040513d84823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b610b449060203d60201161042e5761041f818361166e565b50386109a0565b6040513d8a823e3d90fd5b610b6e9060203d60201161042e5761041f818361166e565b503861095a565b50346101fe5760403660031901126101fe57610b8f6115bb565b610b976115d1565b91338152602092600a8452604082209260018060a01b031692836000528452604060002054928315610d0257338352600a8552604080842060008381529087528190208490555163a9059cbb60e01b8187019081526001600160a01b039390931660248201526044808201869052815292610c1360648561166e565b60405192604084019084821067ffffffffffffffff831117610b1657610c749583926040528886527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656489870152519082855af1610c6e61193a565b9161197a565b805190838215928315610cea575b50505015610c9257604051908152f35b60405162461bcd60e51b815260048101839052602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b610cfa9350820181019101611690565b388381610c82565b60405162461bcd60e51b81526004810186905260136024820152724e6f2072657761726420617661696c61626c6560681b6044820152606490fd5b50806003193601126101fe57610d55346007546116a8565b60075580f35b50346101fe57806003193601126101fe576020600754604051908152f35b50346101fe57806003193601126101fe576020600554604051908152f35b50346101fe5760203660031901126101fe5760043580151580910361087557610dbe6115f9565b815460ff60a01b191660a09190911b60ff60a01b1617905560405160018152602090f35b50346101fe57806003193601126101fe57546040516001600160a01b039091168152602090f35b50346101fe5760403660031901126101fe57610e6f610e266115bb565b610e2e6115f9565b60015460405163095ea7b360e01b8082526001600160a01b039283166004830152602480359083015260209493831693919290918590849081906044820190565b038189885af1908115610ed1578593604492610eb4575b5060015416918660405195869485938452600484015260001960248401525af1801561043557610408578280f35b610eca90853d871161042e5761041f818361166e565b5038610e86565b6040513d88823e3d90fd5b50346101fe57806003193601126101fe576020600454604051908152f35b50346101fe57806003193601126101fe576002546040516001600160a01b039091168152602090f35b50346101fe57806003193601126101fe57610f3c6115f9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101fe5760a03660031901126101fe57610f976115bb565b90610fa06115d1565b6001600160a01b0360443581811692918382036111db57610fbf6115e7565b916084359162ffffff831683036111d757610fd86115f9565b6040516370a0823160e01b81523060048201526020989089816024818686165afa9081156105f05789916111a6575b5060015460405163095ea7b360e01b8082529185166001600160a01b03166004820152602481018390529096908b816044818e888a165af190811561119b5761106894939291611060918e8e9261117e575b5050611a4e565b8830936116b5565b9384156111465760015460405191825282166001600160a01b03166004820152602481018590529697889795949392918190879060449082908c908a165af18015610b4b576110c9966110c2928a92611129575050611a4e565b30936116b5565b90803b1561112557602483926040519485938492630852cd8d60e31b845260048401525af18015610b0b576110fc575080f35b67ffffffffffffffff81116111115760405280f35b634e487b7160e01b82526041600452602482fd5b5050fd5b61113f9250803d1061042e5761041f818361166e565b3880611059565b60405162461bcd60e51b8152600481018a9052601060248201526f139bc81d1bdad95b9cc8189bdd59da1d60821b6044820152606490fd5b6111949250803d1061042e5761041f818361166e565b388e611059565b6040513d8d823e3d90fd5b90508981813d83116111d0575b6111bd818361166e565b810103126111cc575138611007565b8880fd5b503d6111b3565b8680fd5b8480fd5b50346101fe5760403660031901126101fe5760406020916111fe6115bb565b6112066115d1565b6001600160a01b039182168352600a85528383209116825283522054604051908152f35b50346101fe57602080600319360112610875576112456115bb565b6201518061125560065442611834565b106113885761129060075461126b811515611841565b61271061127a6004548361188d565b0490611288826008546116a8565b600855611834565b60405163b5cb15f760e01b8152926001600160a01b039283169290918285600481875afa948515610ed1578695611353575b50846112d3916105448215156118c0565b92855b8581106112e95786426006558060075580f35b60405163c6e064ad60e01b815260048101829052908482602481865afa918215610b4b576113319285918a91611336575b5016885260098552604088206105b78782546116a8565b6112d6565b61134d9150873d89116105e9576105db818361166e565b3861131a565b9094508281813d8311611381575b61136b818361166e565b8101031261137d5751936112d36112c2565b8580fd5b503d611361565b60405162461bcd60e51b815260048101839052601e60248201527f43616e206f6e6c792064697374726962757465206f6e636520612064617900006044820152606490fd5b50346101fe5760203660031901126101fe576020906040906001600160a01b036113f56115bb565b168152600b83522054604051908152f35b50346101fe5760203660031901126101fe576114206115bb565b6114286115f9565b60018060a01b03166001600160601b0360a01b600154161760015580f35b50346101fe5760203660031901126101fe576114606115f9565b60043560055580f35b50346101fe5760203660031901126101fe57808080806114876115bb565b338252600960205260408220805496905585906001600160a01b03165af16114ad61193a565b50156114be57602090604051908152f35b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b50346101fe5760203660031901126101fe576115106115f9565b60043560045580f35b50346101fe57806003193601126101fe576020600654604051908152f35b50346101fe57806003193601126101fe576003546040516001600160a01b039091168152602090f35b50346101fe57806003193601126101fe5760ff6020915460a01c166040519015158152f35b905034610875576020366003190112610875576020916040906001600160a01b036115ae6115bb565b1681526009845220548152f35b600435906001600160a01b038216820361032657565b602435906001600160a01b038216820361032657565b6064359062ffffff8216820361032657565b6000546001600160a01b0316330361160d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610100810190811067ffffffffffffffff821117610b1657604052565b90601f8019910116810190811067ffffffffffffffff821117610b1657604052565b90816020910312610326575180151581036103265790565b9190820180921161088d57565b6001546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018790529096949592909116906020816044816000865af180156118295761180a575b50600a42019182421161088d576020946101049360009289519461171f86611651565b85526001600160a01b0396871688860190815262ffffff998a168b8701908152938816606087019081526080870193845260a0870192835260c0870186815260e088018781526001548e5163414bf38960e01b815299518c1660048b015293518b1660248a01529551909b1660448801525188166064870152915160848601525160a4850152965160c484015251841660e483015290948593849291165af191821561180057506000916117d1575090565b90506020813d6020116117f8575b816117ec6020938361166e565b81010312610326575190565b3d91506117df565b513d6000823e3d90fd5b6118229060203d60201161042e5761041f818361166e565b50386116fc565b87513d6000823e3d90fd5b9190820391821161088d57565b1561184857565b60405162461bcd60e51b815260206004820152601860248201527f4e6f2064697374726962757461626c652062616c616e636500000000000000006044820152606490fd5b8181029291811591840414171561088d57565b81156118aa570490565b634e487b7160e01b600052601260045260246000fd5b156118c757565b60405162461bcd60e51b815260206004820152601960248201527f4e6f20757365727320746f206469737472696275746520746f000000000000006044820152606490fd5b600019811461088d5760010190565b9081602091031261032657516001600160a01b03811681036103265790565b3d15611975573d9067ffffffffffffffff8211610b165760405191611969601f8201601f19166020018461166e565b82523d6000602084013e565b606090565b919290156119dc575081511561198e575090565b3b156119975790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156119ef5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611a35575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611a12565b15611a5557565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fdfea2646970667358221220d2f446584dbcb307926417b37448aa709a393b5b2ef240542e764214d94d7a6d64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x2C JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x7 SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xA74BE EQ PUSH2 0x1585 JUMPI POP DUP1 PUSH4 0x5F6059D EQ PUSH2 0x1560 JUMPI DUP1 PUSH4 0x10027A28 EQ PUSH2 0x13CD JUMPI DUP1 PUSH4 0x11B0B42D EQ PUSH2 0x1537 JUMPI DUP1 PUSH4 0x1FCE07D5 EQ PUSH2 0x1519 JUMPI DUP1 PUSH4 0x291206F6 EQ PUSH2 0x14F6 JUMPI DUP1 PUSH4 0x2AD2E08C EQ PUSH2 0x1469 JUMPI DUP1 PUSH4 0x37DE8106 EQ PUSH2 0x1446 JUMPI DUP1 PUSH4 0x41273657 EQ PUSH2 0x1406 JUMPI DUP1 PUSH4 0x568DBCCF EQ PUSH2 0x13CD JUMPI DUP1 PUSH4 0x63453AE1 EQ PUSH2 0x122A JUMPI DUP1 PUSH4 0x674EE49D EQ PUSH2 0x11DF JUMPI DUP1 PUSH4 0x6962A863 EQ PUSH2 0xF7D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF23 JUMPI DUP1 PUSH4 0x7450BCE9 EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0x791B98BC EQ PUSH2 0xEFA JUMPI DUP1 PUSH4 0x808FC206 EQ PUSH2 0xEDC JUMPI DUP1 PUSH4 0x85258B4B EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE2 JUMPI DUP1 PUSH4 0x8F3A899A EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x91792D5B EQ PUSH2 0xD79 JUMPI DUP1 PUSH4 0x932F9F8A EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0xA26759CB EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xAF2C15C4 EQ PUSH2 0xB75 JUMPI DUP1 PUSH4 0xAFBCE84E EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xBBA5F3B1 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0xBCB7557F EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xD1A06CF8 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xD5B2A01A EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xE2662943 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF0C3B912 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x201 JUMPI PUSH4 0xFFDF2BCB SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1CE PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x21B PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x223 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x2E1 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x31E SWAP4 PUSH2 0x315 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI DUP1 PUSH2 0x346 PUSH2 0x15BB JUMP JUMPDEST DUP2 PUSH2 0x34F PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH1 0x3 SLOAD SWAP1 PUSH1 0x44 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 DUP4 DUP7 DUP7 AND OR PUSH1 0x3 SSTORE AND DUP1 PUSH1 0x1 SLOAD SWAP6 DUP7 AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 DUP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE AND OR PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x20 SWAP10 DUP11 SWAP7 AND OR GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x45D JUMPI DUP5 SWAP3 PUSH2 0x440 JUMPI JUMPDEST POP PUSH1 0x44 DUP4 PUSH1 0x3 SLOAD AND SWAP4 PUSH1 0x1 SLOAD AND SWAP2 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x435 JUMPI PUSH2 0x408 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x427 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI JUMPDEST PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1690 JUMP JUMPDEST POP CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x456 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x4A0 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0xB DUP4 MSTORE PUSH2 0x4CC PUSH1 0x40 DUP7 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1841 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0xB DUP4 MSTORE DUP1 PUSH2 0x50C PUSH2 0x2710 PUSH2 0x4EB PUSH1 0x40 DUP10 KECCAK256 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x188D JUMP JUMPDEST DIV PUSH2 0x4F8 DUP2 PUSH1 0x8 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x8 SSTORE DUP5 DUP9 MSTORE PUSH1 0xB DUP7 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x1834 JUMP JUMPDEST SWAP5 AND SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH4 0xB5CB15F7 PUSH1 0xE0 SHL DUP7 MSTORE DUP5 DUP7 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x62C JUMPI DUP8 SWAP7 PUSH2 0x5FB JUMPI JUMPDEST POP DUP6 PUSH2 0x549 SWAP2 PUSH2 0x544 DUP3 ISZERO ISZERO PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x18A0 JUMP JUMPDEST SWAP2 DUP7 JUMPDEST DUP7 DUP2 LT PUSH2 0x564 JUMPI DUP8 PUSH1 0xB DUP8 DUP8 DUP4 MSTORE MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6E064AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP7 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5BE SWAP3 DUP6 SWAP2 DUP12 SWAP2 PUSH2 0x5C3 JUMPI JUMPDEST POP AND DUP10 MSTORE PUSH1 0xA DUP8 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP7 PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x5B7 DUP7 DUP3 SLOAD PUSH2 0x16A8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x190C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH2 0x5E3 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x5E9 JUMPI JUMPDEST PUSH2 0x5DB DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x191B JUMP JUMPDEST CODESIZE PUSH2 0x595 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x625 JUMPI JUMPDEST PUSH2 0x613 DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x326 JUMPI MLOAD SWAP5 PUSH2 0x549 PUSH2 0x533 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x688 PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x6B3 PUSH2 0x15BB JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x6C9 PUSH2 0x15D1 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x704 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x70C PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP5 SWAP1 SUB PUSH2 0x326 JUMPI PUSH2 0x72D PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x881 JUMPI PUSH2 0x8A3 JUMPI JUMPDEST POP PUSH1 0xA TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x88D JUMPI PUSH1 0x0 SWAP5 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x78D DUP7 PUSH2 0x1651 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0xBB8 PUSH1 0x40 DUP1 DUP9 ADD SWAP2 DUP3 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0xA0 DUP9 ADD SWAP7 DUP8 MSTORE PUSH1 0xC0 DUP9 ADD DUP11 DUP2 MSTORE PUSH1 0xE0 DUP10 ADD DUP12 DUP2 MSTORE PUSH1 0x1 SLOAD SWAP3 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD DUP7 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP4 MLOAD DUP6 AND PUSH1 0x24 DUP11 ADD MSTORE SWAP2 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP10 ADD MSTORE SWAP4 MLOAD DUP4 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP4 MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP4 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP2 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP2 SWAP4 DUP5 SWAP3 PUSH2 0x104 SWAP3 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x84A JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x879 JUMPI JUMPDEST DUP2 PUSH2 0x863 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x875 JUMPI MLOAD SWAP1 POP PUSH1 0x20 PUSH2 0x83F JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BB SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP DUP5 PUSH2 0x76E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x8DC PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x326 JUMPI PUSH1 0xA4 CALLDATALOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP1 SWAP2 SUB PUSH2 0x326 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 SWAP4 SUB PUSH2 0x326 JUMPI PUSH2 0x91A PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP6 AND SWAP5 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x62C JUMPI PUSH2 0xB56 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 DUP7 GAS CALL DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH2 0xB2C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH2 0x160 DUP8 ADD DUP8 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0xE0 DUP3 ADD MSTORE DUP2 PUSH2 0x100 DUP3 ADD MSTORE ADDRESS PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x80 PUSH2 0x140 PUSH2 0x164 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP4 DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x4418B22B PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x24 DUP7 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x2 SIGNEXTEND PUSH1 0x64 DUP7 ADD MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x2 SIGNEXTEND PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA4 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE4 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x104 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x124 DUP7 ADD MSTORE ADD MLOAD PUSH2 0x144 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0xAC4 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x80 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xB03 JUMPI JUMPDEST DUP2 PUSH2 0xADC PUSH1 0x80 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x875 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x1FE JUMPI DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB44 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB6E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x95A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xB8F PUSH2 0x15BB JUMP JUMPDEST PUSH2 0xB97 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x20 SWAP3 PUSH1 0xA DUP5 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0xD02 JUMPI CALLER DUP4 MSTORE PUSH1 0xA DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE SWAP1 DUP8 MSTORE DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 MSTORE SWAP3 PUSH2 0xC13 PUSH1 0x64 DUP6 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP1 DUP5 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xB16 JUMPI PUSH2 0xC74 SWAP6 DUP4 SWAP3 PUSH1 0x40 MSTORE DUP9 DUP7 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP10 DUP8 ADD MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL PUSH2 0xC6E PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x197A JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP4 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0xCEA JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xCFA SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x1690 JUMP JUMPDEST CODESIZE DUP4 DUP2 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2072657761726420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xD55 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x875 JUMPI PUSH2 0xDBE PUSH2 0x15F9 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xE6F PUSH2 0xE26 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP4 DUP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP6 SWAP1 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP10 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP6 SWAP4 PUSH1 0x44 SWAP3 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD AND SWAP2 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x435 JUMPI PUSH2 0x408 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xECA SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xF3C PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0xF97 PUSH2 0x15BB JUMP JUMPDEST SWAP1 PUSH2 0xFA0 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP2 DUP4 DUP3 SUB PUSH2 0x11DB JUMPI PUSH2 0xFBF PUSH2 0x15E7 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP4 SUB PUSH2 0x11D7 JUMPI PUSH2 0xFD8 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP7 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5F0 JUMPI DUP10 SWAP2 PUSH2 0x11A6 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP2 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP7 SWAP1 DUP12 DUP2 PUSH1 0x44 DUP2 DUP15 DUP9 DUP11 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x119B JUMPI PUSH2 0x1068 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1060 SWAP2 DUP15 DUP15 SWAP3 PUSH2 0x117E JUMPI JUMPDEST POP POP PUSH2 0x1A4E JUMP JUMPDEST DUP9 ADDRESS SWAP4 PUSH2 0x16B5 JUMP JUMPDEST SWAP4 DUP5 ISZERO PUSH2 0x1146 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP7 SWAP8 DUP9 SWAP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 SWAP1 DUP8 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP11 AND GAS CALL DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH2 0x10C9 SWAP7 PUSH2 0x10C2 SWAP3 DUP11 SWAP3 PUSH2 0x1129 JUMPI POP POP PUSH2 0x1A4E JUMP JUMPDEST ADDRESS SWAP4 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x1125 JUMPI PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0x10FC JUMPI POP DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1111 JUMPI PUSH1 0x40 MSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP POP REVERT JUMPDEST PUSH2 0x113F SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC8189BDD59DA1D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1194 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE DUP15 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11D0 JUMPI JUMPDEST PUSH2 0x11BD DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11CC JUMPI MLOAD CODESIZE PUSH2 0x1007 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x11B3 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH2 0x11FE PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1206 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0xA DUP6 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x875 JUMPI PUSH2 0x1245 PUSH2 0x15BB JUMP JUMPDEST PUSH3 0x15180 PUSH2 0x1255 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1834 JUMP JUMPDEST LT PUSH2 0x1388 JUMPI PUSH2 0x1290 PUSH1 0x7 SLOAD PUSH2 0x126B DUP2 ISZERO ISZERO PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x127A PUSH1 0x4 SLOAD DUP4 PUSH2 0x188D JUMP JUMPDEST DIV SWAP1 PUSH2 0x1288 DUP3 PUSH1 0x8 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB5CB15F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 DUP3 DUP6 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xED1 JUMPI DUP7 SWAP6 PUSH2 0x1353 JUMPI JUMPDEST POP DUP5 PUSH2 0x12D3 SWAP2 PUSH2 0x544 DUP3 ISZERO ISZERO PUSH2 0x18C0 JUMP JUMPDEST SWAP3 DUP6 JUMPDEST DUP6 DUP2 LT PUSH2 0x12E9 JUMPI DUP7 TIMESTAMP PUSH1 0x6 SSTORE DUP1 PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6E064AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP5 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB4B JUMPI PUSH2 0x1331 SWAP3 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1336 JUMPI JUMPDEST POP AND DUP9 MSTORE PUSH1 0x9 DUP6 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH2 0x5B7 DUP8 DUP3 SLOAD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x134D SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5E9 JUMPI PUSH2 0x5DB DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST CODESIZE PUSH2 0x131A JUMP JUMPDEST SWAP1 SWAP5 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1381 JUMPI JUMPDEST PUSH2 0x136B DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x137D JUMPI MLOAD SWAP4 PUSH2 0x12D3 PUSH2 0x12C2 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792064697374726962757465206F6E63652061206461790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13F5 PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1420 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1428 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1460 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x1487 PUSH2 0x15BB JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x14AD PUSH2 0x193A JUMP JUMPDEST POP ISZERO PUSH2 0x14BE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1FE JUMPI PUSH2 0x1510 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1FE JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x875 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x875 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15AE PUSH2 0x15BB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP3 SUB PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x160D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB16 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x326 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x326 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x88D JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP7 SWAP5 SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x1829 JUMPI PUSH2 0x180A JUMPI JUMPDEST POP PUSH1 0xA TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x88D JUMPI PUSH1 0x20 SWAP5 PUSH2 0x104 SWAP4 PUSH1 0x0 SWAP3 DUP10 MLOAD SWAP5 PUSH2 0x171F DUP7 PUSH2 0x1651 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP9 DUP7 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF SWAP10 DUP11 AND DUP12 DUP8 ADD SWAP1 DUP2 MSTORE SWAP4 DUP9 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0xC0 DUP8 ADD DUP7 DUP2 MSTORE PUSH1 0xE0 DUP9 ADD DUP8 DUP2 MSTORE PUSH1 0x1 SLOAD DUP15 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD DUP13 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP4 MLOAD DUP12 AND PUSH1 0x24 DUP11 ADD MSTORE SWAP6 MLOAD SWAP1 SWAP12 AND PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP9 AND PUSH1 0x64 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE SWAP7 MLOAD PUSH1 0xC4 DUP5 ADD MSTORE MLOAD DUP5 AND PUSH1 0xE4 DUP4 ADD MSTORE SWAP1 SWAP5 DUP6 SWAP4 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1800 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x17D1 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x17F8 JUMPI JUMPDEST DUP2 PUSH2 0x17EC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x326 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x17DF JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1822 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x42E JUMPI PUSH2 0x41F DUP2 DUP4 PUSH2 0x166E JUMP JUMPDEST POP CODESIZE PUSH2 0x16FC JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x88D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1848 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2064697374726962757461626C652062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x88D JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x18AA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x18C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20757365727320746F206469737472696275746520746F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x88D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x326 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x326 JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1975 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1969 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x166E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x19DC JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x198E JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1997 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x19EF JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1A35 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1A12 JUMP JUMPDEST ISZERO PUSH2 0x1A55 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105C1C1C9BDD994819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 DELEGATECALL CHAINID PC 0x4D 0xBC 0xB3 SMOD SWAP3 PUSH5 0x17B37448AA PUSH17 0x9A393B5B2EF240542E764214D94D7A6D64 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"524:5854:29:-:0;;;;;;;;;;-1:-1:-1;524:5854:29;;;;;;;;;1112:33;1136:9;1112:33;524:5854;1112:33;:::i;:::-;;524:5854;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4572:54:28;524:5854:29;4572:54:28;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;524:5854:29;;;1449:25;524:5854;;;;;;;1449:42;;524:5854;;;1449:42;:::i;:::-;524:5854;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;524:5854:29;;;;2162:22:0;;524:5854:29;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;2566:40:0;524:5854:29;2566:40:0;;524:5854:29;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;1063:62:0;1807:59:28;1063:62:0;;;:::i;:::-;524:5854:29;;1807:59:28;;:::i;:::-;524:5854:29;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;:::i;:::-;;;;:::i;:::-;1063:62:0;;:::i;:::-;524:5854:29;;;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:55:28;;;;524:5854:29;;;718:55:28;;524:5854:29;;;;;;;;;;;;718:55:28;;;;;;;;;;;524:5854:29;;;;;;;;;;;;;;;783:109:28;;;;;;;524:5854:29;783:109:28;;524:5854:29;1133:12:28;;524:5854:29;;;;783:109:28;;;;;;;;524:5854:29;;;783:109:28;;;;;;-1:-1:-1;783:109:28;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;524:5854:29;;;783:109:28;;;;;;524:5854:29;;;;;;;;;718:55:28;;;;;;;;;;;;;:::i;:::-;;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;768:23;524:5854;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;2535:25;524:5854;;2514:107;524:5854;;;;2535:36;;2514:107;:::i;:::-;524:5854;;;2535:25;524:5854;;;2796:38;2695:5;2647:44;524:5854;;;;;;2647:44;;:::i;:::-;524:5854;2710:15;524:5854;2710:15;524:5854;2710:15;:::i;:::-;;524:5854;;;;2535:25;524:5854;;;;;;2796:38;:::i;:::-;524:5854;;;;;;;;;2864:44;;;;524:5854;2864:44;;;;;;;;;;;;;524:5854;2927:13;;3003:17;2927:13;2919:51;2927:13;;;2919:51;:::i;:::-;3003:17;:::i;:::-;3036:13;;3051;;;;;;524:5854;2535:25;524:5854;;;;;;;;;;;;3066:3;524:5854;;-1:-1:-1;;;3100:42:29;;524:5854;3100:42;;524:5854;;;;3100:42;524:5854;;;3100:42;;;;;;;;3066:3;3100:42;;;;;;;3066:3;524:5854;;;;3321:15;524:5854;;;;;;;;;;;;;3321:43;524:5854;;;3321:43;:::i;:::-;524:5854;;3066:3;:::i;:::-;3036:13;;3100:42;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;524:5854;;;;;;;;;2864:44;;;;;;;;;;;;;;;;;:::i;:::-;;;524:5854;;;;;;3003:17;2864:44;;;;;;;;524:5854;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;-1:-1:-1;;;;;524:5854:29;;:::i;:::-;;;;4620:10;524:5854;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;-1:-1:-1;;;;;524:5854:29;;;;;;:::i;:::-;;;;4773:15;524:5854;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;1063:62:0;;:::i;:::-;524:5854:29;;;;-1:-1:-1;;;4572:54:28;;-1:-1:-1;;;;;524:5854:29;;;;4572:54:28;;524:5854:29;;;;;;;;;;;4572:54:28;524:5854:29;;;-1:-1:-1;524:5854:29;4572:54:28;;;;;;;;524:5854:29;4886:15:28;4904:2;4886:15;524:5854:29;4886:15:28;;524:5854:29;;;;;4572:54:28;524:5854:29;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;;4723:326:28;;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;4723:326:28;;524:5854:29;;;;4723:326:28;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;4723:326:28;;524:5854:29;;;;;;;-1:-1:-1;;;5108:35:28;;524:5854:29;;;;;5108:35:28;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4723:326:28;524:5854:29;5108:35:28;;;;;;;524:5854:29;5108:35:28;;;524:5854:29;4572:54:28;524:5854:29;;;;;;;5108:35:28;4572:54;5108:35;;4572:54;5108:35;;;;;;4572:54;5108:35;;;:::i;:::-;;;524:5854:29;;;;;;-1:-1:-1;4572:54:28;5108:35;;524:5854:29;;;;5108:35:28;;;-1:-1:-1;5108:35:28;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;4572:54:28;;;;;;;;;;;;;:::i;:::-;;;;;524:5854:29;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;524:5854:29;;;;-1:-1:-1;;;3647:57:28;;-1:-1:-1;;;;;524:5854:29;;;;3647:57:28;;524:5854:29;;;;;;;;;;;;;;3647:57:28;524:5854:29;3647:57:28;;;;;;;;524:5854:29;-1:-1:-1;524:5854:29;;;;-1:-1:-1;;;3714:57:28;;-1:-1:-1;;;;;524:5854:29;;;;3714:57:28;;524:5854:29;;;;;;;;;;;;;;;;;;;3714:57:28;524:5854:29;3714:57:28;;;;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;3892:367:28;;524:5854:29;;3892:367:28;;524:5854:29;;3892:367:28;;524:5854:29;;3892:367:28;;524:5854:29;;;;3892:367:28;;524:5854:29;;3892:367:28;;524:5854:29;3892:367:28;524:5854:29;3892:367:28;;524:5854:29;3892:367:28;;;;524:5854:29;4195:4:28;3892:367;;;524:5854:29;4218:15:28;3892:367;;;524:5854:29;;3892:367:28;524:5854:29;;;;;;;;;;;;;;;;;;;;;4295:28:28;;524:5854:29;;;;;;;;;4295:28:28;;524:5854:29;;;;;;;3892:367:28;;524:5854:29;;;;;;;;3892:367:28;;524:5854:29;;;;;;;3892:367:28;;524:5854:29;;;;;;;3892:367:28;;;524:5854:29;;;;;;;;3892:367:28;;524:5854:29;;;;;;3892:367:28;;524:5854:29;;;;;;3892:367:28;;524:5854:29;;;;;3892:367:28;;;524:5854:29;;;;;;;;;;3892:367:28;;;524:5854:29;;;;;;3892:367:28;524:5854:29;;;;;4295:28:28;;;;;;;;524:5854:29;;;4295:28:28;524:5854:29;4295:28:28;;;;;;;;;524:5854:29;4295:28:28;;;:::i;:::-;;;524:5854:29;;;;;;;;;;;;;;;4295:28:28;;;-1:-1:-1;4295:28:28;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;3714:57:28;;;524:5854:29;3714:57:28;524:5854:29;3714:57:28;;;;;;;:::i;:::-;;;;;;524:5854:29;;;;;;;;;3647:57:28;;;524:5854:29;3647:57:28;524:5854:29;3647:57:28;;;;;;;:::i;:::-;;;;;524:5854:29;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;:::i;:::-;4179:10;;524:5854;;;;4223:15;524:5854;;;;;;;;;;;;;;;;;;;;;;4318:16;;;524:5854;;4179:10;524:5854;;4223:15;524:5854;;;;;;-1:-1:-1;524:5854:29;;;;;;;;;;;;;-1:-1:-1;;;1050:58:5;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;1050:58:5;;524:5854:29;;;;;;;;1050:58:5;;524:5854:29;1050:58:5;524:5854:29;;1050:58:5;:::i;:::-;524:5854:29;;;;;;;;;;;;;;;;5535:69:9;524:5854:29;;;;;;;;;;;;;5487:31:9;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;524:5854:29;;5728:22:5;;;;:56;;;;;524:5854:29;;;;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;5728:56:5;5754:30;;-1:-1:-1;5754:30:5;;;;;;;:::i;:::-;5728:56;;;;;524:5854:29;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;1112:33;1136:9;1112:33;524:5854;1112:33;:::i;:::-;;524:5854;;;;;;;;;;;;;;;;;6033:20;524:5854;;;;;;;;;;;;;;;;;;;;;646:36;524:5854;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;524:5854:29;;-1:-1:-1;;;;524:5854:29;;;;;;-1:-1:-1;;;524:5854:29;;;;;;-1:-1:-1;524:5854:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;988:50:28;524:5854:29;;:::i;:::-;1063:62:0;;:::i;:::-;524:5854:29;;;;-1:-1:-1;;;988:50:28;;;-1:-1:-1;;;;;524:5854:29;;;;988:50:28;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:50:28;;;;;;;;;;;;;;524:5854:29;988:50:28;;;524:5854:29;;;;;;;;;1048:108:28;;;;;;;524:5854:29;1048:108:28;;524:5854:29;1133:12:28;;524:5854:29;;;;1048:108:28;;;;;;;;524:5854:29;;;988:50:28;;;;;;;;;;;;;:::i;:::-;;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:50:28;524:5854:29;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;524:5854:29;;;-1:-1:-1;;;;;;524:5854:29;;;;-1:-1:-1;;;;;524:5854:29;2566:40:0;524:5854:29;;2566:40:0;524:5854:29;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1063:62:0;;:::i;:::-;524:5854:29;;-1:-1:-1;;;5092:39:29;;5125:4;524:5854;5092:39;;524:5854;;;;;;;;;;;5092:39;;;;;;;;;;;524:5854;-1:-1:-1;524:5854:29;;;;-1:-1:-1;;;5190:51:29;;;524:5854;;;-1:-1:-1;;;;;524:5854:29;;5190:51;;524:5854;;;;;;;;;;;;;;;;;;5190:51;;;;;;;5349:134;5190:51;;;;5169:112;5190:51;;;;;;524:5854;5169:112;;;:::i;:::-;5125:4;;5349:134;;:::i;:::-;5502:17;;;524:5854;;;;;;5606:58;;;524:5854;;-1:-1:-1;;;;;524:5854:29;;5606:58;;524:5854;;;;;;;;;;;;;;;;;;;;;;;;;;;;5606:58;;;;;;5745:142;5606:58;5585:119;5606:58;;;;;5585:119;;;:::i;:::-;5125:4;5745:142;;:::i;:::-;5898:39;;;;;;524:5854;;;;;;;;;;;;;5898:39;;524:5854;5898:39;;524:5854;5898:39;;;;;;;;524:5854;;;5898:39;524:5854;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;5898:39;524:5854;;;5606:58;;;;;;-1:-1:-1;5606:58:29;;;;;;:::i;:::-;;;;;524:5854;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;5190:51;;;;;;-1:-1:-1;5190:51:29;;;;;;:::i;:::-;;;;;;524:5854;;;;;;;;;5092:39;;;;;;;;;;;;;;;;:::i;:::-;;;524:5854;;;;;5092:39;;;524:5854;;;;5092:39;;;;;524:5854;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;524:5854:29;;;;;849:70;524:5854;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1624:6;1587:33;1605:15;524:5854;1587:15;:33;:::i;:::-;:43;524:5854;;1877:26;1704:20;524:5854;1696:61;1704:24;;;1696:61;:::i;:::-;1819:5;1783:32;524:5854;;1783:32;;:::i;:::-;524:5854;;1835:15;524:5854;1835:15;524:5854;1835:15;:::i;:::-;;524:5854;1877:26;:::i;:::-;524:5854;;-1:-1:-1;;;1933:44:29;;524:5854;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;1933:44;;;;;;;;;;;524:5854;1996:13;;2072:17;1996:13;1988:51;1996:13;;;1988:51;:::i;2072:17::-;2105:13;;2120;;;;;;1587:15;;1605;524:5854;;1704:20;524:5854;;;2135:3;524:5854;;-1:-1:-1;;;2169:42:29;;524:5854;2169:42;;524:5854;;;;2169:42;524:5854;;;2169:42;;;;;;;;2135:3;2169:42;;;;;;;2135:3;524:5854;;;;2225:10;524:5854;;;;;2225:31;524:5854;;;2225:31;:::i;2135:3::-;2105:13;;2169:42;;;;;;;;;;;;;;:::i;:::-;;;;1933:44;;;;;;;;;;;;;;;;;:::i;:::-;;;524:5854;;;;;;2072:17;1933:44;;524:5854;;;;1933:44;;;;;524:5854;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;-1:-1:-1;;;;;524:5854:29;;:::i;:::-;;;;925:60;524:5854;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;524:5854:29;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;1063:62:0;;:::i;:::-;524:5854:29;;1333:20;524:5854;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;;;:::i;:::-;3726:10;524:5854;;3715:10;524:5854;;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;3835:47;;;;:::i;:::-;;524:5854;;;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;1063:62:0;;:::i;:::-;524:5854:29;;;;;;;;;;;;;;;;;;;;689:30;524:5854;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;;-1:-1:-1;;;;;524:5854:29;;:::i;:::-;;;;798:45;524:5854;;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;524:5854:29;;;;;;:::o;:::-;;;;;;;;;;;:::o;1359:130:0:-;1273:6;524:5854:29;-1:-1:-1;;;;;524:5854:29;719:10:10;1422:23:0;524:5854:29;;1359:130:0:o;524:5854:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;1050:58:5;;;524:5854:29;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;4336:841:28:-;524:5854:29;;;;;-1:-1:-1;;;4572:54:28;;-1:-1:-1;;;;;524:5854:29;;;4572:54:28;;;524:5854:29;;;;;;;;;4336:841:28;;524:5854:29;;;;;4572:54:28;524:5854:29;;;-1:-1:-1;524:5854:29;4572:54:28;;;;;;;;4336:841;4886:15;4904:2;4886:15;524:5854:29;4886:15:28;;;524:5854:29;;;4572:54:28;524:5854:29;;;-1:-1:-1;524:5854:29;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;;;;4723:326:28;;;524:5854:29;;;;;;4723:326:28;;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;4723:326:28;;524:5854:29;;;4723:326:28;;;524:5854:29;;;;4723:326:28;;524:5854:29;;;;;;;-1:-1:-1;;;5108:35:28;;524:5854:29;;;;4572:54:28;5108:35;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:35:28;;;;;;;;-1:-1:-1;5108:35:28;;;5154:16;4336:841;:::o;5108:35::-;;;4572:54;5108:35;;4572:54;5108:35;;;;;;4572:54;5108:35;;;:::i;:::-;;;524:5854:29;;;;;4336:841:28;:::o;5108:35::-;;;-1:-1:-1;5108:35:28;;;524:5854:29;;-1:-1:-1;524:5854:29;;;;;4572:54:28;;;;;;;;;;;;;:::i;:::-;;;;;;524:5854:29;;;-1:-1:-1;524:5854:29;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:5854:29;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;524:5854:29;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;1050:58:5;524:5854:29;;-1:-1:-1;;524:5854:29;;;;;:::i;:::-;;;;-1:-1:-1;524:5854:29;;;;:::o;:::-;;;:::o;7671:628:9:-;;;;7875:418;;;524:5854:29;;;7906:22:9;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;524:5854:29;;8201:17:9;:::o;524:5854:29:-;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;;;;;;;;;7875:418:9;524:5854:29;;;;-1:-1:-1;8980:21:9;:17;;9152:142;;;;;;;8976:379;524:5854:29;;;;;;9324:20:9;;524:5854:29;;9324:20:9;;;;524:5854:29;;;;;;;;;9000:1:9;524:5854:29;;;;;;;;;;;;9000:1:9;524:5854:29;;;;;;1050:58:5;;;524:5854:29;;;;;9324:20:9;;;;524:5854:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;524:5854:29;;;;;;:::o;:::-;;;-1:-1:-1;;;524:5854:29;;;;;;;;;;;;-1:-1:-1;;;524:5854:29;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1369800","executionCost":"71432","totalCost":"1441232"},"external":{"addERC20Funds(address,uint256)":"27477","addFunds()":"24877","addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":"infinite","configLiquidityProvider(address,address)":"infinite","customApprove(address,uint256)":"infinite","distributableBalance()":"2574","distributableERC20Balance(address)":"2618","distribute(address)":"infinite","distributeERC20(address,address)":"infinite","fixedFee()":"2706","getDistributionBalance()":"2728","getDistributionERC20Balance(address)":"2464","getReward(address)":"3014","getRewardERC20(address,address)":"3137","globalFee()":"2618","lastDistributed()":"2354","native()":"2356","owner()":"2683","ownerFee()":"2926","positionManager()":"2620","renounceOwnership()":"28351","setFixedFee(uint256)":"24568","setGlobalFee(uint256)":"24524","setSplitLiqudity(bool)":"27035","setSwapRouter(address)":"26805","splitLiquidity()":"2306","swapAndBurn(address,address,address,uint24,uint24)":"infinite","swapRouter()":"2906","swapTokensForTokens(address,address,uint256,uint24,address)":"infinite","swapTxT(address,address,uint256,address)":"infinite","takeReward(address)":"infinite","takeRewardERC20(address,address)":"infinite","transferOwnership(address)":"28901","userReward(address)":"2412","userRewardERC20(address,address)":"2804"}},"methodIdentifiers":{"addERC20Funds(address,uint256)":"ffdf2bcb","addFunds()":"a26759cb","addLiquidity(address,address,uint24,uint256,uint256,int24,int24)":"afbce84e","configLiquidityProvider(address,address)":"e2662943","customApprove(address,uint256)":"85258b4b","distributableBalance()":"7450bce9","distributableERC20Balance(address)":"568dbccf","distribute(address)":"63453ae1","distributeERC20(address,address)":"d1a06cf8","fixedFee()":"91792d5b","getDistributionBalance()":"932f9f8a","getDistributionERC20Balance(address)":"10027a28","getReward(address)":"c00007b0","getRewardERC20(address,address)":"bcb7557f","globalFee()":"808fc206","lastDistributed()":"1fce07d5","native()":"11b0b42d","owner()":"8da5cb5b","ownerFee()":"d5b2a01a","positionManager()":"791b98bc","renounceOwnership()":"715018a6","setFixedFee(uint256)":"37de8106","setGlobalFee(uint256)":"291206f6","setSplitLiqudity(bool)":"8f3a899a","setSwapRouter(address)":"41273657","splitLiquidity()":"05f6059d","swapAndBurn(address,address,address,uint24,uint24)":"6962a863","swapRouter()":"c31c9c07","swapTokensForTokens(address,address,uint256,uint24,address)":"f0c3b912","swapTxT(address,address,uint256,address)":"bba5f3b1","takeReward(address)":"2ad2e08c","takeRewardERC20(address,address)":"af2c15c4","transferOwnership(address)":"f2fde38b","userReward(address)":"000a74be","userRewardERC20(address,address)":"674ee49d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addERC20Funds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeAddr\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter\",\"name\":\"swapRouterAddr\",\"type\":\"address\"}],\"name\":\"configLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"customApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributableERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersContract\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usersContract\",\"type\":\"address\"}],\"name\":\"distributeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDistributionERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"native\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fixedFee\",\"type\":\"uint256\"}],\"name\":\"setFixedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_globalFee\",\"type\":\"uint256\"}],\"name\":\"setGlobalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_splitLiquidity\",\"type\":\"bool\"}],\"name\":\"setSplitLiqudity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"swapRouterAddress\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"fee2\",\"type\":\"uint24\"}],\"name\":\"swapAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swapTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swapTxT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"takeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"takeRewardERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/treasury/MecenateTreasury.sol\":\"MecenateTreasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n// edited by Mecenate\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\n\\nimport \\\"./IPoolInitializer.sol\\\";\\nimport \\\"./IERC721Permit.sol\\\";\\nimport \\\"./IPeripheryPayments.sol\\\";\\nimport \\\"./IPeripheryImmutableState.sol\\\";\\nimport \\\"../libraries/PoolAddress.sol\\\";\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(\\n        uint256 indexed tokenId,\\n        uint128 liquidity,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(\\n        uint256 indexed tokenId,\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(\\n        uint256 tokenId\\n    )\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(\\n        MintParams calldata params\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(\\n        IncreaseLiquidityParams calldata params\\n    )\\n        external\\n        payable\\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(\\n        DecreaseLiquidityParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        CollectParams calldata params\\n    ) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0x1682c67eb39e9ff1e6b3db23bee82d36afe575ff29700d1e00d1f3c860e676c1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n// edited by Mecenate\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH =\\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(\\n        address factory,\\n        PoolKey memory key\\n    ) internal pure returns (address payable pool) {\\n        require(key.token0 < key.token1);\\n        pool = payable( // Aggiunta di \\\"payable\\\" qui\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                factory,\\n                                keccak256(\\n                                    abi.encode(key.token0, key.token1, key.fee)\\n                                ),\\n                                POOL_INIT_CODE_HASH\\n                            )\\n                        )\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x420fa34855bc74f3628799c4ca0388894ae329cf6d6303878f0c4969d821632f\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IMUSE.sol\":{\"content\":\"pragma solidity 0.8.19;\\n\\n// import IERC20 from openzeppelin\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMUSE is IERC20 {\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) external returns (bool);\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) external returns (bool);\\n\\n    function mint(uint256 amount) external;\\n\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8b0a4012a1cd0815460bb3d15278671589bb85003ff2c38315701b3f2228c633\"},\"contracts/interfaces/IMecenateUsers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../library/Structures.sol\\\";\\n\\ninterface IMecenateUsers {\\n    function registerUser(bytes memory metadata) external;\\n\\n    function getUsers() external view returns (address[] memory);\\n\\n    function getUserCount() external view returns (uint256);\\n\\n    function getUserAt(uint256 index) external view returns (address);\\n\\n    function checkifUserExist(address userAddress) external view returns (bool);\\n\\n    function getPaginatedUsers(\\n        uint256 startIndex,\\n        uint256 endIndex\\n    ) external view returns (address[] memory);\\n\\n    function getUserMetadata(\\n        address userAddress\\n    ) external view returns (Structures.User memory);\\n\\n    function getUserPublicKey(\\n        address userAddress\\n    ) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0xf0ff65dbfea12d90cf106325b9478e31b284045327e5f0974db5374b8789e93c\",\"license\":\"MIT\"},\"contracts/library/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @title Structures\\n * @dev This library defines various data structures used in the Mecenate platform.\\n */\\npragma solidity 0.8.19;\\n\\nlibrary Structures {\\n    enum PostStatus {\\n        Waiting,\\n        Proposed,\\n        Accepted,\\n        Submitted,\\n        Finalized,\\n        Punished,\\n        Revealed,\\n        Renounced\\n    }\\n\\n    enum PostResult {\\n        None,\\n        Valid,\\n        Punished\\n    }\\n\\n    enum Tokens {\\n        NaN,\\n        MUSE,\\n        DAI\\n    }\\n\\n    enum PostType {\\n        Text,\\n        Image,\\n        Video,\\n        Audio,\\n        File\\n    }\\n    enum PostDuration {\\n        OneDay,\\n        ThreeDays,\\n        OneWeek,\\n        TwoWeeks,\\n        OneMonth\\n    }\\n\\n    struct PostTimestamp {\\n        PostResult postResult;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n    }\\n\\n    struct FeedSettings {\\n        uint256 punishmentRatio;\\n        uint256 postCount;\\n        address usersModuleContract;\\n        address factoryContract;\\n        address router;\\n        string version;\\n    }\\n\\n    struct FactorySettings {\\n        address treasuryContract;\\n        address usersModuleContract;\\n        address easContract;\\n        bytes32 easSchema;\\n        address museToken;\\n        address daiToken;\\n        address wethToken;\\n        address router;\\n    }\\n\\n    /**\\n     * @dev Struct representing a post on the Mecenate platform.\\n     */\\n    struct Post {\\n        User creator;\\n        PostData postdata;\\n    }\\n\\n    /**\\n     * @dev Struct representing the data of a post on the Mecenate platform.\\n     */\\n    struct PostData {\\n        PostSettings settings;\\n        PostEscrow escrow;\\n        PostEncryptedData data;\\n    }\\n\\n    /**\\n     * @dev Struct representing the encrypted data of a post on the Mecenate platform.\\n     */\\n    struct PostEncryptedData {\\n        bytes encryptedData;\\n        bytes encryptedKey;\\n        bytes decryptedData;\\n    }\\n\\n    /**\\n     * @dev Struct representing the settings of a post on the Mecenate platform.\\n     */\\n    struct PostSettings {\\n        PostStatus status;\\n        PostType postType;\\n        uint256 creationTimeStamp;\\n        uint256 endTimeStamp;\\n        uint256 duration;\\n        Tokens tokenId;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing the escrow of a post on the Mecenate platform.\\n     */\\n    struct PostEscrow {\\n        address buyer;\\n        address seller;\\n        uint256 stake;\\n        uint256 payment;\\n        uint256 punishment;\\n        uint256 penalty;\\n    }\\n\\n    /**\\n     * @dev Struct representing a user on the Mecenate platform.\\n     */\\n    struct User {\\n        address evmAddress;\\n        bytes sismoVaultId;\\n        bytes publicKey;\\n    }\\n\\n    /**\\n     * @dev Struct representing a feed on the Mecenate platform.\\n     */\\n    struct Feed {\\n        address contractAddress;\\n        address owner;\\n        uint256 sellerStake;\\n        uint256 buyerStake;\\n        uint256 totalStake;\\n        uint256 postCount;\\n        uint256 paymentRequested;\\n        uint256 stakeRequested;\\n        PostStatus status;\\n        Tokens tokenId;\\n        string version;\\n        bytes32 postId;\\n    }\\n\\n    /**\\n     * @dev Struct representing a bay request on the Mecenate platform.\\n     */\\n    struct BayRequest {\\n        bytes request;\\n        uint256 payment;\\n        uint256 stake;\\n        address postAddress;\\n        bool accepted;\\n        uint256 postCount;\\n        Tokens tokenId;\\n        address buyerAddress;\\n        bytes32 postId;\\n    }\\n}\\n\",\"keccak256\":\"0xe05441a5c2a661638f860772a3cafd66c583c6d759f3486dfee1d34da6934dc4\",\"license\":\"MIT\"},\"contracts/modules/Swapper.sol\":{\"content\":\"/**\\n * @title Swapper\\n * @dev This contract provides functions for swapping tokens on PancakeSwap and adding liquidity to a token pair.\\n */\\n// SPDX-License-Identifier: MIT OR Apache-2.0\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\\\";\\n\\nabstract contract Swapper is Ownable {\\n    bool public splitLiquidity;\\n\\n    ISwapRouter public swapRouter;\\n    INonfungiblePositionManager public positionManager;\\n    address public native;\\n\\n    function _giveAllowances() internal {\\n        IERC20(address(native)).approve(address(swapRouter), 0);\\n        IERC20(address(native)).approve(\\n            address(swapRouter),\\n            uint256(2 ** 256 - 1)\\n        );\\n    }\\n\\n    function customApprove(address token, uint256 amount) external onlyOwner {\\n        IERC20(token).approve(address(swapRouter), amount);\\n        IERC20(address(token)).approve(\\n            address(swapRouter),\\n            uint256(2 ** 256 - 1)\\n        );\\n    }\\n\\n    function configLiquidityProvider(\\n        address nativeAddr,\\n        ISwapRouter swapRouterAddr\\n    ) external onlyOwner {\\n        native = nativeAddr;\\n        swapRouter = swapRouterAddr;\\n        splitLiquidity = true;\\n        _giveAllowances();\\n    }\\n\\n    function setSplitLiqudity(\\n        bool _splitLiquidity\\n    ) external onlyOwner returns (bool) {\\n        splitLiquidity = _splitLiquidity;\\n        return true;\\n    }\\n\\n    function swapTokensForTokens(\\n        address token1,\\n        address token2,\\n        uint256 amount,\\n        uint24 fee,\\n        address receiver\\n    ) external onlyOwner returns (uint256) {\\n        return _swapTokensForTokens(token1, token2, fee, amount, receiver);\\n    }\\n\\n    function swapTxT(\\n        address token1,\\n        address token2,\\n        uint256 amount,\\n        address receiver\\n    ) external onlyOwner returns (uint256) {\\n        return _swapTokensForTokens(token1, token2, 3000, amount, receiver);\\n    }\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee,\\n        uint256 amountA,\\n        uint256 amountB,\\n        int24 tickLower,\\n        int24 tickUpper\\n    ) public onlyOwner {\\n        _addLiquidity(\\n            tokenA,\\n            tokenB,\\n            fee,\\n            amountA,\\n            amountB,\\n            tickLower,\\n            tickUpper\\n        );\\n    }\\n\\n    function _swapTokenToETH(\\n        address token,\\n        uint256 amountIn,\\n        uint24 fee\\n    ) private returns (uint256) {\\n        // Approve tokens for the swap\\n        IERC20(token).approve(address(swapRouter), amountIn);\\n\\n        // Params for the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\n            .ExactInputSingleParams(\\n                token, // tokenIn\\n                native, // tokenOut\\n                fee, // fee\\n                address(this), // recipient\\n                block.timestamp + 10, // deadline\\n                amountIn, // amountIn\\n                0, // amountOutMinimum\\n                0 // sqrtPriceLimitX96\\n            );\\n\\n        // Perform the swap and return the amount received\\n        uint256 amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n\\n    function _addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee,\\n        uint256 amountA,\\n        uint256 amountB,\\n        int24 tickLower,\\n        int24 tickUpper\\n    ) internal {\\n        // Approve amounts to positionManager\\n        IERC20(tokenA).approve(address(positionManager), amountA);\\n        IERC20(tokenB).approve(address(positionManager), amountB);\\n\\n        // Parameters for adding liquidity\\n        INonfungiblePositionManager.MintParams\\n            memory params = INonfungiblePositionManager.MintParams(\\n                tokenA,\\n                tokenB,\\n                fee,\\n                tickLower,\\n                tickUpper,\\n                amountA,\\n                amountB,\\n                0, // amount0Min\\n                0, // amount1Min\\n                address(this),\\n                block.timestamp // Deadline\\n            );\\n\\n        // Add liquidity\\n        positionManager.mint(params);\\n    }\\n\\n    function _swapTokensForTokens(\\n        address tokenIn,\\n        address tokenOut,\\n        uint24 fee,\\n        uint256 amountIn,\\n        address receiver\\n    ) internal returns (uint256) {\\n        // Approve amount to swapRouter\\n        IERC20(tokenIn).approve(address(swapRouter), amountIn);\\n\\n        // Parameters for the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\n            .ExactInputSingleParams(\\n                tokenIn,\\n                tokenOut,\\n                fee,\\n                receiver,\\n                block.timestamp + 10, // Deadline\\n                amountIn, // amountIn\\n                0, // amountOutMinimum\\n                0 // sqrtPriceLimitX96\\n            );\\n\\n        // Perform the swap\\n        uint256 amountOut = swapRouter.exactInputSingle(params);\\n\\n        return amountOut;\\n    }\\n}\\n\",\"keccak256\":\"0x032fdbe3df7135981ba653fac01bc7eea3fe9b36c0cb376e373992773fc768eb\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/treasury/MecenateTreasury.sol\":{\"content\":\"/**\\n * @title MecenateTreasury\\n * @dev This contract handles the treasury of the Mecenate platform, which is responsible for distributing funds to users and collecting fees.\\n */\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"../modules/Swapper.sol\\\";\\nimport \\\"../interfaces/IMecenateUsers.sol\\\";\\nimport \\\"../interfaces/IMUSE.sol\\\";\\n\\ncontract MecenateTreasury is Ownable, Swapper {\\n    using SafeERC20 for IERC20;\\n\\n    uint256 public globalFee = 100;\\n\\n    uint256 public fixedFee = 0.01 ether;\\n\\n    uint256 public lastDistributed;\\n\\n    uint256 public distributableBalance;\\n\\n    uint256 public ownerFee;\\n\\n    mapping(address => uint256) public userReward;\\n    mapping(address => mapping(address => uint256)) public userRewardERC20;\\n    mapping(address => uint256) public distributableERC20Balance;\\n\\n    function addFunds() external payable {\\n        // Aggiungi fondi al contratto e aggiorna il saldo distribuibile\\n        distributableBalance += msg.value;\\n    }\\n\\n    function setGlobalFee(uint256 _globalFee) external onlyOwner {\\n        globalFee = _globalFee;\\n    }\\n\\n    function setFixedFee(uint256 _fixedFee) external onlyOwner {\\n        fixedFee = _fixedFee;\\n    }\\n\\n    function addERC20Funds(address token, uint256 amount) external onlyOwner {\\n        distributableERC20Balance[token] += amount;\\n    }\\n\\n    function distribute(address usersContract) external {\\n        require(\\n            block.timestamp - lastDistributed >= 1 days,\\n            \\\"Can only distribute once a day\\\"\\n        );\\n        require(distributableBalance > 0, \\\"No distributable balance\\\");\\n\\n        uint256 fee = (distributableBalance * globalFee) / 10000;\\n\\n        ownerFee += fee;\\n\\n        uint256 total = distributableBalance - fee;\\n        uint256 userCount = IMecenateUsers(usersContract).getUserCount();\\n\\n        require(userCount > 0, \\\"No users to distribute to\\\");\\n\\n        uint256 perIdentity = total / userCount;\\n\\n        for (uint256 i = 0; i < userCount; i++) {\\n            address user = IMecenateUsers(usersContract).getUserAt(i);\\n            userReward[user] += perIdentity;\\n        }\\n\\n        // Aggiorna le variabili di stato\\n        lastDistributed = block.timestamp;\\n        distributableBalance = 0; // Azzera il saldo distribuibile\\n    }\\n\\n    function distributeERC20(address token, address usersContract) external {\\n        require(\\n            distributableERC20Balance[token] > 0,\\n            \\\"No distributable balance\\\"\\n        );\\n\\n        uint256 fee = (distributableERC20Balance[token] * globalFee) / 10000;\\n        ownerFee += fee; // Assuming ownerFee can hold ERC20 as well\\n\\n        uint256 total = distributableERC20Balance[token] - fee;\\n        uint256 userCount = IMecenateUsers(usersContract).getUserCount();\\n\\n        require(userCount > 0, \\\"No users to distribute to\\\");\\n\\n        uint256 perIdentity = total / userCount;\\n\\n        for (uint256 i = 0; i < userCount; i++) {\\n            address user = IMecenateUsers(usersContract).getUserAt(i);\\n            // Implement logic to distribute perIdentity ERC20 tokens to each user\\n            // For example: IERC20(token).safeTransfer(userAddress, perIdentity);\\n            userRewardERC20[user][token] += perIdentity;\\n        }\\n\\n        // Reset the distributable balance for the token\\n        distributableERC20Balance[token] = 0;\\n    }\\n\\n    function setSwapRouter(ISwapRouter swapRouterAddress) external onlyOwner {\\n        swapRouter = swapRouterAddress;\\n    }\\n\\n    function takeReward(address receiver) external returns (uint256) {\\n        uint256 amountToSend = userReward[msg.sender];\\n\\n        userReward[msg.sender] = 0;\\n\\n        // send eth weith data\\n        (bool success, ) = payable(receiver).call{value: amountToSend}(\\\"\\\");\\n\\n        require(success, \\\"Transfer failed.\\\");\\n\\n        return amountToSend;\\n    }\\n\\n    function takeRewardERC20(\\n        address token,\\n        address receiver\\n    ) external returns (uint256) {\\n        // Similar verification logic as your current takeReward for ETH\\n\\n        address _user = msg.sender;\\n\\n        uint256 amountToSend = userRewardERC20[_user][token]; // assuming userReward is now a double mapping\\n\\n        require(amountToSend > 0, \\\"No reward available\\\");\\n\\n        userRewardERC20[_user][token] = 0; // reset the user's reward to 0\\n\\n        IERC20(token).safeTransfer(receiver, amountToSend);\\n\\n        return amountToSend;\\n    }\\n\\n    function getReward(address user) external view returns (uint256) {\\n        return userReward[user];\\n    }\\n\\n    function getRewardERC20(\\n        address token,\\n        address user\\n    ) external view returns (uint256) {\\n        return userRewardERC20[user][token]; // assuming userReward is now a double mapping\\n    }\\n\\n    // swap token0 to token1 and burn token1\\n    function swapAndBurn(\\n        address token0,\\n        address token1,\\n        address token2,\\n        uint24 fee,\\n        uint24 fee2\\n    ) external onlyOwner {\\n        uint256 amount = IERC20(token0).balanceOf(address(this));\\n        // Approva il token\\n        require(\\n            IERC20(token0).approve(address(swapRouter), amount),\\n            \\\"Approve failed\\\"\\n        );\\n\\n        // swap token0 to token1\\n        uint256 tokens_bought = _swapTokensForTokens(\\n            token0,\\n            token1,\\n            fee,\\n            amount,\\n            address(this)\\n        );\\n\\n        require(tokens_bought > 0, \\\"No tokens bought\\\");\\n\\n        // swap token1 to token2\\n\\n        require(\\n            IERC20(token1).approve(address(swapRouter), tokens_bought),\\n            \\\"Approve failed\\\"\\n        );\\n\\n        uint256 tokens_sold_to_muse = _swapTokensForTokens(\\n            token1,\\n            token2,\\n            fee2,\\n            tokens_bought,\\n            address(this)\\n        );\\n\\n        IMUSE(token2).burn(tokens_sold_to_muse);\\n    }\\n\\n    function getDistributionBalance() external view returns (uint256) {\\n        return distributableBalance;\\n    }\\n\\n    function getDistributionERC20Balance(\\n        address token\\n    ) external view returns (uint256) {\\n        return distributableERC20Balance[token];\\n    }\\n\\n    receive() external payable {\\n        // Aggiungi fondi al contratto e aggiorna il saldo distribuibile\\n        distributableBalance += msg.value;\\n    }\\n}\\n\",\"keccak256\":\"0x7c760a242aee843f54754462a2a2222ed207f009b94b8efc0937ff8d48034ae0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3932,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"splitLiquidity","offset":20,"slot":"0","type":"t_bool"},{"astId":3935,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"swapRouter","offset":0,"slot":"1","type":"t_contract(ISwapRouter)2774"},{"astId":3938,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"positionManager","offset":0,"slot":"2","type":"t_contract(INonfungiblePositionManager)2613"},{"astId":3940,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"native","offset":0,"slot":"3","type":"t_address"},{"astId":4344,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"globalFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":4347,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"fixedFee","offset":0,"slot":"5","type":"t_uint256"},{"astId":4349,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"lastDistributed","offset":0,"slot":"6","type":"t_uint256"},{"astId":4351,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"distributableBalance","offset":0,"slot":"7","type":"t_uint256"},{"astId":4353,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"ownerFee","offset":0,"slot":"8","type":"t_uint256"},{"astId":4357,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"userReward","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint256)"},{"astId":4363,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"userRewardERC20","offset":0,"slot":"10","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4367,"contract":"contracts/treasury/MecenateTreasury.sol:MecenateTreasury","label":"distributableERC20Balance","offset":0,"slot":"11","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(INonfungiblePositionManager)2613":{"encoding":"inplace","label":"contract INonfungiblePositionManager","numberOfBytes":"20"},"t_contract(ISwapRouter)2774":{"encoding":"inplace","label":"contract ISwapRouter","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}